{
 "Error Analysis": [
  {
   "code": "let $PS = require('ps-ajaxqueue');\n\n$PS.ajaxQueue({\n    url: \"https://api.ipify.org/?format=jsonp\",\n    dataType: \"jsonp\",\n    clearQueueDelay: null\n}).done(function (data) {\n    console.log(data);\n});",
   "id": 0,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "style={{\n    standaloneLayout:{display:'flex', maxWidth:'fit-content'}\n}}",
   "id": 1,
   "stars": 0,
   "errors": [
    2304,
    1136,
    2695,
    2304,
    1005,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var express   = require(\"express\")\nvar nofavicon = require(\"express-no-favicons\")\nvar app       = express();\n\napp.use(nofavicon());\n\napp.listen(process.env.PORT)",
   "id": 2,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { poll, ORDER_CREATED } = require('lib-events');\n\nasync function processMessage({ type, source, id, checksum }, ack) {\n  if (type === ORDER_CREATED) {\n    console.log(`${source} created an order!`);\n  }\n\n  await ack()\n}\n\nexports.process = async function () {\n  await poll(processMessage, {\n    maxNumberOfMessages: 10,\n    maxIterations: 10\n  });\n}",
   "id": 3,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " // returns a data object with the name of the control and the raw MIDI message\nkmix.on('any', (data) => {\n    console.log('control-name', data.control, 'control-data', data.raw)\n    // data.control example: 'fader-1'\n    // data.raw example: [176,1,67]\n    switch(data.control){\n        case 'fader-1':\n            console.log('fader-1', data.raw)\n            break;\n        case 'button-vu':\n            console.log('button-vu', data.raw)\n            break;\n        case 'button-vu:off':\n            console.log('button-vu:off', data.raw)\n            break;\n        default:\n            console.log('any other data', data)\n    }\n})",
   "id": 4,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Schema from '@jalik/schema';\n\nexport const ExampleSchema = new Schema({\n  time: {\n    type: 'string',\n    // The time must be like 'HH:mm'\n    pattern: '^\\\\d{1,2}:\\\\d{1,2}$'\n  },\n  password: {\n    type: 'string',\n    // The password must contain alphanumeric and special characters\n    pattern: /^[a-zA-Z0-9_&#@$*%?!]+$/\n  }\n});",
   "id": 5,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const sander = require('@marionebl/sander');\nconst Tesseract = require('tesseract.js');\nconst {langPath} = require('@tessdata/eng');\n\nconst image = sander.readFile('some-image.png');\nconst tesseract = Tesseract.create({langPath});\n\ntesseract.recognize(buffer, {\n  lang: 'eng'\n});",
   "id": 6,
   "stars": 0,
   "errors": [
    2552
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const sagaABC = function* sagaABC() {\n  yield take('ACTION_A');\n  // Do some I/O here.\n  yield put(actionB());\n  yield put(actionC());\n};\n\nconst sagaDE = function* sagaDE() {\n  yield take('ACTION_D');\n  yield put(actionE());\n};",
   "id": 7,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "`external: [...Object.keys(pkg.dependencies || {}), ...Object.keys(pkg.peerDependencies || {})],`",
   "id": 8,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mkpdf = require('mkpdf')\n\nmkpdf().from('/path/to/document.md').to('/path/to/document.pdf', function () {\n    console.log('Done')\n})\n\n// Or using streams\nvar fs = require('fs')\n\nfs.createReadStream('/path/to/document.md')\n    .pipe(mkpdf())\n    .pipe(fs.createWriteStream('/path/to/document.pdf'))",
   "id": 9,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import sinon from 'sinon';\nimport { expect } from 'chai';",
   "id": 10,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Cacher = require(\"softweb-cacher\");",
   "id": 11,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n- Register providers inside the your start/app.js file.\n```js\nconst providers = [\n    ...\n        '@faisal50x/ray/providers/RayProvider',\n    ...\n]",
   "id": 12,
   "stars": 0,
   "errors": [
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    1003,
    1160
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = ({name, source, places, index, count, filesCount, errorsCount}) => {\n    return '';\n};",
   "id": 13,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Get the current state of analytics\nanalytics.getState()\n\n// Get a subpath of state\nanalytics.getState('context.offline')",
   "id": 14,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const isChromeAgent = (context) => {\n  return context.req.headers['User-Agent'].indexOf('Chrome') !== -1;\n}\n\napp.useIf(isChromeAgent, async (context) => {\n  context.res.headers['Content-Type'] = 'text/html';\n});\n\n// now if a route was called from Chrome browser, the response will be set to HTML COntent-Type",
   "id": 15,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var x11 = require('x11-hash-js');\n\nconsole.log(x11.digest('The great experiment continues.'));\n// -> '4da3b7c5ff698c6546564ebc72204f31885cd87b75b2b3ca5a93b5d75db85b8c'",
   "id": 16,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const myMessage = await wtsqs.popOne()\n// The message no longer exists in queue\nconsole.log(myMessage)\n// output:\n{\n  id: 'messageId',\n  receiptHandle: 'messageReceiptHandle'\n  md5: 'messageMD5',\n  body: { a: 1 }\n}",
   "id": 17,
   "stars": 0,
   "errors": [
    2304,
    2695,
    2304,
    1005,
    2695,
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n\n## Issues\nIf you have questions or issues feel free to create new an topic in [issues](https://github.com/Smip/ngx-materialize/issues).\n\n## License\n\nLicensed under [MIT](https://opensource.org/licenses/MIT).",
   "id": 18,
   "stars": 0,
   "errors": [
    1127,
    1127,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1005,
    2304,
    2349,
    2304,
    2304,
    1005,
    1127,
    1127,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import LazyBackgroundSizes from 'vue-lazy-background-sizes';\n\nconst MyLazyBackground = {\n    mixins: [LazyBackgroundSizes],\n    data() {\n        return {\n            screens: ['762', '1200'],\n        }\n    },\n}\n\nVue.component('my-lazy-background', MyLazyBackground);",
   "id": 19,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "backand.initiate({\n  appName: 'APP_NAME',\n  signUpToken: 'SIGNUP_TOKEN',\n  anonymousToken: 'ANONYMOUS_TOKEN'\n});\n\nbackand.service.useAnonymousAuth()\n  .then(() => {\n      return backand.service.getList('USERS');\n  })\n  .then((response) => {\n      console.log(response);\n  })\n  .catch(function(error){\n      console.log(error);\n  });\n",
   "id": 20,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "mp.people.saveJson(\"example.json\");",
   "id": 21,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "# Install package\nyarn add @boldgrid/components\n\n# Import CSS files from dist folder (SASS).\n@import '@boldgrid/components/dist/css/components.min.css';",
   "id": 22,
   "stars": 0,
   "errors": [
    1127,
    1005,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    1146,
    1161,
    1127,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1003,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "WWWWWW||WWWWWW\n W W W||W W W\n      ||\n    ( OO )__________\n     /  |           \\\n    /o o|    MIT     \\\n    \\___/||_||__||_|| *\n         || ||  || ||\n        _||_|| _||_||\n       (__|__|(__|__|",
   "id": 23,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    2304,
    1109,
    1127,
    1161,
    1127,
    2304,
    1109,
    2304,
    2304,
    2304,
    1109,
    1109,
    1109,
    1109,
    1109,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport logo from './logo.png'; // Tell Webpack this JS file uses this image\n\nconsole.log(logo); // /logo.84287d09.png\n\nfunction Header() {\n  // Import result is the URL of your image\n  return <img src={logo} alt=\"Logo\" />;\n}\n\nexport default Header;",
   "id": 24,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<html>\n  ...\n  <head>\n    ...\n    <script src=\"angular.js\"></script>\n    <script src=\"bower_components/ngSnakeCamel/ng-snake-camel.js\"></script>\n    ...\n  </head>\n  ...\n</html>",
   "id": 25,
   "stars": 0,
   "errors": [
    17004,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const mongoose = require('mongoose');\n\nmongoose.connect(connectionOptions);\n\nconst keyv = new Keyv({\n  store: new KeyvMongoDB({ mongooseConnection: mongoose.connection })\n});",
   "id": 26,
   "stars": 0,
   "errors": [
    2304,
    2552,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "grunt.initConfig({\n  checkFileSize: {\n    options: {\n      separator: ': ',\n      punctuation: ' !!!',\n    },\n    files: {\n      'dest/default_options': ['src/testing', 'src/123'],\n    },\n  },\n});",
   "id": 27,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const removeEmptyLines = require(\"remove-blank-lines\");\n\nconsole.log(removeEmptyLines(\n    `Hello\n\nWorld!\n\n\n  **   **\n\n  **   **\n\n     -\n\n*         *\n\n *********`\n));\n// =>\n// Hello\n// World!\n//   **   **\n//   **   **\n//      -\n// *         *\n//  *********",
   "id": 28,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var failpoints = require('failpoints').create();\n\n// setup failpoints\n\nfailpoints.setAll(true);\nfailpoints.setAll({probability: 0.5});\nfailpoints.setAll(false);\n",
   "id": 29,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const HumanName = new GraphQLValidatedString({\n  name: 'HumanName'\n}).regex(/([a-zA-Z]{3,30}\\s*)+/);\n\nAssert.throws(()=> {\n  HumanName.parseValue('aa');\n}, /does not match/);",
   "id": 30,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import set from \"just-safe-set\";\n\nconst obj1 = {};\nset(obj1, \"a.aa.aaa\", 4); // true\nobj1; // {a: {aa: {aaa: 4}}}\n\nconst obj2 = {};\nset(obj2, [a, aa, aaa], 4); // true\nobj2; // {a: {aa: {aaa: 4}}}\n\nconst obj3 = { a: { aa: { aaa: 2 } } };\nset(obj3, \"a.aa.aaa\", 3); // true\nobj3; // {a: {aa: {aaa: 3}}}\n\n// don't clobber existing\nconst obj4 = { a: { aa: { aaa: 2 } } };\nset(obj4, \"a.aa\", { bbb: 7 }); // false\n\nconst obj5 = { a: {} };\nconst sym = Symbol();\nset(obj5.a, sym, 7); // true\nobj5; // {a: {Symbol(): 7}}",
   "id": 31,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "id: '0000-0000-0000-0000',\ndifficulty: [..],\nclearRate: number,\ntitle: 'Name',\nimg: 'Url',\nthumbnailImg: 'Url',\ngameStyle: [..],\ncreatedAt: Timestamp,\ntag: [..],\nstared: number,\nplayed: number,\nshared: number,\nclears: number,\nattempts: number,\nmaker: \n  \\_ login: 'Nintendo ID',\n  \\_ faceImg: 'Url',\n  \\_ flag: 'Country',\n  \\_ name: 'Name'",
   "id": 32,
   "stars": 0,
   "errors": [
    2695,
    2304,
    1005,
    2695,
    1109,
    1003,
    1003,
    2304,
    1005,
    2693,
    2695,
    2304,
    1005,
    2695,
    2304,
    1005,
    2695,
    2304,
    1005,
    2695,
    2304,
    1005,
    2695,
    1109,
    1003,
    1003,
    2304,
    1005,
    2304,
    2695,
    2304,
    1005,
    2695,
    1109,
    1003,
    1003,
    2304,
    1005,
    2693,
    2695,
    2304,
    1005,
    2693,
    2695,
    2304,
    1005,
    2693,
    2695,
    2304,
    1005,
    2693,
    2695,
    2304,
    1005,
    2693,
    2695,
    2304,
    1005,
    1127,
    1434,
    2304,
    2695,
    1127,
    1434,
    2304,
    2695,
    1127,
    1434,
    2304,
    2695,
    1127,
    1434,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "node scripts/integrate.js --name acme --openapi https://api.acme.com/openapi.json\n# or\nnode scripts/integrate.js --name acme_rss --rss https://acme.com/rss.xml",
   "id": 33,
   "stars": 0,
   "errors": [
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1127,
    1005,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import * as PIXI from 'pixi.js';\nimport {Spine} from 'pixi-spine';\n\nconst app = new PIXI.Application();\ndocument.body.appendChild(app.view);\n\napp.loader\n    .add('spineCharacter', 'spine-data-1/HERO.json')\n    .load(function (loader, resources) {\n        const animation = new Spine(resources.spineCharacter.spineData);\n\n        // add the animation to the scene and render...\n        app.stage.addChild(animation);\n        \n        if (animation.state.hasAnimation('run')) {\n            // run forever, little boy!\n            animation.state.setAnimation(0, 'run', true);\n            // dont run too fast\n            animation.state.timeScale = 0.1;\n        }\n        \n        app.start();\n    });",
   "id": 34,
   "stars": 0,
   "errors": [
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Rasha.thumbprint({ jwk: jwk }).then(function (thumbprint) {\n  console.log(thumbprint);\n});",
   "id": 35,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "let cc = {\n  \"sn\":3788106,\n   \"an\":[\"2c4b523bfa2b54a3c2cfec376336ef6e\",\"dc1edbe0708e179e84e6ee0185849811\",\"1b32715dea8bd66c6136f2bb226a9783\",\"cf4a451a23d256299f306e0170632e9c\",\"7bee1781698bfd26a40d384e3e9ba233\",\"57a59cc3fe0a9e2b0ef55d9ee7d83aa0\",\"8741aba5f9ada55cd4cc7ad9ff8cfc5e\",\"27a940f79e5bb895218dc6fee619439a\",\"6d7611020258dc07544255aecb05f94e\",\"8fd75c4a543107c762473cb5c6814b25\",\"b8fb577d62bee5e47622084deec2dc72\",\"2dddefde6b2da5f85d8a50af78a8c6ef\",\"0152c280f2b1df572e679edc5bf5aae4\",\"213bce1b1e301b90e82189ba0a908e89\",\"2f35eda22494903e5c680856304610b1\",\"64bdfe44432444514e8234fa115b9352\",\"6943424a235be73f86a065fe97756b03\",\"e037963736d439d4bc72efa49aa4f2e5\",\"da555eaad78e610e5beb51ec5d051781\",\"47849f44ee8ee1d0d41782ca21dacdc3\",\"4ec1fea2c736e8e82e1836cef7512cdb\",\"de9ec5865fa289a09059ab8a87e73ac4\",\"fb5fca0a5196333023043f080a6fb666\",\"c8df8adefe8b25103358df30491c5409\",\"dae2b572756a596fa8c97f55e8712854\"]\n}\n\nlet data = {\n  \"coin\" : cc,\n  \"paydata\" : \"email, stack, 100, 0,0,0,0,0, alex.skywallet.cc, Car payment,, ready\\nemail, stack, 150, 0,0,0,0,0, john.skywallet.cc, My debt,, ready\\nemail, stack, 21150, 0,0,0,0,0, roller.skywallet.cc, Chargeback,, ready\",\n  \"id\": \"f2494e21fcd4e54a5acd7be6f2be6e50\"\n\n}\nlet c = r.apiBillPay(data, () => {}).then(response => {\n  if (response.code != RaidaJS.ERR_NO_ERROR) {\n    console.log(\"Billpay sent\")\n    return\n  }\n\n  if (response.code == RaidaJS.ERR_SENT_PARTIALLY) {\n    console.log(\"Only \" + response.amount + \" CloudCoins sent. Try again later using the same ID: \" + response.id)\n    console.log(\"Recipients NOT sent:\")\n    for (let i = 0; i < response.recipients; i++) {\n      if (response.recipients[i].status == \"ready\")\n        console.log(response.recipients[i].address + \",\")\n    }\n  }\n}",
   "id": 36,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "_.mixin({awaitEach});",
   "id": 37,
   "stars": 0,
   "errors": [
    2304,
    18004
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nmodal.modal; // the modal element\nmodal.openButtons; // an array of open buttons\nmodal.closeButtons; // an array of close buttons\nmodal.isOpen; // boolean indicating if the modal is currently open\n",
   "id": 38,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var coinbase = web3.pi.coinbase;\nvar balance = web3.pi.getBalance(coinbase);",
   "id": 39,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// App.js\nimport React from 'react'\nimport { createRouter, Link } from 'react-context-router'\n\nconst NotFound = () => <div>Not Found</div>\n\nconst Nav = () => (\n  <nav>\n    <Link href='/' children='Home' />\n    <Link href='/posts/1' children='First Post' />\n  </nav>\n)\n\nclass App extends React.Component {\n  render () {\n    const { route } = this.props\n    const Comp = route.component || NotFound\n\n    return (\n      <div>\n        <Nav />\n        <Comp />\n      </div>\n    )\n  }\n}\n\nexport default createRouter(App)",
   "id": 40,
   "stars": 0,
   "errors": [
    17004,
    17004,
    17004,
    17004,
    2339,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 22,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { Scrollbars } from 'react-custom-scrollbars';\n\nclass App extends Component {\n  render() {\n    return (\n      <Scrollbars style={{ width: 500, height: 300 }}>\n        <p>Some great content...</p>\n      </Scrollbars>\n    );\n  }\n}",
   "id": 41,
   "stars": 0,
   "errors": [
    2304,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { TagInputModule } from 'ngx-chips';\n\nTagInputModule.withDefaults({\n    tagInput: {\n        placeholder: 'Add a new tag',\n        // add here other default values for tag-input\n    },\n    dropdown: {\n        displayBy: 'my-display-value',\n        // add here other default values for tag-input-dropdown\n    }\n});",
   "id": 42,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const axios = require('axios').default;\n\n// axios.<method> will now provide autocomplete and parameter typings",
   "id": 43,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nimport {SectionsContainer, Section, Header, Footer} from 'react-fullpage';\n\n// => in the render() method of your app\nreturn (\n  <Header>\n    <a href=\"#sectionOne\" className=\"opa\">Section One</a>\n    <a href=\"#sectionTwo\">Section Two</a>\n    <a href=\"#sectionThree\">Section Three</a>\n  </Header>\n  <Footer>\n    <a href=\"\" className=\"opa\">Dcoumentation</a>\n    <a href=\"\">Example Source</a>\n    <a href=\"\">About</a>\n  </Footer>\n  <SectionsContainer {...options}>\n    <Section>Page 1</Section>\n    <Section>Page 2</Section>\n    <Section>Page 3</Section>\n  </SectionsContainer>\n);\n",
   "id": 44,
   "stars": 0,
   "errors": [
    2657
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "* 但是��要引入app.js这个文件，因为所有的**入口全都从这个app.js进入**",
   "id": 45,
   "stars": 0,
   "errors": [
    1109,
    2304,
    1127,
    1127,
    2304,
    1127,
    2304,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "@Store({\n  endpoint: 'system',\n  mutations: {\n    login: {\n      type: MutationType.POST,\n      path: 'security/login'\n    }\n  }\n})",
   "id": 46,
   "stars": 0,
   "errors": [
    1146
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "metrics.mexists( 'net.bytesRX' );\n// returns true\n\nmetrics.mexists( 'cpu.utilization' );\n// returns false",
   "id": 47,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {observer} from 'mobx-react';\nimport {Form} from 'mobx-antd-form';\n\nconst FormItem = Form.Item;\nconst FormField = Form.Field;\n\n@Form.create({\n    fields: ({demo}) => demo.fields\n})\n@observer\nclass BasicForms extends React.Component {\n    \n    handleSubmit = e => {\n        const {dispatch, form} = this.props;\n        e.preventDefault();\n        form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                // submit form\n            }\n        });\n    };\n    \n    // ** 实现 title 的 label 属性随着其 value 属性变化 **\n    render(){\n        \n        const {form, demo} = this.props;\n        \n        return (\n            <Form onSubmit={this.handleSubmit} hideRequiredMark style={{marginTop: 8}}>\n                <FormItem field={form.get('title')}>\n                    <FormField field={form.get('title')} label={demo.fields.title.value}>\n                        <Input placeholder='请输入标题'/>\n                    </FormField>\n                </FormItem>\n                <FormItem field={form.get('date')}>\n                    <FormField field={form.get('date')} rules={[{required: true, message: '我的优先级更高'}]}>\n                        <RangePicker\n                            style={{width: '100%'}}\n                            placeholder={[\n                                formatMessage({id: 'form.date.placeholder.start'}),\n                                formatMessage({id: 'form.date.placeholder.end'}),\n                            ]}\n                        />\n                    </FormField>\n                </FormItem>\n                <FormItem style={{marginTop: 32}}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        <FormattedMessage id=\"form.submit\"/>\n                    </Button>\n                    <Button style={{marginLeft: 8}}>\n                        <FormattedMessage id=\"form.save\"/>\n                    </Button>                                            \n                </FormItem>\n            </Form>\n        );\n    }\n}",
   "id": 48,
   "stars": 0,
   "errors": [
    1219,
    2304,
    2339,
    2339,
    17004,
    17004,
    17004,
    17004,
    2304,
    17004,
    17004,
    17004,
    2304,
    2304,
    2304,
    17004,
    17004,
    2304,
    17004,
    2304,
    2304,
    17004,
    2304,
    17004,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 49,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import map from \"just-map-object\";\n\n// DEPRECATED: use just-map-values\nmap({ a: 3, b: 5, c: 9 }, (key, value) => value + 1); // {a: 4, b: 6, c: 10}\nmap({ a: 3, b: 5, c: 9 }, (key, value) => key); // {a: 'a', b: 'b', c: 'c'}\nmap({ a: 3, b: 5, c: 9 }, (key, value) => key + value); // {a: 'a3', b: 'b5', c: 'c9'}",
   "id": 49,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "store.log('user'); // {\"name\":\"James Bond\",\"email\":\"bond007@live.com\",\"bio\":\"I spy for a living.\"}",
   "id": 50,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "npx hermione merge-stat-reports src-report-1.json src-report-2.json --html dest-html-report --json report.json",
   "id": 51,
   "stars": 0,
   "errors": [
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    2552,
    1005,
    2304,
    2304,
    1351,
    2552,
    2304,
    2304,
    1351,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "grunt.initConfig({\n\n    copy: {\n        somefiles: {\n            src: \"./mydir/**\",\n            dest: \"./myNormallyOutputDir/\"\n        }\n    },\n    multidest: {\n        copy_some_files: {\n            tasks: [\n                \"copy:somefiles\"\n            ]\n            dest: [\"./dist/distdir1\", \"./dist/distdir2\"]\n        },\n    },\n});",
   "id": 52,
   "stars": 0,
   "errors": [
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var fs = require('fs'),\n  Proposal = require('proposal'),\n  readProposal = Proposal(fs.readFile);",
   "id": 53,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "minify = require('minify');",
   "id": 54,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "docker pull apachecn0/matplotlib-doc-zh\ndocker run -tid -p <port>:80 apachecn0/matplotlib-doc-zh\n# 访问 http://localhost:{port} 查看文档",
   "id": 55,
   "stars": 0,
   "errors": [
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    2304,
    2304,
    1434,
    2304,
    2304,
    2304,
    2304,
    2304,
    1109,
    1005,
    2304,
    2304,
    2304,
    2304,
    1127,
    1005,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "let fullsizeCanvasElement = document.getElementById('fullsize-canvas');\nlet thumbnailCanvasElement = document.getElementById('thumbnail-canvas');\n\nCanvasCamera.initialize(fullsizeCanvasElement, thumbnailCanvasElement);\n\nlet options:CanvasCamera.CanvasCameraOptions = {\n    cameraFacing: 'front',\n    fps: 15,\n    thumbnailRatio: 1/6,\n    onAfterDraw: function(frame) {\n      // do something with each frame of the fullsize canvas element only\n      // frame.image.src; // file path or base64 data URI\n      // frame.element.toDataURL(); // requested base64 data URI\n    }\n};\n\nCanvasCamera.start(options);",
   "id": 56,
   "stars": 0,
   "errors": [
    2584,
    2584,
    2304,
    2503,
    8010,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "describe('run', () => {\n  fancy\n  .stdout()\n  .do(() => console.log('foo'))\n  .do(({stdout}) => expect(stdout).to.equal('foo\\n'))\n  .it('runs this callback last', () => {\n    // test code\n  })\n\n  // add to context object\n  fancy\n  .add('a', () => 1)\n  .add('b', () => 2)\n  // context will be {a: 1, b: 2}\n  .it('does something with context', context => {\n    // test code\n  })\n})",
   "id": 57,
   "stars": 0,
   "errors": [
    2593,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "require(\"typeface-open-sans\")",
   "id": 58,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "app.set('adminAuthServerMaster', function(msg, cb){\n  if(auth success) {\n    cb('ok');\n  } else {\n    cb('bad');\n  }\n})",
   "id": 59,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1005,
    2304,
    1128,
    1005,
    2304,
    1128,
    2304,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "DEBUG=mysql-express-session*,mysql-connection-manager node your-app.js",
   "id": 60,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    1109,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Boilerplate = require('boilerplate');\nvar h5bp = new Boilerplate({\n  options: {\n    cwd: 'vendor/h5bp/dist'\n  },\n  root: {src: ['{.*,*.*}'],   dest: 'src/'},\n  css:  {src: ['css/*.css'],  dest: 'src/'},\n  doc:  {src: ['doc/*.md'],   dest: 'src/'},\n  js:   {src: ['js/**/*.js'], dest: 'src/'}\n});\nconsole.log(h5bp);",
   "id": 61,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "DEV_COMMAND=gatsby -u http://localhost:8080 -r -o ./out",
   "id": 62,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    1005,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var view = async (view) => {\n    //Create an collection with a bindable field.\n    view.userData = { userName : \"John Doe\" };\n    //Bind the inner HTML of the element to the field on the collection\n    view.$nameLabel.bind = () => view.userData.userName;\n};\n\nexport { view };",
   "id": 63,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// middleware/authentication.js\n\nvar Authentication = require('../lib/authentication');\n\nfunction(req, res, next) {\n  var token = req.get('X-AUTH-TOKEN');\n\n  if(!token) {\n    /* instead of redirecting to login, give the\n    *  deep linking middleware a chance to store the\n    *  current request url, and THEN redirect to login\n    *  via the login option\n    */\n    next();\n  }\n\n  Authentication\n  .authenticate(token)\n  .then(function(tokenOrWhateverAuthYields) {\n    // we can now pass this in as the authentication option\n    req.user = tokenOrWhateverAuthYields;\n    next();\n  })\n  .error(function(e) {\n    // redirect to login since they gave us a bad token\n  });\n}",
   "id": 64,
   "stars": 0,
   "errors": [
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/* Set worksheet sheet to \"normal\" */\nws[\"!margins\"]={left:0.7, right:0.7, top:0.75,bottom:0.75,header:0.3,footer:0.3}\n/* Set worksheet sheet to \"wide\" */\nws[\"!margins\"]={left:1.0, right:1.0, top:1.0, bottom:1.0, header:0.5,footer:0.5}\n/* Set worksheet sheet to \"narrow\" */\nws[\"!margins\"]={left:0.25,right:0.25,top:0.75,bottom:0.75,header:0.3,footer:0.3}",
   "id": 65,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require('gulp');\nvar jspmAssets = require('gulp-jspm-assets');\n\ngulp.task('sass', function() {\n    jspmAssets({\n      'bootstrap', 'sass/**/*.scss',\n      'foundation', 'sass/**/*.scss'\n    })\n    .pipe(whateverTask())\n    .pipe(gulp.dest('dest'));\n});",
   "id": 66,
   "stars": 0,
   "errors": [
    1005,
    1005,
    1005,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " // Content to be scrolled\nvar $scrollContent = document.getElementById(\"content-scroll-vertical\");\nvar $scrollView = $scrollContent.parentNode; // Container for the content\nvar options = {\n    bounds: true,\n    direction: \"vertical\",\n    scrollbar: \"scrollbar-vertical\" // CSS class\n};\n$scrollView.scroll_bar = new RADJS_ScrollView.ScrollBar($scrollView, {\n    className: options.scrollbar,\n    direction: options.direction,\n    smart: $scrollContent.querySelector(\"div.list_of_something\")\n}); // `scroll_bar` it's just a custom name\n// Create and attach ScrollView.\n// `scroller` it's just a custom name, but in WebComponent it's predefined.\n$scrollView.scroller = new RADJS_ScrollView($scrollView, options);\n// Create and attach custom pointer events, because of: IE support, SVG elements etc.\n// `tracker` is also custom name but it's also predefined in WebComponent\n$scrollView.tracker = new PointerTracker($scrollView, $scrollView.scroller);",
   "id": 67,
   "stars": 0,
   "errors": [
    2584,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const okayRecs = require('@andrewshell/okay-recs');\n\n// Source of all user ratings in system.\nconst allUserRatings = {\n    \"user0\": {\n        \"https://www.metacritic.com/tv/112263\": 1,\n        \"https://www.metacritic.com/tv/24\": 4,\n        \"https://www.metacritic.com/tv/30-rock\": 3,\n        \"https://www.metacritic.com/tv/alias\": 2,\n        \"https://www.metacritic.com/tv/archer\": 2,\n        \"https://www.metacritic.com/tv/arrested-development\": 2,\n        \"https://www.metacritic.com/tv/band-of-brothers\": 3,\n        ...\n    },\n    \"user1\": {\n        \"https://www.metacritic.com/tv/3rd-rock-from-the-sun\": 2,\n        \"https://www.metacritic.com/tv/adventure-time\": 4,\n        \"https://www.metacritic.com/tv/archer\": 1,\n        \"https://www.metacritic.com/tv/arrested-development\": 3,\n        \"https://www.metacritic.com/tv/better-call-saul\": 4\n        ...\n    },\n    ...\n};\n\n// Subset of user ratings that you want recommendations and similar users for.\n// Note: This example shows one user, but can work for multiple users at once.\nconst subUserRatings = {\n    user10: allUserRatings['user10']\n};\n\n// Sum of scores of people who gave program 1 a rating of x gave to program 2\n// Intermediate structure for user recommendations. Should be cached.\nconst allProgramScores = okayRecs.programScores(allUserRatings);\n\n// What programs are the users most likely to like?\nconst subUserRecommendations = okayRecs.userRecommendations(allProgramScores, subUserRatings);\n\n// What other users is this user similar to?\nconst subUserSimilarUsers = okayRecs.similarUsers(allUserRatings, subUserRatings);",
   "id": 68,
   "stars": 0,
   "errors": [
    1109,
    1005,
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 28,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// integrify.rules.js\n\nmodule.exports = [\n  {\n    rule: 'REPLICATE_ATTRIBUTES',\n    name: 'replicateMasterToDetail',\n    // ...\n  },\n  // ...\n];",
   "id": 69,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "angular.module('myApp', ['ionic.native']).controller('MyPageController', function ($cordovaCamera) {\n  $cordovaCamera.getPicture().then(\n    function (data) {\n      console.log('Took a picture!', data);\n    },\n    function (err) {\n      console.log('Error occurred while taking a picture', err);\n    }\n  );\n});",
   "id": 70,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// gatsby-browser.js\nimport 'simple-css-reset';",
   "id": 71,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "chai.expect(semver.parse('Linux 14.04')).to.equal(null);\nchai.expect(semver.parse('A development version')).to.equal(null);\nchai.expect(semver.parse('Version A')).to.equal(null);",
   "id": 72,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "dsa.setInstance(dsaId); // DSA ID",
   "id": 73,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "web3.setProvider(new web3.providers.HttpProvider('http://host.url', 0, BasicAuthUsername, BasicAuthPassword));",
   "id": 74,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n//从数据库中查询出来的数据对象\nvar arr = [{id: 10, name: \"name1\", value: \"value1\"}, {id: 11, name: \"name2\", value: \"value2\"}];\n//把id值作为key生成一个对象\n/* data = {10: {id: 10, name: \"name1\", value: \"value1\"}, 11: {id: 11, name: \"name2\", value: \"value2\"}} */\nvar data = arrToObj(arr, \"id\");\n//把id值作为key，只需要name的值\n//data = {10: \"name1\", 11: \"name2\"}\nvar data = arrToObj(arr, \"id\", \"name\");\n//只获取id的值\n// ids = [10, 11];\nvar ids = arrToObj(arr, \"id\", null);",
   "id": 75,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "click(\"html>body>div>div:eq(0)>button\");\nandThen(function () {\n equal(find(\"#foo\").length, 0, \"foo removed AFTER user [INSERT REASON]\");\n});\n",
   "id": 76,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { through } = require('streamss-through')\nlet cnt = 0\n\nrequire('fs').createReadStream(__filename, { encoding: 'utf8', highWaterMark: 30 })\n.pipe(through(\n  { decodeStrings: false },\n  function transform(str) {\n    cnt += 1\n    this.push(str.replace(/\\s/g, '‧') + '\\n')\n  },\n  function flush() {\n    console.log('\\ncounted num of chunks: ' + cnt)\n  }\n))\n.pipe(process.stdout)",
   "id": 77,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const demethodize = require(\"just-demethodize\");\n\nconst trimFn = demethodize(\"\".trim);\n[\"hello \", \" goodbye\", \"hello again\"].map(trimFn);",
   "id": 78,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const mapped = {\n  a: data.a,\n  b: data.b\n}",
   "id": 79,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var o2x = require('object-to-xml');\n\nvar obj = { \n  '?xml version=\\\"1.0\\\" encoding=\\\"iso-8859-1\\\"?' : null,\n  request : {\n    '@' : {\n      type : 'product',\n      id : 12344556\n    },\n    '#' : {\n      query : {\n        vendor : 'redhat',\n        name : 'linux'\n      }\n    }\n  }\n};\n\nconsole.log(o2x(obj));\n\n/*\n<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n<request type=\"product\" id=\"12344556\">\n  <query>\n    <vendor>redhat</vendor>\n    <name>linux</name>\n  </query>\n</request>\n*/",
   "id": 80,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 26,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "let post = new Post();\n\nawait post.save(); // creates a new post\n\npost.set('title', 'New title');\nawait post.save(); // updates an existing post",
   "id": 81,
   "stars": 0,
   "errors": [
    2552,
    1375,
    1378,
    1375,
    1378
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var imdbWatchlist = require('imdb-watchlist');\n\nimdbWatchlist('ur23098466').then(function (watchlist) {\n  // watchlist is an array of objects on the form:\n  // { title: '', imdbId: ''}\n\n  // This will log out a random movie from your watchlist\n  console.log(watchlist[Math.floor(Math.random() * watchlist.length)]);\n});",
   "id": 82,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "JsonRoutes.ErrorMiddleware.use(\n  '/handle-error',\n  RestMiddleware.handleErrorAsJson\n);\n\nJsonRoutes.add('get', 'handle-error', function () {\n  var error = new Meteor.Error('not-found', 'Not Found');\n  error.statusCode = 404;\n  throw error;\n});",
   "id": 83,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const loggedIn = res._headers['logged-in'] === \"true\";",
   "id": 84,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "server.register({\n    register: require('hapi-droutes'),\n    options: {\n        'root':'routes/please/search_in/here',\n        'match':'resource/*/route.*.js',\n        'dependencies':['hello','hapi']\n    }\n}, function (err) {\n    if (err) throw err;\n});",
   "id": 85,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var cacheInterceptor = function cacheInterceptor(args) {\n  var req = args.req,\n      res = args.res;\n    // retrieve cached response\n    return cacheStore.getCacheRes(req)\n      .then((cachedRes) => {\n        return new Promise((resolve, reject) => {\n          try {\n            if (cachedRes) {\n              // response with cached result\n              res.end(cachedRes);\n              // abort the executing of passes sequence\n              reject();\n            } else {\n              // continue executing other passes\n              resolve();\n            }\n          } catch (err) {\n            reject(err);\n          }\n        })\n      })\n  };\n// insert this pass before the default 'deleteLength' pass\nproxy.before('web', 'deleteLength', cacheInterceptor);\n",
   "id": 86,
   "stars": 0,
   "errors": [
    2304,
    2552
   ],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<LoadIt load={() => import('./LoadMe')} />",
   "id": 87,
   "stars": 0,
   "errors": [
    17004,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import parallel from 'apr-parallel';\n\nconst then = (v) => new Promise((resolve) => resolve(v));\n\nconst withArray = await parallel([\n  async () => await then(1),\n  async () => await then(2)\n]);\n\n// withArray = [1, 2]\n\nconst withObject = await parallel({\n  one: async () => await then(1),\n  two: async () => await then(2)\n});\n\n// withObject = { one: 1, two: 2 }",
   "id": 88,
   "stars": 0,
   "errors": [
    1378,
    1378
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// run tests\ngrunt\n\n// run tests and show a test coverage report\ngrunt specs",
   "id": 89,
   "stars": 0,
   "errors": [
    2304,
    1434,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// foo.js\nObject.defineProperty(exports, '__esModule', {value: true})\n\nexports.default = {\n  foo: 'default-foo'\n}\n\nexports.foo = 'foo'",
   "id": 90,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'core-js/features/array/includes';\nimport 'core-js/features/object/assign';",
   "id": 91,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nconst adapter = setAdapter(BaseAdapter);\n\nexports.api = functions.https.onRequest((...args) => adapter.handle(...args));",
   "id": 92,
   "stars": 0,
   "errors": [
    2552,
    2304,
    2552
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "my-app\n├── README.md\n├── node_modules\n├── package.json\n├── .gitignore\n├── public\n│   └── favicon.ico\n│   └── index.html\n│   └── manifest.json\n└── src\n    └── App.css\n    └── App.js\n    └── App.test.js\n    └── index.css\n    └── index.js\n    └── logo.svg\n    └── registerServiceWorker.js",
   "id": 93,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    1128,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { MoodleClient } = require('node-moodle');\nconst moodle = new MoodleClient({ ... });\n\nasync function main() {\n  try {\n    //Request data\n    var req = {\n      users: [\n        {\n          firstname: \"Foo\",\n          lastname: \"Bar\",\n          username: \"foo\",\n          password: \"FooBar123!\",\n          email: \"foo@example.com\",\n        }\n      ]\n    };\n\n    //Invoke a method\n    var res = await moodle.core.user.createUsers(req);\n    \n    //Response data\n    console.log(res);\n    /*\n    [\n      {\n        \"id\": 3,\n        \"username\": \"foo\"\n      }\n    ]\n    */\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\nmain();",
   "id": 94,
   "stars": 0,
   "errors": [
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 31,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  const cache = LRUCache([cacheSize = 10]);\n\n // return an item from the cache\n  cache.get(key)\n\n  // add an item to the cache. overwrite if already exists\n  cache.set(key, value) \n\n  // remove an item from the cache\n  cache.remove(key) \n\n  // reset the cache to an empty and fresh state\n  cache.clear(limit = 10) \n\n  // Traverse each cached item and call a function\n  // callback is passed [node element, element number, cache instance] \n  cache.forEach(callback) \n\n  // return a JSON represenation of the cache\n  cache.toJSON() ",
   "id": 95,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { connectPubsub } from '@yoctol/message-queue';\n\nconst pubsub = await connectPubsub({\n  driver: 'rabbitmq',\n  amqpConfig: {\n    url: 'amqp://localhost',\n    exchange: 'amqp.exchange',\n    connectOptions: {\n      //node-amqp-connection-manager connect() options \n      heartbeatIntervalInSeconds: 5,\n      ...\n      connectionOptions: {\n        //amqplib connection options\n        ...\n      },\n    },\n    createChannelOptions: {\n      //node-amqp-connection-manager createChannel() options \n      name: 'channelName',\n      setup: ...,\n      json: true,\n    },\n },\n});",
   "id": 96,
   "stars": 0,
   "errors": [
    2304,
    1005,
    1136,
    1109,
    1135,
    1128,
    2695,
    2552,
    1005,
    1128,
    1128,
    2695,
    1109,
    1128,
    1128,
    1128,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function(i) {\n    // delete the tag at index i\n}",
   "id": 97,
   "stars": 0,
   "errors": [
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "facebookConnectPlugin.showDialog({\n    method: \"share\",\n    picture:'https://www.google.co.jp/logos/doodles/2014/doodle-4-google-2014-japan-winner-5109465267306496.2-hp.png',\n    name:'Test Post',\n    message:'First photo post',\n    caption: 'Testing using phonegap plugin',\n    description: 'Posting photo using phonegap facebook plugin'\n  }, function (response) {\n    console.log(response)\n  }, function (response) {\n    console.log(response)\n  }\n);",
   "id": 98,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "namiConfig.logger = require('log4js').getLogger('Nami.Core');\nvar nami = new (require(\"nami\").Nami)(namiConfig);",
   "id": 99,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "#@ Node\nnode_modules\n\n# Build\nbuild\n\n# Coverage directory\ncoverage\n\n# logs\n*.log\n.logs\n\n#@ Platform Specific\n.DS_Store\nThumbs.db",
   "id": 100,
   "stars": 0,
   "errors": [
    1127,
    1005,
    1146,
    2304,
    1127,
    1005,
    2304,
    2304,
    1127,
    1005,
    2304,
    2304,
    2304,
    1127,
    1005,
    2304,
    1109,
    1127,
    1005,
    1146,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n@param {Error|null} err Pass an error object here to indicate an error\n                        occured. Very useful for validation; stops the flow here.\n\n@param {string} key     The key of the property that has finished, \n                        this gives you a chance to format the key name.\n\n@param {*} value        The value you want the key to have\n",
   "id": 101,
   "stars": 0,
   "errors": [
    1146,
    2362,
    18050,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2552,
    1434,
    2552,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2552,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    1003,
    1146,
    2693,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2695,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1435,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    1146,
    1109,
    1109,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const storybook = require('@ltht-react/storybook');\n\n// TODO: DEMONSTRATE API",
   "id": 102,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "ionic cordova plugin add cordova-plugin-alicloud-feedback --variable APP_KEY=你的KEY --variable APP_SECRET=你的SECRET",
   "id": 103,
   "stars": 0,
   "errors": [
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const socks5http = require('socks5-http');\n\n// set socks5 proxy port and host\n// 1080 and \"localhost\" is default\nsocks5http.setSocks5(1080, \"localhost\")\n\n// https GET\nsocks5http.get(\"https://www.google.com\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})\n\n// http GET\nsocks5http.get(\"http://www.google.com\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})\n\n// ip and custom port\nsocks5http.get(\"http://47.98.223.187:3000\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})",
   "id": 104,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 29,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var app = require(\"your-awesome-component\");\nvar instance = new app(yourDiv);",
   "id": 105,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Usage: spraygun <template> <project-directory>\n\nGenerate a project in the specified directory, based on a template.\n\nFor example, to generate a react app in a directory named hello-world:\n  $ npx spraygun -t react hello-world\n\nThe officially supported spraygun templates are:\n  -t express\n  -t react\n  -t react-ts\n\nTo use a custom template, specify one of the following:\n  -p path   a local template directory\n  -r URL    a git repository URL",
   "id": 106,
   "stars": 0,
   "errors": [
    2304,
    2304,
    17004,
    17008,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import com.lynxit.contactswrapper.ContactsWrapperPackage;\n...\n\n@Override\nprotected List<ReactPackage> getPackages() {\n    return Arrays.<ReactPackage>asList(\n        new MainReactPackage(),\n        ...,\n       new ContactsWrapperPackage()\n   );\n}",
   "id": 107,
   "stars": 0,
   "errors": [
    8002,
    1005,
    1128,
    1146,
    2304,
    2304,
    2304,
    1005,
    1003,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "flv.$canvas;",
   "id": 108,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const conf = require('run-con')('myapp', {\n    port: 12345,\n    mode: 'test'\n});\n\nconsole.log(JSON.stringify(conf, null, 2));",
   "id": 109,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "type.isAsyncFunction(async function(){}) //=> true",
   "id": 110,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { ProviderStore } from 'react-redux-just'\n\nconst model = {\n  state: {\n    date: {\n      __options:{\n        type: 'date',\n        value: new Date(),\n        receiving: date => date.toString(),\n        request: (resolve, reject) => {\n              fetch( REQUEST_URL , {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ title: 'React POST Request' })\n                })\n                .then(response => response.json())\n                .then(({result}) => resolve(result));\n            }\n      }\n    }\n  }\n}\n\nReactDOM.render(\n    <ProviderStore model={model}>\n      <App />\n    </ProviderStore>\n  ,document.getElementById('root')\n);\n",
   "id": 111,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    17004,
    17004,
    2304,
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 27,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import IntentLauncher, { IntentConstant } from 'react-native-intent-launcher'\n...\nIntentLauncher.startActivity({\n    action: 'android.settings.APPLICATION_DETAILS_SETTINGS',\n    data: 'package:com.example'\n})\n...",
   "id": 112,
   "stars": 0,
   "errors": [
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "cd contracts\nnpm install\nnpm run build",
   "id": 113,
   "stars": 0,
   "errors": [
    1434,
    2304,
    2304,
    1434,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var NodeWebcam = require( \"node-webcam\" );\n\nvar FSWebcam = NodeWebcam.FSWebcam; //require( \"node-webcam/webcams/FSWebcam\" );\n\nvar opts = {};\n\nvar cam = new FSWebcam( opts );",
   "id": 114,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import propType, { ow } from 'ow-prop-type'\n\nclass MyComponent extends React.Component {\n  static propTypes = {\n    // propType with a predicate\n    total: propType(\n      ow\n        .number\n        .integer\n        .greaterThanOrEqual(0)\n    ),\n    // propType with a callback, must return a predicate\n    current: propType((props) => {\n      return ow\n        .number\n        .integer\n        .greaterThanOrEqual(0)\n        .lessThanOrEqual(props.total)\n    }\n  }\n}",
   "id": 115,
   "stars": 0,
   "errors": [
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Vue from 'vue'\nimport Vuetify from 'vuetify'\nimport DaySpanVuetify from 'dayspan-vuetify'\nimport App from './App.vue'\n\nimport 'vuetify/dist/vuetify.min.css'\nimport 'material-design-icons-iconfont/dist/material-design-icons.css'\nimport 'dayspan-vuetify/dist/lib/dayspan-vuetify.min.css'\n\nVue.config.productionTip = false\n\nVue.use(Vuetify);\n\nVue.use(DaySpanVuetify, {\n  methods: {\n    getDefaultEventColor: () => '#1976d2'\n  }\n});\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})",
   "id": 116,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "grunt.initConfig({\n  mustache_html: {\n    development: {\n      options: {\n        src: 'src',\n        dist: 'dist',\n        type: 'mustache' // mustache Or hbs\n      },\n      globals: {\n        analytics_id: 'UA-123456-1'\n      }\n    }\n  }\n});",
   "id": 117,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<script src=\"path/to/dist/js/tether.min.js\"></script>",
   "id": 118,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function log(response) {\n  console.log(`Transaction ID: ${response.transactionId}`)\n  console.log(`Function code: ${response.functionCode}`)\n  console.log(`Total number of registers: ${response.noOfRegisters}`)\n  console.log(`Values: ${response.registerValues.join(', ')}`)\n}\n\nasync function example() {\n  try {\n    const response = await client.send(request)\n    log(response)\n  } catch (error) {\n    console.log(`Error: ${error}`)\n  }\n}\n\nexample()",
   "id": 119,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Size (Body, H1, etc.)\n  Alignment (Left, Center, Right)\n    Weight (Regular, Semibold, etc.)\n      Color",
   "id": 120,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    1003,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    1003,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/* bookType can be 'xlsx' or 'xlsm' or 'xlsb' */\nvar wopts = { bookType:'xlsx', bookSST:false, type:'binary' };\n\nvar wbout = XLSX.write(workbook,wopts);\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n  for (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n  return buf;\n}\n\n/* the saveAs call downloads a file on the local machine */\nsaveAs(new Blob([s2ab(wbout)],{type:\"\"}), \"test.xlsx\")",
   "id": 121,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2322
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var dfltCfg = { slot: 'foo' },\n  meta = { defaultConfig: dfltCfg,\n    descr: 'A nice foo for your app.',\n    apiVersion: 1,\n    };\n\nfunction install(app, plugCfg, appCfg) {\n  if (plugCfg === appCfg) { plugCfg = false; }\n  var slot = (plugCfg.slot\n    || appCfg.fooSlot   // <-- that's why we checked above\n    || dfltCfg.slot);\n  app[slot] = function () { return 'bar @ ' + app.name; };\n}\n\nmodule.exports = require('plugmgr1801-pmb/plugify')(module, meta, install);",
   "id": 122,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// get most used from main entry\nimport { SVGO, SVGO_LITE, CONFIG_LITE, PLUGINS_DEFAULT_LIST } from 'libsvgo/module/lib/svgo'\n\n// or get each separately\nimport { SVGO_LITE } from 'libsvgo/module/lib/svgo-lite'\nimport { SVGO_LITECONFIG_LITE } from 'libsvgo/module/lib/svgo/config-lite'\n\n// get each plugin separately\nimport * as addAttributesToSVGElement from 'libsvgo/module/plugins/addAttributesToSVGElement'",
   "id": 123,
   "stars": 0,
   "errors": [
    2300,
    2300
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "typeorm init --name MyProject --database mysql",
   "id": 124,
   "stars": 0,
   "errors": [
    1435,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n- ...\\ControlManifest.Input.xml\n\n    modify as needed...\n\n\n\n- modify ...\\node_modules\\pcf-start\\bin\\pcf-start.js\n\n    enable cors by adding cors: true, \n\n```javascript\n// Start server\nvar options = {\n    port: 8181,\n    host: '0.0.0.0',\n    cors: true, \n    root: path.resolve(process.cwd(), codePath),\n    open: true,\n",
   "id": 125,
   "stars": 0,
   "errors": [
    1109,
    1127,
    2304,
    2304,
    2304,
    8016,
    1005,
    2304,
    1005,
    1127,
    2304,
    1127,
    2304,
    2304,
    1127,
    2304,
    1127,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2695,
    2349,
    1160
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// configuring client\nconst prosperworks = require('prosperworks')({\n  email: process.env.EMAIL,\n  token: process.env.TOKEN\n});\n\n// using async / await (native in Node.js v8.x)\nvar result = await prosperworks.companies.list();\nconsole.log(JSON.stringify(result, null, 2));\n\n// or using with promises\nprosperworks.companies.list()\n.then(result => {\n  console.log(JSON.stringify(result, null, 2));\n})",
   "id": 126,
   "stars": 0,
   "errors": [
    1378
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/** @type {string[]} */\nconst verbs = require('verb-corpus');\n\nconsole.log(verbs.length);",
   "id": 127,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { BuildpackJob } from 'dray-client';\nlet compilation = new BuildpackJob(manager);\ncompilation.addFiles([\n    {name: 'foo.ino', data: new Buffer()}\n]);\ncompilation.setEnvironment({\n    PLATFORM_ID: 6\n});\ncompilation.setBuildpacks([\n    'particle/buildpack-wiring-preprocessor',\n    'particle/buildpack-particle-firmware:0.5.1-photon'\n]);\ncompilation.submit().then((binaries) => {\n    // Do something with binaries\n}, (reason) => {\n    console.error(\"Compilation error:\", reason)\n});",
   "id": 128,
   "stars": 0,
   "errors": [
    2304,
    2554
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var prefixed = store.withIdPrefix('foo:')\n\nprefixed.add({ _id: 'bar', value: 42 }) // will add the object with id 'foo:bar'\n  .then(function (doc) {\n    // update documents with id 'foo:other' and 'foo:bar'\n    return prefixed.update(['other', 'foo:bar'], { other: 'baz' })\n  })\n\n// Finds all objects which id start with 'foo:'\nprefixed.findAll().then(function (docs) {})\n\n// Handle all changes to objects which id start with 'foo:'\nprefixed.on('change', function (eventName, doc) {})\n\nvar moarPrefixed = prefixed.withIdPrefix('moarPrefix:') // prefix is now 'foo:moarPrefix:'",
   "id": 129,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const RequestParameters = require('@luigisamurai/request-parameters');\nconst JSONFile = requiere('./JSONFile');\n\nconst request = new RequestParameters.Request();\n\n// request-promises options\nconst setting = {\n  resolveWithFullResponse: true,\n  simple: false\n};\n\n// set the common parameters\nrequest.setParameters({\n  baseUrl: 'http://www.google.com',\n  setting\n});\n\n// Get request with request-parameter dependency\nconst getPromise = request.send(JSONFile.GET, {\n  urlParams: { homeId: 1 },\n  queryParams: { offset: 0, limit: 100 },\n});\n\n// Also can use async - await to wait the promises\ngetPromise.then((response) => {\n  const statusCode = response.statusCode;\n  const body = response.body;\n\n  console.log(statusCode, ' ', body);\n});\n\n// Post request with request-parameter dependency\nconst postPromise = request.send(JSONFile.Post, {\n  body: { name: 'home view' }\n});\n\npostPromise.then((response) => {\n  const statusCode = response.statusCode;\n  const body = response.body;\n\n  console.log(statusCode, ' ', body);\n});\n\n// Note the URIs don't exist so the request return 404 status code.",
   "id": 130,
   "stars": 0,
   "errors": [
    2552
   ],
   "hasCode": true,
   "nondeletedLines": 28,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "$('li', 'ul', '<ul id=\"fruits\">...</ul>');",
   "id": 131,
   "stars": 0,
   "errors": [
    2592
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const speechToText = new SpeechToTextV1({\n/* authenticator, version, serviceUrl, etc... */\n});\nconst recognizeStream = recognizeUsingWebSocket(params);\n\n// getTransactionId returns a Promise that resolves to the ID\nrecognizeStream.getTransactionId().then(\n  globalTransactionId => console.log(globalTransactionId),\n  err => console.log(err),\n);",
   "id": 132,
   "stars": 0,
   "errors": [
    2552,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "yo axi-dtsi-gulp-angular [app-name]",
   "id": 133,
   "stars": 0,
   "errors": [
    1434,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "chance.month({country: 'de'})\n// 'Juli'",
   "id": 134,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const scope = nock('http://www.headdy.com')\n  .replyDate()\n  .get('/')\n  .reply(200, { hello: 'world' })",
   "id": 135,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//to create some new merge fields in your list\n//http://developer.mailchimp.com/documentation/mailchimp/reference/lists/merge-fields/\n\nmailchimp\n  .post('batches', {\n    operations : [\n      {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG1',\n          type : 'string'\n        })\n      }, {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG2',\n          type : 'string'\n        })\n      }, {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG3',\n          type : 'string'\n        })\n      }\n    ]\n  })\n  .then(function(result){\n    console.log(result);\n  })\n  .catch(function(error){\n    console.log(error);\n  });",
   "id": 136,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 33,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "log.bind(logger, levelName);",
   "id": 137,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const crypto = require('crypto');\nfunction verifySignature({\n  data,\n  signature,\n  publicKey\n}) {\n  // Verify that we signed correctly using public key\n  const verify = crypto.createVerify('RSA-SHA384');\n  verify.write(data);\n  verify.end();\n\n  // True if signature is verified\n  return verify.verify(publicKey, signature, 'base64');\n}",
   "id": 138,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": ".b-foo {\n  .bar {\n    …\n  }\n  \n  .qux {\n    …\n  }\n}",
   "id": 139,
   "stars": 0,
   "errors": [
    1128,
    2304,
    2304,
    1005,
    1128,
    1434,
    2304,
    1127,
    1128,
    1434,
    2304,
    1127
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export interface GoogleLocationDetailResult {\n  adr_address: string;\n  formatted_address: string;\n  icon: string;\n  id: string;\n  name: string;\n  place_id: string;\n  scope: string;\n  reference: string;\n  url: string;\n  utc_offset: number;\n  vicinity: string;\n  types: string[];\n  geometry: {\n    location: {\n      lat: number;\n      lng: number;\n    };\n    viewport: {\n      [type: string]: {\n        lat: number;\n        lng: number;\n      };\n    };\n  };\n  address_components: Array<{\n    long_name: string;\n    short_name: string;\n    types: string[];\n  }>;\n}",
   "id": 140,
   "stars": 0,
   "errors": [
    8006
   ],
   "hasCode": true,
   "nondeletedLines": 31,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "ImagePickerIOS.openCameraDialog({\n  showImages: true,\n  showVideos: false\n}, (imageUrl, height, width) => {\n  // success\n}, (error) => {\n  // cancel\n});",
   "id": 141,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "expect([button1, button2, button3]).to.be.verticallyAligned('top', 1.5);",
   "id": 142,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const hdl = require('hdl-js');\n\nconst {\n  emulator: {\n    Clock,\n    Pin,\n  },\n} = hdl;\n\nconst clock = new Clock({rate: 10, value: -5});\nconst pin = new Pin({name: 'a'});\n\n// Track clock events.\nclock.on('tick', value => pin.setValue(value));\n\nclock.tick();\n\nconsole.log(pin.getValue()); // +5;",
   "id": 143,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const App = () => {\n    return \n        <serviceList.ProvideAll>\n            // rest of the application\n        </serviceList.ProvideAll>\n    ;\n}",
   "id": 144,
   "stars": 0,
   "errors": [
    17004,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "getQueue(callback)",
   "id": 145,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n// Find the top 10 students who have taken a particular course\n// and earned a grade of at least 3:\n\nconst classes = {\n   Student: null,\n   Course: course\n}\n\nconst criteria = {\n  descending: 'grade',\n  greaterThanOrEqualTo: ['grade', 3],\n  limit: 10,\n  include: 'student'\n}\n\nconst joinObjs = await parsm.getJoinQuery(classes, criteria).find()\n\n// joinObjs is now an array of instances of the class 'Student2Course'\n// with details of students in the 'student' column.",
   "id": 146,
   "stars": 0,
   "errors": [
    2304,
    1375,
    1378,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "catalog\n    Promise\n        files\n            index.js — your polyfill\n\n        index.json\n        index.js",
   "id": 147,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    1127,
    1434,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//main.js\nimport BoxButton from 'box-components-button'\nVue.use(BoxButton)",
   "id": 148,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "ffmpeg('/path/to/file.avi').noVideo();",
   "id": 149,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const outStr = \"[{\\\"Root\\\":\\\"0x763f7f5e16506128824178bf2ee855e35a4b93689e8e54ed1e3d03177da09917\\\",\\\"State\\\":{\\\"Num\\\":345,\\\"OS\\\":{\\\"Index\\\":384,\\\"OutCM\\\":null,\\\"Out_O\\\":null,\\\"Out_Z\\\":{\\\"AssetCM\\\":\\\"0x5545b6d57ef6a35b124963daa0dee992da5243e31eb0d99d8f66d0f1a13e9012\\\",\\\"EInfo\\\":\\\"0x04fc0547da3590767317c3719f7b89516f7afb01037ca09cefc0bd75b4dccb95cfff665a0028069289960dcf07b69928e8d3da06ad0249ba7fd2c31505f5eef96db8741382f68be2e34210be409a84ae67be5c4687ddef64c13bba278d5fbea9d69f1a335585c8544a3b3eac8e7812041a01d95326f8da65e588784cc70c1b5a4b5dd7d0f5921007aef4043ac515cadc864ac206b2902a04022603566a437deb3100fdc04b88eb249746631447cf25964fb8f32fb4314455efbc1ea7520865f52aa762629ab8eed99e0a7918918dfe186188ddf61d7fb3d855a64d71ff5c9688\\\",\\\"OutCM\\\":\\\"0x5d3ba6999629152264618694968cd18a7a4c7790e2c213498e99209c564039ab\\\",\\\"PKr\\\":\\\"0xfaf5e31e63cf54a81cb494e57719abf9e2af71fb52720a4ad476ce78006ac0af202f0329828102356f29597815773200b75775b6837bf8592e20eb4df75e73a9c01a79af111451f7f38f4c2f79f03772a9e09b31d5c7bf2ab37808835362c4a0\\\",\\\"Proof\\\":\\\"0x02902bbd460a55b0dbaf4a96848d0b24ef5f2faab6409b3d68dc77f8f32a96a41d0a450a6076693fd6bef7e4466e6f0533e18905c8fc656741e7d1faf2ae298dba7edb87ab8b1293900e3fac4bd8e47a09b1ee02cf7770965bf990f60c53f57a3c08032dcc4023c7aa706f8fd35c68119caa73d15e8ca1ff35cc9e69fcdd8e46d5120c\\\",\\\"RPK\\\":\\\"0xb74e284e16cc77659690cee346076701a1040539ce84e6af71292f0acd5a906d\\\"},\\\"RootCM\\\":\\\"0xe495fe6b43813719352a6256e826dfae9d61d32b28ce1814e0b6a60b9cb05009\\\"},\\\"TxHash\\\":\\\"0x91a5cc04f6af1803bd8a523fcf23bc845c42552bb7d6d0a49e347ef5070ba274\\\"}}]\"\n\ntx.DecOut(\n  outStr,\n  keys.tk.ToBase58(),\n  (err, content) => {\n    if (err) {\n      console.error(err)\n    } else {\n      console.log(content)\n    }\n  }\n)",
   "id": 150,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Mongoose from 'mongoose';\n\nconst Test = new Mongoose.Schema({...\nexport  {tests:Test}",
   "id": 151,
   "stars": 0,
   "errors": [
    1109,
    1005,
    2448,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {any, boolean, number, string} from \"schemation\"\nimport {and, not, or}                 from \"schemation\"\nimport {where}                        from \"schemation\"\nimport {optional}                     from \"schemation\"\nimport {lazy}                         from \"schemation\"",
   "id": 152,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "freebase.search(\"doug\",{type: \"/ice_hockey/hockey_player\"})",
   "id": 153,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function inc(v) {\n  return v + 1;\n}\n\nfunction decr(v) {\n  return v - 1;\n}\n\nArrow(inc).next(Arrow(decr)).run(1) == Arrow.next(Arrow(inc), Arrow(decr)).run(1);",
   "id": 154,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "USAGE\n  $ dev-env export PROJECT\n\nARGUMENTS\n  PROJECT  project name\n\nOPTIONS\n  -d, --database  database\n  -h, --help      show CLI help",
   "id": 155,
   "stars": 0,
   "errors": [
    2304,
    1434,
    2592,
    2304,
    2304,
    1005,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "replace( \"java\" ).ignoringCase(); // => ReplaceDefinition",
   "id": 156,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "console.log(arrayTransformer.stringToArray(db.get('newArray')))",
   "id": 157,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "agenda.on('success:send email', function(job) {\n  console.log(\"Sent Email Successfully to: %s\", job.attrs.data.to);\n});",
   "id": 158,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "errorCB(err) {\n  console.log(\"SQL Error: \" + err);\n},\n\nsuccessCB() {\n  console.log(\"SQL executed fine\");\n},\n\nopenCB() {\n  console.log(\"Database OPENED\");\n},\n\nvar db = SQLite.openDatabase(\"test.db\", \"1.0\", \"Test Database\", 200000, openCB, errorCB);\ndb.transaction((tx) => {\n  tx.executeSql('SELECT * FROM Employees a, Departments b WHERE a.department = b.department_id', [], (tx, results) => {\n      console.log(\"Query completed\");\n\n      // Get rows with Web SQL Database spec compliance.\n\n      var len = results.rows.length;\n      for (let i = 0; i < len; i++) {\n        let row = results.rows.item(i);\n        console.log(`Employee name: ${row.name}, Dept Name: ${row.deptName}`);\n      }\n\n      // Alternatively, you can use the non-standard raw method.\n\n      /*\n        let rows = results.rows.raw(); // shallow copy of rows Array\n\n        rows.map(row => console.log(`Employee name: ${row.name}, Dept Name: ${row.deptName}`));\n      */\n    });\n});",
   "id": 159,
   "stars": 0,
   "errors": [
    2552,
    2304,
    1005,
    2304,
    1128,
    2304,
    1005,
    1128,
    2304,
    1005,
    1128,
    2304,
    2304,
    2552
   ],
   "hasCode": true,
   "nondeletedLines": 24,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {Screen} from 'geoeye-js'\n\nconst screen = new Screen({\n  config: './config.json', \n  container: 'container'\n});",
   "id": 160,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var userMetric = metric.instance();\nuserMetric.start('metric');\n....\nuserMetric.end('metric');",
   "id": 161,
   "stars": 0,
   "errors": [
    2304,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var level = require('level-hyper')\nvar Snapshot = require('level-snapshot')\n\nvar db = level('./db')\nvar snapshot = Snapshot(db)\n\nsnapshot.on('snapshot:complete', function (snapshotName) {\n  console.log('took snapshot', snapshotName)\n})\n\nsnapshot.start()",
   "id": 162,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import duration from 'callbag-duration-progress'\nimport forEach from 'callbag-for-each'\nimport map from 'callbag-map'\nimport pipe from 'callbag-pipe'\n\nconst distance = d => t => t * d\n\nconst easeOut = p => 1 - (1 - p) * (1 - p)\n\nconst moveBall = (ball, easing) => {\n  pipe(\n    duration(1000),\n    map(easing),\n    map(distance(400)),\n    forEach(y => {\n      ball.style.transform = `translate3d(0, ${y}px, 0)`\n    }),\n  )\n}\n\nmoveBall(document.getElementById('ball'), easeOut)",
   "id": 163,
   "stars": 0,
   "errors": [
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const putout = require('putout');",
   "id": 164,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "git clone https://github.com/provable-things/ptokens.js.git",
   "id": 165,
   "stars": 0,
   "errors": [
    1434,
    2304,
    1434,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import CryptoAesCbc from 'react-native-crypto-aes-cbc';\n\nkey = \"XXXXX\" // in base64 format\niv = \"XXXX\"   // in base 64 format\nkeysize128 = \"128\" \nkeysize256 = \"256\"\ntext = \"Sachin Agrawal\"\n\n  CryptoAesCbc.encryptInHex(iv,key,\"sachin agrawal\",\"128\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.encryptInBase64(iv,key,\"sachin agrawal\",\"128\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.encryptInHex(iv,key256,\"sachin agrawal\",\"256\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.encryptInBase64(iv,key256,\"sachin agrawal\",\"256\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.decryptByBase64(iv,key,\"ZN+DBxlPG+2lmWx6Bu7bqA==\",\"128\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByHex(iv,key,\"64df8307194f1beda5996c7a06eedba8\",\"128\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByBase64(iv,key256,\"Re3CIB8H3wYkUdl/l6WGGw==\",\"256\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByHex(iv,key256,\"45edc2201f07df062451d97f97a5861b\",\"256\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.sha256(\"sachin\",(hashKey) => {\n    console.log(hashKey)\n  })",
   "id": 166,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 33,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var sorting = require('postcss-sorting')\n\npostcss([\n  sorting({ 'sort-order': require('cssortie') })\n]))",
   "id": 167,
   "stars": 0,
   "errors": [
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Kick off the handshake with the iFrame\nconst handshake = new SecurePostmate({\n  container: document.getElementById('some-div'), // Element to inject frame into\n  url: 'http://child.com/page.html'\n});\n\n// When parent <-> child handshake is complete, data may be requested from the child\nhandshake.then(child => {\n\n  // Fetch the height property in child.html and set it to the iFrames height\n  child.get('height')\n    .then(height => child.frame.style.height = `${height}px`);\n\n  // Listen to a particular event from the child\n  child.on('some-event', data => console.log(data)); // Logs \"Hello, World!\"\n});",
   "id": 168,
   "stars": 0,
   "errors": [
    2304,
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<collection instance>.find({<query key>: {$in: [<query value>]}}, ...)",
   "id": 169,
   "stars": 0,
   "errors": [
    17004,
    17008,
    17004,
    17008,
    2304,
    1005,
    17004,
    17008,
    1381,
    1381,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var rand = require('random-pro');\nconsole.log(rand.generateEvenNumber(10,100));\n// 96\nconsole.log(rand.generateEvenNumber(10,30));\n// 22",
   "id": 170,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const client = require(\"badonker\");\nconst honker = new client();\n\nasync function test() {\n  console.log(await honker.bulknsfw.booty());\n}\n\ntest();",
   "id": 171,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// select the right Ad Id according to platform\n  var admobid = {};\n  if( /(android)/i.test(navigator.userAgent) ) { // for android & amazon-fireos\n    admobid = {\n      banner: 'ca-app-pub-xxx/xxx', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/yyy'\n    };\n  } else if(/(ipod|iphone|ipad)/i.test(navigator.userAgent)) { // for ios\n    admobid = {\n      banner: 'ca-app-pub-xxx/zzz', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/kkk'\n    };\n  } else { // for windows phone\n    admobid = {\n      banner: 'ca-app-pub-xxx/zzz', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/kkk'\n    };\n  }",
   "id": 172,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "let counter = 0;\n\nconst increment = anticipatedCall(() => {\n  counter = counter + 1;\n});\n\nincrement\n  .nthCallDuring(3, () => {\n    counter = 5;\n    increment();\n    increment();\n    increment();\n  })\n  .then(() => console.log(`counter value is ${counter}`));\n// Prints `counter value is 8`",
   "id": 173,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {Handler} from 'handleable';\n\nlet h = new Handler();\n\nlet e = await h.handle(\n  new Error('unhandled error'), // error instance\n  [ // list of handler recipes\n    {\n      handler: 'block', // handler name\n      message: '%{foo} unhandled error', // optional handler error message\n      block: async () => true // handler-specific property,\n      foo: 'bar' // custom variable for the message\n    },\n    {\n      handler: 'mongoUniqueness', // handler name\n      message: 'already taken', // optional handler error message\n      indexName: 'uniqueEmail' // handler-specific property\n    }\n  ]\n); // -> a list of errors",
   "id": 174,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "connect({host: 'mqtt.test.io', ssl: true, path: '/mqtt'})\n  .then(client => { ... })\n\n// or\nconnect('wss://mqtt.test.io/mqtt')\n  .then(client => { ... })",
   "id": 175,
   "stars": 0,
   "errors": [
    2304,
    1128,
    1109,
    2304,
    1128,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  const handler = wrapper({\n      url: 'http://example.com/endpoint',\n      endpoint: '/endpoint',\n      auth: 'auth',\n      headers: 'headers',\n      method: 'method',\n      path_params: 'path_param',\n      query_params: 'query_param',\n      required_fields: 'required_fields',\n      request_map: 'request_map',\n      response_map: 'response_map',\n      transform_response: 'transform_response'      \n  });",
   "id": 176,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Select = require('react-select-plus');\n\nvar isLoadingExternally = true;\n\n<Select\n  name=\"form-field-name\"\n    isLoading={isLoadingExternally}\n    ...\n/>",
   "id": 177,
   "stars": 0,
   "errors": [
    17004,
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "> pipep([\n    function(a) { return Promise.resolve(a + 3); },\n    function(b) { return Promise.resolve(b * 10); },\n  ])(6);\npromise\n90",
   "id": 178,
   "stars": 0,
   "errors": [
    1109,
    2304,
    2552
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var json = {\"hey\": \"guy\",\"anumber\": 243,\"anobject\": {\"whoa\": \"nuts\",\"anarray\": [1,2,\"thr<h1>ee\"], \"more\":\"stuff\"},\"awesome\": true,\"bogus\": false,\"meaning\": null, \"japanese\":\"明日がある。\", \"link\": \"http://jsonview.com\", \"notLink\": \"http://jsonview.com is great\"};\n\n$(function() {\n  $(\"#json\").JSONView(json);\n  // with options\n  $(\"#json-collasped\").JSONView(json, { collapsed: true });\n});",
   "id": 179,
   "stars": 0,
   "errors": [
    2592,
    2592,
    2592
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "runIt(args, [options]);",
   "id": 180,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<p-accordion>\n    <p-accordionTab header=\"Header 1\">\n       Content 1\n    </p-accordionTab>\n    <p-accordionTab header=\"Header 2\">\n        Content 2\n    </p-accordionTab>\n    <p-accordionTab header=\"Header 3\">\n        Content 3    \n    </p-accordionTab>\n</p-accordion>",
   "id": 181,
   "stars": 0,
   "errors": [
    17004,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "rcon.init('fsrcon/init')\n  .then(\n    // resolved\n    function () {\n      ..\n    },  \n    // rejected\n    function (err) {\n      ..\n    }\n  );",
   "id": 182,
   "stars": 0,
   "errors": [
    2304,
    1128,
    1128,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'view-design/dist/styles/iview.css';",
   "id": 183,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {render, html} from '//unpkg.com/lighterhtml?module';\n\ndocument.body.appendChild(\n  // as unkeyed one-off content, right away 🎉\n  html.node`<strong>any</strong> one-off content!<div/>`\n);\n\n// as automatically rendered wired content 🤯\ntodo(document.body.lastChild);\nfunction todo(node, items = []) {\n  render(node, html`\n  <ul>${\n  items.map((what, i) => html`\n    <li data-i=${i} onclick=${remove}> ${what} </li>`)\n  }</ul>\n  <button onclick=${add}> add </button>`);\n  function add() {\n    items.push(prompt('do'));\n    todo(node, items);\n  }\n  function remove(e) {\n    items.splice(e.currentTarget.dataset.i, 1);\n    todo(node, items);\n  }\n}",
   "id": 184,
   "stars": 0,
   "errors": [
    2584,
    2584,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 21,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Fetch from 'rd-fetch';\n\nFetch.json('https://example.com/api')\n  .then((response) => {\n    console.log(response.json);\n  })\n  .catch((error) => {\n    console.log(error.json);\n  });",
   "id": 185,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var $DOM = require( \"mock-dom-resources\" );\n\n// ..",
   "id": 186,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Schema.plugin(\n  mongooseHidden,\n  {\n    hidden: {\n      ...omitCommonFields.underscored.objTrue,\n      some_other_field: true,\n      another_field_to_ignore: true\n    }\n  }\n);",
   "id": 187,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Accordion from \"@beisen/accordion\"\n",
   "id": 188,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<script src=\"rstate.min.js\"></script>",
   "id": 189,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "    <Extension Géoportail pour iTowns>/\n        GpPluginItowns.js\n            (version minifiée du code javascript pour une utilisation en production)\n        GpPluginItowns.css\n            (version minifiée des css pour une utilisation en production)\n        GpPluginItowns-src.js\n            (version non minifiée du code javascript pour une utilisation en développement)\n        GpPluginItowns-src.css\n            (version non minifiée des css pour une utilisation en développement)",
   "id": 190,
   "stars": 0,
   "errors": [
    17004,
    2304,
    17008,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mixtool = require('mix-h5');\n\n\n// 统计（百度，cnzz）\nvar tracking = mixtool.tracking;\n// init tracking\ntracking.add('baidu', 'xxxxxx'); // baidu site id\ntracking.add('cnzz', 'xxxxxx'); // cnzz site id\n\n\nsetTimeout(function() {\n    tracking.log('loaded');\n}, 1000);\n\n\n// 图片预加载\nvar imgLoader = mixtool.imgLoader;\n// over: preload over, count: loaded image length, length: preload image total length\n// map: loaded image name, percent: count/length, fakePercent: fake percent\nimgLoader.preloadImg(function(over, count, length, map, percent, fakePercent) {\n    if(over && 100 == percent) {\n        // todo\n    } else {\n        console.log(percent);\n    }\n}, {\n    selector: 'xxx', // 预加载图片地址筛选器, default: '.image-resource-wrap span, img.image-resource'\n    fakeTime: xxx, // 模拟加载时间, default: 2000\n    fakePercent: xxx // 模拟加载百分比, default: 50\n});\n// get preload image\nimgLoader.get('images/logo.png'); // 返回带版本号的图片地址，如果有cdn前缀就返回前缀，该方法必须要在preloadImg方法执行之后才能调用\n\n\n// 设置微信分享内容\nvar wxtool = mixtool.wx;\nwxtool.setShare({\n    title: 'xxx', // 分享标题\n    link: 'xxx', // 分享链接\n    img: 'xxx', // 分享图片\n    desc: 'xxx', // 分享描述\n    shareLog: {\n        openid: 'xxx', // 用户微信openid\n        nickname: 'xxx', // 用户昵称\n        ...: 'xxx' // 头像等其他用户信息\n    }, // 分享统计\n    success: function() {...}, // 分享成功回调函数\n    fail: function() {...} // 分享失败回调函数\n});\n\n\n// 微信支付\nvar wxtool = mixtool.wx;\nwxtool.pay({\n    openid: 'xxx', // 用户openId\n    product_id: 'xxx', // 商品ID\n    body: 'xxx', // 商品描述\n    total_fee: 'xxx', // 总金额\n    detail: 'xxx', // 商品详情\n    attach: 'xxx', // 附加数据\n    out_trade_no: 'xxx', // 商户订单号\n    success: function() {...}, // 支付成功回调函数\n    fail: function() {...} // 支付失败回调函数\n});\n\n\n// 注：上述微信分享和微信支付功能默认配置的是逆行信息科技公众号的appId，在其它公众号项目中使用这些微信功能，需要先执行initWXSDK方法传入相应的appid：\nwxtool.init({\n    appId: 'xxxxxx', // appid  页面域名需要与公众号中设置的回调一致\n    sdkUrl: '//res.wx.qq.com/open/js/jweixin-1.1.0.js', // 微信js sdk地址\n    siteSignApi: 'http://jishub.com/api/siteSign', // 签名接口\n    sitePayApi: 'http://jishub.com/api/sitePay', // 微信支付统一下单\n    jsApiList: [ // 开启的js接口：定制分享内容支付\n        'onMenuShareTimeline',\n        'onMenuShareAppMessage',\n        'chooseWXPay'\n    ],\n    initFail: function () { // 初始化失败\n        console.log('wx init fail');\n    },\n    initDone: function () { // 初始化成功\n        console.log('wx init done');\n    },\n    debug: false // debug模式\n}, function () {\n    // 初始化成功回调\n});\n\n\n// 监测手机横竖屏(限制横屏)\nmixtool.landscape({\n    'pic': 'xxx', // 提示图片\n    'text': '为了更好的体验，请将手机/平板竖过来', // 提示文字\n    'bgcolor': '#32373b', // 遮罩背景色\n    'txtColor': '#ffd40a', // 遮罩字颜色\n    'prefix': 'MixShine', // 遮罩class样式名 prefix + '_landscape'\n    'zIndex': 10000, // 遮罩z-index值\n    'init': false // 监测初始化后回调\n}, function() {\n    // 横屏回调\n}, function () {\n    // 竖屏回调\n});\n\n\n// 监测手机横竖屏(手动控制限制横屏还是竖屏)使用new关键字创建限制实例\nvar restrict = new mixtool.landscape({\n    'manual': true, // 手动控制时必须设为true\n    'pic': 'xxx', // 提示图片\n    'text': '为了更好的体验，请将手机/平板竖过来', // 限制横屏时的提示文字\n    'vetiText': '为了更好的体验，请将手机/平板横过来', // 限制竖屏时的提示文字\n    'bgcolor': '#32373b', // 遮罩背景色\n    'txtColor': '#ffd40a', // 遮罩字颜色\n    'prefix': 'MixShine', // 遮罩class样式��� prefix + '_landscape'\n    'zIndex': 10000, // 遮罩z-index值\n    'init': false // 监测初始化后回调\n}, function() {\n    // 横屏回调\n}, function () {\n    // 竖屏回调\n});\nrestrict.restrictLand(); // 限制横屏\nrestrict.restrictVeti(); // 限制竖屏\nrestrict.noRestrict(); // 无限制\nrestrict.restrictAll(); // 横屏竖屏都限制\n\n\n\n// util工具集\nvar util = mixtool.util;\n\nutil.loadScript // 加载js\nutil.loadImage // 加载图片\nutil.nextFrame // requestAnimationFrame或者setTimeout fallback\nutil.cancelFrame // cancelRequestAnimationFrame或者clearTimeout fallback\nutil.setCssPrefix // 根据浏览器设置css前缀\nutil.styleVender // 根据浏览器获取css前缀\nutil.browser // 浏览器内核判断 ex: util.browser.versions.ios\nutil.isFunction\nutil.isString\nutil.isArray\nutil.getElement // 根据输入内容返回DOM元素，传入字符串就作为DOM的id，传入DOM元素返回本身\nutil.getOffset // 根据输入内容返回DOM元素，传入字符串就作为DOM的id，传入DOM元素相对给定相对元素或body左上角的偏移量\nutil.extend // 将源对象的所有属性拷贝到目标对象中\nutil.genNonceStr // 获取随机数\nutil.setCookie\nutil.getCookie\nutil.getUrlQuery // 读取url上带的参数\nutil.buildUrlQuery // 拼接url参数",
   "id": 191,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1109,
    1005,
    1128,
    1109,
    2304,
    1005,
    1128,
    1109,
    1135,
    1128,
    1109,
    2304,
    1005,
    1128,
    1109,
    1135
   ],
   "hasCode": true,
   "nondeletedLines": 111,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/**\n   * wechatConfig 配置信息\n   * \n   * @param appid 应用唯一标识，在微信开放平台提交应用审核通过后获得\n   * @param redirectUri 重定向地址，需要进行UrlEncode\n   * @param scope 应用授权作用域，拥有多个作用域用逗号（,）分隔，网页应用目前仅填写snsapi_login即可\n   * @param loginType 默认 jssdk\n   * @param style     提供\"black\"、\"white\"可选，默认为黑色文字描述。详见文档底部FAQ\n   * @param href 自定义样式链接，第三方可根据实际需求覆盖默认样式。详见文档底部FAQ\n   * @param state 用于保持请求和回调的状态，授权请求后原样带回给第三方。该参数可用于防止csrf攻击（跨站请求伪造攻击），建议第三方带上该参数，可设置为简单的随机数加session进行校验\n   * @param selfRedirect true：手机点击确认登录后可以在 iframe 内跳转到 redirect_uri，false：手机点击确认登录后可以在 top window 跳转到 redirect_uri。默认为 false。\n*/\n\nimport { DWWeChatLoginConfig } from 'angular-daiwei-wechat-login';\n\n@Component({\n  ...\n  template: `<dw-wechat-login [width]=\"'300px'\" [height]=\"'410px'\" [config]=\"weChatConfig\">\n            </dw-wechat-login>`\n})\nexport class AppComponent {\n\n  wechatConfig: DWWeChatLoginConfig = {\n    appid: 'wxbdc5610cc59c1631',\n    redirectUri: 'https%3A%2F%2Fpassport.yhd.com%2Fwechat%2Fcallback.do',\n    state: '3d6be0a4035d839573b04816624a415e',\n  };\n\n  constructor() {}\n}\n",
   "id": 192,
   "stars": 0,
   "errors": [
    2552,
    2304,
    1005,
    1136,
    1005,
    1219,
    8010
   ],
   "hasCode": true,
   "nondeletedLines": 26,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" />\n<link rel=\"stylesheet\" href=\"dist/leaflet-push-content-control.css\" />",
   "id": 193,
   "stars": 0,
   "errors": [
    17004,
    2657,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CrudWrapper = require('mrs-node-util').crud;",
   "id": 194,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "await mongooseQueue.reset()\nconsole.log('The queue was completely purged of all jobs.')",
   "id": 195,
   "stars": 0,
   "errors": [
    1375,
    1378,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Route('/home', HomeComponent)\n    .meta({\n        title: 'Home',\n        icon: 'fa-home'\n    });\n\n// Output\n{\n    path: '/home',\n    component: HomeComponent,\n    meta: {\n        title: 'Home',\n        icon: 'fa-home'\n    }\n}",
   "id": 196,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2695,
    2304,
    1005,
    2304,
    2695,
    2304,
    1005,
    2695,
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "MP.Memberships.get('/some/future/url', myAccessToken)\n  .then(function (data) {\n    console.log(\"You got the data:\", data);\n  });",
   "id": 197,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// constructor\ninterface CurrencyFormatterProps {\n  locales: string | string[],\n  minimumIntegerDigits?: number,\n  precision?: number,\n  useGrouping?: boolean,\n  localeMatcher?: 'lookup' | 'best fit',\n  formatter?: typeof CurrencyFormatter.formatter,\n\n  style?: 'decimal' | 'currency' | 'percent',\n  currency?: string,\n  currencyDisplay?: 'symbol' | 'code' | 'name',\n}\n\n//options of format\ninterface optionsofformat {\n  minimumIntegerDigits?: number,\n  precision?: number,\n  useGrouping?: boolean,\n  localeMatcher?: 'lookup' | 'best fit',\n\n  style?: 'decimal' | 'currency' | 'percent',\n  currency?: string,\n  currencyDisplay?: 'symbol' | 'code' | 'name',\n}",
   "id": 198,
   "stars": 0,
   "errors": [
    8006,
    2304,
    8006
   ],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "☁ ~ cat Garden.js\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst GardenStyle = styled.div`\n  opacity: 1\n`\n\nconst Garden = props => (\n  <GardenStyle>Hello {props.text}</GardenStyle>\n)\n\nexport default Garden",
   "id": 199,
   "stars": 0,
   "errors": [
    1127,
    2304,
    1005,
    2448,
    2339,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "#!/usr/bin/env node\n\nvar husk = require('..').exec();\n\nhusk()\n  .whoami(function(code, signal) {\n    console.log('[code: %s, signal: %s]', code, signal);\n  })\n  .once('end', console.log.bind(null, '%s'))\n  .print()\n  .run();",
   "id": 200,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/* Predicate fn */\nfind(\n  item => item.id === 1,\n  todos\n)\n// => {id: 1, name: \"lorem\", tagId: 2}\n\n/* Matching object */\nfindWith(\n  {\n    \"id\": 1\n  },\n  todos\n)\n// => {id: 1, name: \"lorem\", tagId: 2}\n\n/* Matching object & predicate fn */\nfilterWith(\n  {\n    \"tagId\": is // same as `tagId: source => is(source)`\n  },\n  todos\n)\n// => [{id: 1, name: \"lorem\", tagId: 2}]\n\n/* Syntactic sugar */\nfilterWith(\n  {\n    \"!tagId\": is // same as `tagId: not(is)`\n  },\n  todos\n)\n// => [\n//  {id: 2, name: \"ipsum\", tagId: null},\n//  {id: 3, name: \"dolor\", tagId: null}\n// ]",
   "id": 201,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 26,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const htmlStream = require('web-html-stream');\n\n/**\n * @param {object} node, a DOM node like object.\n * @return {object} Anything really; return values are accumulated in an\n *   array.\n */\nfunction handler(node, ctx) {\n    // Do something with the node\n    return node;\n}\n\nconst testDoc = \"<html><body><div>\"\n        + \"<test-element foo='bar'>foo</test-element>\"\n        + \"</div></body>\";\n\nconst inputStream = new ReadableStream({\n    start(controller) {\n        controller.enqueue(testDoc);\n        controller.close();\n    }\n});\n\n// Create a matcher to handle some elements, using CSS syntax. To avoid\n// shipping a CSS parser to clients, CSS selectors are only supported in node.\nvar reader = new htmlStream.HTMLTransformReader(inputStream, {\n    transforms: [\n        { selector: 'test-element[foo=\"bar\"]', handler: handler },\n        { selector: 'foo-bar', handler: handler },\n    ],\n    ctx: { hello: 'world' }\n});\n\n// Create the same matcher using more verbose selector objects. These are\n// especially useful when processing dynamic values, as this avoids the need to\n// escape special chars in CSS selectors.\nreader = new htmlStream.HTMLTransformReader(inputStream, {\n    transforms: [{\n        selector: {\n            nodeName: 'test-element',\n            attributes: [['foo', '=', 'bar']]\n        },\n        handler: handler,\n        // Optional: Request node.innerHTML / outerHTML as `ReadableStream`\n        // instances. Only available in rule objects.\n        stream: false\n    }],\n    ctx: { hello: 'world' }\n});\n\n// Read matches\nreader.read()\n.then(res => {\n    console.log(res);\n    return reader.read();\n})\n// {\n//   done: false,\n//   value: [\n//     \"<html><body><div>\",\n//     {\n//       \"nodeName\": \"test-element\",\n//       \"attributes\": {\n//         \"foo\": \"bar\"\n//       },\n//       \"outerHTML\": \"<test-element foo='bar'>foo</test-element>\",\n//       \"innerHTML\": \"foo\"\n//     },\n//     \"</div></body>\"\n//   ]\n// }\n.then(res => console.log);\n// { done: true, value: undefined }",
   "id": 202,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 42,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// here is our parent conductor\nvar parentConductor = rc.createConductor({\n    name: 'parent',\n    props: function() {\n        return {\n            count: 0,\n            candies: [ 'twix', 'snickers', 'kit kat' ]\n        };\n    }\n});\n\n// now we inherit by specifying a deps config\nvar childConductor = rc.createConductor({\n    name: 'child',\n    deps: [ parentConductor ],\n    props: function(inheritedProps) {\n        // children conductor are provided with the parent props.\n        // you can choose to mutate this object for the child conductor.\n\n        // note that mutating inheritedProps does NOT affect the parent\n        // conductor's props!\n        inheritedProps.count += 1;\n        inheritedProps.candies = inheritedProps.candies.concat('butterfinger');\n\n        // like the parent conductor, this returned value will become immutable\n        return inheritedProps;\n    },\n    handlers: [\n        function render(req, res, next) {\n            var props = rc.getProps(req);\n\n            res.render(props, next);\n            // => will render:\n            // {\n            //      count: 1,\n            //      candies: [ 'twix', 'snickers', 'kit kat', 'butterfinger' ]\n            // }\n        }\n    ]\n});",
   "id": 203,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 24,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  ...\n  height: '50%-1',\n  left: '45%+1',\n  ...",
   "id": 204,
   "stars": 0,
   "errors": [
    1128,
    2695,
    2304,
    1005,
    2695,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "proxyList.getByCountryCode('FR')\n          .then(function (proxies) {\n            // get proxies here\n          })\n          .catch(function (error) {\n            throw new Error(error);\n          });",
   "id": 205,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/*** Add company table, insert some data and connect with user table ***/\n\nCREATE TABLE \"company\"\n(\n   id serial,\n   company_name character(20) NOT NULL,\n   CONSTRAINT pk_company PRIMARY KEY (id),\n   CONSTRAINT uk_company UNIQUE (company_name)\n)\nWITH (\n  OIDS = FALSE\n);\n\nINSERT INTO \"company\"(company_name)\n    VALUES ('Company 1');\n\nALTER TABLE \"user\"\n  ADD COLUMN company_id integer;\n\nUPDATE \"user\" SET company_id = 1;\n\nALTER TABLE \"user\"\n   ALTER COLUMN company_id SET NOT NULL;\n\nALTER TABLE \"user\"\n  ADD CONSTRAINT fk_user FOREIGN KEY (company_id) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE NO ACTION;\n",
   "id": 206,
   "stars": 0,
   "errors": [
    1434,
    2304,
    1434,
    2304,
    2349,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    2349,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2304,
    1005,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1435,
    2304,
    1434,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1435,
    2304,
    1434,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var csgotm = require('node-csgotm-api');\nvar api = new csgotm.API(options);",
   "id": 207,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "listening\nclient connected\nargs: arg1,arg2\nbody: Hello World!",
   "id": 208,
   "stars": 0,
   "errors": [
    2304,
    1434,
    2304,
    2304,
    2304,
    2695,
    2304,
    1434,
    2304,
    2304,
    8013
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {makeDispatcher} from \"robojs\"\nvar myNewEventDispatcher=makeDispatcher();",
   "id": 209,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "swangular.success(\"Great job!\");",
   "id": 210,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "sudo yum install clamav",
   "id": 211,
   "stars": 0,
   "errors": [
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "If in Player A's simulation the character just dodged the bullet in time, but in Player B's simulation the character didn't dodge that same bullet in time - strictly due to fuzziness - our two simulations are no longer in sync and we aren't sharing a game state any longer. We call this non-deterministic physics.",
   "id": 212,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2693,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n    var contentType = 'Content-Type';\n    var body = new CreatenewUpdatePropertyManagerRequest({\"key\":\"value\"});\n\n    controller.createnewPropertyManager(contentType, body, function(error, response, context) {\n\n    \n    });",
   "id": 213,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "client.summarization(\"<Your text to summarize>\")",
   "id": 214,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<Mark wrap=\"span\">*text*</Mark>",
   "id": 215,
   "stars": 0,
   "errors": [
    17004,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const renderer = templateEngine.render(string[, parameters, style]);",
   "id": 216,
   "stars": 0,
   "errors": [
    2304,
    2693,
    2695,
    1109,
    2695,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "form.on('field', (name, value) => {});",
   "id": 217,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "onvif-ptz goto-home\n\nMove the camera to the home position.\n\nOptions:\n  --help          Show help  [boolean]\n  --version       Show version number  [boolean]\n  --baseUrl       The baseUrl of the camera.  [string] [required]\n  --path          The onvif path of the camera.  [string] [default: \"/onvif/device_service\"]\n  --username, -u  The username of the camera.  [string] [required]\n  --password, -p  The password of the camera.  [string] [required]",
   "id": 218,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1005,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    2693,
    2304,
    1005,
    2304,
    1434,
    2304,
    2693,
    2693,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    2693,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    2693,
    1109,
    1128,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    2693,
    2304,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    2693,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "pusudb.use('ws', function(req, socket, next){\n    console.log(req.headers) \n    console.log(req.params) // URL params\n    console.log(req.body) // Body-Data\n    console.log(req.docs) // Result sending to client \n    next()\n})",
   "id": 219,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Cookies from \"ts-cookies\";",
   "id": 220,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var LayerWebhooks = require('layer-webhooks');\n\n// Initialize by providing your Layer credentials\nvar layer = new LayerWebhooks({\n  token: API_TOKEN,\n  appId: APP_ID\n});\n\n// Register a webhook\nlayer.webhooks.register({\n  events: ['message.sent'],\n  url: 'https://mydomain.com/mywebhooks/messages-sent',\n  secret: 'Frodo is a Dodo',\n  config: {\n    name: 'My sample webhook'\n  }\n}, function(err, res) {\n  if (err) return console.error(err);\n\n  // Webhook registered\n});",
   "id": 221,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function App() {\n  return (\n    <Auth\n      loginCall={loginCall}\n      meCall={meCall}\n      storageBackend={storageBackend}\n      storageNamespace='my-auth'\n      render={(authActions, authState, userState) => /* render my children */}\n    />\n  )\n}",
   "id": 222,
   "stars": 0,
   "errors": [
    17004,
    2304,
    2304,
    2304,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "HOST=mypublicdevhost.com",
   "id": 223,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import VuePictureCut from 'vue-picture-cut';\nVue.use(VuePictureCut);",
   "id": 224,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<iconly name=\"activity\" type=\"bold\" />\n<iconly name=\"activity\" type=\"bulk\" />\n<iconly name=\"activity\" type=\"light\" />\n<iconly name=\"activity\" type=\"outline\" />\n<iconly name=\"activity\" type=\"broken\" />\n<iconly name=\"activity\" type=\"tone\" />",
   "id": 225,
   "stars": 0,
   "errors": [
    17004,
    2657,
    17004,
    17004,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nfunction transferTokens(sender, to, amount) {\n  const web3 = new Web3();\n  const TokenContract = web3.eth.contract(Token.abi).at(Token.address);\n  const data = TokenContract.transfer.getData(to, amount);\n  const options = { data, from: sender, to: Token.address };\n  return Transaction({ options });\n}\n\nconst tx = transferTokens(\n  '0xe8d3266f3c4f083ab8864b5e04aea7b087044e49',\n  '0x7967c4f4512195ba83ae8f08ca30f7b145be6cf8',\n  1000000\n);\n\nconst txhash = await tx.transact(provider);",
   "id": 226,
   "stars": 0,
   "errors": [
    2552,
    2304,
    2304,
    2304,
    2304,
    1375,
    1378,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { createLogger } = require('@livy/logger')\n\nconst logger = createLogger('my-app-logger', {\n  mode: 'async'\n})",
   "id": 227,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nvar Yobit = require('yobit-exchange-api');\nvar VersionTwo = require('yobit-exchange-api/lib/version_two');\nvar Trade = require('yobit-exchange-api/lib/trade');\n\nvar keys = {key: '', secret: ''}\nvar yobit = new Yobit(keys)\nvar version2 = new VersionTwo(keys);\nvar trade = new Trade(keys);\n\ntrade.getInfo(function(err, data) {\n  console.log(data);\n})\n\nversion2.ticker('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nversion2.depth('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nversion2.trades('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nyobit.fee(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.ticker(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.depth(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.trades(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.info(function(err, data) {\n  console.log(data);\n})\n",
   "id": 228,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 34,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<AllDocs db=\"dbname\" include_docs ... />",
   "id": 229,
   "stars": 0,
   "errors": [
    17004,
    2304,
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "gauge1:+3\n - tag1:v1\n - tag2:v2",
   "id": 230,
   "stars": 0,
   "errors": [
    2304,
    1005,
    2304,
    2304,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const AssetsQueryOptions = require('drequest-maxdome').AssetsQueryOptions;\n\nconst assetId = <assetId>;\nconst assetsQueryOptions = new AssetsQueryOptions(assetId);\n\nconst assets =\n  await maxdome.request('assets')\n    .addOptions(assetsQueryOptions)\n    .send();",
   "id": 231,
   "stars": 0,
   "errors": [
    17004,
    17008,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {\n  isMobile,\n  isSmall,\n  isTablet,\n  isDesktop\n} from \"@times-stories/style-guide/helpers\";\n\nisMobile(); // Boolean\nisSmall(); // Boolean\nisTablet(); // Boolean\nisDesktop(); // Boolean",
   "id": 232,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/**\n* @param  {String}  language        Language identifier\n* @param  {String}  modelsString    Array with speakers-voice models-(optional)defaultStyle correspondence (e.g. '[[\"speaker1\",\"model1\",\"style1\"],[\"speaker2\",\"model2\"]]')\n* @param  {String}  vttText         Subtitle text, in VTT format\n* @param  {Number[]}    selectedSentences   Array with indexes of sentences to be synthesized\n* @return {String}                  JSON-formatted string for synthesis\n*/",
   "id": 233,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "exlog.error(new Error());",
   "id": 234,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {\n  EpubView, // Underlaying epub-canvas (wrapper for epub.js iframe)\n  EpubViewStyle, // Styles for EpubView, you can pass it to the instance as a style prop for customize it\n  ReactReader, // A simple epub-reader with left/right button and chapter navigation\n  ReactReaderStyle // Styles for the epub-reader it you need to customize it\n} from \"react-reader\";",
   "id": 235,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// {app_root}/config/plugin.js\nexports.cuteLogger = {\n  enable: true,\n  package: 'egg-cute-logger',\n};",
   "id": 236,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const asyncIteratorToStream = require(\"async-iterator-to-stream\");\n\n// promisified fs\nconst fs = require(\"mz/fs\");\n\nconst createReadStream = asyncIteratorToStream(async function*(file) {\n  const fd = await fs.open(file, \"r\");\n  try {\n    let size = yield;\n    while (true) {\n      const buf = Buffer.alloc(size);\n      const [n] = await fs.read(fd, buf, 0, size, null);\n      if (n < size) {\n        yield buf.slice(0, n);\n        return;\n      }\n      size = yield buf;\n    }\n  } finally {\n    await fs.close(fd);\n  }\n});\n\ncreateReadStream(\"foo.txt\").pipe(process.stdout);",
   "id": 237,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "좌절\n아아아아",
   "id": 238,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const jwksClient = require('jwks-rsa');\n\nconst client = jwksClient({\n  rateLimit: true,\n  jwksRequestsPerMinute: 10, // Default value\n  jwksUri: 'https://sandrino.auth0.com/.well-known/jwks.json'\n});\n\nconst kid = 'RkI5MjI5OUY5ODc1N0Q4QzM0OUYzNkVGMTJDOUEzQkFCOTU3NjE2Rg';\nconst key = await client.getSigningKey(kid);\nconst signingKey = key.getPublicKey();",
   "id": 239,
   "stars": 0,
   "errors": [
    1378
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const cwb = new CWBClient(API_KEY)",
   "id": 240,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  \"homepage\": \"http://mywebsite.com/relativepath\",",
   "id": 241,
   "stars": 0,
   "errors": [
    1005,
    2695,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export default async function (e, t, a) {\n    let n = document.createElement(e);\n    n.append(...(await a));\n    return Object.assign(n, t);\n}",
   "id": 242,
   "stars": 0,
   "errors": [
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "require('ranker')(null, app);",
   "id": 243,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "--> POST / {\"jsonrpc\":\"2.0\",\"id\":3,\"method\":\"eth_gasPrice\",\"params\":[]}\n<-- {\"jsonrpc\":\"2.0\",\"result\":\"0x2e90edd000\",\"id\":3}",
   "id": 244,
   "stars": 0,
   "errors": [
    2365,
    1109,
    2304,
    2363,
    2356
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "formatter --name=\"Fred Flintstone\" Australia < test/template.txt",
   "id": 245,
   "stars": 0,
   "errors": [
    2304,
    1005,
    2304,
    1005,
    2304,
    2593,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  var nconf = require('nconf');\n\n  //\n  // Requiring `nconf-redis` will extend the `nconf`\n  // module.\n  //\n  require('nconf-redis');\n\n  nconf.use('redis', { host: 'localhost', port: 6379, ttl: 60 * 60 * 1000 });",
   "id": 246,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Type definitions for Node.js 10.12\n// Project: http://nodejs.org/\n// Definitions by: Microsoft TypeScript <https://github.com/Microsoft>\n//                 Definitely Typed <https://github.com/DefinitelyTyped>\n//                 Alberto Schiabel <https://github.com/jkomyno>",
   "id": 247,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import formCreate from 'form-create'\nimport { maker } from 'form-create'\nVue.use(formCreate)",
   "id": 248,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// scss\nimport 'node_modules/@auraxy/react-select/lib/css/index.scss'\n\n// css\nimport 'node_modules/@auraxy/react-select/lib/css/index.css'",
   "id": 249,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import HttpModule from 'react-native-http-module';\n\nconst httpModule = new HttpModule(baseURL, headers);",
   "id": 250,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import tinyDelay from \"tiny-delay\"\n\ntinyDelay()",
   "id": 251,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "autossh({\n  host: '111.22.333.444',\n  username: 'root',\n  localPort: 'auto',\n  remotePort: 5432,\n  sshPort: 9999\n});",
   "id": 252,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  \"acm:DescribeCertificate\", // only for custom domains\n  \"acm:ListCertificates\",    // only for custom domains\n  \"acm:RequestCertificate\",  // only for custom domains\n  \"cloudfront:CreateCloudFrontOriginAccessIdentity\",\n  \"cloudfront:CreateDistribution\",\n  \"cloudfront:CreateInvalidation\",\n  \"cloudfront:GetDistribution\",\n  \"cloudfront:GetDistributionConfig\",\n  \"cloudfront:ListCloudFrontOriginAccessIdentities\",\n  \"cloudfront:ListDistributions\",\n  \"cloudfront:ListDistributionsByLambdaFunction\",\n  \"cloudfront:ListDistributionsByWebACLId\",\n  \"cloudfront:ListFieldLevelEncryptionConfigs\",\n  \"cloudfront:ListFieldLevelEncryptionProfiles\",\n  \"cloudfront:ListInvalidations\",\n  \"cloudfront:ListPublicKeys\",\n  \"cloudfront:ListStreamingDistributions\",\n  \"cloudfront:UpdateDistribution\",\n  \"iam:AttachRolePolicy\",\n  \"iam:CreateRole\",\n  \"iam:CreateServiceLinkedRole\",\n  \"iam:GetRole\",\n  \"iam:PutRolePolicy\",\n  \"iam:PassRole\",\n  \"lambda:CreateFunction\",\n  \"lambda:EnableReplication\",\n  \"lambda:DeleteFunction\",            // only for custom domains\n  \"lambda:GetFunction\",\n  \"lambda:GetFunctionConfiguration\",\n  \"lambda:PublishVersion\",\n  \"lambda:UpdateFunctionCode\",\n  \"lambda:UpdateFunctionConfiguration\",\n  \"route53:ChangeResourceRecordSets\", // only for custom domains\n  \"route53:ListHostedZonesByName\",\n  \"route53:ListResourceRecordSets\",   // only for custom domains\n  \"s3:CreateBucket\",\n  \"s3:GetAccelerateConfiguration\",\n  \"s3:GetObject\",                     // only if persisting state to S3 for CI/CD\n  \"s3:ListBucket\",\n  \"s3:PutAccelerateConfiguration\",\n  \"s3:PutBucketPolicy\",\n  \"s3:PutObject\"",
   "id": 253,
   "stars": 0,
   "errors": [
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695
   ],
   "hasCode": true,
   "nondeletedLines": 42,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const appAuth = auth(\n    {\n        // Simple case where roles is a text field in User containing roles separated by commas\n        rolesGetter: async (context, userId) => {\n            const user = context.app.service(\"users\").get(userId);\n            return user.roles.split(\",\") || [];\n        },\n    },\n    \"jwt\"\n);\n\napp.service(\"service\").hooks({\n    before: {\n        all: appAuth,\n    },\n});",
   "id": 254,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport logo from './logo.png'; // Tell Webpack this JS file uses this image\n\nconsole.log(logo); // /logo.84287d09.png\n\nfunction Header() {\n  // Import result is the URL of your image\n  return <img src={logo} alt=\"Logo\" />;\n}\n\nexport default Header;",
   "id": 255,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//data为代付同步返回的结果\nif(llpaycahpayInstance.submitSuccess(data)){\n    //todo,更新提现订单....\n}",
   "id": 256,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var obj = { 'a': { 'b': { 'c': 'd' } } };\n\nvar val = dget( obj );\n// returns 'd'",
   "id": 257,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "    phonebook listall\n",
   "id": 258,
   "stars": 0,
   "errors": [
    1434,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": ".container {\n    width: 100%;\n    height: 100%;\n  }",
   "id": 259,
   "stars": 0,
   "errors": [
    1128,
    1435,
    2304,
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = function(eor){\n  return eor.define(\"Application\").extend(function(){\n    this.title = \"Express Override\";\n  })\n  .methods({\n    index : function(req, res) {\n      var sampleModel = eor.getModule(\"Sample\", \"Model\");\n      if(sampleModel.index()){\n        res.render('index', { title: this.title })\n      }else{\n        res.render('index', { title: this.title, error_message : \"ErrorCode => -1111\"});\n      }\n    },\n\n    hello : function(req, res) {\n      res.render('index', { title: eor.shared.name })\n    }\n  })\n};",
   "id": 260,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport { shallow } from 'enzyme';\nimport App from './App';\n\nit('renders without crashing', () => {\n  shallow(<App />);\n});",
   "id": 261,
   "stars": 0,
   "errors": [
    2593,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "bit.get(\"mempool\").then((mepool) => {\n  //  mempool := {\n  //    tx: <array of mempool transactions>\n  //  }\n})",
   "id": 262,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "clock.syncTime();",
   "id": 263,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "grunt.initConfig({\n  tishadow: {\n    test: {\n      command: 'spec',\n      options: {\n        junit: true\n      }\n    },\n    run: {\n      command: 'run',\n      options: {\n        junit: true,\n        patch: true,\n        preclear: true\n      }\n    }\n  }\n});",
   "id": 264,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": ".loginForm\n.username\n.usernameLabel\n.password\n.passwordLabel\n.remember\n.rememberLabel\n.button\n.forgotLink",
   "id": 265,
   "stars": 0,
   "errors": [
    1128,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "successCount = librato.metric('foo.success.count')\nerrorCount   = librato.metric('foo.error.count')\n\nSomePromise().then(doSomething)\n             .then(doSomethingElse)\n             .then(successCount)    // Increment on success\n             .catch(errorCount)     // Increment error on failure",
   "id": 266,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import LockTableView from 'react-native-locktable';",
   "id": 267,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "gh is 1 --comment 'Node GH rocks!'",
   "id": 268,
   "stars": 0,
   "errors": [
    1434,
    2304,
    2304,
    1228,
    2357,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const input = document.querySelector('input');\nconst button = document.querySelector('.js-add-signature');\nbutton.addEventListener(event => {\n    textFieldEdit.insert(input, 'Made by 🐝 with pollen.');\n});",
   "id": 269,
   "stars": 0,
   "errors": [
    2584,
    2584,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "vue + ts + prettier\n\n  extends: [\n    'plugin:@etherfe/vue-typescript'\n    'plugin:@etherfe/vue-prettier'\n  ]",
   "id": 270,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    1128,
    1128,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import SensorManager from \"rnative-sensor-manager\";\nSensorManager.startPressure(100);\nDeviceEventEmitter.addListener(\"pressure\", (data) => {\n  /**\n   * data.pressure\n   **/\n});\nSensorManager.stopPressure();",
   "id": 271,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const inspector = require('event-loop-inspector')();\nconst dump = inspector.dump();\n\nconsole.log(dump);",
   "id": 272,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// the value stored in column `key` of table `test` is encrypted in database\nconst testDao = dao.create(pool).table('test').encrypt(['key']);\n\nawait pool.transaction(async (query): Promise<boolean> => {\n  await dao.create(pool).delete().from('unittest_dao').exec(query);\n  await testDao.insert({\n    key: 'key1',\n    count: 1,\n    value: 'value1'\n  }).exec(query);\n  await testDao.update().set({\n    key: 'key1',\n    count: 1,\n    value: 'value2'\n  }).exec(query);\n  return true;\n})",
   "id": 273,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1375,
    1378,
    2304,
    8010,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  bordinoAuthenticate.validateToken('mytoken')\n                     .then((isValide)=>{\n                       //do your job\n                     })\n                     .catch((e)=>(\n                       //handle error\n                     ))",
   "id": 274,
   "stars": 0,
   "errors": [
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { Plugin } from 'munar-core'\nexport default class MyPlugin extends Plugin {\n  // etc\n}",
   "id": 275,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import ActionSheet from 'react-native-actionsheet'\n\nclass Demo extends React.Component {\n  showActionSheet = () => {\n    this.ActionSheet.show()\n  }\n  render() {\n    return (\n      <View>\n        <Text onPress={this.showActionSheet}>Open ActionSheet</Text>\n        <ActionSheet\n          ref={o => this.ActionSheet = o}\n          title={'Which one do you like ?'}\n          options={['Apple', 'Banana', 'cancel']}\n          cancelButtonIndex={2}\n          destructiveButtonIndex={1}\n          onPress={(index) => { /* do something */ }}\n        />\n      </View>\n    )\n  }\n}",
   "id": 276,
   "stars": 0,
   "errors": [
    2304,
    17004,
    2304,
    17004,
    2304,
    2304,
    17004,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 21,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Field.add('ID', Field.INTEGER({\n  primaryKey    : true,\n  autoIncrement : true,\n  allowNull     : false,\n  validate      : { min: 1 }\n}))\nField.add('PK_INTEGER', Field.INTEGER({\n  primaryKey : true,\n  allowNull  : false,\n  validate   : { min: 1 }\n}))\nField.add('PK_UUID', Field.UUID({\n  primaryKey : true,\n  allowNull  : false\n}))",
   "id": 277,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { diveDeco } from 'diving-decompression'\n...\nconst dive = { depth: 100, bottomTime: 135 };\nconst decoObject = diveDeco(dive);\nconsole.log(decoObject)",
   "id": 278,
   "stars": 0,
   "errors": [
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var model = {\n  web: 'http://www.google.com',\n  images: 'http://images.google.com/'\n};",
   "id": 279,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "console.log(source.expand());",
   "id": 280,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const eip = require('eip');\nconst redis = require('redis');\nconst { PubSub, Queue } = require('eip-redis');\nconst { Timer } = require('eip-timer');\n\nconst redisPub = redis.createClient();\nconst redisSub =  redis.createClient({return_buffers:true});\n\nconst pubSub = new PubSub(1, 1000, redisPub, redisSub, 'namespace') // eventsPerPeriod, periodInMS\nconst queue = new Queue(redisPub, 'namespace');\nconst resource = x => x;\n\nconst throttler = new eip.Route().throttleResource({ pubSub, queue, resource, timer });",
   "id": 281,
   "stars": 0,
   "errors": [
    2552
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "void 0",
   "id": 282,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { loading, error, data, refetch } = useAxios({\n    url: \"api-url\",\n});\nreturn (\n    <div className=\"App\">\n        <h1>{loading && \"Loading\"}</h1>\n        <h1>{error && \"Error!\"}</h1>\n        <button onClick={refetch}>Refetch</button>\n        <div>{data && JSON.stringify(data)}</div>\n    </div>\n);",
   "id": 283,
   "stars": 0,
   "errors": [
    2304,
    1108
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "await client.balances()\nawait client.balance('BTC')\nawait client.depositAddress('BTC')\nawait client.withdraw('BTC', { quantity: 1.2, address: 'abcde' })\nawait client.order('30594e6e-ba54-4914-96f3-5b9d5de2468e')\nawait client.orderHistory('BTC-ETH')\nawait client.withdrawalHistory('BTC')\nawait client.depositHistory('BTC')",
   "id": 284,
   "stars": 0,
   "errors": [
    1375,
    1378,
    2304,
    1375,
    1378,
    2304,
    1375,
    1378,
    2304,
    1375,
    1378,
    2304,
    1375,
    1378,
    2304,
    1375,
    1378,
    2304,
    1375,
    1378,
    2304,
    1375,
    1378,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CoreApiV10 = require('core_api_v10');\n\nvar api = new CoreApiV10.AuthApi()\n\nvar authorization = \"authorization_example\"; // {String} JWT access token\n\nvar opts = { \n  'model': new CoreApiV10.TwoFactorAuthenticatorConfirm() // {TwoFactorAuthenticatorConfirm} \n};\napi.v10Auth2faConfirmPost(authorization, opts).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n\n",
   "id": 285,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// using promise API\nrecursive(\"/app\", {\n  ignores: [\"README.md\"],\n  fs, // in-memory fs\n  debug: true,\n  log: (...msg) => console.log(\"readdir\", ...msg)\n}).then(successFn, errFn);",
   "id": 286,
   "stars": 0,
   "errors": [
    2304,
    18004,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<template>\n  <div id=\"app\" v-if=\"hydrated\">\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data: () => ({ hydrated: false }),\n  async mounted() {\n    await this.$apollo.provider.defaultClient.hydrated()\n    this.hydrated = true\n  },\n}\n</script>",
   "id": 287,
   "stars": 0,
   "errors": [
    17004,
    2657,
    17004,
    17004,
    17004,
    2304,
    1005,
    1382,
    2304,
    1005,
    1381,
    1005,
    1381,
    1381
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "konstructor-cli new my-app",
   "id": 288,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1005,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const repl = require('re-pl');\nconst run = require('setlist');\n\nrun(function* () {\n  // Initialize variables and do some work here\n  ...\n  let value = yield someWorkHere();\n\n  // Pause execution to inspect ongoing process\n  value = yield repl(($)=>eval($))(value);\n\n  // The edited/unedited return value can be used later\n  return lastWorkHere(value);\n});",
   "id": 289,
   "stars": 0,
   "errors": [
    1128,
    2304,
    1005,
    2304,
    1005,
    2304,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "walk(function(r, n){ return r+n }, 0, ...[1,2,3]) // -> 6",
   "id": 290,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var WrapperBuilder = require('thunkify-object').WrapperBuilder;\n\nvar Wrapper = new WrapperBuilder()\n .addEvent(['on', 'once'])\n .addPassThrough('emit')\n .getWrapper();",
   "id": 291,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "table.page(1);",
   "id": 292,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "user> @hubot 5rolli\nHubot>\n## test-project\n- 残り: 29.5 days (38.4 days/people, to: 2016/03/06)\n- 消化: 31.2 days (40.6 days/people, es: 247%)\n\nuser> @hubot 5rolli info test-project\nhubot>\n## test-project\n\n### タスク残り時間 (5時間/日, 1.3人換算)\n- 予想: 29.5 days (38.4 days/people, to: 2016/03/06)\n- 最速: 21 days (27.4 days/people, to: 2016/02/28)\n- 最悪: 65.4 days (85.1 days/people, to: 2016/05/01)\n\n### 完了タスク消化時間\n- 31.2 days (40.6 days/people)\n\n### タスク消化率\n- 予想: 31.4%\n- 最速: 32.7%\n- 最悪: 25.9%\n\n### 完了タスク消化ペース\n- 予想: 247%\n- 最速: 303%\n- 最悪: 136%\n\n### 初回終了予想日 (開始日: 2015/11/27)\n- 予想: 2016/01/31 (diff: 35 days)\n- 最速: 2016/01/17 (diff: 42 days)\n- 最悪: 2016/04/03 (diff: 28 days)",
   "id": 293,
   "stars": 0,
   "errors": [
    2304,
    1109,
    1146,
    1005,
    1351,
    2304,
    2304,
    1127,
    1127,
    1005,
    2593,
    2304,
    2304,
    1005,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    2304,
    1005,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    1109,
    2304,
    1109,
    1146,
    1005,
    1351,
    2304,
    1434,
    2304,
    2593,
    2304,
    2304,
    1127,
    1127,
    1005,
    2593,
    2304,
    1127,
    1127,
    1127,
    1005,
    2304,
    1351,
    2304,
    2304,
    1351,
    2304,
    2304,
    1005,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    2304,
    1005,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    2304,
    1005,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    1127,
    1127,
    1127,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    1127,
    1127,
    1127,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    1127,
    1127,
    1127,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    1127,
    1127,
    1127,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2349,
    2304,
    1005,
    1005,
    2304,
    2304,
    1005,
    2349,
    2304,
    1005,
    1005,
    2304,
    2304,
    1005,
    2349,
    2304,
    1005,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 26,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'suneditor/dist/css/suneditor.min.css'\nimport suneditor from 'suneditor'\n// Import codeMirror\nimport CodeMirror from 'codemirror'\nimport 'codemirror/mode/htmlmixed/htmlmixed'\nimport 'codemirror/lib/codemirror.css'\n\nsuneditor.create('sample', {\n    codeMirror: CodeMirror // window.CodeMirror,\n    // Set options\n    // codeMirror: {\n    //     src: CodeMirror,\n    //     options: {...}\n    // }\n    buttonList: [\n        ['codeView']\n    ],\n    height: 400\n});",
   "id": 294,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/*\nexample.js\n\nthis node script will serve a lightweight swagger-ui crud-api backed by mongodb\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n          $ npm install swagger-mongodb && npm_config_server_port=1337 node example.js\n    3. open a browser to http://localhost:1337\n    4. interact with the swagger-ui crud-api\n*/\n\n/*jslint\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n\n(function (local) {\n    'use strict';\n    switch (local.modeJs) {\n\n\n\n    // run node js-env code\n    case 'node':\n        // export local\n        module.exports = local;\n        // init assets\n        local.utility2.cacheDict.assets['/'] = '<!DOCTYPE html>\\n' +\n/* jslint-ignore-begin */\n'<html>\\n' +\n'<head>\\n' +\n'    <meta charset=\"UTF-8\">\\n' +\n'    <title>\\n' +\n'    {{envDict.npm_package_name}} [{{envDict.npm_package_version}}]\\n' +\n'    </title>\\n' +\n'    <link rel=\"stylesheet\" href=\"/assets/utility2.css\">\\n' +\n'    <style>\\n' +\n'    * {\\n' +\n'        box-sizing: border-box;\\n' +\n'    }\\n' +\n'    body {\\n' +\n'        background-color: #fff;\\n' +\n'        font-family: Helvetical Neue, Helvetica, Arial, sans-serif;\\n' +\n'    }\\n' +\n'    body > div {\\n' +\n'        margin: 20px 0 20px 0;\\n' +\n'    }\\n' +\n'    .testReportDiv {\\n' +\n'        display: none;\\n' +\n'    }\\n' +\n'    </style>\\n' +\n'    {{envDict.npm_config_html_head_extra}}\\n' +\n'</head>\\n' +\n'<body>\\n' +\n'    <div class=\"ajaxProgressDiv\" style=\"display: none;\">\\n' +\n'    <div class=\"ajaxProgressBarDiv ajaxProgressBarDivLoading\">loading</div>\\n' +\n'    </div>\\n' +\n'    <h1>{{envDict.npm_package_name}} [{{envDict.npm_package_version}}]</h1>\\n' +\n'    <h3>{{envDict.npm_package_description}}</h3>\\n' +\n'    <div class=\"testReportDiv\"></div>\\n' +\n'    <div id=\"swagger-ui-container\" style=\"display: none;\"></div>\\n' +\n'    <iframe height=\"512\" src=\"/assets/swagger-ui.html\" width=\"100%\"></iframe>\\n' +\n'    <script src=\"/assets/utility2.js\"></script>\\n' +\n'    <script src=\"/assets/swagger-ui.rollup.js\"></script>\\n' +\n'    <script src=\"/assets/swagger-mongodb.js\"></script>\\n' +\n'    <script src=\"/assets/example.js\"></script>\\n' +\n'    <script src=\"/test/test.js\"></script>\\n' +\n'    <script>\\n' +\n'    window.utility2 = window.utility2 || {};\\n' +\n'    window.utility2.envDict = {\\n' +\n'        npm_package_description: \"{{envDict.npm_package_description}}\",\\n' +\n'        npm_package_name: \"{{envDict.npm_package_name}}\",\\n' +\n'        npm_package_version: \"{{envDict.npm_package_version}}\"\\n' +\n'    };\\n' +\n'    document.querySelector(\"iframe\").onload = function () {\\n' +\n'        var self;\\n' +\n'        self = this;\\n' +\n'        self.height = innerHeight - self.offsetTop - 20;\\n' +\n'        self.contentWindow.location.hash = location.hash;\\n' +\n'        self.contentWindow.onclick = function () {\\n' +\n'            setTimeout(function () {\\n' +\n'                location.hash = self.contentWindow.location.hash;\\n' +\n'            });\\n' +\n'        };\\n' +\n'    };\\n' +\n'    </script>\\n' +\n'    {{envDict.npm_config_html_body_extra}}\\n' +\n'</body>\\n' +\n/* jslint-ignore-end */\n            '</html>\\n';\n        local.utility2.cacheDict.assets['/'] = local.utility2.stringFormat(\n            local.utility2.cacheDict.assets['/'],\n            { envDict: local.utility2.envDict },\n            ''\n        );\n        local.utility2.cacheDict.assets['/assets/example.js'] =\n            local.utility2.istanbul_lite.instrumentSync(\n                local.fs.readFileSync(__dirname + '/example.js', 'utf8'),\n                __dirname + '/example.js'\n            );\n        local.utility2.cacheDict.assets['/test/test.js'] =\n            local.utility2.istanbul_lite.instrumentInPackage(\n                local.fs.readFileSync(local.swmg.__dirname + '/test.js', 'utf8'),\n                local.swmg.__dirname + '/test.js',\n                'swagger-mongodb'\n            );\n        // init mongodb-client\n        local.utility2.onReady.counter += 1;\n        local.utility2.taskRunOrSubscribe({\n            key: 'swagger-mongodb.mongodbConnect',\n            onTask: function (onError) {\n                local.mongodb.MongoClient.connect(\n                    local.utility2.envDict.npm_config_mongodb_url ||\n                        'mongodb://localhost:27017/test',\n                    function (error, db) {\n                            // validate no error occurred\n                            local.utility2.assert(!error, error);\n                            local.swmg.db = db;\n                            onError();\n                            local.utility2.onReady();\n                        }\n                );\n            }\n        });\n        // init middleware\n        local.middleware = local.utility2.middlewareGroupCreate([\n            // init pre-middleware\n            local.utility2.middlewareInit,\n            // init cached-assets middleware\n            local.utility2.middlewareAssetsCached,\n            // init http-body-get middleware\n            local.utility2.middlewareBodyGet,\n            // init http-body-parse-upload middleware\n            function (request, response, nextMiddleware) {\n                var boundary, bodyText;\n                // jslint-hack\n                local.utility2.nop(response);\n                local.utility2.testTryCatch(function () {\n                    if ((request.headers['content-type'] || '')\n                            .indexOf('multipart/form-data') !== 0) {\n                        nextMiddleware();\n                        return;\n                    }\n                    boundary =\n                        '--' + (/boundary=(.*)/).exec(request.headers['content-type'])[1];\n                    request.swmgBodyParsed = {};\n                    bodyText = String(request.bodyRaw);\n                    bodyText.split(boundary).slice(1, -1).forEach(function (part) {\n                        request.swmgBodyParsed[\n                            (/\\bname=\"([^\"]*)/).exec(part)[1]\n                        ] = part.split('\\r\\n\\r\\n').slice(1).join('\\r\\n\\r\\n').slice(0, -2);\n                    });\n                    // set file\n                    bodyText.replace('\\r\\n\\r\\n', function (match0, ii) {\n                        // jslint-hack\n                        local.utility2.nop(match0);\n                        request.swmgBodyParsed.file = request.bodyRaw\n                            .slice(ii + 4, -(boundary.length + 6))\n                            .toString('base64');\n                    });\n                    request.swmgBodyParsed.file = request.bodyRaw\n                        .slice(bodyText.lastIndexOf('\\r\\n\\r\\n') + 4, -(boundary.length + 6))\n                        .toString('base64');\n                    // set filename\n                    request.swmgBodyParsed.filename = (/\\bfilename=\"([^\"]+)/).exec(bodyText);\n                    request.swmgBodyParsed.filename =\n                        request.swmgBodyParsed.filename &&\n                        request.swmgBodyParsed.filename[1];\n                    nextMiddleware();\n                }, nextMiddleware);\n            },\n            // init http-body-parse middleware\n            local.swmg.middlewareBodyParse,\n            // init swagger pre-middleware\n            function (request, response, nextMiddleware) {\n                // jslint-hack\n                local.utility2.nop(request);\n                // enable cors\n                // http://en.wikipedia.org/wiki/Cross-origin_resource_sharing\n                response.setHeader(\n                    'Access-Control-Allow-Methods',\n                    'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'\n                );\n                response.setHeader('Access-Control-Allow-Origin', '*');\n                // init content-type\n                response.setHeader('Content-Type', 'application/json; charset=UTF-8');\n                nextMiddleware();\n            },\n            // init swagger middleware\n            local.swmg.middlewareSwagger\n        ]);\n        // init error-middleware\n        local.middlewareError = local.swmg.middlewareError;\n        // init petstore-api\n        (function () {\n            var methodPath, options, schema;\n            options = local.utility2.jsonCopy(require(local.swmg.local\n                .swagger_ui_lite.__dirname + '/swagger.json'));\n            options = {\n                definitions: options.definitions,\n                paths: options.paths,\n                tags: options.tags\n            };\n            // remove unused properties\n            delete options.definitions.ApiResponse;\n            // init schema\n            Object.keys(options.definitions).forEach(function (schemaName) {\n                schema = options.definitions[schemaName];\n                // init id\n                schema.properties.id = { type: 'string' };\n                schema['x-inheritList'] = [{ $ref: '#/definitions/JsonapiResource' }];\n            });\n            local.utility2.objectSetOverride(options, {\n                definitions: {\n                    // init Pet schema\n                    Pet: {\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            id: 'pet0',\n                            name: 'birdie',\n                            photoUrls: [],\n                            status: 'available',\n                            tags: [{ name: 'bird'}]\n                        }, {\n                            id: 'pet1',\n                            name: 'kittie',\n                            status: 'pending',\n                            photoUrls: [],\n                            tags: [{ name: 'cat'}]\n                        }, {\n                            id: 'pet2',\n                            name: 'doggie',\n                            photoUrls: [],\n                            status: 'sold',\n                            tags: [{ name: 'dog'}]\n                        }],\n                        _collectionName: 'SwmgPet'\n                    },\n                    // init Order schema\n                    Order: {\n                        // create index\n                        _collectionCreateIndexList: [{\n                            key: { status: 1 },\n                            name: 'status_1'\n                        }],\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            id: 'order0',\n                            status: 'available'\n                        }, {\n                            id: 'order1',\n                            status: 'pending'\n                        }, {\n                            id: 'order2',\n                            status: 'sold'\n                        }],\n                        _collectionName: 'SwmgOrder',\n                        properties: {\n                            petId: { type: 'string' }\n                        }\n                    },\n                    // init User schema\n                    User: {\n                        // create index\n                        _collectionCreateIndexList: [{\n                            key: { username: 1 },\n                            name: 'username_1',\n                            unique: true\n                        }],\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            email: 'john@doe.com',\n                            firstName: 'john',\n                            id: 'user0',\n                            lastName: 'doe',\n                            password: 'hello',\n                            phone: '1234-5678',\n                            username: 'john.doe'\n                        }, {\n                            email: 'jane@doe.com',\n                            firstName: 'jane',\n                            id: 'user1',\n                            lastName: 'doe',\n                            password: 'bye',\n                            phone: '8765-4321',\n                            username: 'jane.doe'\n                        }],\n                        _collectionName: 'SwmgUser'\n                    }\n                },\n                // init crud-api\n                paths: {\n                    '/pet/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgPet',\n                        _crudApi: 'pet',\n                        _schemaName: 'Pet',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['pet']\n                    } },\n                    '/store/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgOrder',\n                        _crudApi: 'store',\n                        _schemaName: 'Order',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['store']\n                    } },\n                    '/user/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgUser',\n                        _crudApi: 'user',\n                        _schemaName: 'User',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['user']\n                    } }\n                }\n            }, 4);\n            // transform petstore-api to swagger-mongodb's crud-api\n            Object.keys(options.paths).forEach(function (path) {\n                Object.keys(options.paths[path]).forEach(function (method) {\n                    methodPath = options.paths[path][method];\n                    // init methodPath._schemaName\n                    switch (path.split('/')[1]) {\n                    case 'pet':\n                        methodPath._schemaName = 'Pet';\n                        break;\n                    case 'store':\n                        methodPath._schemaName = 'Order';\n                        break;\n                    case 'user':\n                        methodPath._schemaName = 'User';\n                        break;\n                    }\n                    methodPath._collectionName = 'Swmg' + methodPath._schemaName;\n                    delete methodPath.produces;\n                    delete methodPath.responses;\n                    delete methodPath.security;\n                    // init jsonapi response\n                    local.utility2.objectSetDefault(methodPath, { responses: {\n                        200: {\n                            description: '200 ok - http://jsonapi.org/format' +\n                                '/#document-structure-top-level',\n                            schema: { $ref: '#/definitions/JsonapiResponse{{_schemaName}}' }\n                        }\n                    } }, 2);\n                    // init crudCreateMany / crudCreateOne / crudDeleteByIdOne / crudGetByIdOne\n                    switch (methodPath.operationId) {\n                    case 'addPet':\n                    case 'createUser':\n                    case 'placeOrder':\n                        methodPath.operationId = 'crudCreateOne';\n                        break;\n                    case 'createUsersWithArrayInput':\n                    case 'createUsersWithListInput':\n                        methodPath.operationId = 'crudCreateMany';\n                        break;\n                    case 'deleteOrder':\n                    case 'deletePet':\n                    case 'deleteUser':\n                        methodPath.operationId = 'crudDeleteByIdOne';\n                        break;\n                    case 'getOrderById':\n                    case 'getPetById':\n                    case 'getUserByName':\n                        methodPath.operationId = 'crudGetByIdOne';\n                        break;\n                    }\n                    // init id\n                    (methodPath.parameters || []).forEach(function (paramDef) {\n                        switch (paramDef.name) {\n                        case 'orderId':\n                        case 'petId':\n                            delete paramDef.format;\n                            paramDef.type = 'string';\n                            break;\n                        }\n                    });\n                });\n            });\n            local.swmg.apiUpdate(options);\n        }());\n        // init petstore-middleware\n        local.middleware.middlewareList.push(function (request, response, nextMiddleware) {\n            var modeNext, onNext, options;\n            modeNext = 0;\n            onNext = function (error, data) {\n                local.utility2.testTryCatch(function () {\n                    modeNext = error\n                        ? Infinity\n                        : modeNext + 1;\n                    switch (modeNext) {\n                    case 1:\n                        // init id\n                        ((request.swmgMethodPath && request.swmgMethodPath.parameters) || [\n                        ]).forEach(function (paramDef) {\n                            switch (paramDef.name) {\n                            case 'orderId':\n                            case 'petId':\n                                request.swmgParamDict.id = request.swmgParamDict[paramDef.name];\n                                break;\n                            }\n                        });\n                        // init options\n                        if (request.swmgMethodPath) {\n                            options = {\n                                collectionName: request.swmgMethodPath._collectionName,\n                                data: request.swmgParamDict,\n                                operationId: request.swmgMethodPath.operationId,\n                                paramDefList: request.swmgMethodPath.parameters,\n                                schemaName: request.swmgMethodPath._schemaName\n                            };\n                        }\n                        switch (request.swmgPathname) {\n                        // handle pet request\n                        case 'DELETE /pet/':\n                        case 'GET /pet/':\n                        case 'POST /pet':\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /pet/findByStatus':\n                            options.operationId = 'crudGetByQueryMany';\n                            options.data.fields = '{}';\n                            options.data.hint = '{}';\n                            options.data.limit = 100;\n                            options.data.query = '{\"status\":{\"$in\":' +\n                                JSON.stringify(options.data.status) + '}}';\n                            options.data.skip = 0;\n                            options.data.sort = '{\"_timeModified\":-1}';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /pet/findByTags':\n                            options.operationId = 'crudGetByQueryMany';\n                            options.data.fields = '{}';\n                            options.data.hint = '{}';\n                            options.data.limit = 100;\n                            options.data.query = '{\"status\":{\"$in\":' +\n                                JSON.stringify(options.data.tags) + '}}';\n                            options.data.skip = 0;\n                            options.data.sort = '{\"_timeModified\":-1}';\n                            options.paramDefList[0].default = 'bird,cat,dog';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /pet/':\n                            options.data.upsert = true;\n                            options.data.body = {\n                                id: options.data.id,\n                                name: options.data.name,\n                                status: options.data.status\n                            };\n                            options.operationId = 'crudUpdateOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /pet//':\n                            options.data.body = {\n                                additionalMetadata: options.data.additionalMetadata,\n                                file: options.data.file,\n                                filename:\n                                    request.swmgBodyParsed && request.swmgBodyParsed.filename,\n                                id: options.id\n                            };\n                            options.data.upsert = true;\n                            options.operationId = 'crudUpdateOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'PUT /pet':\n                            options.data.upsert = true;\n                            options.operationId = 'crudReplaceOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        // handle store request\n                        case 'DELETE /store/order/':\n                        case 'GET /store/order/':\n                        case 'POST /store/order':\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /store/inventory':\n                            options.data = { body: [{\n                                $group: { _id: '$status', total: { $sum: 1} }\n                            }, {\n                                $project: { _id: 0, status: '$_id', total: '$total' }\n                            }]};\n                            options.operationId = 'crudAggregateMany';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        // handle user request\n                        case 'DELETE /user/':\n                        case 'GET /user/':\n                        case 'POST /user/createWithArray':\n                        case 'POST /user/createWithList':\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /user':\n                            options.data.username = options.data.body.username;\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'PUT /user/':\n                            options.data.body.username = options.data.username;\n                            options.data.upsert = true;\n                            options.operationId = 'crudReplaceOne';\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        default:\n                            nextMiddleware();\n                        }\n                        break;\n                    default:\n                        // validate no error occurred\n                        local.utility2.assert(!error, error);\n                        // respond with json-object\n                        response.end(JSON.stringify(data));\n                    }\n                }, nextMiddleware);\n            };\n            onNext();\n        });\n        // run server-test\n        local.utility2.testRunServer(local);\n        break;\n    }\n}((function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code\n    (function () {\n        // init local\n        local = {};\n        // init js-env\n        local.modeJs = (function () {\n            try {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            } catch (errorCaughtNode) {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    'browser';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // export local\n        local.global.local = local;\n        // init swagger-mongodb\n        local.swmg = local.modeJs === 'browser'\n            ? window.swmg\n            : require('swagger-mongodb');\n        // import swmg.local\n        Object.keys(local.swmg.local).forEach(function (key) {\n            local[key] = local[key] || local.swmg.local[key];\n        });\n        // init utility2\n        local.utility2 = local.swmg.local.utility2;\n        // init onReady\n        local.utility2.onReadyInit();\n    }());\n    return local;\n}())));",
   "id": 295,
   "stars": 0,
   "errors": [
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2769,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2304,
    2584,
    2339,
    2339,
    2304,
    2339,
    2339,
    2339,
    2304,
    2339,
    2339,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 506,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "client.indexes.list({ $select: ['name', 'fields'] });",
   "id": 296,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = require('export-files')(__dirname, '**/*.json');",
   "id": 297,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export default new Store(hydrate({\n  modules: {\n    flights: {\n      state: {\n        selected: null,\n        in_flight: []\n      }\n    }\n  }\n}))",
   "id": 298,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Ajv from 'ajv';\nimport betterAjvErrors from 'better-ajv-errors';\n// const Ajv = require('ajv');\n// const betterAjvErrors = require('better-ajv-errors');\n\n// You need to pass `jsonPointers: true`\nconst ajv = new Ajv({ jsonPointers: true });\n\n// Load schema and data\nconst schema = ...;\nconst data = ...;\n\nconst validate = ajv.compile(schema);\nconst valid = validate(data);\n\nif (!valid) {\n  const output = betterAjvErrors(schema, data, validate.errors);\n  console.log(output);\n}",
   "id": 299,
   "stars": 0,
   "errors": [
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "    import SmartFlatList from 'react-native-smart-refresh-flatlist'",
   "id": 300,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Prefer: status=200",
   "id": 301,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import CanvasSlider from '@martsis/canvas-slider';",
   "id": 302,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import isEmpty from 'just-is-empty';\n isEmpty({a: 3, b: 5}) // false\n isEmpty([1, 2]) // false\n isEmpty(new Set([1, 2, 2])) // false\n isEmpty((new Map()).set('a', 2)) // false\n isEmpty({}) // true\n isEmpty([]) // true\n isEmpty(new Set()) // true\n isEmpty(new Map()) // true\n isEmpty('abc') // false\n isEmpty('') // true\n isEmpty(0) // true\n isEmpty(1) // true\n isEmpty(true) // true\n isEmpty(Symbol('abc')); // true\n isEmpty(//); // true\n isEmpty(new String('abc')); // false\n isEmpty(new String('')); // true\n isEmpty(new Boolean(true)); // true\n isEmpty(null) // true\n isEmpty(undefined) // true",
   "id": 303,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 21,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const fs = require('fs');\nconst readable = require('co-readable');\nconst co = require('co');\n\nconst read = readable(fs.createReadStream('bigfile'));\n\nco(function* () {\n  let buf;\n  let size = 0;\n  while (buf = yield read(1024)) {\n    console.log('read %d bytes', buf.length);\n    size += buf.length;\n  }\n  console.log('total read %d bytes', size);\n}).catch(function (err) {\n  console.error(err.stack);\n});",
   "id": 304,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'onap-ui-common/lib/style.css';",
   "id": 305,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var tou8 = require('utf8-to-uint8array')\nvar str = '💩'\nconsole.log(tou8(str))",
   "id": 306,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "grunt.initConfig({\n  winston: {\n    myLogger: {\n      options: {\n        hooks: [\n          function (logger) {\n            logger.on('logging', function (transport, level, msg, meta) {\n              // [msg] and [meta] have now been logged at [level] to [transport]\n            });\n          },\n          function (logger) {\n            logger.addColors({\n              foo: 'blue',\n              bar: 'green',\n              baz: 'yellow',\n              foobar: 'red'\n            });\n          }\n        ]\n      }\n    }\n  }\n});",
   "id": 307,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 22,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "     api.stuff.items.POST",
   "id": 308,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "pull(\n  pl.read(db, {live: true}),\n  //log data as it comes,\n  //because tail will keep the connection open\n  //so we'll never see the end otherwise.\n  pull.through(console.log),\n  //note, pull-streams will not drain unless something is\n  //pulling the data through, so we have to add drain\n  //even though the data we want is coming from pull.through()\n  pull.drain()\n)",
   "id": 309,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require(\"gulp\");\nvar reveasy = require(\"gulp-rev-easy\");\n\ngulp.task(\"reveasy\", function (argument) {\n  gulp.src(\"test.html\")\n    .pipe(reveasy({\n        fileTypes:['img1'],\n        elementAttributes:{\n            img1:{\n                name:'img',\n                src:'data-src'\n            }\n        }))\n    .pipe(gulp.dest(\"./dist\"))\n})",
   "id": 310,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "> S.reduce (S.concat) ('abc') (Nothing)\n'abc'\n\n> S.reduce (S.concat) ('abc') (Just ('xyz'))\n'abcxyz'",
   "id": 311,
   "stars": 0,
   "errors": [
    1109,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const defaults = {\n    passengers: {\n        adults: 1,\n        children: 0\n    }\n}",
   "id": 312,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "type ResolveResourceFn = (\n  resourceIri?: Iri,\n  context?: any,\n  info?: GraphQLResolveInfo\n) => ?ResolverOutput<any>",
   "id": 313,
   "stars": 0,
   "errors": [
    8008,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const StringToken = Any(\n  /^('[^'\\\\]*(?:\\\\.[^'\\\\]*)*')/,  // single-quoted\n  /^(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")/,  // double-quoted\n);\n\nconst Identifier = /^([a-zA-Z_$][a-zA-Z0-9_$]*)/;\nconst SumExpression = All(Identifier, '=', Identifier, '+', Identifier);",
   "id": 314,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const assert = require('assert')\n\nfunction counter (value) {\n    switch (typeof value) {\n    case 'object': {\n            if (null) {\n                return 1\n            }\n            let sum = 0\n            if (Array.isArray(value)) {\n                for (const item of value) {\n                    sum += counter(item)\n                }\n            }\n            for (const name in value) {\n                for (const item of value) {\n                    sum += counter(value[name])\n                }\n            }\n        }\n    default:\n        return 1\n    }\n}\n\nassert.equal(counter({ a: 'x', b: [ 'y', 'z' ] }), 3, 'found three scalar values')",
   "id": 315,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 24,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Model = bookshelf.Model.extend({\n    casts: {\n        // Property 'locked' will be converted into a boolean value\n        locked: 'boolean',\n\n        age(dbValue) {\n            return parseInt(dbValue, 10);\n        },\n\n        notFourtyTwo() {\n            return 42;\n        }\n    }\n});\n\nModel.forge().fetch('id', 91)\n        .then( model => {\n            typeof modal.get('locked'); // 'boolean'\n            model.get('notFourtyTwo');  // 42\n            typeof model.get('age'); // 'number'\n        });",
   "id": 316,
   "stars": 0,
   "errors": [
    2304,
    2552
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "access.list(options, callback);",
   "id": 317,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// shave and a haircut, two bits :D\ngrunt.task.run('beep:twobits');",
   "id": 318,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ModulusCombine = require('modulus-combine');\n\n// 4 digits before the decimal and keep 5 decimal digits (9 total)\nvar modulusCombine = new ModulusCombine(4, 10);\n\nmodulusCombine.compress(3.456789, 367.123123123);\n// -> 34567800000036712000\n\nmodulusCombine.deflate(34567800000036712000);\n// -> [ 3.45678, 367.12448 ]\n",
   "id": 319,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function (d) { return this.accessor(d) !== undefined && this.accessor(d) !== ''; }",
   "id": 320,
   "stars": 0,
   "errors": [
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// '../mock/index';\nconst item = {\n  id: 2,\n  wechatId: 'aaaaaa',\n  wechatName: '测试公众号',\n  appId: '1414',\n  type: 2,\n};\n\nlet start = 0;\nconst getList = () => {\n  const recordList = [];\n  for (let i = 0; i < 10; i++) {\n    const temp = { ...item };\n    Object.keys(temp).forEach((k) => {\n      temp[k] += start++;\n    });\n    recordList.push(temp);\n  }\n\n  return recordList;\n};\n\nexport const api = () => Promise.resolve({\n  totalRecord: 666,\n  recordList: getList(),\n});\n",
   "id": 321,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": ".orderBy(\"key1\", \"key2\");\n.orderBy({ \"key1\": \"asc\" }, { \"key2\": \"desc\" });\n.orderBy([\"key1\", \"key2\"]);\n.orderBy([{ \"key1\": \"asc\" }, { \"key2\": \"desc\" }]);",
   "id": 322,
   "stars": 0,
   "errors": [
    1128,
    2304,
    1128,
    2304,
    1128,
    2304,
    1128,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { handle } from 'kefir.handle';\n\nvar source = Kefir.sequentially(100, [0, 1, 2, 3]);\nvar result = source::handle({\n  value(emitter) { /* value handler */ }\n})",
   "id": 323,
   "stars": 0,
   "errors": [
    2304,
    1005,
    1134,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "sc ip 获取本机ip",
   "id": 324,
   "stars": 0,
   "errors": [
    1434,
    2304,
    1434,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import scroll from \"@threespot/freeze-scroll\";\n\n// Disable scrolling\nscroll.freeze();\n\n// Enable scrolling\nscroll.unfreeze();",
   "id": 325,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nconst run = async() => {\n  // 默认参数\n  const expire = {\n    expireTime: 24, // 过期时间 24h\n    unit: 'hour', // hour | minute | second | millisecond\n    auto: true, // 自动过期， 开启会定时清除24h以前的数据\n  }\n\n  // 使用默认过期时间 expire\n  await databee.expire();\n\n  // 自定义数据过期时间\n  await databee.expire(expire);\n}",
   "id": 326,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function getIssueEventsCollection(comicId, characters, creators, limit, modifiedSince, name, nameStartsWith, offset, orderBy, series, stories, callback)",
   "id": 327,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "git submodule update --remote web-platform-tests",
   "id": 328,
   "stars": 0,
   "errors": [
    1434,
    2304,
    1435,
    2552,
    2552,
    1005,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "stachedown.renderStrict('The {{important_thing}} must be visible.', {});\n// throws Error",
   "id": 329,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const contentSourceKey = '' // your content source key\nconst user = 'enterprise_search' // username\nconst permissions = { permissions: ['permission2'] } // permissions to add to the user\n\nclient\n  .addUserPermissions(contentSourceKey, user, permissions)\n  .then(response => {\n    // handle response\n  })\n  .catch(error => {\n    // handle error\n  })",
   "id": 330,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//set ray position\nthis.ray.setOrigin(400, 300);\n//set ray direction (in radians)\nthis.ray.setAngle(2);\n//set ray direction (in degrees)\nthis.ray.setAngleDeg(90);\n//cast single ray and get closets intersection, hit mapped object and hit segment\nlet intersection = this.ray.cast();\nlet hitObject = intersection.object;\nlet hitSegment = intersection.segment;\n\n//cast rays in all directions (toward all mapped objects vertices / points)\nlet intersections = this.ray.castCircle();\n\n//set ray's cone angle (in radians)\nthis.ray.setCone(1);\n//set ray's cone angle (in degrees)\nthis.ray.setConeDeg(90);\n\n//cast rays in a cone\nlet intersections = this.ray.castCone();",
   "id": 331,
   "stars": 0,
   "errors": [
    2451,
    2451
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "public address: qLUHmrFGexxpyHwQphLpE1czZNFE5m1xmV\nprivate key (WIF): cNQKccYYQyGX9G9Qxq2DJev9jHygbZpb2UG7EvUapbtDx5XhkhYE",
   "id": 332,
   "stars": 0,
   "errors": [
    1128,
    2304,
    1128,
    2304,
    2304,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "MOUNTED, // First render of the chart\nINTERVAL, // If you specify an update interval, it will be called every n seconds\nNEW_LOADER, // The loader function changed\nNEW_DOMAIN, // The outer domain changed,\nNEW_SUBDOMAIN, // The user zoomed to a new subdomain.\nUPDATE_POINTS_PER_SERIES, // The pointsPerSeries prop has changed",
   "id": 333,
   "stars": 0,
   "errors": [
    2304,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2304,
    2304,
    2304,
    2304,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const appCred = 'yourappcred';\nconst connectionURL = 'nodeConnectionURL';",
   "id": 334,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "api.convertToCoordinates(\"filled.count.soap\")\n  .then(function(response) {\n    console.log(\"[convertToCoordinates]\", response);\n  })\n  .catch(function(error) { // catch errors here\n    console.log(\"[code]\", error.code);\n    console.log(\"[message]\", error.message);\n  });",
   "id": 335,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Iterable from \"iterable.flow\"",
   "id": 336,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// $ExpectType void\nf(1);\n\n// $ExpectError\nf(\"one\");",
   "id": 337,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "db.status(function(obj){\n    console.log('Status', obj);\n});",
   "id": 338,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const book = new Book();\n\nRx.Observable.combineLatest(\n  book.subject('chapter1'),\n  book.subject('chapter2'),\n)\n.subscribe(() => {\n  console.log('Two first chapters are ready');\n});\n\nbook.publish('chapter1');\nbook.publish('chapter2');",
   "id": 339,
   "stars": 0,
   "errors": [
    2552,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "about:inspect",
   "id": 340,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.",
   "id": 341,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var token = etcd.get(\"key\", console.log);\ntoken.abort() // also aliased as token.cancel()\n\nconsole.log(\"Request is cancelled: \", token.isAborted());",
   "id": 342,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "htdocs/example/\n  |- example.js     <-- your 'example' script file",
   "id": 343,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1109,
    2363,
    2304,
    2304,
    1005,
    1005,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { parseSkinFile } = require('json2ableton-live-skin');\nconst skinFileBuffer = fs.readFileSync(__dirname + '/skinFile.ask');\nconst skin = parseSkinFile(skinFileBuffer);\nconsole.log(skin);\n// => {\"format\":\"live9\",\"ControlForeground\":[0,0,0,255],\"TextDisabled\":[90,90,9...\"ViewCheckControlDisabledOff\":[66,66,66,255]}",
   "id": 344,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { MentionsInput, Mention } from 'react-mentions'",
   "id": 345,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var morphology = require(\"ball-morphology\")\n\nrequire(\"get-pixels\")(\"bwimage.png\", function(err, data) {\n  var r = data.pick(-1, -1, 0)\n  \n  // ... do stuff ...\n})",
   "id": 346,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "web3.utils.decodeBech32Address(hrp, bech32Address)",
   "id": 347,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ObjectStorage = require('ibmcloud-objectstorage');\nvar config = {\n    provider: 'openstack',\n    useServiceCatalog: true,\n    useInternal: false,\n    keystoneAuthVersion: 'v3',\n    authUrl: '',\n    tenantId: '', //projectId from credentials\n    domainId: '',\n    username: '',\n    password: '',\n    region: '' //dallas or london region\n};\nvar os = new ObjectStorage(config, \"my-container\");",
   "id": 348,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Vue from 'vue'\nimport VuePagination from 'v-pc-pagination'\nVue.use(VuePagination)",
   "id": 349,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "is.number(42);\n=> true\n\nis.number(NaN);\n=> false\n\nis.not.number('42');\n=> true\n\nis.all.number('foo', 1);\n=> false\n\nis.any.number({}, 2);\n=> true\n\n// 'all' and 'any' interfaces can also take array parameter\nis.all.number([42, 'foo', 1]);\n=> false",
   "id": 350,
   "stars": 0,
   "errors": [
    2304,
    1128,
    2304,
    1128,
    2304,
    1128,
    2304,
    1128,
    2304,
    1128,
    2304,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "({\n  timelineContext: {\n    timelineWidth,\n    visibleTimeStart,\n    visibleTimeEnd,\n    canvasTimeStart,\n    canvasTimeEnd\n  },\n  headerContext: {\n    unit,\n    intervals: this.state.intervals\n  },\n  getRootProps: this.getRootProps,\n  getIntervalProps: this.getIntervalProps,\n  showPeriod,\n  //contextual data passed through headerData\n  data,\n})=> React.Node",
   "id": 351,
   "stars": 0,
   "errors": [
    2300,
    1359,
    2300,
    1005,
    1005,
    2300,
    1359,
    2300,
    1005,
    2300,
    1359,
    2300,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ParseServer         = require('parse-server').ParseServer;\nvar AzureStorageAdapter = require('parse-server-azure').FilesAdapter;\n\nvar account = 'YOUR_AZURE_STORAGE_ACCOUNT_NAME';\nvar container = 'YOUR_AZURE_STORAGE_CONTAINER_NAME';\nvar options = {\n    accessKey: 'YOUR_ACCESS_KEY',\n    directAccess: false // If set to true, files will be served by Azure Blob Storage directly\n}\n\nvar api = new ParseServer({\n  appId: process.env.APP_ID || 'myAppId',\n  serverURL: process.env.SERVER_URL || 'http://localhost:1337'\n  (...)\n  filesAdapter: new AzureStorageAdapter(account, container, options);\n});",
   "id": 352,
   "stars": 0,
   "errors": [
    2349,
    1109,
    1005,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const cache = yieldCache();",
   "id": 353,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import TelephoneInput from 'react-tel-input-japan';\n\nReact.renderComponent(\n  <div>\n    <TelephoneInput\n      value={this.state.value}\n      onChange={(value, valid) => this.setState({ value, valid })}\n      placeholder={'input telephone number'}\n    />\n  </div>,\n  document.querySelector('#element'));",
   "id": 354,
   "stars": 0,
   "errors": [
    2304,
    17004,
    17004,
    2532,
    2532,
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Conditionally execute a function to continue configuration\n// condition: Boolean\n// whenTruthy: Function -> ChainedMap\n  // invoked when condition is truthy, given a single argument of the ChainedMap instance\n// whenFalsy: Optional Function -> ChainedMap\n  // invoked when condition is falsy, given a single argument of the ChainedMap instance\nwhen(condition, whenTruthy, whenFalsy)",
   "id": 355,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Reset current visitor\nanalytics.reset()",
   "id": 356,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var tr = require(\"tr-064\");\nvar tr064 = new tr.TR064();\ntr064.initTR064Device(\"fritz.box\", 49000, function (err, device) {\n    if (!err) {\n       var wanip = device.services[\"urn:dslforum-org:service:WANIPConnection:1\"];\n       wanip.actions.GetInfo(function(err, result){\n               console.log(result);\n       });\n    }\n});\n",
   "id": 357,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<vue-googlemap-polygon :paths=\"paths\" :events=\"events\" @change=\"change\" editable ></vue-googlemap-polygon>",
   "id": 358,
   "stars": 0,
   "errors": [
    17004,
    1003,
    1003,
    1003,
    1146,
    1005,
    2304,
    1109,
    2304,
    2304,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Account = dynogels.define('Account', {\n  hashKey : 'email',\n\n  // add the timestamp attributes (updatedAt, createdAt)\n  timestamps : true,\n\n  schema : {\n    email   : Joi.string().email(),\n    name    : Joi.string(),\n    age     : Joi.number(),\n    roles   : dynogels.types.stringSet(),\n    settings : {\n      nickname      : Joi.string(),\n      acceptedTerms : Joi.boolean().default(false)\n    }\n  }\n});",
   "id": 359,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const strava = require('strava-v3');\nstrava.athlete.get({'access_token':'abcde'},function(err,payload,limits) {\n    //do something with your payload, track rate limits\n    console.log(limits);\n    /*\n    output:\n    {\n       shortTermUsage: 3,\n       shortTermLimit: 600,\n       longTermUsage: 12,\n       longTermLimit: 30000\n    }\n    */\n});",
   "id": 360,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "$scope.$on('auth:account-destroy-error', function(ev, reason) {\n  alert(\"Account deletion failed: \" + reason.errors[0]);\n});",
   "id": 361,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const logging = require(\"console-logging\");\nconst logger = logging.logger;",
   "id": 362,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { MatomoService } from \"bim-gdpr/src/services/matomo/matomo\"\n\n// Create services :\nconst matomo = bGDPR.createService( new MatomoService('//matomo.php') )\nmatomo.setWeight( -1 ) // Place matomo first.\n\n// Then initialize\nbGDPR\n    .setTemplate( new DefaultTemplate() ) // Initialize the view\n    .init() // Initialize the core",
   "id": 363,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require('gulp');\nvar concatCss = require('gulp-concat-css');\n\ngulp.task('default', function () {\n  return gulp.src('assets/**/*.css')\n    .pipe(concatCss(\"styles/bundle.css\"))\n    .pipe(gulp.dest('out/'));\n});",
   "id": 364,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "ALMA_APIKEY=l7xxabcdefghijklmnopqrstuvwxyz node test.js ",
   "id": 365,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1005,
    2304,
    2593
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const M5Stack = require(\"m5stackjs\");\n\nlet m5 = new M5Stack('OBNIZ_ID_HERE');\n\nm5.onconnect = async function () {\n  m5.buttonA.onchange = (state) => {\n      console.log(state);\n  }\n  \n  const servo = m5.wired(\"ServoMotor\", {signal:2});\n  servo.angle(90);\n\n};\n",
   "id": 366,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// TodoLib.js\nimport memoize from 'memoize-one';\nimport { createStatedLib } from '@stated-library/base';\nimport createTodo from './createTodo';\nimport fetchTodosFromCloud from './fetchTodosFromCloud';\n\nexport default function createTodoLib() {\n\n  const getCompletedTodos = memoize(\n    todos => todos.filter(todo => todo.completed)\n  );\n\n  const getActiveTodos = memoize(\n    todos => todos.filter(todo => !todo.completed)\n  );\n\n  function deriveState(rawState) {\n    return {\n      ...rawState,\n      get activeTodos() {\n        return getActiveTodos(rawState.todos);\n      },\n      get completedTodos() {\n        return getCompletedTodos(rawState.todos);\n      },\n    }\n  }\n\n  return createStatedLib(\n    { todos: [] },\n    base => ({\n\n      addTodo(text) {\n        base.updateState({\n            todos: base.state.todos.concat(makeTodo(text)),\n          }, 'ADD_TODO');\n      },\n\n      toggleTodo(id) {\n        base.updateState({\n          todos: base.state.todos.map(todo =>\n            todo.id === id ? { ...todo, completed: !todo.completed } : todo)\n        }, 'TOGGLE_TODO');\n      },\n\n      async fetchTodos() {\n        base.updateState({ isFetching: true }, 'FETCH_TODOS_START');\n        const newTodos = await fetchTodosFromCloud();\n        base.updateState({\n          todos: base.state.todos.concat(newTodos),\n          isFetching: false,\n        }, 'FETCH_TODOS_COMPLETE');\n      },\n    }),\n  { deriveState });\n",
   "id": 367,
   "stars": 0,
   "errors": [
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 46,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const fs = require('fs');\nconst { generate } = require('gas-entry-generator');\n\nconst fooSource = fs.readFileSync('foo.js', {encoding: 'utf8'});\nconst options = {\n  comment: true,\n  autoGlobalExports: true // Enable to detect exports.* to generate entry point functions.\n};\nconst output = generate(fooSource, options);\nconsole.log(output.entryPointFunctions);\nconsole.log('-----');\nconsole.log(output.globalAssignments);",
   "id": 368,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Config = require('webpack-chain');\n\nconst config = new Config();",
   "id": 369,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n// your-component.js\nimport Dummy from 'innoark-npm2'\n\n...\n<Dummy className=\"dummy\" />\n...\n\n// your-component.css\n.dummy {\n  color: white;\n  background-color: purple;\n}\n",
   "id": 370,
   "stars": 0,
   "errors": [
    1128,
    17004,
    1128,
    1128,
    1434,
    2552,
    2304,
    2304,
    2304,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const trusona = new Trusona(token, secret)\n\nconst document = await trusona.getIdentityDocument(document.id)\n\ndocument.verificationStatus // UNVERIFIED, UNVERIFIABLE, VERIFIED, or FAILED",
   "id": 371,
   "stars": 0,
   "errors": [
    2552,
    2304,
    2304,
    1375,
    1378,
    2448
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "async MergeIntoMKV(downloadedFile = LocalVideoObjectSchema,\n                   srt_subtitles = array(SubtitleMeta),\n                   selectedFile = VideoObjectSchema)",
   "id": 372,
   "stars": 0,
   "errors": [
    1434,
    2304,
    2304,
    2304,
    2304,
    2304,
    2552,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "jamr -w ./model.json -i ./text-file.txt -o ./where-ever.txt -n 5 -s 5000",
   "id": 373,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1003,
    2304,
    2304,
    1003,
    2304,
    2304,
    2304,
    1003,
    2304,
    2304,
    2304,
    1005,
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export default {\n  modules: [\n    'nuxt-feed-yandex-market'\n  ],\n  yandexMarket: {\n    data: {}, // JSON with data or a function that returns the JSON \n    path: '/yandex-market.xml', // The route to your xml file\n    validate: true,\n    cacheTime: 1000 * 3600 * 24 \n  }\n}",
   "id": 374,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "if ('scrollRestoration' in window.history) {\n  window.history.scrollRestoration = 'manual';\n}",
   "id": 375,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Counter = () => {\n  const [count, setCount] = useState(0)\n  return <div>\n    <button onClick={() => setCount(count + 1)} >Increment</button>\n    <span>count: {count}</span>\n  </div>\n}",
   "id": 376,
   "stars": 0,
   "errors": [
    2304,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "removeRow(\n  change: Change,\n  options: {\n    at?: number,\n    normalize?: boolean,\n  }\n): Change",
   "id": 377,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2693,
    2693,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// On GET /statistics\n// Get the top score\nif (url === '/top-score') {\n    dpd.scores.get({$limit: 1, $sort: {score: -1}}, function(result) {\n    setResult(result[0]);\n    });\n}",
   "id": 378,
   "stars": 0,
   "errors": [
    2552,
    2304,
    2552
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "                                                                                      \n    am([34, 56, 78]).forEach(function (value, i) {\n           console.log(value, i);\n    })\n    \n    .log()  // 34 0, 56 1, 78 2, [34, 56, 78]\n    \n    .error(err=>{      \n              // handle errors at end of chain\n      \n    })\n  ",
   "id": 379,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "AuthModule.forRoot({\n  domain: 'YOUR_AUTH0_DOMAIN',\n  clientId: 'YOUR_AUTH0_CLIENT_ID',\n  organization: 'YOUR_ORGANIZATION_ID'\n}),",
   "id": 380,
   "stars": 0,
   "errors": [
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const InsertHtmlWebpackPlugin = require('insert-html-webpack-plugin')\n\nnew InsertHtmlWebpackPlugin(\n  // 第一个参数，必填，配置文件列表\n  {\n    js: [\n      // 可以配置多个，按顺序依次插入\n      { path: 'a.js' }, // path属性表示使用script内联方式\n      { path: 'b.js' },\n      { url: 'https://c.com/c.js' } // url属性表示使用script外部引入方式\n    ],\n    css: [\n      { path: 'd.css' }, // path属性表示使用style内联方式\n      { url: 'https://e.com/e.css' } // url属性表示使用link外部引入方式\n    ]\n  },\n  // 第二个参数，可选，配置插入位置，默认值如下\n  {\n    jsNode: '<body>', // 指定js要插入的节点位置\n    jsSide: 'after', // js要插入在节点位置处的前面还是后面，可选值'after'、'before'\n    cssNode: '</title>', // 指定css要插入的节点位置\n    cssSide: 'after', // css要插入在节点位置处的前面还是��面，可选值'after'、'before'\n  }\n)",
   "id": 381,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\"../../whatwg-fetch/fetch.js\": path.join( // this is the third-party dependency in the lrnwebcomponents\n  __dirname,\n  \"../node_modules/whatwg-fetch/fetch.js\" // this is where it lives in node_modules\n)",
   "id": 382,
   "stars": 0,
   "errors": [
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { enableProdMode, NgZone } from '@angular/core';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { Router } from '@angular/router';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport singleSpaAngular from 'single-spa-angular';\nimport { singleSpaPropsSubject } from './single-spa/single-spa-props';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst lifecycles = singleSpaAngular({\n  bootstrapFunction: singleSpaProps => {\n    singleSpaPropsSubject.next(singleSpaProps);\n    return platformBrowserDynamic().bootstrapModule(AppModule);\n  },\n  template: '<app-root />',\n  Router,\n  NgZone,\n  domElementGetter: () => document.getElementById('angular-app')\n});\n\nexport const bootstrap = lifecycles.bootstrap;\nexport const mount = lifecycles.mount;\nexport const unmount = lifecycles.unmount;",
   "id": 383,
   "stars": 0,
   "errors": [
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  }
 ],
 "After Deletion": [
  {
   "code": "let $PS = require('ps-ajaxqueue');\n\n$PS.ajaxQueue({\n    url: \"https://api.ipify.org/?format=jsonp\",\n    dataType: \"jsonp\",\n    clearQueueDelay: null\n}).done(function (data) {\n    console.log(data);\n});",
   "id": 0,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// style={{\n//     standaloneLayout:{display:'flex', maxWidth:'fit-content'}\n// }}",
   "id": 1,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var express   = require(\"express\")\nvar nofavicon = require(\"express-no-favicons\")\nvar app       = express();\n\napp.use(nofavicon());\n\napp.listen(process.env.PORT)",
   "id": 2,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { poll, ORDER_CREATED } = require('lib-events');\n\nasync function processMessage({ type, source, id, checksum }, ack) {\n  if (type === ORDER_CREATED) {\n    console.log(`${source} created an order!`);\n  }\n\n  await ack()\n}\n\nexports.process = async function () {\n  await poll(processMessage, {\n    maxNumberOfMessages: 10,\n    maxIterations: 10\n  });\n}",
   "id": 3,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " // returns a data object with the name of the control and the raw MIDI message\nkmix.on('any', (data) => {\n    console.log('control-name', data.control, 'control-data', data.raw)\n    // data.control example: 'fader-1'\n    // data.raw example: [176,1,67]\n    switch(data.control){\n        case 'fader-1':\n            console.log('fader-1', data.raw)\n            break;\n        case 'button-vu':\n            console.log('button-vu', data.raw)\n            break;\n        case 'button-vu:off':\n            console.log('button-vu:off', data.raw)\n            break;\n        default:\n            console.log('any other data', data)\n    }\n})",
   "id": 4,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Schema from '@jalik/schema';\n\nexport const ExampleSchema = new Schema({\n  time: {\n    type: 'string',\n    // The time must be like 'HH:mm'\n    pattern: '^\\\\d{1,2}:\\\\d{1,2}$'\n  },\n  password: {\n    type: 'string',\n    // The password must contain alphanumeric and special characters\n    pattern: /^[a-zA-Z0-9_&#@$*%?!]+$/\n  }\n});",
   "id": 5,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const sander = require('@marionebl/sander');\nconst Tesseract = require('tesseract.js');\nconst {langPath} = require('@tessdata/eng');\n\nconst image = sander.readFile('some-image.png');\nconst tesseract = Tesseract.create({langPath});\n\ntesseract.recognize(buffer, {\n  lang: 'eng'\n});",
   "id": 6,
   "stars": 0,
   "errors": [
    2552
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const sagaABC = function* sagaABC() {\n//   yield take('ACTION_A');\n  // Do some I/O here.\n//   yield put(actionB());\n//   yield put(actionC());\n};\n\nconst sagaDE = function* sagaDE() {\n//   yield take('ACTION_D');\n//   yield put(actionE());\n};",
   "id": 7,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "`external: [...Object.keys(pkg.dependencies || {}), ...Object.keys(pkg.peerDependencies || {})],`",
   "id": 8,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mkpdf = require('mkpdf')\n\nmkpdf().from('/path/to/document.md').to('/path/to/document.pdf', function () {\n    console.log('Done')\n})\n\n// Or using streams\nvar fs = require('fs')\n\nfs.createReadStream('/path/to/document.md')\n    .pipe(mkpdf())\n    .pipe(fs.createWriteStream('/path/to/document.pdf'))",
   "id": 9,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import sinon from 'sinon';\nimport { expect } from 'chai';",
   "id": 10,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Cacher = require(\"softweb-cacher\");",
   "id": 11,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n// - Register providers inside the your start/app.js file.\n// ```js\nconst providers = [\n    ...\n//         '@faisal50x/ray/providers/RayProvider',\n//     ...\n]",
   "id": 12,
   "stars": 0,
   "errors": [
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = ({name, source, places, index, count, filesCount, errorsCount}) => {\n    return '';\n};",
   "id": 13,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Get the current state of analytics\n// analytics.getState()\n\n// Get a subpath of state\n// analytics.getState('context.offline')",
   "id": 14,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const isChromeAgent = (context) => {\n  return context.req.headers['User-Agent'].indexOf('Chrome') !== -1;\n}\n\napp.useIf(isChromeAgent, async (context) => {\n  context.res.headers['Content-Type'] = 'text/html';\n});\n\n// now if a route was called from Chrome browser, the response will be set to HTML COntent-Type",
   "id": 15,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var x11 = require('x11-hash-js');\n\nconsole.log(x11.digest('The great experiment continues.'));\n// -> '4da3b7c5ff698c6546564ebc72204f31885cd87b75b2b3ca5a93b5d75db85b8c'",
   "id": 16,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const myMessage = await wtsqs.popOne()\n// The message no longer exists in queue\n// console.log(myMessage)\n// output:\n{\n//   id: 'messageId',\n  receiptHandle: 'messageReceiptHandle'\n//   md5: 'messageMD5',\n  body: { a: 1 }\n}",
   "id": 17,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n\n// ## Issues\n// If you have questions or issues feel free to create new an topic in [issues](https://github.com/Smip/ngx-materialize/issues).\n\n// ## License\n\n// Licensed under [MIT](https://opensource.org/licenses/MIT).",
   "id": 18,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import LazyBackgroundSizes from 'vue-lazy-background-sizes';\n\nconst MyLazyBackground = {\n    mixins: [LazyBackgroundSizes],\n    data() {\n        return {\n            screens: ['762', '1200'],\n        }\n    },\n}\n\n// Vue.component('my-lazy-background', MyLazyBackground);",
   "id": 19,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "backand.initiate({\n  appName: 'APP_NAME',\n  signUpToken: 'SIGNUP_TOKEN',\n  anonymousToken: 'ANONYMOUS_TOKEN'\n});\n\nbackand.service.useAnonymousAuth()\n  .then(() => {\n//       return backand.service.getList('USERS');\n  })\n  .then((response) => {\n      console.log(response);\n  })\n  .catch(function(error){\n      console.log(error);\n  });\n",
   "id": 20,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// mp.people.saveJson(\"example.json\");",
   "id": 21,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// # Install package\n// yarn add @boldgrid/components\n\n// # Import CSS files from dist folder (SASS).\n// @import '@boldgrid/components/dist/css/components.min.css';",
   "id": 22,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// WWWWWW||WWWWWW\n//  W W W||W W W\n//       ||\n//     ( OO )__________\n//      /  |           \\\n//     /o o|    MIT     \\\n//     \\___/||_||__||_|| *\n//          || ||  || ||\n//         _||_|| _||_||\n//        (__|__|(__|__|",
   "id": 23,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport logo from './logo.png'; // Tell Webpack this JS file uses this image\n\nconsole.log(logo); // /logo.84287d09.png\n\nfunction Header() {\n  // Import result is the URL of your image\n//   return <img src={logo} alt=\"Logo\" />;\n}\n\nexport default Header;",
   "id": 24,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<html>\n  ...\n//   <head>\n    ...\n//     <script src=\"angular.js\"></script>\n//     <script src=\"bower_components/ngSnakeCamel/ng-snake-camel.js\"></script>\n    ...\n  </head>\n  ...\n</html>",
   "id": 25,
   "stars": 0,
   "errors": [
    17004,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const mongoose = require('mongoose');\n\n// mongoose.connect(connectionOptions);\n\nconst keyv = new Keyv({\n//   store: new KeyvMongoDB({ mongooseConnection: mongoose.connection })\n});",
   "id": 26,
   "stars": 0,
   "errors": [
    2552
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "grunt.initConfig({\n  checkFileSize: {\n    options: {\n      separator: ': ',\n      punctuation: ' !!!',\n    },\n    files: {\n      'dest/default_options': ['src/testing', 'src/123'],\n    },\n  },\n});",
   "id": 27,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const removeEmptyLines = require(\"remove-blank-lines\");\n\nconsole.log(removeEmptyLines(\n    `Hello\n\nWorld!\n\n\n  **   **\n\n  **   **\n\n     -\n\n*         *\n\n *********`\n));\n// =>\n// Hello\n// World!\n//   **   **\n//   **   **\n//      -\n// *         *\n//  *********",
   "id": 28,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var failpoints = require('failpoints').create();\n\n// setup failpoints\n\nfailpoints.setAll(true);\nfailpoints.setAll({probability: 0.5});\nfailpoints.setAll(false);\n",
   "id": 29,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const HumanName = new GraphQLValidatedString({\n  name: 'HumanName'\n}).regex(/([a-zA-Z]{3,30}\\s*)+/);\n\nAssert.throws(()=> {\n  HumanName.parseValue('aa');\n}, /does not match/);",
   "id": 30,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import set from \"just-safe-set\";\n\nconst obj1 = {};\nset(obj1, \"a.aa.aaa\", 4); // true\nobj1; // {a: {aa: {aaa: 4}}}\n\nconst obj2 = {};\n// set(obj2, [a, aa, aaa], 4); // true\nobj2; // {a: {aa: {aaa: 4}}}\n\nconst obj3 = { a: { aa: { aaa: 2 } } };\nset(obj3, \"a.aa.aaa\", 3); // true\nobj3; // {a: {aa: {aaa: 3}}}\n\n// don't clobber existing\nconst obj4 = { a: { aa: { aaa: 2 } } };\nset(obj4, \"a.aa\", { bbb: 7 }); // false\n\nconst obj5 = { a: {} };\nconst sym = Symbol();\nset(obj5.a, sym, 7); // true\nobj5; // {a: {Symbol(): 7}}",
   "id": 31,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// id: '0000-0000-0000-0000',\n// difficulty: [..],\n// clearRate: number,\n// title: 'Name',\n// img: 'Url',\n// thumbnailImg: 'Url',\n// gameStyle: [..],\n// createdAt: Timestamp,\n// tag: [..],\n// stared: number,\n// played: number,\n// shared: number,\n// clears: number,\n// attempts: number,\n// maker: \n//   \\_ login: 'Nintendo ID',\n//   \\_ faceImg: 'Url',\n//   \\_ flag: 'Country',\n//   \\_ name: 'Name'",
   "id": 32,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// node scripts/integrate.js --name acme --openapi https://api.acme.com/openapi.json\n// # or\n// node scripts/integrate.js --name acme_rss --rss https://acme.com/rss.xml",
   "id": 33,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import * as PIXI from 'pixi.js';\nimport {Spine} from 'pixi-spine';\n\nconst app = new PIXI.Application();\n// document.body.appendChild(app.view);\n\napp.loader\n    .add('spineCharacter', 'spine-data-1/HERO.json')\n    .load(function (loader, resources) {\n        const animation = new Spine(resources.spineCharacter.spineData);\n\n        // add the animation to the scene and render...\n        app.stage.addChild(animation);\n        \n        if (animation.state.hasAnimation('run')) {\n            // run forever, little boy!\n            animation.state.setAnimation(0, 'run', true);\n            // dont run too fast\n            animation.state.timeScale = 0.1;\n        }\n        \n        app.start();\n    });",
   "id": 34,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Rasha.thumbprint({ jwk: jwk }).then(function (thumbprint) {\n  console.log(thumbprint);\n});",
   "id": 35,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "let cc = {\n  \"sn\":3788106,\n   \"an\":[\"2c4b523bfa2b54a3c2cfec376336ef6e\",\"dc1edbe0708e179e84e6ee0185849811\",\"1b32715dea8bd66c6136f2bb226a9783\",\"cf4a451a23d256299f306e0170632e9c\",\"7bee1781698bfd26a40d384e3e9ba233\",\"57a59cc3fe0a9e2b0ef55d9ee7d83aa0\",\"8741aba5f9ada55cd4cc7ad9ff8cfc5e\",\"27a940f79e5bb895218dc6fee619439a\",\"6d7611020258dc07544255aecb05f94e\",\"8fd75c4a543107c762473cb5c6814b25\",\"b8fb577d62bee5e47622084deec2dc72\",\"2dddefde6b2da5f85d8a50af78a8c6ef\",\"0152c280f2b1df572e679edc5bf5aae4\",\"213bce1b1e301b90e82189ba0a908e89\",\"2f35eda22494903e5c680856304610b1\",\"64bdfe44432444514e8234fa115b9352\",\"6943424a235be73f86a065fe97756b03\",\"e037963736d439d4bc72efa49aa4f2e5\",\"da555eaad78e610e5beb51ec5d051781\",\"47849f44ee8ee1d0d41782ca21dacdc3\",\"4ec1fea2c736e8e82e1836cef7512cdb\",\"de9ec5865fa289a09059ab8a87e73ac4\",\"fb5fca0a5196333023043f080a6fb666\",\"c8df8adefe8b25103358df30491c5409\",\"dae2b572756a596fa8c97f55e8712854\"]\n}\n\nlet data = {\n  \"coin\" : cc,\n  \"paydata\" : \"email, stack, 100, 0,0,0,0,0, alex.skywallet.cc, Car payment,, ready\\nemail, stack, 150, 0,0,0,0,0, john.skywallet.cc, My debt,, ready\\nemail, stack, 21150, 0,0,0,0,0, roller.skywallet.cc, Chargeback,, ready\",\n  \"id\": \"f2494e21fcd4e54a5acd7be6f2be6e50\"\n\n}\nlet c = r.apiBillPay(data, () => {}).then(response => {\n  if (response.code != RaidaJS.ERR_NO_ERROR) {\n    console.log(\"Billpay sent\")\n    return\n  }\n\n//   if (response.code == RaidaJS.ERR_SENT_PARTIALLY) {\n    console.log(\"Only \" + response.amount + \" CloudCoins sent. Try again later using the same ID: \" + response.id)\n    console.log(\"Recipients NOT sent:\")\n    for (let i = 0; i < response.recipients; i++) {\n      if (response.recipients[i].status == \"ready\")\n        console.log(response.recipients[i].address + \",\")\n    }\n  }\n// }",
   "id": 36,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 21,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// _.mixin({awaitEach});",
   "id": 37,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n// modal.modal; // the modal element\n// modal.openButtons; // an array of open buttons\n// modal.closeButtons; // an array of close buttons\n// modal.isOpen; // boolean indicating if the modal is currently open\n",
   "id": 38,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// var coinbase = web3.pi.coinbase;\n// var balance = web3.pi.getBalance(coinbase);",
   "id": 39,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// App.js\nimport React from 'react'\nimport { createRouter, Link } from 'react-context-router'\n\n// const NotFound = () => <div>Not Found</div>\n\nconst Nav = () => (\n//   <nav>\n//     <Link href='/' children='Home' />\n//     <Link href='/posts/1' children='First Post' />\n//   </nav>\n)\n\nclass App extends React.Component {\n  render () {\n//     const { route } = this.props\n//     const Comp = route.component || NotFound\n\n    return (\n//       <div>\n//         <Nav />\n//         <Comp />\n//       </div>\n//     )\n  }\n}\n\nexport default createRouter(App)",
   "id": 40,
   "stars": 0,
   "errors": [
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { Scrollbars } from 'react-custom-scrollbars';\n\n// class App extends Component {\n//   render() {\n    return (\n      <Scrollbars style={{ width: 500, height: 300 }}>\n        <p>Some great content...</p>\n      </Scrollbars>\n    );\n//   }\n// }",
   "id": 41,
   "stars": 0,
   "errors": [
    1108
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { TagInputModule } from 'ngx-chips';\n\nTagInputModule.withDefaults({\n    tagInput: {\n        placeholder: 'Add a new tag',\n        // add here other default values for tag-input\n    },\n    dropdown: {\n        displayBy: 'my-display-value',\n        // add here other default values for tag-input-dropdown\n    }\n});",
   "id": 42,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const axios = require('axios').default;\n\n// axios.<method> will now provide autocomplete and parameter typings",
   "id": 43,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nimport {SectionsContainer, Section, Header, Footer} from 'react-fullpage';\n\n// => in the render() method of your app\nreturn (\n  <Header>\n    <a href=\"#sectionOne\" className=\"opa\">Section One</a>\n    <a href=\"#sectionTwo\">Section Two</a>\n    <a href=\"#sectionThree\">Section Three</a>\n  </Header>\n  <Footer>\n    <a href=\"\" className=\"opa\">Dcoumentation</a>\n    <a href=\"\">Example Source</a>\n    <a href=\"\">About</a>\n  </Footer>\n  <SectionsContainer {...options}>\n    <Section>Page 1</Section>\n    <Section>Page 2</Section>\n    <Section>Page 3</Section>\n  </SectionsContainer>\n);\n",
   "id": 44,
   "stars": 0,
   "errors": [
    2657
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// * 但是��要引入app.js这个文件，因为所有的**入口全都从这个app.js进入**",
   "id": 45,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "@Store({\n  endpoint: 'system',\n  mutations: {\n    login: {\n      type: MutationType.POST,\n      path: 'security/login'\n    }\n  }\n})",
   "id": 46,
   "stars": 0,
   "errors": [
    1146
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// metrics.mexists( 'net.bytesRX' );\n// returns true\n\n// metrics.mexists( 'cpu.utilization' );\n// returns false",
   "id": 47,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {observer} from 'mobx-react';\nimport {Form} from 'mobx-antd-form';\n\nconst FormItem = Form.Item;\nconst FormField = Form.Field;\n\n@Form.create({\n    fields: ({demo}) => demo.fields\n// })\n// @observer\n// class BasicForms extends React.Component {\n    \n    handleSubmit = e => {\n        const {dispatch, form} = this.props;\n        e.preventDefault();\n        form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                // submit form\n            }\n        });\n//     };\n    \n    // ** 实现 title 的 label 属性随着其 value 属性变化 **\n    render(){\n        \n        const {form, demo} = this.props;\n        \n        return (\n            <Form onSubmit={this.handleSubmit} hideRequiredMark style={{marginTop: 8}}>\n                <FormItem field={form.get('title')}>\n                    <FormField field={form.get('title')} label={demo.fields.title.value}>\n                        <Input placeholder='请输入标题'/>\n                    </FormField>\n                </FormItem>\n                <FormItem field={form.get('date')}>\n                    <FormField field={form.get('date')} rules={[{required: true, message: '我的优先级更高'}]}>\n                        <RangePicker\n                            style={{width: '100%'}}\n                            placeholder={[\n                                formatMessage({id: 'form.date.placeholder.start'}),\n                                formatMessage({id: 'form.date.placeholder.end'}),\n                            ]}\n                        />\n                    </FormField>\n                </FormItem>\n                <FormItem style={{marginTop: 32}}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        <FormattedMessage id=\"form.submit\"/>\n                    </Button>\n                    <Button style={{marginLeft: 8}}>\n                        <FormattedMessage id=\"form.save\"/>\n                    </Button>                                            \n                </FormItem>\n            </Form>\n        );\n    }\n}",
   "id": 48,
   "stars": 0,
   "errors": [
    1005,
    1005,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 45,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import map from \"just-map-object\";\n\n// DEPRECATED: use just-map-values\nmap({ a: 3, b: 5, c: 9 }, (key, value) => value + 1); // {a: 4, b: 6, c: 10}\nmap({ a: 3, b: 5, c: 9 }, (key, value) => key); // {a: 'a', b: 'b', c: 'c'}\nmap({ a: 3, b: 5, c: 9 }, (key, value) => key + value); // {a: 'a3', b: 'b5', c: 'c9'}",
   "id": 49,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// store.log('user'); // {\"name\":\"James Bond\",\"email\":\"bond007@live.com\",\"bio\":\"I spy for a living.\"}",
   "id": 50,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// npx hermione merge-stat-reports src-report-1.json src-report-2.json --html dest-html-report --json report.json",
   "id": 51,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "grunt.initConfig({\n\n    copy: {\n        somefiles: {\n            src: \"./mydir/**\",\n            dest: \"./myNormallyOutputDir/\"\n        }\n    },\n    multidest: {\n        copy_some_files: {\n            tasks: [\n                \"copy:somefiles\"\n            ]\n//             dest: [\"./dist/distdir1\", \"./dist/distdir2\"]\n        },\n    },\n});",
   "id": 52,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var fs = require('fs'),\n  Proposal = require('proposal'),\n  readProposal = Proposal(fs.readFile);",
   "id": 53,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// minify = require('minify');",
   "id": 54,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// docker pull apachecn0/matplotlib-doc-zh\n// docker run -tid -p <port>:80 apachecn0/matplotlib-doc-zh\n// # 访问 http://localhost:{port} 查看文档",
   "id": 55,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// let fullsizeCanvasElement = document.getElementById('fullsize-canvas');\n// let thumbnailCanvasElement = document.getElementById('thumbnail-canvas');\n\n// CanvasCamera.initialize(fullsizeCanvasElement, thumbnailCanvasElement);\n\nlet options:CanvasCamera.CanvasCameraOptions = {\n    cameraFacing: 'front',\n    fps: 15,\n    thumbnailRatio: 1/6,\n    onAfterDraw: function(frame) {\n      // do something with each frame of the fullsize canvas element only\n      // frame.image.src; // file path or base64 data URI\n      // frame.element.toDataURL(); // requested base64 data URI\n    }\n};\n\n// CanvasCamera.start(options);",
   "id": 56,
   "stars": 0,
   "errors": [
    2503,
    8010
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "describe('run', () => {\n  fancy\n  .stdout()\n  .do(() => console.log('foo'))\n//   .do(({stdout}) => expect(stdout).to.equal('foo\\n'))\n  .it('runs this callback last', () => {\n    // test code\n  })\n\n  // add to context object\n//   fancy\n  .add('a', () => 1)\n  .add('b', () => 2)\n  // context will be {a: 1, b: 2}\n  .it('does something with context', context => {\n    // test code\n  })\n})",
   "id": 57,
   "stars": 0,
   "errors": [
    2593,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "require(\"typeface-open-sans\")",
   "id": 58,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// app.set('adminAuthServerMaster', function(msg, cb){\n//   if(auth success) {\n//     cb('ok');\n//   } else {\n//     cb('bad');\n//   }\n// })",
   "id": 59,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// DEBUG=mysql-express-session*,mysql-connection-manager node your-app.js",
   "id": 60,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Boilerplate = require('boilerplate');\nvar h5bp = new Boilerplate({\n  options: {\n    cwd: 'vendor/h5bp/dist'\n  },\n  root: {src: ['{.*,*.*}'],   dest: 'src/'},\n  css:  {src: ['css/*.css'],  dest: 'src/'},\n  doc:  {src: ['doc/*.md'],   dest: 'src/'},\n  js:   {src: ['js/**/*.js'], dest: 'src/'}\n});\nconsole.log(h5bp);",
   "id": 61,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// DEV_COMMAND=gatsby -u http://localhost:8080 -r -o ./out",
   "id": 62,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var view = async (view) => {\n    //Create an collection with a bindable field.\n    view.userData = { userName : \"John Doe\" };\n    //Bind the inner HTML of the element to the field on the collection\n    view.$nameLabel.bind = () => view.userData.userName;\n};\n\nexport { view };",
   "id": 63,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// middleware/authentication.js\n\nvar Authentication = require('../lib/authentication');\n\nfunction(req, res, next) {\n  var token = req.get('X-AUTH-TOKEN');\n\n  if(!token) {\n    /* instead of redirecting to login, give the\n    *  deep linking middleware a chance to store the\n    *  current request url, and THEN redirect to login\n    *  via the login option\n    */\n    next();\n  }\n\n  Authentication\n  .authenticate(token)\n  .then(function(tokenOrWhateverAuthYields) {\n    // we can now pass this in as the authentication option\n    req.user = tokenOrWhateverAuthYields;\n    next();\n  })\n  .error(function(e) {\n    // redirect to login since they gave us a bad token\n  });\n}",
   "id": 64,
   "stars": 0,
   "errors": [
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/* Set worksheet sheet to \"normal\" */\nws[\"!margins\"]={left:0.7, right:0.7, top:0.75,bottom:0.75,header:0.3,footer:0.3}\n/* Set worksheet sheet to \"wide\" */\nws[\"!margins\"]={left:1.0, right:1.0, top:1.0, bottom:1.0, header:0.5,footer:0.5}\n/* Set worksheet sheet to \"narrow\" */\nws[\"!margins\"]={left:0.25,right:0.25,top:0.75,bottom:0.75,header:0.3,footer:0.3}",
   "id": 65,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require('gulp');\nvar jspmAssets = require('gulp-jspm-assets');\n\ngulp.task('sass', function() {\n    jspmAssets({\n//       'bootstrap', 'sass/**/*.scss',\n//       'foundation', 'sass/**/*.scss'\n    })\n//     .pipe(whateverTask())\n    .pipe(gulp.dest('dest'));\n});",
   "id": 66,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " // Content to be scrolled\nvar $scrollContent = document.getElementById(\"content-scroll-vertical\");\nvar $scrollView = $scrollContent.parentNode; // Container for the content\nvar options = {\n    bounds: true,\n    direction: \"vertical\",\n    scrollbar: \"scrollbar-vertical\" // CSS class\n};\n$scrollView.scroll_bar = new RADJS_ScrollView.ScrollBar($scrollView, {\n    className: options.scrollbar,\n    direction: options.direction,\n    smart: $scrollContent.querySelector(\"div.list_of_something\")\n}); // `scroll_bar` it's just a custom name\n// Create and attach ScrollView.\n// `scroller` it's just a custom name, but in WebComponent it's predefined.\n// $scrollView.scroller = new RADJS_ScrollView($scrollView, options);\n// Create and attach custom pointer events, because of: IE support, SVG elements etc.\n// `tracker` is also custom name but it's also predefined in WebComponent\n// $scrollView.tracker = new PointerTracker($scrollView, $scrollView.scroller);",
   "id": 67,
   "stars": 0,
   "errors": [
    2584,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const okayRecs = require('@andrewshell/okay-recs');\n\n// Source of all user ratings in system.\nconst allUserRatings = {\n    \"user0\": {\n        \"https://www.metacritic.com/tv/112263\": 1,\n        \"https://www.metacritic.com/tv/24\": 4,\n        \"https://www.metacritic.com/tv/30-rock\": 3,\n        \"https://www.metacritic.com/tv/alias\": 2,\n        \"https://www.metacritic.com/tv/archer\": 2,\n        \"https://www.metacritic.com/tv/arrested-development\": 2,\n        \"https://www.metacritic.com/tv/band-of-brothers\": 3,\n        ...\n    },\n    \"user1\": {\n        \"https://www.metacritic.com/tv/3rd-rock-from-the-sun\": 2,\n        \"https://www.metacritic.com/tv/adventure-time\": 4,\n        \"https://www.metacritic.com/tv/archer\": 1,\n        \"https://www.metacritic.com/tv/arrested-development\": 3,\n        \"https://www.metacritic.com/tv/better-call-saul\": 4\n//         ...\n    },\n    ...\n};\n\n// Subset of user ratings that you want recommendations and similar users for.\n// Note: This example shows one user, but can work for multiple users at once.\nconst subUserRatings = {\n    user10: allUserRatings['user10']\n};\n\n// Sum of scores of people who gave program 1 a rating of x gave to program 2\n// Intermediate structure for user recommendations. Should be cached.\nconst allProgramScores = okayRecs.programScores(allUserRatings);\n\n// What programs are the users most likely to like?\nconst subUserRecommendations = okayRecs.userRecommendations(allProgramScores, subUserRatings);\n\n// What other users is this user similar to?\nconst subUserSimilarUsers = okayRecs.similarUsers(allUserRatings, subUserRatings);",
   "id": 68,
   "stars": 0,
   "errors": [
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 27,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// integrify.rules.js\n\nmodule.exports = [\n  {\n    rule: 'REPLICATE_ATTRIBUTES',\n    name: 'replicateMasterToDetail',\n    // ...\n  },\n  // ...\n];",
   "id": 69,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "angular.module('myApp', ['ionic.native']).controller('MyPageController', function ($cordovaCamera) {\n  $cordovaCamera.getPicture().then(\n    function (data) {\n      console.log('Took a picture!', data);\n    },\n    function (err) {\n      console.log('Error occurred while taking a picture', err);\n    }\n  );\n});",
   "id": 70,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// gatsby-browser.js\nimport 'simple-css-reset';",
   "id": 71,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// chai.expect(semver.parse('Linux 14.04')).to.equal(null);\n// chai.expect(semver.parse('A development version')).to.equal(null);\n// chai.expect(semver.parse('Version A')).to.equal(null);",
   "id": 72,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// dsa.setInstance(dsaId); // DSA ID",
   "id": 73,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// web3.setProvider(new web3.providers.HttpProvider('http://host.url', 0, BasicAuthUsername, BasicAuthPassword));",
   "id": 74,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n//从数据库中查询出来的数据对象\nvar arr = [{id: 10, name: \"name1\", value: \"value1\"}, {id: 11, name: \"name2\", value: \"value2\"}];\n//把id值作为key生成一个对象\n/* data = {10: {id: 10, name: \"name1\", value: \"value1\"}, 11: {id: 11, name: \"name2\", value: \"value2\"}} */\n// var data = arrToObj(arr, \"id\");\n//把id值作为key，只需要name的值\n//data = {10: \"name1\", 11: \"name2\"}\n// var data = arrToObj(arr, \"id\", \"name\");\n//只获取id的值\n// ids = [10, 11];\n// var ids = arrToObj(arr, \"id\", null);",
   "id": 75,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// click(\"html>body>div>div:eq(0)>button\");\nandThen(function () {\n//  equal(find(\"#foo\").length, 0, \"foo removed AFTER user [INSERT REASON]\");\n});\n",
   "id": 76,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { through } = require('streamss-through')\nlet cnt = 0\n\nrequire('fs').createReadStream(__filename, { encoding: 'utf8', highWaterMark: 30 })\n.pipe(through(\n  { decodeStrings: false },\n  function transform(str) {\n    cnt += 1\n    this.push(str.replace(/\\s/g, '‧') + '\\n')\n  },\n  function flush() {\n    console.log('\\ncounted num of chunks: ' + cnt)\n  }\n))\n.pipe(process.stdout)",
   "id": 77,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const demethodize = require(\"just-demethodize\");\n\nconst trimFn = demethodize(\"\".trim);\n[\"hello \", \" goodbye\", \"hello again\"].map(trimFn);",
   "id": 78,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const mapped = {\n//   a: data.a,\n//   b: data.b\n}",
   "id": 79,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var o2x = require('object-to-xml');\n\nvar obj = { \n  '?xml version=\\\"1.0\\\" encoding=\\\"iso-8859-1\\\"?' : null,\n  request : {\n    '@' : {\n      type : 'product',\n      id : 12344556\n    },\n    '#' : {\n      query : {\n        vendor : 'redhat',\n        name : 'linux'\n      }\n    }\n  }\n};\n\nconsole.log(o2x(obj));\n\n/*\n<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n<request type=\"product\" id=\"12344556\">\n  <query>\n    <vendor>redhat</vendor>\n    <name>linux</name>\n  </query>\n</request>\n*/",
   "id": 80,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 26,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// let post = new Post();\n\n// await post.save(); // creates a new post\n\n// post.set('title', 'New title');\n// await post.save(); // updates an existing post",
   "id": 81,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var imdbWatchlist = require('imdb-watchlist');\n\nimdbWatchlist('ur23098466').then(function (watchlist) {\n  // watchlist is an array of objects on the form:\n  // { title: '', imdbId: ''}\n\n  // This will log out a random movie from your watchlist\n  console.log(watchlist[Math.floor(Math.random() * watchlist.length)]);\n});",
   "id": 82,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "JsonRoutes.ErrorMiddleware.use(\n  '/handle-error',\n//   RestMiddleware.handleErrorAsJson\n);\n\nJsonRoutes.add('get', 'handle-error', function () {\n  var error = new Meteor.Error('not-found', 'Not Found');\n  error.statusCode = 404;\n  throw error;\n});",
   "id": 83,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const loggedIn = res._headers['logged-in'] === \"true\";",
   "id": 84,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "server.register({\n    register: require('hapi-droutes'),\n    options: {\n        'root':'routes/please/search_in/here',\n        'match':'resource/*/route.*.js',\n        'dependencies':['hello','hapi']\n    }\n}, function (err) {\n    if (err) throw err;\n});",
   "id": 85,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var cacheInterceptor = function cacheInterceptor(args) {\n  var req = args.req,\n      res = args.res;\n    // retrieve cached response\n    return cacheStore.getCacheRes(req)\n      .then((cachedRes) => {\n        return new Promise((resolve, reject) => {\n          try {\n            if (cachedRes) {\n              // response with cached result\n              res.end(cachedRes);\n              // abort the executing of passes sequence\n              reject();\n            } else {\n              // continue executing other passes\n              resolve();\n            }\n          } catch (err) {\n            reject(err);\n          }\n        })\n      })\n  };\n// insert this pass before the default 'deleteLength' pass\n// proxy.before('web', 'deleteLength', cacheInterceptor);\n",
   "id": 86,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <LoadIt load={() => import('./LoadMe')} />",
   "id": 87,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import parallel from 'apr-parallel';\n\nconst then = (v) => new Promise((resolve) => resolve(v));\n\nconst withArray = await parallel([\n  async () => await then(1),\n  async () => await then(2)\n]);\n\n// withArray = [1, 2]\n\nconst withObject = await parallel({\n  one: async () => await then(1),\n  two: async () => await then(2)\n});\n\n// withObject = { one: 1, two: 2 }",
   "id": 88,
   "stars": 0,
   "errors": [
    1378,
    1378
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// run tests\n// grunt\n\n// run tests and show a test coverage report\n// grunt specs",
   "id": 89,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// foo.js\nObject.defineProperty(exports, '__esModule', {value: true})\n\nexports.default = {\n  foo: 'default-foo'\n}\n\nexports.foo = 'foo'",
   "id": 90,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'core-js/features/array/includes';\nimport 'core-js/features/object/assign';",
   "id": 91,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n// const adapter = setAdapter(BaseAdapter);\n\n// exports.api = functions.https.onRequest((...args) => adapter.handle(...args));",
   "id": 92,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// my-app\n// ├── README.md\n// ├── node_modules\n// ├── package.json\n// ├── .gitignore\n// ├── public\n// │   └── favicon.ico\n// │   └── index.html\n// │   └── manifest.json\n// └── src\n//     └── App.css\n//     └── App.js\n//     └── App.test.js\n//     └── index.css\n//     └── index.js\n//     └── logo.svg\n//     └── registerServiceWorker.js",
   "id": 93,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { MoodleClient } = require('node-moodle');\n// const moodle = new MoodleClient({ ... });\n\nasync function main() {\n  try {\n    //Request data\n    var req = {\n      users: [\n        {\n          firstname: \"Foo\",\n          lastname: \"Bar\",\n          username: \"foo\",\n          password: \"FooBar123!\",\n          email: \"foo@example.com\",\n        }\n      ]\n    };\n\n    //Invoke a method\n//     var res = await moodle.core.user.createUsers(req);\n    \n    //Response data\n//     console.log(res);\n    /*\n    [\n      {\n        \"id\": 3,\n        \"username\": \"foo\"\n      }\n    ]\n    */\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\nmain();",
   "id": 94,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 28,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//   const cache = LRUCache([cacheSize = 10]);\n\n // return an item from the cache\n//   cache.get(key)\n\n  // add an item to the cache. overwrite if already exists\n//   cache.set(key, value) \n\n  // remove an item from the cache\n//   cache.remove(key) \n\n  // reset the cache to an empty and fresh state\n//   cache.clear(limit = 10) \n\n  // Traverse each cached item and call a function\n  // callback is passed [node element, element number, cache instance] \n//   cache.forEach(callback) \n\n  // return a JSON represenation of the cache\n//   cache.toJSON() ",
   "id": 95,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { connectPubsub } from '@yoctol/message-queue';\n\nconst pubsub = await connectPubsub({\n  driver: 'rabbitmq',\n  amqpConfig: {\n    url: 'amqp://localhost',\n    exchange: 'amqp.exchange',\n    connectOptions: {\n      //node-amqp-connection-manager connect() options \n      heartbeatIntervalInSeconds: 5,\n      ...\n//       connectionOptions: {\n        //amqplib connection options\n//         ...\n//       },\n    },\n    createChannelOptions: {\n      //node-amqp-connection-manager createChannel() options \n      name: 'channelName',\n//       setup: ...,\n      json: true,\n    },\n },\n});",
   "id": 96,
   "stars": 0,
   "errors": [
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// function(i) {\n    // delete the tag at index i\n// }",
   "id": 97,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "facebookConnectPlugin.showDialog({\n    method: \"share\",\n    picture:'https://www.google.co.jp/logos/doodles/2014/doodle-4-google-2014-japan-winner-5109465267306496.2-hp.png',\n    name:'Test Post',\n    message:'First photo post',\n    caption: 'Testing using phonegap plugin',\n    description: 'Posting photo using phonegap facebook plugin'\n  }, function (response) {\n    console.log(response)\n  }, function (response) {\n    console.log(response)\n  }\n);",
   "id": 98,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "namiConfig.logger = require('log4js').getLogger('Nami.Core');\nvar nami = new (require(\"nami\").Nami)(namiConfig);",
   "id": 99,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// #@ Node\n// node_modules\n\n// # Build\n// build\n\n// # Coverage directory\n// coverage\n\n// # logs\n// *.log\n// .logs\n\n// #@ Platform Specific\n// .DS_Store\n// Thumbs.db",
   "id": 100,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n// @param {Error|null} err Pass an error object here to indicate an error\n//                         occured. Very useful for validation; stops the flow here.\n\n// @param {string} key     The key of the property that has finished, \n//                         this gives you a chance to format the key name.\n\n// @param {*} value        The value you want the key to have\n",
   "id": 101,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const storybook = require('@ltht-react/storybook');\n\n// TODO: DEMONSTRATE API",
   "id": 102,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// ionic cordova plugin add cordova-plugin-alicloud-feedback --variable APP_KEY=你的KEY --variable APP_SECRET=你的SECRET",
   "id": 103,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const socks5http = require('socks5-http');\n\n// set socks5 proxy port and host\n// 1080 and \"localhost\" is default\nsocks5http.setSocks5(1080, \"localhost\")\n\n// https GET\nsocks5http.get(\"https://www.google.com\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})\n\n// http GET\nsocks5http.get(\"http://www.google.com\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})\n\n// ip and custom port\nsocks5http.get(\"http://47.98.223.187:3000\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})",
   "id": 104,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 29,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var app = require(\"your-awesome-component\");\n// var instance = new app(yourDiv);",
   "id": 105,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Usage: spraygun <template> <project-directory>\n\nGenerate a project in the specified directory, based on a template.\n\nFor example, to generate a react app in a directory named hello-world:\n  $ npx spraygun -t react hello-world\n\nThe officially supported spraygun templates are:\n  -t express\n  -t react\n  -t react-ts\n\nTo use a custom template, specify one of the following:\n  -p path   a local template directory\n//   -r URL    a git repository URL",
   "id": 106,
   "stars": 0,
   "errors": [
    2304,
    2304,
    17004,
    17008,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// import com.lynxit.contactswrapper.ContactsWrapperPackage;\n// ...\n\n// @Override\n// protected List<ReactPackage> getPackages() {\n    return Arrays.<ReactPackage>asList(\n        new MainReactPackage(),\n//         ...,\n       new ContactsWrapperPackage()\n   );\n// }",
   "id": 107,
   "stars": 0,
   "errors": [
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// flv.$canvas;",
   "id": 108,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const conf = require('run-con')('myapp', {\n    port: 12345,\n    mode: 'test'\n});\n\nconsole.log(JSON.stringify(conf, null, 2));",
   "id": 109,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// type.isAsyncFunction(async function(){}) //=> true",
   "id": 110,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { ProviderStore } from 'react-redux-just'\n\nconst model = {\n  state: {\n    date: {\n      __options:{\n        type: 'date',\n        value: new Date(),\n        receiving: date => date.toString(),\n        request: (resolve, reject) => {\n              fetch( REQUEST_URL , {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ title: 'React POST Request' })\n                })\n                .then(response => response.json())\n                .then(({result}) => resolve(result));\n            }\n      }\n    }\n  }\n}\n\n// ReactDOM.render(\n//     <ProviderStore model={model}>\n//       <App />\n//     </ProviderStore>\n//   ,document.getElementById('root')\n// );\n",
   "id": 111,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 21,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import IntentLauncher, { IntentConstant } from 'react-native-intent-launcher'\n// ...\nIntentLauncher.startActivity({\n    action: 'android.settings.APPLICATION_DETAILS_SETTINGS',\n    data: 'package:com.example'\n})\n// ...",
   "id": 112,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// cd contracts\n// npm install\n// npm run build",
   "id": 113,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var NodeWebcam = require( \"node-webcam\" );\n\nvar FSWebcam = NodeWebcam.FSWebcam; //require( \"node-webcam/webcams/FSWebcam\" );\n\nvar opts = {};\n\nvar cam = new FSWebcam( opts );",
   "id": 114,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import propType, { ow } from 'ow-prop-type'\n\nclass MyComponent extends React.Component {\n  static propTypes = {\n    // propType with a predicate\n    total: propType(\n      ow\n        .number\n        .integer\n        .greaterThanOrEqual(0)\n    ),\n    // propType with a callback, must return a predicate\n    current: propType((props) => {\n      return ow\n        .number\n        .integer\n        .greaterThanOrEqual(0)\n        .lessThanOrEqual(props.total)\n    }\n  }\n}",
   "id": 115,
   "stars": 0,
   "errors": [
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Vue from 'vue'\nimport Vuetify from 'vuetify'\nimport DaySpanVuetify from 'dayspan-vuetify'\nimport App from './App.vue'\n\nimport 'vuetify/dist/vuetify.min.css'\nimport 'material-design-icons-iconfont/dist/material-design-icons.css'\nimport 'dayspan-vuetify/dist/lib/dayspan-vuetify.min.css'\n\nVue.config.productionTip = false\n\nVue.use(Vuetify);\n\nVue.use(DaySpanVuetify, {\n  methods: {\n    getDefaultEventColor: () => '#1976d2'\n  }\n});\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})",
   "id": 116,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "grunt.initConfig({\n  mustache_html: {\n    development: {\n      options: {\n        src: 'src',\n        dist: 'dist',\n        type: 'mustache' // mustache Or hbs\n      },\n      globals: {\n        analytics_id: 'UA-123456-1'\n      }\n    }\n  }\n});",
   "id": 117,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <script src=\"path/to/dist/js/tether.min.js\"></script>",
   "id": 118,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function log(response) {\n  console.log(`Transaction ID: ${response.transactionId}`)\n  console.log(`Function code: ${response.functionCode}`)\n  console.log(`Total number of registers: ${response.noOfRegisters}`)\n  console.log(`Values: ${response.registerValues.join(', ')}`)\n}\n\nasync function example() {\n  try {\n//     const response = await client.send(request)\n//     log(response)\n  } catch (error) {\n    console.log(`Error: ${error}`)\n  }\n}\n\nexample()",
   "id": 119,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Size (Body, H1, etc.)\n//   Alignment (Left, Center, Right)\n//     Weight (Regular, Semibold, etc.)\n//       Color",
   "id": 120,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/* bookType can be 'xlsx' or 'xlsm' or 'xlsb' */\nvar wopts = { bookType:'xlsx', bookSST:false, type:'binary' };\n\n// var wbout = XLSX.write(workbook,wopts);\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n  for (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n  return buf;\n}\n\n/* the saveAs call downloads a file on the local machine */\n// saveAs(new Blob([s2ab(wbout)],{type:\"\"}), \"test.xlsx\")",
   "id": 121,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var dfltCfg = { slot: 'foo' },\n  meta = { defaultConfig: dfltCfg,\n    descr: 'A nice foo for your app.',\n    apiVersion: 1,\n    };\n\nfunction install(app, plugCfg, appCfg) {\n  if (plugCfg === appCfg) { plugCfg = false; }\n  var slot = (plugCfg.slot\n    || appCfg.fooSlot   // <-- that's why we checked above\n    || dfltCfg.slot);\n  app[slot] = function () { return 'bar @ ' + app.name; };\n}\n\nmodule.exports = require('plugmgr1801-pmb/plugify')(module, meta, install);",
   "id": 122,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// get most used from main entry\n// import { SVGO, SVGO_LITE, CONFIG_LITE, PLUGINS_DEFAULT_LIST } from 'libsvgo/module/lib/svgo'\n\n// or get each separately\nimport { SVGO_LITE } from 'libsvgo/module/lib/svgo-lite'\nimport { SVGO_LITECONFIG_LITE } from 'libsvgo/module/lib/svgo/config-lite'\n\n// get each plugin separately\nimport * as addAttributesToSVGElement from 'libsvgo/module/plugins/addAttributesToSVGElement'",
   "id": 123,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// typeorm init --name MyProject --database mysql",
   "id": 124,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n// - ...\\ControlManifest.Input.xml\n\n//     modify as needed...\n\n\n\n// - modify ...\\node_modules\\pcf-start\\bin\\pcf-start.js\n\n//     enable cors by adding cors: true, \n\n```javascript\n// Start server\nvar options = {\n    port: 8181,\n    host: '0.0.0.0',\n    cors: true, \n    root: path.resolve(process.cwd(), codePath),\n    open: true,\n// ",
   "id": 125,
   "stars": 0,
   "errors": [
    2349,
    1160
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// configuring client\nconst prosperworks = require('prosperworks')({\n  email: process.env.EMAIL,\n  token: process.env.TOKEN\n});\n\n// using async / await (native in Node.js v8.x)\n// var result = await prosperworks.companies.list();\n// console.log(JSON.stringify(result, null, 2));\n\n// or using with promises\nprosperworks.companies.list()\n.then(result => {\n  console.log(JSON.stringify(result, null, 2));\n})",
   "id": 126,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/** @type {string[]} */\nconst verbs = require('verb-corpus');\n\nconsole.log(verbs.length);",
   "id": 127,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { BuildpackJob } from 'dray-client';\nlet compilation = new BuildpackJob(manager);\ncompilation.addFiles([\n//     {name: 'foo.ino', data: new Buffer()}\n]);\ncompilation.setEnvironment({\n    PLATFORM_ID: 6\n});\ncompilation.setBuildpacks([\n    'particle/buildpack-wiring-preprocessor',\n    'particle/buildpack-particle-firmware:0.5.1-photon'\n]);\ncompilation.submit().then((binaries) => {\n    // Do something with binaries\n}, (reason) => {\n    console.error(\"Compilation error:\", reason)\n});",
   "id": 128,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var prefixed = store.withIdPrefix('foo:')\n\nprefixed.add({ _id: 'bar', value: 42 }) // will add the object with id 'foo:bar'\n  .then(function (doc) {\n    // update documents with id 'foo:other' and 'foo:bar'\n    return prefixed.update(['other', 'foo:bar'], { other: 'baz' })\n  })\n\n// Finds all objects which id start with 'foo:'\nprefixed.findAll().then(function (docs) {})\n\n// Handle all changes to objects which id start with 'foo:'\nprefixed.on('change', function (eventName, doc) {})\n\nvar moarPrefixed = prefixed.withIdPrefix('moarPrefix:') // prefix is now 'foo:moarPrefix:'",
   "id": 129,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const RequestParameters = require('@luigisamurai/request-parameters');\nconst JSONFile = requiere('./JSONFile');\n\nconst request = new RequestParameters.Request();\n\n// request-promises options\nconst setting = {\n  resolveWithFullResponse: true,\n  simple: false\n};\n\n// set the common parameters\nrequest.setParameters({\n  baseUrl: 'http://www.google.com',\n  setting\n});\n\n// Get request with request-parameter dependency\nconst getPromise = request.send(JSONFile.GET, {\n  urlParams: { homeId: 1 },\n  queryParams: { offset: 0, limit: 100 },\n});\n\n// Also can use async - await to wait the promises\ngetPromise.then((response) => {\n  const statusCode = response.statusCode;\n  const body = response.body;\n\n  console.log(statusCode, ' ', body);\n});\n\n// Post request with request-parameter dependency\nconst postPromise = request.send(JSONFile.Post, {\n  body: { name: 'home view' }\n});\n\npostPromise.then((response) => {\n  const statusCode = response.statusCode;\n  const body = response.body;\n\n  console.log(statusCode, ' ', body);\n});\n\n// Note the URIs don't exist so the request return 404 status code.",
   "id": 130,
   "stars": 0,
   "errors": [
    2552
   ],
   "hasCode": true,
   "nondeletedLines": 28,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// $('li', 'ul', '<ul id=\"fruits\">...</ul>');",
   "id": 131,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const speechToText = new SpeechToTextV1({\n/* authenticator, version, serviceUrl, etc... */\n});\n// const recognizeStream = recognizeUsingWebSocket(params);\n\n// getTransactionId returns a Promise that resolves to the ID\nrecognizeStream.getTransactionId().then(\n  globalTransactionId => console.log(globalTransactionId),\n  err => console.log(err),\n);",
   "id": 132,
   "stars": 0,
   "errors": [
    2552,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// yo axi-dtsi-gulp-angular [app-name]",
   "id": 133,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// chance.month({country: 'de'})\n// 'Juli'",
   "id": 134,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const scope = nock('http://www.headdy.com')\n  .replyDate()\n  .get('/')\n  .reply(200, { hello: 'world' })",
   "id": 135,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//to create some new merge fields in your list\n//http://developer.mailchimp.com/documentation/mailchimp/reference/lists/merge-fields/\n\nmailchimp\n  .post('batches', {\n    operations : [\n      {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG1',\n          type : 'string'\n        })\n      }, {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG2',\n          type : 'string'\n        })\n      }, {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG3',\n          type : 'string'\n        })\n      }\n    ]\n  })\n  .then(function(result){\n    console.log(result);\n  })\n  .catch(function(error){\n    console.log(error);\n  });",
   "id": 136,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 33,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// log.bind(logger, levelName);",
   "id": 137,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const crypto = require('crypto');\nfunction verifySignature({\n  data,\n  signature,\n  publicKey\n}) {\n  // Verify that we signed correctly using public key\n  const verify = crypto.createVerify('RSA-SHA384');\n  verify.write(data);\n  verify.end();\n\n  // True if signature is verified\n  return verify.verify(publicKey, signature, 'base64');\n}",
   "id": 138,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// .b-foo {\n//   .bar {\n//     …\n//   }\n  \n//   .qux {\n//     …\n//   }\n// }",
   "id": 139,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export interface GoogleLocationDetailResult {\n  adr_address: string;\n  formatted_address: string;\n  icon: string;\n  id: string;\n  name: string;\n  place_id: string;\n  scope: string;\n  reference: string;\n  url: string;\n  utc_offset: number;\n  vicinity: string;\n  types: string[];\n  geometry: {\n    location: {\n      lat: number;\n      lng: number;\n    };\n    viewport: {\n      [type: string]: {\n        lat: number;\n        lng: number;\n      };\n    };\n  };\n  address_components: Array<{\n    long_name: string;\n    short_name: string;\n    types: string[];\n  }>;\n}",
   "id": 140,
   "stars": 0,
   "errors": [
    8006
   ],
   "hasCode": true,
   "nondeletedLines": 31,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "ImagePickerIOS.openCameraDialog({\n  showImages: true,\n  showVideos: false\n}, (imageUrl, height, width) => {\n  // success\n}, (error) => {\n  // cancel\n});",
   "id": 141,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// expect([button1, button2, button3]).to.be.verticallyAligned('top', 1.5);",
   "id": 142,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const hdl = require('hdl-js');\n\nconst {\n  emulator: {\n    Clock,\n    Pin,\n  },\n} = hdl;\n\nconst clock = new Clock({rate: 10, value: -5});\nconst pin = new Pin({name: 'a'});\n\n// Track clock events.\nclock.on('tick', value => pin.setValue(value));\n\nclock.tick();\n\nconsole.log(pin.getValue()); // +5;",
   "id": 143,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const App = () => {\n    return \n//         <serviceList.ProvideAll>\n            // rest of the application\n//         </serviceList.ProvideAll>\n    ;\n}",
   "id": 144,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// getQueue(callback)",
   "id": 145,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n// Find the top 10 students who have taken a particular course\n// and earned a grade of at least 3:\n\nconst classes = {\n   Student: null,\n//    Course: course\n}\n\nconst criteria = {\n  descending: 'grade',\n  greaterThanOrEqualTo: ['grade', 3],\n  limit: 10,\n  include: 'student'\n}\n\n// const joinObjs = await parsm.getJoinQuery(classes, criteria).find()\n\n// joinObjs is now an array of instances of the class 'Student2Course'\n// with details of students in the 'student' column.",
   "id": 146,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// catalog\n    Promise\n//         files\n//             index.js — your polyfill\n\n//         index.json\n//         index.js",
   "id": 147,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//main.js\nimport BoxButton from 'box-components-button'\n// Vue.use(BoxButton)",
   "id": 148,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// ffmpeg('/path/to/file.avi').noVideo();",
   "id": 149,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const outStr = \"[{\\\"Root\\\":\\\"0x763f7f5e16506128824178bf2ee855e35a4b93689e8e54ed1e3d03177da09917\\\",\\\"State\\\":{\\\"Num\\\":345,\\\"OS\\\":{\\\"Index\\\":384,\\\"OutCM\\\":null,\\\"Out_O\\\":null,\\\"Out_Z\\\":{\\\"AssetCM\\\":\\\"0x5545b6d57ef6a35b124963daa0dee992da5243e31eb0d99d8f66d0f1a13e9012\\\",\\\"EInfo\\\":\\\"0x04fc0547da3590767317c3719f7b89516f7afb01037ca09cefc0bd75b4dccb95cfff665a0028069289960dcf07b69928e8d3da06ad0249ba7fd2c31505f5eef96db8741382f68be2e34210be409a84ae67be5c4687ddef64c13bba278d5fbea9d69f1a335585c8544a3b3eac8e7812041a01d95326f8da65e588784cc70c1b5a4b5dd7d0f5921007aef4043ac515cadc864ac206b2902a04022603566a437deb3100fdc04b88eb249746631447cf25964fb8f32fb4314455efbc1ea7520865f52aa762629ab8eed99e0a7918918dfe186188ddf61d7fb3d855a64d71ff5c9688\\\",\\\"OutCM\\\":\\\"0x5d3ba6999629152264618694968cd18a7a4c7790e2c213498e99209c564039ab\\\",\\\"PKr\\\":\\\"0xfaf5e31e63cf54a81cb494e57719abf9e2af71fb52720a4ad476ce78006ac0af202f0329828102356f29597815773200b75775b6837bf8592e20eb4df75e73a9c01a79af111451f7f38f4c2f79f03772a9e09b31d5c7bf2ab37808835362c4a0\\\",\\\"Proof\\\":\\\"0x02902bbd460a55b0dbaf4a96848d0b24ef5f2faab6409b3d68dc77f8f32a96a41d0a450a6076693fd6bef7e4466e6f0533e18905c8fc656741e7d1faf2ae298dba7edb87ab8b1293900e3fac4bd8e47a09b1ee02cf7770965bf990f60c53f57a3c08032dcc4023c7aa706f8fd35c68119caa73d15e8ca1ff35cc9e69fcdd8e46d5120c\\\",\\\"RPK\\\":\\\"0xb74e284e16cc77659690cee346076701a1040539ce84e6af71292f0acd5a906d\\\"},\\\"RootCM\\\":\\\"0xe495fe6b43813719352a6256e826dfae9d61d32b28ce1814e0b6a60b9cb05009\\\"},\\\"TxHash\\\":\\\"0x91a5cc04f6af1803bd8a523fcf23bc845c42552bb7d6d0a49e347ef5070ba274\\\"}}]\"\n\ntx.DecOut(\n  outStr,\n//   keys.tk.ToBase58(),\n  (err, content) => {\n    if (err) {\n      console.error(err)\n    } else {\n      console.log(content)\n    }\n  }\n)",
   "id": 150,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Mongoose from 'mongoose';\n\n// const Test = new Mongoose.Schema({...\n// export  {tests:Test}",
   "id": 151,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {any, boolean, number, string} from \"schemation\"\nimport {and, not, or}                 from \"schemation\"\nimport {where}                        from \"schemation\"\nimport {optional}                     from \"schemation\"\nimport {lazy}                         from \"schemation\"",
   "id": 152,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// freebase.search(\"doug\",{type: \"/ice_hockey/hockey_player\"})",
   "id": 153,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function inc(v) {\n  return v + 1;\n}\n\nfunction decr(v) {\n  return v - 1;\n}\n\n// Arrow(inc).next(Arrow(decr)).run(1) == Arrow.next(Arrow(inc), Arrow(decr)).run(1);",
   "id": 154,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// USAGE\n//   $ dev-env export PROJECT\n\n// ARGUMENTS\n//   PROJECT  project name\n\n// OPTIONS\n//   -d, --database  database\n//   -h, --help      show CLI help",
   "id": 155,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// replace( \"java\" ).ignoringCase(); // => ReplaceDefinition",
   "id": 156,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// console.log(arrayTransformer.stringToArray(db.get('newArray')))",
   "id": 157,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "agenda.on('success:send email', function(job) {\n  console.log(\"Sent Email Successfully to: %s\", job.attrs.data.to);\n});",
   "id": 158,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// errorCB(err) {\n//   console.log(\"SQL Error: \" + err);\n// },\n\n// successCB() {\n  console.log(\"SQL executed fine\");\n// },\n\n// openCB() {\n  console.log(\"Database OPENED\");\n// },\n\n// var db = SQLite.openDatabase(\"test.db\", \"1.0\", \"Test Database\", 200000, openCB, errorCB);\ndb.transaction((tx) => {\n  tx.executeSql('SELECT * FROM Employees a, Departments b WHERE a.department = b.department_id', [], (tx, results) => {\n      console.log(\"Query completed\");\n\n      // Get rows with Web SQL Database spec compliance.\n\n      var len = results.rows.length;\n      for (let i = 0; i < len; i++) {\n        let row = results.rows.item(i);\n        console.log(`Employee name: ${row.name}, Dept Name: ${row.deptName}`);\n      }\n\n      // Alternatively, you can use the non-standard raw method.\n\n      /*\n        let rows = results.rows.raw(); // shallow copy of rows Array\n\n        rows.map(row => console.log(`Employee name: ${row.name}, Dept Name: ${row.deptName}`));\n      */\n    });\n});",
   "id": 159,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {Screen} from 'geoeye-js'\n\nconst screen = new Screen({\n  config: './config.json', \n  container: 'container'\n});",
   "id": 160,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var userMetric = metric.instance();\nuserMetric.start('metric');\n// ....\nuserMetric.end('metric');",
   "id": 161,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var level = require('level-hyper')\nvar Snapshot = require('level-snapshot')\n\nvar db = level('./db')\nvar snapshot = Snapshot(db)\n\nsnapshot.on('snapshot:complete', function (snapshotName) {\n  console.log('took snapshot', snapshotName)\n})\n\nsnapshot.start()",
   "id": 162,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import duration from 'callbag-duration-progress'\nimport forEach from 'callbag-for-each'\nimport map from 'callbag-map'\nimport pipe from 'callbag-pipe'\n\nconst distance = d => t => t * d\n\nconst easeOut = p => 1 - (1 - p) * (1 - p)\n\nconst moveBall = (ball, easing) => {\n  pipe(\n    duration(1000),\n    map(easing),\n    map(distance(400)),\n    forEach(y => {\n      ball.style.transform = `translate3d(0, ${y}px, 0)`\n    }),\n  )\n}\n\n// moveBall(document.getElementById('ball'), easeOut)",
   "id": 163,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const putout = require('putout');",
   "id": 164,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// git clone https://github.com/provable-things/ptokens.js.git",
   "id": 165,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import CryptoAesCbc from 'react-native-crypto-aes-cbc';\n\n// key = \"XXXXX\" // in base64 format\n// iv = \"XXXX\"   // in base 64 format\n// keysize128 = \"128\" \n// keysize256 = \"256\"\n// text = \"Sachin Agrawal\"\n\n  CryptoAesCbc.encryptInHex(iv,key,\"sachin agrawal\",\"128\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.encryptInBase64(iv,key,\"sachin agrawal\",\"128\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.encryptInHex(iv,key256,\"sachin agrawal\",\"256\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.encryptInBase64(iv,key256,\"sachin agrawal\",\"256\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.decryptByBase64(iv,key,\"ZN+DBxlPG+2lmWx6Bu7bqA==\",\"128\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByHex(iv,key,\"64df8307194f1beda5996c7a06eedba8\",\"128\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByBase64(iv,key256,\"Re3CIB8H3wYkUdl/l6WGGw==\",\"256\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByHex(iv,key256,\"45edc2201f07df062451d97f97a5861b\",\"256\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.sha256(\"sachin\",(hashKey) => {\n    console.log(hashKey)\n  })",
   "id": 166,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 28,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var sorting = require('postcss-sorting')\n\n// postcss([\n  sorting({ 'sort-order': require('cssortie') })\n// ]))",
   "id": 167,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Kick off the handshake with the iFrame\nconst handshake = new SecurePostmate({\n//   container: document.getElementById('some-div'), // Element to inject frame into\n  url: 'http://child.com/page.html'\n});\n\n// When parent <-> child handshake is complete, data may be requested from the child\nhandshake.then(child => {\n\n  // Fetch the height property in child.html and set it to the iFrames height\n  child.get('height')\n    .then(height => child.frame.style.height = `${height}px`);\n\n  // Listen to a particular event from the child\n  child.on('some-event', data => console.log(data)); // Logs \"Hello, World!\"\n});",
   "id": 168,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <collection instance>.find({<query key>: {$in: [<query value>]}}, ...)",
   "id": 169,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var rand = require('random-pro');\nconsole.log(rand.generateEvenNumber(10,100));\n// 96\nconsole.log(rand.generateEvenNumber(10,30));\n// 22",
   "id": 170,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const client = require(\"badonker\");\nconst honker = new client();\n\nasync function test() {\n  console.log(await honker.bulknsfw.booty());\n}\n\ntest();",
   "id": 171,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// select the right Ad Id according to platform\n  var admobid = {};\n  if( /(android)/i.test(navigator.userAgent) ) { // for android & amazon-fireos\n    admobid = {\n      banner: 'ca-app-pub-xxx/xxx', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/yyy'\n    };\n//   } else if(/(ipod|iphone|ipad)/i.test(navigator.userAgent)) { // for ios\n    admobid = {\n      banner: 'ca-app-pub-xxx/zzz', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/kkk'\n    };\n  } else { // for windows phone\n    admobid = {\n      banner: 'ca-app-pub-xxx/zzz', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/kkk'\n    };\n  }",
   "id": 172,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "let counter = 0;\n\nconst increment = anticipatedCall(() => {\n  counter = counter + 1;\n});\n\nincrement\n  .nthCallDuring(3, () => {\n    counter = 5;\n    increment();\n    increment();\n    increment();\n  })\n  .then(() => console.log(`counter value is ${counter}`));\n// Prints `counter value is 8`",
   "id": 173,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {Handler} from 'handleable';\n\nlet h = new Handler();\n\n// let e = await h.handle(\n  new Error('unhandled error'), // error instance\n  [ // list of handler recipes\n    {\n      handler: 'block', // handler name\n      message: '%{foo} unhandled error', // optional handler error message\n      block: async () => true // handler-specific property,\n//       foo: 'bar' // custom variable for the message\n    },\n    {\n      handler: 'mongoUniqueness', // handler name\n      message: 'already taken', // optional handler error message\n      indexName: 'uniqueEmail' // handler-specific property\n    }\n  ]\n// ); // -> a list of errors",
   "id": 174,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// connect({host: 'mqtt.test.io', ssl: true, path: '/mqtt'})\n//   .then(client => { ... })\n\n// or\n// connect('wss://mqtt.test.io/mqtt')\n//   .then(client => { ... })",
   "id": 175,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  const handler = wrapper({\n      url: 'http://example.com/endpoint',\n      endpoint: '/endpoint',\n      auth: 'auth',\n      headers: 'headers',\n      method: 'method',\n      path_params: 'path_param',\n      query_params: 'query_param',\n      required_fields: 'required_fields',\n      request_map: 'request_map',\n      response_map: 'response_map',\n      transform_response: 'transform_response'      \n  });",
   "id": 176,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Select = require('react-select-plus');\n\nvar isLoadingExternally = true;\n\n<Select\n  name=\"form-field-name\"\n    isLoading={isLoadingExternally}\n//     ...\n/>",
   "id": 177,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "> pipep([\n    function(a) { return Promise.resolve(a + 3); },\n    function(b) { return Promise.resolve(b * 10); },\n  ])(6);\n// promise\n90",
   "id": 178,
   "stars": 0,
   "errors": [
    1109,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var json = {\"hey\": \"guy\",\"anumber\": 243,\"anobject\": {\"whoa\": \"nuts\",\"anarray\": [1,2,\"thr<h1>ee\"], \"more\":\"stuff\"},\"awesome\": true,\"bogus\": false,\"meaning\": null, \"japanese\":\"明日がある。\", \"link\": \"http://jsonview.com\", \"notLink\": \"http://jsonview.com is great\"};\n\n$(function() {\n//   $(\"#json\").JSONView(json);\n  // with options\n//   $(\"#json-collasped\").JSONView(json, { collapsed: true });\n});",
   "id": 179,
   "stars": 0,
   "errors": [
    2592
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// runIt(args, [options]);",
   "id": 180,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<p-accordion>\n//     <p-accordionTab header=\"Header 1\">\n       Content 1\n    </p-accordionTab>\n//     <p-accordionTab header=\"Header 2\">\n        Content 2\n    </p-accordionTab>\n//     <p-accordionTab header=\"Header 3\">\n        Content 3    \n    </p-accordionTab>\n</p-accordion>",
   "id": 181,
   "stars": 0,
   "errors": [
    17004,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "rcon.init('fsrcon/init')\n  .then(\n    // resolved\n    function () {\n//       ..\n    },  \n    // rejected\n    function (err) {\n//       ..\n    }\n  );",
   "id": 182,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'view-design/dist/styles/iview.css';",
   "id": 183,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {render, html} from '//unpkg.com/lighterhtml?module';\n\n// document.body.appendChild(\n  // as unkeyed one-off content, right away 🎉\n  html.node`<strong>any</strong> one-off content!<div/>`\n// );\n\n// as automatically rendered wired content 🤯\n// todo(document.body.lastChild);\nfunction todo(node, items = []) {\n  render(node, html`\n  <ul>${\n  items.map((what, i) => html`\n    <li data-i=${i} onclick=${remove}> ${what} </li>`)\n  }</ul>\n  <button onclick=${add}> add </button>`);\n  function add() {\n//     items.push(prompt('do'));\n    todo(node, items);\n  }\n  function remove(e) {\n    items.splice(e.currentTarget.dataset.i, 1);\n    todo(node, items);\n  }\n}",
   "id": 184,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Fetch from 'rd-fetch';\n\nFetch.json('https://example.com/api')\n  .then((response) => {\n    console.log(response.json);\n  })\n  .catch((error) => {\n    console.log(error.json);\n  });",
   "id": 185,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var $DOM = require( \"mock-dom-resources\" );\n\n// ..",
   "id": 186,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Schema.plugin(\n//   mongooseHidden,\n  {\n    hidden: {\n//       ...omitCommonFields.underscored.objTrue,\n      some_other_field: true,\n      another_field_to_ignore: true\n    }\n  }\n);",
   "id": 187,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Accordion from \"@beisen/accordion\"\n",
   "id": 188,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <script src=\"rstate.min.js\"></script>",
   "id": 189,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "    <Extension Géoportail pour iTowns>/\n        GpPluginItowns.js\n            (version minifiée du code javascript pour une utilisation en production)\n        GpPluginItowns.css\n            (version minifiée des css pour une utilisation en production)\n        GpPluginItowns-src.js\n            (version non minifiée du code javascript pour une utilisation en développement)\n        GpPluginItowns-src.css\n//             (version non minifiée des css pour une utilisation en développement)",
   "id": 190,
   "stars": 0,
   "errors": [
    17004,
    2304,
    17008,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mixtool = require('mix-h5');\n\n\n// 统计（百度，cnzz）\nvar tracking = mixtool.tracking;\n// init tracking\ntracking.add('baidu', 'xxxxxx'); // baidu site id\ntracking.add('cnzz', 'xxxxxx'); // cnzz site id\n\n\nsetTimeout(function() {\n    tracking.log('loaded');\n}, 1000);\n\n\n// 图片预加载\nvar imgLoader = mixtool.imgLoader;\n// over: preload over, count: loaded image length, length: preload image total length\n// map: loaded image name, percent: count/length, fakePercent: fake percent\nimgLoader.preloadImg(function(over, count, length, map, percent, fakePercent) {\n    if(over && 100 == percent) {\n        // todo\n    } else {\n        console.log(percent);\n    }\n}, {\n    selector: 'xxx', // 预加载图片地址筛选器, default: '.image-resource-wrap span, img.image-resource'\n//     fakeTime: xxx, // 模拟加载时间, default: 2000\n//     fakePercent: xxx // 模拟加载百分比, default: 50\n});\n// get preload image\nimgLoader.get('images/logo.png'); // 返回带版本号的图片地址，如果有cdn前缀就返回前缀，该方法必须要在preloadImg方法执行之后才能调用\n\n\n// 设置微信分享内容\nvar wxtool = mixtool.wx;\nwxtool.setShare({\n    title: 'xxx', // 分享标题\n    link: 'xxx', // 分享链接\n    img: 'xxx', // 分享图片\n    desc: 'xxx', // 分享描述\n    shareLog: {\n        openid: 'xxx', // 用户微信openid\n        nickname: 'xxx', // 用户昵称\n//         ...: 'xxx' // 头像等其他用户信息\n    }, // 分享统计\n//     success: function() {...}, // 分享成功回调函数\n//     fail: function() {...} // 分享失败回调函数\n});\n\n\n// 微信支付\nvar wxtool = mixtool.wx;\nwxtool.pay({\n    openid: 'xxx', // 用户openId\n    product_id: 'xxx', // 商品ID\n    body: 'xxx', // 商品描述\n    total_fee: 'xxx', // 总金额\n    detail: 'xxx', // 商品详情\n    attach: 'xxx', // 附加数据\n    out_trade_no: 'xxx', // 商户订单号\n//     success: function() {...}, // 支付成功回调函数\n//     fail: function() {...} // 支付失败回调函数\n});\n\n\n// 注：上述微信分享和微信支付功能默认配置的是逆行信息科技公众号的appId，在其它公众号项目中使用这些微信功能，需要先执行initWXSDK方法传入相应的appid：\nwxtool.init({\n    appId: 'xxxxxx', // appid  页面域名需要与公众号中设置的回调一致\n    sdkUrl: '//res.wx.qq.com/open/js/jweixin-1.1.0.js', // 微信js sdk地址\n    siteSignApi: 'http://jishub.com/api/siteSign', // 签名接口\n    sitePayApi: 'http://jishub.com/api/sitePay', // 微信支付统一下单\n    jsApiList: [ // 开启的js接口：定制分享内容支付\n        'onMenuShareTimeline',\n        'onMenuShareAppMessage',\n        'chooseWXPay'\n    ],\n    initFail: function () { // 初始化失败\n        console.log('wx init fail');\n    },\n    initDone: function () { // 初始化成功\n        console.log('wx init done');\n    },\n    debug: false // debug模式\n}, function () {\n    // 初始化成功回调\n});\n\n\n// 监测手机横竖屏(限制横屏)\nmixtool.landscape({\n    'pic': 'xxx', // 提示图片\n    'text': '为了更好的体验，请将手机/平板竖过来', // 提示文字\n    'bgcolor': '#32373b', // 遮罩背景色\n    'txtColor': '#ffd40a', // 遮罩字颜色\n    'prefix': 'MixShine', // 遮罩class样式名 prefix + '_landscape'\n    'zIndex': 10000, // 遮罩z-index值\n    'init': false // 监测初始化后回调\n}, function() {\n    // 横屏回调\n}, function () {\n    // 竖屏回调\n});\n\n\n// 监测手机横竖屏(手动控制限制横屏还是竖屏)使用new关键字创建限制实例\nvar restrict = new mixtool.landscape({\n    'manual': true, // 手动控制时必须设为true\n    'pic': 'xxx', // 提示图片\n    'text': '为了更好的体验，请将手机/平板竖过来', // 限制横屏时的提示文字\n    'vetiText': '为了更好的体验，请将手机/平板横过来', // 限制竖屏时的提示文字\n    'bgcolor': '#32373b', // 遮罩背景色\n    'txtColor': '#ffd40a', // 遮罩字颜色\n    'prefix': 'MixShine', // 遮罩class样式��� prefix + '_landscape'\n    'zIndex': 10000, // 遮罩z-index值\n    'init': false // 监测初始化后回调\n}, function() {\n    // 横屏回调\n}, function () {\n    // 竖屏回调\n});\nrestrict.restrictLand(); // 限制横屏\nrestrict.restrictVeti(); // 限制竖屏\nrestrict.noRestrict(); // 无限制\nrestrict.restrictAll(); // 横屏竖屏都限制\n\n\n\n// util工具集\nvar util = mixtool.util;\n\nutil.loadScript // 加载js\nutil.loadImage // 加载图片\nutil.nextFrame // requestAnimationFrame或者setTimeout fallback\nutil.cancelFrame // cancelRequestAnimationFrame或者clearTimeout fallback\nutil.setCssPrefix // 根据浏览器设置css前缀\nutil.styleVender // 根据浏览器获取css前缀\nutil.browser // 浏览器内核判断 ex: util.browser.versions.ios\nutil.isFunction\nutil.isString\nutil.isArray\nutil.getElement // 根据输入内容返回DOM元素，传入字符串就作为DOM的id，传入DOM元素返回本身\nutil.getOffset // 根据输入内容返回DOM元素，传入字符串就作为DOM的id，传入DOM元素相对给定相对元素或body左上角的偏移量\nutil.extend // 将源对象的所有属性拷贝到目标对象中\nutil.genNonceStr // 获取随机数\nutil.setCookie\nutil.getCookie\nutil.getUrlQuery // 读取url上带的参数\nutil.buildUrlQuery // 拼接url参数",
   "id": 191,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 104,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/**\n   * wechatConfig 配置信息\n   * \n   * @param appid 应用唯一标识，在微信开放平台提交应用审核通过后获得\n   * @param redirectUri 重定向地址，需要进行UrlEncode\n   * @param scope 应用授权作用域，拥有多个作用域用逗号（,）分隔，网页应用目前仅填写snsapi_login即可\n   * @param loginType 默认 jssdk\n   * @param style     提供\"black\"、\"white\"可选，默认为黑色文字描述。详见文档底部FAQ\n   * @param href 自定义样式链接，第三方可根据实际需求覆盖默认样式。详见文档底部FAQ\n   * @param state 用于保持请求和回调的状态，授权请求后原样带回给第三方。该参数可用于防止csrf攻击（跨站请求伪造攻击），建议第三方带上该参数，可设置为简单的随机数加session进行校验\n   * @param selfRedirect true：手机点击确认登录后可以在 iframe 内跳转到 redirect_uri，false：手机点击确认登录后可以在 top window 跳转到 redirect_uri。默认为 false。\n*/\n\nimport { DWWeChatLoginConfig } from 'angular-daiwei-wechat-login';\n\n// @Component({\n//   ...\n  template: `<dw-wechat-login [width]=\"'300px'\" [height]=\"'410px'\" [config]=\"weChatConfig\">\n            </dw-wechat-login>`\n// })\nexport class AppComponent {\n\n  wechatConfig: DWWeChatLoginConfig = {\n    appid: 'wxbdc5610cc59c1631',\n    redirectUri: 'https%3A%2F%2Fpassport.yhd.com%2Fwechat%2Fcallback.do',\n    state: '3d6be0a4035d839573b04816624a415e',\n  };\n\n  constructor() {}\n}\n",
   "id": 192,
   "stars": 0,
   "errors": [
    8010
   ],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" />\n// <link rel=\"stylesheet\" href=\"dist/leaflet-push-content-control.css\" />",
   "id": 193,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CrudWrapper = require('mrs-node-util').crud;",
   "id": 194,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// await mongooseQueue.reset()\nconsole.log('The queue was completely purged of all jobs.')",
   "id": 195,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Route('/home', HomeComponent)\n    .meta({\n        title: 'Home',\n        icon: 'fa-home'\n    });\n\n// Output\n{\n//     path: '/home',\n//     component: HomeComponent,\n    meta: {\n//         title: 'Home',\n        icon: 'fa-home'\n    }\n}",
   "id": 196,
   "stars": 0,
   "errors": [
    1128,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// MP.Memberships.get('/some/future/url', myAccessToken)\n  .then(function (data) {\n    console.log(\"You got the data:\", data);\n  });",
   "id": 197,
   "stars": 0,
   "errors": [
    1128,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// constructor\ninterface CurrencyFormatterProps {\n  locales: string | string[],\n  minimumIntegerDigits?: number,\n  precision?: number,\n  useGrouping?: boolean,\n  localeMatcher?: 'lookup' | 'best fit',\n//   formatter?: typeof CurrencyFormatter.formatter,\n\n  style?: 'decimal' | 'currency' | 'percent',\n  currency?: string,\n  currencyDisplay?: 'symbol' | 'code' | 'name',\n}\n\n//options of format\ninterface optionsofformat {\n  minimumIntegerDigits?: number,\n  precision?: number,\n  useGrouping?: boolean,\n  localeMatcher?: 'lookup' | 'best fit',\n\n  style?: 'decimal' | 'currency' | 'percent',\n  currency?: string,\n  currencyDisplay?: 'symbol' | 'code' | 'name',\n}",
   "id": 198,
   "stars": 0,
   "errors": [
    8006,
    8006
   ],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// ☁ ~ cat Garden.js\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst GardenStyle = styled.div`\n  opacity: 1\n`\n\nconst Garden = props => (\n//   <GardenStyle>Hello {props.text}</GardenStyle>\n// )\n\nexport default Garden",
   "id": 199,
   "stars": 0,
   "errors": [
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "#!/usr/bin/env node\n\nvar husk = require('..').exec();\n\nhusk()\n  .whoami(function(code, signal) {\n    console.log('[code: %s, signal: %s]', code, signal);\n  })\n  .once('end', console.log.bind(null, '%s'))\n  .print()\n  .run();",
   "id": 200,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/* Predicate fn */\nfind(\n  item => item.id === 1,\n//   todos\n)\n// => {id: 1, name: \"lorem\", tagId: 2}\n\n/* Matching object */\nfindWith(\n  {\n    \"id\": 1\n  },\n//   todos\n)\n// => {id: 1, name: \"lorem\", tagId: 2}\n\n/* Matching object & predicate fn */\nfilterWith(\n  {\n//     \"tagId\": is // same as `tagId: source => is(source)`\n  },\n//   todos\n)\n// => [{id: 1, name: \"lorem\", tagId: 2}]\n\n/* Syntactic sugar */\nfilterWith(\n  {\n//     \"!tagId\": is // same as `tagId: not(is)`\n  },\n//   todos\n)\n// => [\n//  {id: 2, name: \"ipsum\", tagId: null},\n//  {id: 3, name: \"dolor\", tagId: null}\n// ]",
   "id": 201,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const htmlStream = require('web-html-stream');\n\n/**\n * @param {object} node, a DOM node like object.\n * @return {object} Anything really; return values are accumulated in an\n *   array.\n */\nfunction handler(node, ctx) {\n    // Do something with the node\n    return node;\n}\n\nconst testDoc = \"<html><body><div>\"\n        + \"<test-element foo='bar'>foo</test-element>\"\n        + \"</div></body>\";\n\nconst inputStream = new ReadableStream({\n    start(controller) {\n        controller.enqueue(testDoc);\n        controller.close();\n    }\n});\n\n// Create a matcher to handle some elements, using CSS syntax. To avoid\n// shipping a CSS parser to clients, CSS selectors are only supported in node.\nvar reader = new htmlStream.HTMLTransformReader(inputStream, {\n    transforms: [\n        { selector: 'test-element[foo=\"bar\"]', handler: handler },\n        { selector: 'foo-bar', handler: handler },\n    ],\n    ctx: { hello: 'world' }\n});\n\n// Create the same matcher using more verbose selector objects. These are\n// especially useful when processing dynamic values, as this avoids the need to\n// escape special chars in CSS selectors.\nreader = new htmlStream.HTMLTransformReader(inputStream, {\n    transforms: [{\n        selector: {\n            nodeName: 'test-element',\n            attributes: [['foo', '=', 'bar']]\n        },\n        handler: handler,\n        // Optional: Request node.innerHTML / outerHTML as `ReadableStream`\n        // instances. Only available in rule objects.\n        stream: false\n    }],\n    ctx: { hello: 'world' }\n});\n\n// Read matches\nreader.read()\n.then(res => {\n    console.log(res);\n    return reader.read();\n})\n// {\n//   done: false,\n//   value: [\n//     \"<html><body><div>\",\n//     {\n//       \"nodeName\": \"test-element\",\n//       \"attributes\": {\n//         \"foo\": \"bar\"\n//       },\n//       \"outerHTML\": \"<test-element foo='bar'>foo</test-element>\",\n//       \"innerHTML\": \"foo\"\n//     },\n//     \"</div></body>\"\n//   ]\n// }\n.then(res => console.log);\n// { done: true, value: undefined }",
   "id": 202,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 42,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// here is our parent conductor\nvar parentConductor = rc.createConductor({\n    name: 'parent',\n    props: function() {\n        return {\n            count: 0,\n            candies: [ 'twix', 'snickers', 'kit kat' ]\n        };\n    }\n});\n\n// now we inherit by specifying a deps config\nvar childConductor = rc.createConductor({\n    name: 'child',\n    deps: [ parentConductor ],\n    props: function(inheritedProps) {\n        // children conductor are provided with the parent props.\n        // you can choose to mutate this object for the child conductor.\n\n        // note that mutating inheritedProps does NOT affect the parent\n        // conductor's props!\n        inheritedProps.count += 1;\n        inheritedProps.candies = inheritedProps.candies.concat('butterfinger');\n\n        // like the parent conductor, this returned value will become immutable\n        return inheritedProps;\n    },\n    handlers: [\n        function render(req, res, next) {\n//             var props = rc.getProps(req);\n\n//             res.render(props, next);\n            // => will render:\n            // {\n            //      count: 1,\n            //      candies: [ 'twix', 'snickers', 'kit kat', 'butterfinger' ]\n            // }\n        }\n    ]\n});",
   "id": 203,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 22,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//   ...\n//   height: '50%-1',\n//   left: '45%+1',\n//   ...",
   "id": 204,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "proxyList.getByCountryCode('FR')\n          .then(function (proxies) {\n            // get proxies here\n          })\n          .catch(function (error) {\n            throw new Error(error);\n          });",
   "id": 205,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/*** Add company table, insert some data and connect with user table ***/\n\n// CREATE TABLE \"company\"\n// (\n//    id serial,\n//    company_name character(20) NOT NULL,\n//    CONSTRAINT pk_company PRIMARY KEY (id),\n//    CONSTRAINT uk_company UNIQUE (company_name)\n// )\n// WITH (\n//   OIDS = FALSE\n// );\n\n// INSERT INTO \"company\"(company_name)\n//     VALUES ('Company 1');\n\n// ALTER TABLE \"user\"\n//   ADD COLUMN company_id integer;\n\n// UPDATE \"user\" SET company_id = 1;\n\n// ALTER TABLE \"user\"\n//    ALTER COLUMN company_id SET NOT NULL;\n\n// ALTER TABLE \"user\"\n//   ADD CONSTRAINT fk_user FOREIGN KEY (company_id) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE NO ACTION;\n",
   "id": 206,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var csgotm = require('node-csgotm-api');\n// var api = new csgotm.API(options);",
   "id": 207,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// listening\n// client connected\n// args: arg1,arg2\n// body: Hello World!",
   "id": 208,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {makeDispatcher} from \"robojs\"\nvar myNewEventDispatcher=makeDispatcher();",
   "id": 209,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// swangular.success(\"Great job!\");",
   "id": 210,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// sudo yum install clamav",
   "id": 211,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// If in Player A's simulation the character just dodged the bullet in time, but in Player B's simulation the character didn't dodge that same bullet in time - strictly due to fuzziness - our two simulations are no longer in sync and we aren't sharing a game state any longer. We call this non-deterministic physics.",
   "id": 212,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n    var contentType = 'Content-Type';\n//     var body = new CreatenewUpdatePropertyManagerRequest({\"key\":\"value\"});\n\n//     controller.createnewPropertyManager(contentType, body, function(error, response, context) {\n\n    \n//     });",
   "id": 213,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// client.summarization(\"<Your text to summarize>\")",
   "id": 214,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <Mark wrap=\"span\">*text*</Mark>",
   "id": 215,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const renderer = templateEngine.render(string[, parameters, style]);",
   "id": 216,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// form.on('field', (name, value) => {});",
   "id": 217,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// onvif-ptz goto-home\n\n// Move the camera to the home position.\n\n// Options:\n//   --help          Show help  [boolean]\n//   --version       Show version number  [boolean]\n//   --baseUrl       The baseUrl of the camera.  [string] [required]\n//   --path          The onvif path of the camera.  [string] [default: \"/onvif/device_service\"]\n//   --username, -u  The username of the camera.  [string] [required]\n//   --password, -p  The password of the camera.  [string] [required]",
   "id": 218,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "pusudb.use('ws', function(req, socket, next){\n    console.log(req.headers) \n    console.log(req.params) // URL params\n    console.log(req.body) // Body-Data\n    console.log(req.docs) // Result sending to client \n    next()\n})",
   "id": 219,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Cookies from \"ts-cookies\";",
   "id": 220,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var LayerWebhooks = require('layer-webhooks');\n\n// Initialize by providing your Layer credentials\nvar layer = new LayerWebhooks({\n//   token: API_TOKEN,\n//   appId: APP_ID\n});\n\n// Register a webhook\nlayer.webhooks.register({\n  events: ['message.sent'],\n  url: 'https://mydomain.com/mywebhooks/messages-sent',\n  secret: 'Frodo is a Dodo',\n  config: {\n    name: 'My sample webhook'\n  }\n}, function(err, res) {\n  if (err) return console.error(err);\n\n  // Webhook registered\n});",
   "id": 221,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function App() {\n  return (\n    <Auth\n//       loginCall={loginCall}\n//       meCall={meCall}\n//       storageBackend={storageBackend}\n      storageNamespace='my-auth'\n//       render={(authActions, authState, userState) => /* render my children */}\n    />\n  )\n}",
   "id": 222,
   "stars": 0,
   "errors": [
    17004,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// HOST=mypublicdevhost.com",
   "id": 223,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import VuePictureCut from 'vue-picture-cut';\n// Vue.use(VuePictureCut);",
   "id": 224,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <iconly name=\"activity\" type=\"bold\" />\n// <iconly name=\"activity\" type=\"bulk\" />\n// <iconly name=\"activity\" type=\"light\" />\n// <iconly name=\"activity\" type=\"outline\" />\n// <iconly name=\"activity\" type=\"broken\" />\n// <iconly name=\"activity\" type=\"tone\" />",
   "id": 225,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nfunction transferTokens(sender, to, amount) {\n//   const web3 = new Web3();\n//   const TokenContract = web3.eth.contract(Token.abi).at(Token.address);\n//   const data = TokenContract.transfer.getData(to, amount);\n//   const options = { data, from: sender, to: Token.address };\n//   return Transaction({ options });\n}\n\nconst tx = transferTokens(\n  '0xe8d3266f3c4f083ab8864b5e04aea7b087044e49',\n  '0x7967c4f4512195ba83ae8f08ca30f7b145be6cf8',\n  1000000\n);\n\n// const txhash = await tx.transact(provider);",
   "id": 226,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { createLogger } = require('@livy/logger')\n\nconst logger = createLogger('my-app-logger', {\n  mode: 'async'\n})",
   "id": 227,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nvar Yobit = require('yobit-exchange-api');\nvar VersionTwo = require('yobit-exchange-api/lib/version_two');\nvar Trade = require('yobit-exchange-api/lib/trade');\n\nvar keys = {key: '', secret: ''}\nvar yobit = new Yobit(keys)\nvar version2 = new VersionTwo(keys);\nvar trade = new Trade(keys);\n\ntrade.getInfo(function(err, data) {\n  console.log(data);\n})\n\nversion2.ticker('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nversion2.depth('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nversion2.trades('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nyobit.fee(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.ticker(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.depth(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.trades(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.info(function(err, data) {\n  console.log(data);\n})\n",
   "id": 228,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 34,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <AllDocs db=\"dbname\" include_docs ... />",
   "id": 229,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "gauge1:+3\n//  - tag1:v1\n//  - tag2:v2",
   "id": 230,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const AssetsQueryOptions = require('drequest-maxdome').AssetsQueryOptions;\n\n// const assetId = <assetId>;\n// const assetsQueryOptions = new AssetsQueryOptions(assetId);\n\n// const assets =\n//   await maxdome.request('assets')\n//     .addOptions(assetsQueryOptions)\n//     .send();",
   "id": 231,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {\n  isMobile,\n  isSmall,\n  isTablet,\n  isDesktop\n} from \"@times-stories/style-guide/helpers\";\n\nisMobile(); // Boolean\nisSmall(); // Boolean\nisTablet(); // Boolean\nisDesktop(); // Boolean",
   "id": 232,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/**\n* @param  {String}  language        Language identifier\n* @param  {String}  modelsString    Array with speakers-voice models-(optional)defaultStyle correspondence (e.g. '[[\"speaker1\",\"model1\",\"style1\"],[\"speaker2\",\"model2\"]]')\n* @param  {String}  vttText         Subtitle text, in VTT format\n* @param  {Number[]}    selectedSentences   Array with indexes of sentences to be synthesized\n* @return {String}                  JSON-formatted string for synthesis\n*/",
   "id": 233,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// exlog.error(new Error());",
   "id": 234,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {\n  EpubView, // Underlaying epub-canvas (wrapper for epub.js iframe)\n  EpubViewStyle, // Styles for EpubView, you can pass it to the instance as a style prop for customize it\n  ReactReader, // A simple epub-reader with left/right button and chapter navigation\n  ReactReaderStyle // Styles for the epub-reader it you need to customize it\n} from \"react-reader\";",
   "id": 235,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// {app_root}/config/plugin.js\nexports.cuteLogger = {\n  enable: true,\n  package: 'egg-cute-logger',\n};",
   "id": 236,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const asyncIteratorToStream = require(\"async-iterator-to-stream\");\n\n// promisified fs\nconst fs = require(\"mz/fs\");\n\nconst createReadStream = asyncIteratorToStream(async function*(file) {\n  const fd = await fs.open(file, \"r\");\n  try {\n    let size = yield;\n    while (true) {\n      const buf = Buffer.alloc(size);\n      const [n] = await fs.read(fd, buf, 0, size, null);\n      if (n < size) {\n        yield buf.slice(0, n);\n        return;\n      }\n      size = yield buf;\n    }\n  } finally {\n    await fs.close(fd);\n  }\n});\n\ncreateReadStream(\"foo.txt\").pipe(process.stdout);",
   "id": 237,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// 좌절\n// 아아아아",
   "id": 238,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const jwksClient = require('jwks-rsa');\n\nconst client = jwksClient({\n  rateLimit: true,\n  jwksRequestsPerMinute: 10, // Default value\n  jwksUri: 'https://sandrino.auth0.com/.well-known/jwks.json'\n});\n\nconst kid = 'RkI5MjI5OUY5ODc1N0Q4QzM0OUYzNkVGMTJDOUEzQkFCOTU3NjE2Rg';\n// const key = await client.getSigningKey(kid);\n// const signingKey = key.getPublicKey();",
   "id": 239,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const cwb = new CWBClient(API_KEY)",
   "id": 240,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//   \"homepage\": \"http://mywebsite.com/relativepath\",",
   "id": 241,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export default async function (e, t, a) {\n    let n = document.createElement(e);\n    n.append(...(await a));\n    return Object.assign(n, t);\n}",
   "id": 242,
   "stars": 0,
   "errors": [
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// require('ranker')(null, app);",
   "id": 243,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// --> POST / {\"jsonrpc\":\"2.0\",\"id\":3,\"method\":\"eth_gasPrice\",\"params\":[]}\n// <-- {\"jsonrpc\":\"2.0\",\"result\":\"0x2e90edd000\",\"id\":3}",
   "id": 244,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// formatter --name=\"Fred Flintstone\" Australia < test/template.txt",
   "id": 245,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  var nconf = require('nconf');\n\n  //\n  // Requiring `nconf-redis` will extend the `nconf`\n  // module.\n  //\n  require('nconf-redis');\n\n  nconf.use('redis', { host: 'localhost', port: 6379, ttl: 60 * 60 * 1000 });",
   "id": 246,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Type definitions for Node.js 10.12\n// Project: http://nodejs.org/\n// Definitions by: Microsoft TypeScript <https://github.com/Microsoft>\n//                 Definitely Typed <https://github.com/DefinitelyTyped>\n//                 Alberto Schiabel <https://github.com/jkomyno>",
   "id": 247,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import formCreate from 'form-create'\nimport { maker } from 'form-create'\n// Vue.use(formCreate)",
   "id": 248,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// scss\nimport 'node_modules/@auraxy/react-select/lib/css/index.scss'\n\n// css\nimport 'node_modules/@auraxy/react-select/lib/css/index.css'",
   "id": 249,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import HttpModule from 'react-native-http-module';\n\n// const httpModule = new HttpModule(baseURL, headers);",
   "id": 250,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import tinyDelay from \"tiny-delay\"\n\ntinyDelay()",
   "id": 251,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "autossh({\n  host: '111.22.333.444',\n  username: 'root',\n  localPort: 'auto',\n  remotePort: 5432,\n  sshPort: 9999\n});",
   "id": 252,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//   \"acm:DescribeCertificate\", // only for custom domains\n//   \"acm:ListCertificates\",    // only for custom domains\n//   \"acm:RequestCertificate\",  // only for custom domains\n//   \"cloudfront:CreateCloudFrontOriginAccessIdentity\",\n//   \"cloudfront:CreateDistribution\",\n//   \"cloudfront:CreateInvalidation\",\n//   \"cloudfront:GetDistribution\",\n//   \"cloudfront:GetDistributionConfig\",\n//   \"cloudfront:ListCloudFrontOriginAccessIdentities\",\n//   \"cloudfront:ListDistributions\",\n//   \"cloudfront:ListDistributionsByLambdaFunction\",\n//   \"cloudfront:ListDistributionsByWebACLId\",\n//   \"cloudfront:ListFieldLevelEncryptionConfigs\",\n//   \"cloudfront:ListFieldLevelEncryptionProfiles\",\n//   \"cloudfront:ListInvalidations\",\n//   \"cloudfront:ListPublicKeys\",\n//   \"cloudfront:ListStreamingDistributions\",\n//   \"cloudfront:UpdateDistribution\",\n//   \"iam:AttachRolePolicy\",\n//   \"iam:CreateRole\",\n//   \"iam:CreateServiceLinkedRole\",\n//   \"iam:GetRole\",\n//   \"iam:PutRolePolicy\",\n//   \"iam:PassRole\",\n//   \"lambda:CreateFunction\",\n//   \"lambda:EnableReplication\",\n//   \"lambda:DeleteFunction\",            // only for custom domains\n//   \"lambda:GetFunction\",\n//   \"lambda:GetFunctionConfiguration\",\n//   \"lambda:PublishVersion\",\n//   \"lambda:UpdateFunctionCode\",\n//   \"lambda:UpdateFunctionConfiguration\",\n//   \"route53:ChangeResourceRecordSets\", // only for custom domains\n//   \"route53:ListHostedZonesByName\",\n//   \"route53:ListResourceRecordSets\",   // only for custom domains\n//   \"s3:CreateBucket\",\n//   \"s3:GetAccelerateConfiguration\",\n//   \"s3:GetObject\",                     // only if persisting state to S3 for CI/CD\n//   \"s3:ListBucket\",\n//   \"s3:PutAccelerateConfiguration\",\n//   \"s3:PutBucketPolicy\",\n  \"s3:PutObject\"",
   "id": 253,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const appAuth = auth(\n    {\n        // Simple case where roles is a text field in User containing roles separated by commas\n        rolesGetter: async (context, userId) => {\n            const user = context.app.service(\"users\").get(userId);\n            return user.roles.split(\",\") || [];\n        },\n    },\n    \"jwt\"\n);\n\napp.service(\"service\").hooks({\n    before: {\n        all: appAuth,\n    },\n});",
   "id": 254,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport logo from './logo.png'; // Tell Webpack this JS file uses this image\n\nconsole.log(logo); // /logo.84287d09.png\n\nfunction Header() {\n  // Import result is the URL of your image\n//   return <img src={logo} alt=\"Logo\" />;\n}\n\nexport default Header;",
   "id": 255,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//data为代付同步返回的结果\n// if(llpaycahpayInstance.submitSuccess(data)){\n    //todo,更新提现订单....\n// }",
   "id": 256,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var obj = { 'a': { 'b': { 'c': 'd' } } };\n\n// var val = dget( obj );\n// returns 'd'",
   "id": 257,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//     phonebook listall\n",
   "id": 258,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// .container {\n//     width: 100%;\n//     height: 100%;\n//   }",
   "id": 259,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = function(eor){\n  return eor.define(\"Application\").extend(function(){\n    this.title = \"Express Override\";\n  })\n  .methods({\n    index : function(req, res) {\n      var sampleModel = eor.getModule(\"Sample\", \"Model\");\n      if(sampleModel.index()){\n        res.render('index', { title: this.title })\n      }else{\n        res.render('index', { title: this.title, error_message : \"ErrorCode => -1111\"});\n      }\n    },\n\n    hello : function(req, res) {\n      res.render('index', { title: eor.shared.name })\n    }\n  })\n};",
   "id": 260,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport { shallow } from 'enzyme';\nimport App from './App';\n\nit('renders without crashing', () => {\n//   shallow(<App />);\n});",
   "id": 261,
   "stars": 0,
   "errors": [
    2593
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "bit.get(\"mempool\").then((mepool) => {\n  //  mempool := {\n  //    tx: <array of mempool transactions>\n  //  }\n})",
   "id": 262,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// clock.syncTime();",
   "id": 263,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "grunt.initConfig({\n  tishadow: {\n    test: {\n      command: 'spec',\n      options: {\n        junit: true\n      }\n    },\n    run: {\n      command: 'run',\n      options: {\n        junit: true,\n        patch: true,\n        preclear: true\n      }\n    }\n  }\n});",
   "id": 264,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// .loginForm\n// .username\n// .usernameLabel\n// .password\n// .passwordLabel\n// .remember\n// .rememberLabel\n// .button\n// .forgotLink",
   "id": 265,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// successCount = librato.metric('foo.success.count')\n// errorCount   = librato.metric('foo.error.count')\n\n// SomePromise().then(doSomething)\n//              .then(doSomethingElse)\n//              .then(successCount)    // Increment on success\n//              .catch(errorCount)     // Increment error on failure",
   "id": 266,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import LockTableView from 'react-native-locktable';",
   "id": 267,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// gh is 1 --comment 'Node GH rocks!'",
   "id": 268,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const input = document.querySelector('input');\n// const button = document.querySelector('.js-add-signature');\nbutton.addEventListener(event => {\n//     textFieldEdit.insert(input, 'Made by 🐝 with pollen.');\n});",
   "id": 269,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// vue + ts + prettier\n\n//   extends: [\n    'plugin:@etherfe/vue-typescript'\n    'plugin:@etherfe/vue-prettier'\n//   ]",
   "id": 270,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import SensorManager from \"rnative-sensor-manager\";\nSensorManager.startPressure(100);\nDeviceEventEmitter.addListener(\"pressure\", (data) => {\n  /**\n   * data.pressure\n   **/\n});\nSensorManager.stopPressure();",
   "id": 271,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const inspector = require('event-loop-inspector')();\nconst dump = inspector.dump();\n\nconsole.log(dump);",
   "id": 272,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// the value stored in column `key` of table `test` is encrypted in database\n// const testDao = dao.create(pool).table('test').encrypt(['key']);\n\n// await pool.transaction(async (query): Promise<boolean> => {\n//   await dao.create(pool).delete().from('unittest_dao').exec(query);\n  await testDao.insert({\n    key: 'key1',\n    count: 1,\n    value: 'value1'\n  }).exec(query);\n  await testDao.update().set({\n    key: 'key1',\n    count: 1,\n    value: 'value2'\n//   }).exec(query);\n  return true;\n})",
   "id": 273,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    1005,
    1005,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  bordinoAuthenticate.validateToken('mytoken')\n                     .then((isValide)=>{\n                       //do your job\n                     })\n                     .catch((e)=>(\n                       //handle error\n                     ))",
   "id": 274,
   "stars": 0,
   "errors": [
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { Plugin } from 'munar-core'\nexport default class MyPlugin extends Plugin {\n  // etc\n}",
   "id": 275,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import ActionSheet from 'react-native-actionsheet'\n\n// class Demo extends React.Component {\n//   showActionSheet = () => {\n//     this.ActionSheet.show()\n//   }\n//   render() {\n    return (\n      <View>\n        <Text onPress={this.showActionSheet}>Open ActionSheet</Text>\n        <ActionSheet\n          ref={o => this.ActionSheet = o}\n          title={'Which one do you like ?'}\n          options={['Apple', 'Banana', 'cancel']}\n          cancelButtonIndex={2}\n          destructiveButtonIndex={1}\n          onPress={(index) => { /* do something */ }}\n        />\n      </View>\n    )\n//   }\n// }",
   "id": 276,
   "stars": 0,
   "errors": [
    1108
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Field.add('ID', Field.INTEGER({\n  primaryKey    : true,\n  autoIncrement : true,\n  allowNull     : false,\n  validate      : { min: 1 }\n}))\nField.add('PK_INTEGER', Field.INTEGER({\n  primaryKey : true,\n  allowNull  : false,\n  validate   : { min: 1 }\n}))\nField.add('PK_UUID', Field.UUID({\n  primaryKey : true,\n  allowNull  : false\n}))",
   "id": 277,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { diveDeco } from 'diving-decompression'\n// ...\nconst dive = { depth: 100, bottomTime: 135 };\nconst decoObject = diveDeco(dive);\nconsole.log(decoObject)",
   "id": 278,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var model = {\n  web: 'http://www.google.com',\n  images: 'http://images.google.com/'\n};",
   "id": 279,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// console.log(source.expand());",
   "id": 280,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const eip = require('eip');\nconst redis = require('redis');\nconst { PubSub, Queue } = require('eip-redis');\nconst { Timer } = require('eip-timer');\n\nconst redisPub = redis.createClient();\nconst redisSub =  redis.createClient({return_buffers:true});\n\nconst pubSub = new PubSub(1, 1000, redisPub, redisSub, 'namespace') // eventsPerPeriod, periodInMS\nconst queue = new Queue(redisPub, 'namespace');\nconst resource = x => x;\n\n// const throttler = new eip.Route().throttleResource({ pubSub, queue, resource, timer });",
   "id": 281,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "void 0",
   "id": 282,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { loading, error, data, refetch } = useAxios({\n    url: \"api-url\",\n});\nreturn (\n    <div className=\"App\">\n        <h1>{loading && \"Loading\"}</h1>\n        <h1>{error && \"Error!\"}</h1>\n        <button onClick={refetch}>Refetch</button>\n        <div>{data && JSON.stringify(data)}</div>\n    </div>\n);",
   "id": 283,
   "stars": 0,
   "errors": [
    2304,
    1108
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// await client.balances()\n// await client.balance('BTC')\n// await client.depositAddress('BTC')\n// await client.withdraw('BTC', { quantity: 1.2, address: 'abcde' })\n// await client.order('30594e6e-ba54-4914-96f3-5b9d5de2468e')\n// await client.orderHistory('BTC-ETH')\n// await client.withdrawalHistory('BTC')\n// await client.depositHistory('BTC')",
   "id": 284,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CoreApiV10 = require('core_api_v10');\n\nvar api = new CoreApiV10.AuthApi()\n\nvar authorization = \"authorization_example\"; // {String} JWT access token\n\nvar opts = { \n  'model': new CoreApiV10.TwoFactorAuthenticatorConfirm() // {TwoFactorAuthenticatorConfirm} \n};\napi.v10Auth2faConfirmPost(authorization, opts).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n\n",
   "id": 285,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// using promise API\nrecursive(\"/app\", {\n  ignores: [\"README.md\"],\n//   fs, // in-memory fs\n  debug: true,\n  log: (...msg) => console.log(\"readdir\", ...msg)\n// }).then(successFn, errFn);",
   "id": 286,
   "stars": 0,
   "errors": [
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <template>\n//   <div id=\"app\" v-if=\"hydrated\">\n//     <router-view/>\n//   </div>\n// </template>\n\n// <script>\nexport default {\n  name: 'App',\n  data: () => ({ hydrated: false }),\n  async mounted() {\n    await this.$apollo.provider.defaultClient.hydrated()\n    this.hydrated = true\n  },\n}\n// </script>",
   "id": 287,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// konstructor-cli new my-app",
   "id": 288,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const repl = require('re-pl');\nconst run = require('setlist');\n\nrun(function* () {\n  // Initialize variables and do some work here\n//   ...\n  let value = yield someWorkHere();\n\n  // Pause execution to inspect ongoing process\n  value = yield repl(($)=>eval($))(value);\n\n  // The edited/unedited return value can be used later\n//   return lastWorkHere(value);\n});",
   "id": 289,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// walk(function(r, n){ return r+n }, 0, ...[1,2,3]) // -> 6",
   "id": 290,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var WrapperBuilder = require('thunkify-object').WrapperBuilder;\n\nvar Wrapper = new WrapperBuilder()\n .addEvent(['on', 'once'])\n .addPassThrough('emit')\n .getWrapper();",
   "id": 291,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// table.page(1);",
   "id": 292,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// user> @hubot 5rolli\n// Hubot>\n// ## test-project\n// - 残り: 29.5 days (38.4 days/people, to: 2016/03/06)\n// - 消化: 31.2 days (40.6 days/people, es: 247%)\n\n// user> @hubot 5rolli info test-project\n// hubot>\n// ## test-project\n\n// ### タスク残り時間 (5時間/日, 1.3人換算)\n// - 予想: 29.5 days (38.4 days/people, to: 2016/03/06)\n// - 最速: 21 days (27.4 days/people, to: 2016/02/28)\n// - 最悪: 65.4 days (85.1 days/people, to: 2016/05/01)\n\n// ### 完了タスク消化時間\n// - 31.2 days (40.6 days/people)\n\n// ### タスク消化率\n// - 予想: 31.4%\n// - 最速: 32.7%\n// - 最悪: 25.9%\n\n// ### 完了タスク消化ペース\n// - 予想: 247%\n// - 最速: 303%\n// - 最悪: 136%\n\n// ### 初回終了予想日 (開始日: 2015/11/27)\n// - 予想: 2016/01/31 (diff: 35 days)\n// - 最速: 2016/01/17 (diff: 42 days)\n// - 最悪: 2016/04/03 (diff: 28 days)",
   "id": 293,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'suneditor/dist/css/suneditor.min.css'\nimport suneditor from 'suneditor'\n// Import codeMirror\nimport CodeMirror from 'codemirror'\nimport 'codemirror/mode/htmlmixed/htmlmixed'\nimport 'codemirror/lib/codemirror.css'\n\nsuneditor.create('sample', {\n    codeMirror: CodeMirror // window.CodeMirror,\n    // Set options\n    // codeMirror: {\n    //     src: CodeMirror,\n    //     options: {...}\n    // }\n    buttonList: [\n        ['codeView']\n    ],\n    height: 400\n});",
   "id": 294,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/*\nexample.js\n\nthis node script will serve a lightweight swagger-ui crud-api backed by mongodb\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n          $ npm install swagger-mongodb && npm_config_server_port=1337 node example.js\n    3. open a browser to http://localhost:1337\n    4. interact with the swagger-ui crud-api\n*/\n\n/*jslint\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n\n(function (local) {\n    'use strict';\n//     switch (local.modeJs) {\n\n\n\n    // run node js-env code\n//     case 'node':\n        // export local\n        module.exports = local;\n        // init assets\n        local.utility2.cacheDict.assets['/'] = '<!DOCTYPE html>\\n' +\n/* jslint-ignore-begin */\n'<html>\\n' +\n'<head>\\n' +\n'    <meta charset=\"UTF-8\">\\n' +\n'    <title>\\n' +\n'    {{envDict.npm_package_name}} [{{envDict.npm_package_version}}]\\n' +\n'    </title>\\n' +\n'    <link rel=\"stylesheet\" href=\"/assets/utility2.css\">\\n' +\n'    <style>\\n' +\n'    * {\\n' +\n'        box-sizing: border-box;\\n' +\n'    }\\n' +\n'    body {\\n' +\n'        background-color: #fff;\\n' +\n'        font-family: Helvetical Neue, Helvetica, Arial, sans-serif;\\n' +\n'    }\\n' +\n'    body > div {\\n' +\n'        margin: 20px 0 20px 0;\\n' +\n'    }\\n' +\n'    .testReportDiv {\\n' +\n'        display: none;\\n' +\n'    }\\n' +\n'    </style>\\n' +\n'    {{envDict.npm_config_html_head_extra}}\\n' +\n'</head>\\n' +\n'<body>\\n' +\n'    <div class=\"ajaxProgressDiv\" style=\"display: none;\">\\n' +\n'    <div class=\"ajaxProgressBarDiv ajaxProgressBarDivLoading\">loading</div>\\n' +\n'    </div>\\n' +\n'    <h1>{{envDict.npm_package_name}} [{{envDict.npm_package_version}}]</h1>\\n' +\n'    <h3>{{envDict.npm_package_description}}</h3>\\n' +\n'    <div class=\"testReportDiv\"></div>\\n' +\n'    <div id=\"swagger-ui-container\" style=\"display: none;\"></div>\\n' +\n'    <iframe height=\"512\" src=\"/assets/swagger-ui.html\" width=\"100%\"></iframe>\\n' +\n'    <script src=\"/assets/utility2.js\"></script>\\n' +\n'    <script src=\"/assets/swagger-ui.rollup.js\"></script>\\n' +\n'    <script src=\"/assets/swagger-mongodb.js\"></script>\\n' +\n'    <script src=\"/assets/example.js\"></script>\\n' +\n'    <script src=\"/test/test.js\"></script>\\n' +\n'    <script>\\n' +\n'    window.utility2 = window.utility2 || {};\\n' +\n'    window.utility2.envDict = {\\n' +\n'        npm_package_description: \"{{envDict.npm_package_description}}\",\\n' +\n'        npm_package_name: \"{{envDict.npm_package_name}}\",\\n' +\n'        npm_package_version: \"{{envDict.npm_package_version}}\"\\n' +\n'    };\\n' +\n'    document.querySelector(\"iframe\").onload = function () {\\n' +\n'        var self;\\n' +\n'        self = this;\\n' +\n'        self.height = innerHeight - self.offsetTop - 20;\\n' +\n'        self.contentWindow.location.hash = location.hash;\\n' +\n'        self.contentWindow.onclick = function () {\\n' +\n'            setTimeout(function () {\\n' +\n'                location.hash = self.contentWindow.location.hash;\\n' +\n'            });\\n' +\n'        };\\n' +\n'    };\\n' +\n'    </script>\\n' +\n'    {{envDict.npm_config_html_body_extra}}\\n' +\n'</body>\\n' +\n/* jslint-ignore-end */\n            '</html>\\n';\n        local.utility2.cacheDict.assets['/'] = local.utility2.stringFormat(\n            local.utility2.cacheDict.assets['/'],\n            { envDict: local.utility2.envDict },\n            ''\n        );\n        local.utility2.cacheDict.assets['/assets/example.js'] =\n            local.utility2.istanbul_lite.instrumentSync(\n                local.fs.readFileSync(__dirname + '/example.js', 'utf8'),\n                __dirname + '/example.js'\n            );\n        local.utility2.cacheDict.assets['/test/test.js'] =\n            local.utility2.istanbul_lite.instrumentInPackage(\n                local.fs.readFileSync(local.swmg.__dirname + '/test.js', 'utf8'),\n                local.swmg.__dirname + '/test.js',\n                'swagger-mongodb'\n            );\n        // init mongodb-client\n        local.utility2.onReady.counter += 1;\n        local.utility2.taskRunOrSubscribe({\n            key: 'swagger-mongodb.mongodbConnect',\n            onTask: function (onError) {\n                local.mongodb.MongoClient.connect(\n                    local.utility2.envDict.npm_config_mongodb_url ||\n                        'mongodb://localhost:27017/test',\n                    function (error, db) {\n                            // validate no error occurred\n                            local.utility2.assert(!error, error);\n                            local.swmg.db = db;\n                            onError();\n                            local.utility2.onReady();\n                        }\n                );\n            }\n        });\n        // init middleware\n        local.middleware = local.utility2.middlewareGroupCreate([\n            // init pre-middleware\n            local.utility2.middlewareInit,\n            // init cached-assets middleware\n            local.utility2.middlewareAssetsCached,\n            // init http-body-get middleware\n            local.utility2.middlewareBodyGet,\n            // init http-body-parse-upload middleware\n            function (request, response, nextMiddleware) {\n                var boundary, bodyText;\n                // jslint-hack\n                local.utility2.nop(response);\n                local.utility2.testTryCatch(function () {\n                    if ((request.headers['content-type'] || '')\n                            .indexOf('multipart/form-data') !== 0) {\n                        nextMiddleware();\n                        return;\n                    }\n                    boundary =\n                        '--' + (/boundary=(.*)/).exec(request.headers['content-type'])[1];\n                    request.swmgBodyParsed = {};\n                    bodyText = String(request.bodyRaw);\n                    bodyText.split(boundary).slice(1, -1).forEach(function (part) {\n                        request.swmgBodyParsed[\n                            (/\\bname=\"([^\"]*)/).exec(part)[1]\n                        ] = part.split('\\r\\n\\r\\n').slice(1).join('\\r\\n\\r\\n').slice(0, -2);\n                    });\n                    // set file\n                    bodyText.replace('\\r\\n\\r\\n', function (match0, ii) {\n                        // jslint-hack\n                        local.utility2.nop(match0);\n                        request.swmgBodyParsed.file = request.bodyRaw\n                            .slice(ii + 4, -(boundary.length + 6))\n                            .toString('base64');\n                    });\n                    request.swmgBodyParsed.file = request.bodyRaw\n                        .slice(bodyText.lastIndexOf('\\r\\n\\r\\n') + 4, -(boundary.length + 6))\n                        .toString('base64');\n                    // set filename\n                    request.swmgBodyParsed.filename = (/\\bfilename=\"([^\"]+)/).exec(bodyText);\n                    request.swmgBodyParsed.filename =\n                        request.swmgBodyParsed.filename &&\n                        request.swmgBodyParsed.filename[1];\n                    nextMiddleware();\n                }, nextMiddleware);\n            },\n            // init http-body-parse middleware\n            local.swmg.middlewareBodyParse,\n            // init swagger pre-middleware\n            function (request, response, nextMiddleware) {\n                // jslint-hack\n                local.utility2.nop(request);\n                // enable cors\n                // http://en.wikipedia.org/wiki/Cross-origin_resource_sharing\n                response.setHeader(\n                    'Access-Control-Allow-Methods',\n                    'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'\n                );\n                response.setHeader('Access-Control-Allow-Origin', '*');\n                // init content-type\n                response.setHeader('Content-Type', 'application/json; charset=UTF-8');\n                nextMiddleware();\n            },\n            // init swagger middleware\n            local.swmg.middlewareSwagger\n        ]);\n        // init error-middleware\n        local.middlewareError = local.swmg.middlewareError;\n        // init petstore-api\n        (function () {\n            var methodPath, options, schema;\n            options = local.utility2.jsonCopy(require(local.swmg.local\n                .swagger_ui_lite.__dirname + '/swagger.json'));\n            options = {\n                definitions: options.definitions,\n                paths: options.paths,\n                tags: options.tags\n            };\n            // remove unused properties\n            delete options.definitions.ApiResponse;\n            // init schema\n            Object.keys(options.definitions).forEach(function (schemaName) {\n                schema = options.definitions[schemaName];\n                // init id\n                schema.properties.id = { type: 'string' };\n                schema['x-inheritList'] = [{ $ref: '#/definitions/JsonapiResource' }];\n            });\n            local.utility2.objectSetOverride(options, {\n                definitions: {\n                    // init Pet schema\n                    Pet: {\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            id: 'pet0',\n                            name: 'birdie',\n                            photoUrls: [],\n                            status: 'available',\n                            tags: [{ name: 'bird'}]\n                        }, {\n                            id: 'pet1',\n                            name: 'kittie',\n                            status: 'pending',\n                            photoUrls: [],\n                            tags: [{ name: 'cat'}]\n                        }, {\n                            id: 'pet2',\n                            name: 'doggie',\n                            photoUrls: [],\n                            status: 'sold',\n                            tags: [{ name: 'dog'}]\n                        }],\n                        _collectionName: 'SwmgPet'\n                    },\n                    // init Order schema\n                    Order: {\n                        // create index\n                        _collectionCreateIndexList: [{\n                            key: { status: 1 },\n                            name: 'status_1'\n                        }],\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            id: 'order0',\n                            status: 'available'\n                        }, {\n                            id: 'order1',\n                            status: 'pending'\n                        }, {\n                            id: 'order2',\n                            status: 'sold'\n                        }],\n                        _collectionName: 'SwmgOrder',\n                        properties: {\n                            petId: { type: 'string' }\n                        }\n                    },\n                    // init User schema\n                    User: {\n                        // create index\n                        _collectionCreateIndexList: [{\n                            key: { username: 1 },\n                            name: 'username_1',\n                            unique: true\n                        }],\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            email: 'john@doe.com',\n                            firstName: 'john',\n                            id: 'user0',\n                            lastName: 'doe',\n                            password: 'hello',\n                            phone: '1234-5678',\n                            username: 'john.doe'\n                        }, {\n                            email: 'jane@doe.com',\n                            firstName: 'jane',\n                            id: 'user1',\n                            lastName: 'doe',\n                            password: 'bye',\n                            phone: '8765-4321',\n                            username: 'jane.doe'\n                        }],\n                        _collectionName: 'SwmgUser'\n                    }\n                },\n                // init crud-api\n                paths: {\n                    '/pet/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgPet',\n                        _crudApi: 'pet',\n                        _schemaName: 'Pet',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['pet']\n                    } },\n                    '/store/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgOrder',\n                        _crudApi: 'store',\n                        _schemaName: 'Order',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['store']\n                    } },\n                    '/user/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgUser',\n                        _crudApi: 'user',\n                        _schemaName: 'User',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['user']\n                    } }\n                }\n            }, 4);\n            // transform petstore-api to swagger-mongodb's crud-api\n            Object.keys(options.paths).forEach(function (path) {\n                Object.keys(options.paths[path]).forEach(function (method) {\n                    methodPath = options.paths[path][method];\n                    // init methodPath._schemaName\n                    switch (path.split('/')[1]) {\n                    case 'pet':\n                        methodPath._schemaName = 'Pet';\n                        break;\n                    case 'store':\n                        methodPath._schemaName = 'Order';\n                        break;\n                    case 'user':\n                        methodPath._schemaName = 'User';\n                        break;\n                    }\n                    methodPath._collectionName = 'Swmg' + methodPath._schemaName;\n                    delete methodPath.produces;\n                    delete methodPath.responses;\n                    delete methodPath.security;\n                    // init jsonapi response\n                    local.utility2.objectSetDefault(methodPath, { responses: {\n                        200: {\n                            description: '200 ok - http://jsonapi.org/format' +\n                                '/#document-structure-top-level',\n                            schema: { $ref: '#/definitions/JsonapiResponse{{_schemaName}}' }\n                        }\n                    } }, 2);\n                    // init crudCreateMany / crudCreateOne / crudDeleteByIdOne / crudGetByIdOne\n                    switch (methodPath.operationId) {\n                    case 'addPet':\n                    case 'createUser':\n                    case 'placeOrder':\n                        methodPath.operationId = 'crudCreateOne';\n                        break;\n                    case 'createUsersWithArrayInput':\n                    case 'createUsersWithListInput':\n                        methodPath.operationId = 'crudCreateMany';\n                        break;\n                    case 'deleteOrder':\n                    case 'deletePet':\n                    case 'deleteUser':\n                        methodPath.operationId = 'crudDeleteByIdOne';\n                        break;\n                    case 'getOrderById':\n                    case 'getPetById':\n                    case 'getUserByName':\n                        methodPath.operationId = 'crudGetByIdOne';\n                        break;\n                    }\n                    // init id\n                    (methodPath.parameters || []).forEach(function (paramDef) {\n                        switch (paramDef.name) {\n                        case 'orderId':\n                        case 'petId':\n                            delete paramDef.format;\n                            paramDef.type = 'string';\n                            break;\n                        }\n                    });\n                });\n            });\n            local.swmg.apiUpdate(options);\n        }());\n        // init petstore-middleware\n        local.middleware.middlewareList.push(function (request, response, nextMiddleware) {\n            var modeNext, onNext, options;\n            modeNext = 0;\n            onNext = function (error, data) {\n                local.utility2.testTryCatch(function () {\n                    modeNext = error\n                        ? Infinity\n                        : modeNext + 1;\n                    switch (modeNext) {\n                    case 1:\n                        // init id\n                        ((request.swmgMethodPath && request.swmgMethodPath.parameters) || [\n                        ]).forEach(function (paramDef) {\n                            switch (paramDef.name) {\n                            case 'orderId':\n                            case 'petId':\n                                request.swmgParamDict.id = request.swmgParamDict[paramDef.name];\n                                break;\n                            }\n                        });\n                        // init options\n                        if (request.swmgMethodPath) {\n                            options = {\n                                collectionName: request.swmgMethodPath._collectionName,\n                                data: request.swmgParamDict,\n                                operationId: request.swmgMethodPath.operationId,\n                                paramDefList: request.swmgMethodPath.parameters,\n                                schemaName: request.swmgMethodPath._schemaName\n                            };\n                        }\n                        switch (request.swmgPathname) {\n                        // handle pet request\n                        case 'DELETE /pet/':\n                        case 'GET /pet/':\n                        case 'POST /pet':\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /pet/findByStatus':\n                            options.operationId = 'crudGetByQueryMany';\n                            options.data.fields = '{}';\n                            options.data.hint = '{}';\n                            options.data.limit = 100;\n                            options.data.query = '{\"status\":{\"$in\":' +\n                                JSON.stringify(options.data.status) + '}}';\n                            options.data.skip = 0;\n                            options.data.sort = '{\"_timeModified\":-1}';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /pet/findByTags':\n                            options.operationId = 'crudGetByQueryMany';\n                            options.data.fields = '{}';\n                            options.data.hint = '{}';\n                            options.data.limit = 100;\n                            options.data.query = '{\"status\":{\"$in\":' +\n                                JSON.stringify(options.data.tags) + '}}';\n                            options.data.skip = 0;\n                            options.data.sort = '{\"_timeModified\":-1}';\n                            options.paramDefList[0].default = 'bird,cat,dog';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /pet/':\n                            options.data.upsert = true;\n                            options.data.body = {\n                                id: options.data.id,\n                                name: options.data.name,\n                                status: options.data.status\n                            };\n                            options.operationId = 'crudUpdateOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /pet//':\n                            options.data.body = {\n                                additionalMetadata: options.data.additionalMetadata,\n                                file: options.data.file,\n                                filename:\n                                    request.swmgBodyParsed && request.swmgBodyParsed.filename,\n                                id: options.id\n                            };\n                            options.data.upsert = true;\n                            options.operationId = 'crudUpdateOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'PUT /pet':\n                            options.data.upsert = true;\n                            options.operationId = 'crudReplaceOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        // handle store request\n                        case 'DELETE /store/order/':\n                        case 'GET /store/order/':\n                        case 'POST /store/order':\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /store/inventory':\n                            options.data = { body: [{\n                                $group: { _id: '$status', total: { $sum: 1} }\n                            }, {\n                                $project: { _id: 0, status: '$_id', total: '$total' }\n                            }]};\n                            options.operationId = 'crudAggregateMany';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        // handle user request\n                        case 'DELETE /user/':\n                        case 'GET /user/':\n                        case 'POST /user/createWithArray':\n                        case 'POST /user/createWithList':\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /user':\n                            options.data.username = options.data.body.username;\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'PUT /user/':\n                            options.data.body.username = options.data.username;\n                            options.data.upsert = true;\n                            options.operationId = 'crudReplaceOne';\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        default:\n                            nextMiddleware();\n                        }\n                        break;\n                    default:\n                        // validate no error occurred\n                        local.utility2.assert(!error, error);\n                        // respond with json-object\n                        response.end(JSON.stringify(data));\n                    }\n                }, nextMiddleware);\n            };\n            onNext();\n        });\n        // run server-test\n        local.utility2.testRunServer(local);\n        break;\n    }\n// }((function () {\n//     'use strict';\n    var local;\n\n\n\n    // run shared js-env code\n    (function () {\n        // init local\n        local = {};\n        // init js-env\n        local.modeJs = (function () {\n            try {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            } catch (errorCaughtNode) {\n//                 return typeof navigator.userAgent === 'string' &&\n//                     typeof document.querySelector('body') === 'object' &&\n                    'browser';\n            }\n        }());\n        // init global\n//         local.global = local.modeJs === 'browser'\n//             ? window\n//             : global;\n        // export local\n//         local.global.local = local;\n        // init swagger-mongodb\n//         local.swmg = local.modeJs === 'browser'\n//             ? window.swmg\n//             : require('swagger-mongodb');\n        // import swmg.local\n        Object.keys(local.swmg.local).forEach(function (key) {\n            local[key] = local[key] || local.swmg.local[key];\n        });\n        // init utility2\n//         local.utility2 = local.swmg.local.utility2;\n        // init onReady\n//         local.utility2.onReadyInit();\n    }());\n    return local;\n// }())));",
   "id": 295,
   "stars": 0,
   "errors": [
    2769,
    1005,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 490,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// client.indexes.list({ $select: ['name', 'fields'] });",
   "id": 296,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = require('export-files')(__dirname, '**/*.json');",
   "id": 297,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export default new Store(hydrate({\n  modules: {\n    flights: {\n      state: {\n        selected: null,\n        in_flight: []\n      }\n    }\n  }\n}))",
   "id": 298,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Ajv from 'ajv';\nimport betterAjvErrors from 'better-ajv-errors';\n// const Ajv = require('ajv');\n// const betterAjvErrors = require('better-ajv-errors');\n\n// You need to pass `jsonPointers: true`\nconst ajv = new Ajv({ jsonPointers: true });\n\n// Load schema and data\nconst schema = ...;\nconst data = ...;\n\nconst validate = ajv.compile(schema);\nconst valid = validate(data);\n\nif (!valid) {\n  const output = betterAjvErrors(schema, data, validate.errors);\n  console.log(output);\n}",
   "id": 299,
   "stars": 0,
   "errors": [
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "    import SmartFlatList from 'react-native-smart-refresh-flatlist'",
   "id": 300,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Prefer: status=200",
   "id": 301,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import CanvasSlider from '@martsis/canvas-slider';",
   "id": 302,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import isEmpty from 'just-is-empty';\n isEmpty({a: 3, b: 5}) // false\n isEmpty([1, 2]) // false\n isEmpty(new Set([1, 2, 2])) // false\n isEmpty((new Map()).set('a', 2)) // false\n isEmpty({}) // true\n isEmpty([]) // true\n isEmpty(new Set()) // true\n isEmpty(new Map()) // true\n isEmpty('abc') // false\n isEmpty('') // true\n isEmpty(0) // true\n isEmpty(1) // true\n isEmpty(true) // true\n isEmpty(Symbol('abc')); // true\n isEmpty(//); // true\n//  isEmpty(new String('abc')); // false\n//  isEmpty(new String('')); // true\n isEmpty(new Boolean(true)); // true\n isEmpty(null) // true\n isEmpty(undefined) // true",
   "id": 303,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const fs = require('fs');\nconst readable = require('co-readable');\nconst co = require('co');\n\nconst read = readable(fs.createReadStream('bigfile'));\n\nco(function* () {\n  let buf;\n  let size = 0;\n  while (buf = yield read(1024)) {\n    console.log('read %d bytes', buf.length);\n    size += buf.length;\n  }\n  console.log('total read %d bytes', size);\n}).catch(function (err) {\n  console.error(err.stack);\n});",
   "id": 304,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'onap-ui-common/lib/style.css';",
   "id": 305,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var tou8 = require('utf8-to-uint8array')\nvar str = '💩'\nconsole.log(tou8(str))",
   "id": 306,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "grunt.initConfig({\n  winston: {\n    myLogger: {\n      options: {\n        hooks: [\n          function (logger) {\n            logger.on('logging', function (transport, level, msg, meta) {\n              // [msg] and [meta] have now been logged at [level] to [transport]\n            });\n          },\n          function (logger) {\n            logger.addColors({\n              foo: 'blue',\n              bar: 'green',\n              baz: 'yellow',\n              foobar: 'red'\n            });\n          }\n        ]\n      }\n    }\n  }\n});",
   "id": 307,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 22,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//      api.stuff.items.POST",
   "id": 308,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// pull(\n//   pl.read(db, {live: true}),\n  //log data as it comes,\n  //because tail will keep the connection open\n  //so we'll never see the end otherwise.\n//   pull.through(console.log),\n  //note, pull-streams will not drain unless something is\n  //pulling the data through, so we have to add drain\n  //even though the data we want is coming from pull.through()\n//   pull.drain()\n// )",
   "id": 309,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require(\"gulp\");\nvar reveasy = require(\"gulp-rev-easy\");\n\ngulp.task(\"reveasy\", function (argument) {\n  gulp.src(\"test.html\")\n    .pipe(reveasy({\n        fileTypes:['img1'],\n        elementAttributes:{\n            img1:{\n                name:'img',\n                src:'data-src'\n            }\n        }))\n    .pipe(gulp.dest(\"./dist\"))\n})",
   "id": 310,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// > S.reduce (S.concat) ('abc') (Nothing)\n'abc'\n\n// > S.reduce (S.concat) ('abc') (Just ('xyz'))\n'abcxyz'",
   "id": 311,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const defaults = {\n    passengers: {\n        adults: 1,\n        children: 0\n    }\n}",
   "id": 312,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "type ResolveResourceFn = (\n//   resourceIri?: Iri,\n  context?: any,\n//   info?: GraphQLResolveInfo\n) => ?ResolverOutput<any>",
   "id": 313,
   "stars": 0,
   "errors": [
    8008,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const StringToken = Any(\n  /^('[^'\\\\]*(?:\\\\.[^'\\\\]*)*')/,  // single-quoted\n  /^(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")/,  // double-quoted\n);\n\nconst Identifier = /^([a-zA-Z_$][a-zA-Z0-9_$]*)/;\n// const SumExpression = All(Identifier, '=', Identifier, '+', Identifier);",
   "id": 314,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const assert = require('assert')\n\nfunction counter (value) {\n    switch (typeof value) {\n    case 'object': {\n            if (null) {\n                return 1\n            }\n            let sum = 0\n            if (Array.isArray(value)) {\n                for (const item of value) {\n                    sum += counter(item)\n                }\n            }\n            for (const name in value) {\n                for (const item of value) {\n                    sum += counter(value[name])\n                }\n            }\n        }\n    default:\n        return 1\n    }\n}\n\nassert.equal(counter({ a: 'x', b: [ 'y', 'z' ] }), 3, 'found three scalar values')",
   "id": 315,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 24,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Model = bookshelf.Model.extend({\n    casts: {\n        // Property 'locked' will be converted into a boolean value\n        locked: 'boolean',\n\n        age(dbValue) {\n            return parseInt(dbValue, 10);\n        },\n\n        notFourtyTwo() {\n            return 42;\n        }\n    }\n});\n\nModel.forge().fetch('id', 91)\n        .then( model => {\n//             typeof modal.get('locked'); // 'boolean'\n            model.get('notFourtyTwo');  // 42\n            typeof model.get('age'); // 'number'\n        });",
   "id": 316,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// access.list(options, callback);",
   "id": 317,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// shave and a haircut, two bits :D\n// grunt.task.run('beep:twobits');",
   "id": 318,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ModulusCombine = require('modulus-combine');\n\n// 4 digits before the decimal and keep 5 decimal digits (9 total)\nvar modulusCombine = new ModulusCombine(4, 10);\n\nmodulusCombine.compress(3.456789, 367.123123123);\n// -> 34567800000036712000\n\nmodulusCombine.deflate(34567800000036712000);\n// -> [ 3.45678, 367.12448 ]\n",
   "id": 319,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// function (d) { return this.accessor(d) !== undefined && this.accessor(d) !== ''; }",
   "id": 320,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// '../mock/index';\nconst item = {\n  id: 2,\n  wechatId: 'aaaaaa',\n  wechatName: '测试公众号',\n  appId: '1414',\n  type: 2,\n};\n\nlet start = 0;\nconst getList = () => {\n  const recordList = [];\n  for (let i = 0; i < 10; i++) {\n    const temp = { ...item };\n    Object.keys(temp).forEach((k) => {\n      temp[k] += start++;\n    });\n    recordList.push(temp);\n  }\n\n  return recordList;\n};\n\nexport const api = () => Promise.resolve({\n  totalRecord: 666,\n  recordList: getList(),\n});\n",
   "id": 321,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// .orderBy(\"key1\", \"key2\");\n// .orderBy({ \"key1\": \"asc\" }, { \"key2\": \"desc\" });\n// .orderBy([\"key1\", \"key2\"]);\n// .orderBy([{ \"key1\": \"asc\" }, { \"key2\": \"desc\" }]);",
   "id": 322,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { handle } from 'kefir.handle';\n\n// var source = Kefir.sequentially(100, [0, 1, 2, 3]);\nvar result = source::handle({\n  value(emitter) { /* value handler */ }\n})",
   "id": 323,
   "stars": 0,
   "errors": [
    2304,
    1005,
    1134,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// sc ip 获取本机ip",
   "id": 324,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import scroll from \"@threespot/freeze-scroll\";\n\n// Disable scrolling\nscroll.freeze();\n\n// Enable scrolling\nscroll.unfreeze();",
   "id": 325,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nconst run = async() => {\n  // 默认参数\n  const expire = {\n    expireTime: 24, // 过期时间 24h\n    unit: 'hour', // hour | minute | second | millisecond\n    auto: true, // 自动过期， 开启会定时清除24h以前的数据\n  }\n\n  // 使用默认过期时间 expire\n//   await databee.expire();\n\n  // 自定义数据过期时间\n//   await databee.expire(expire);\n}",
   "id": 326,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function getIssueEventsCollection(comicId, characters, creators, limit, modifiedSince, name, nameStartsWith, offset, orderBy, series, stories, callback)",
   "id": 327,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// git submodule update --remote web-platform-tests",
   "id": 328,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// stachedown.renderStrict('The {{important_thing}} must be visible.', {});\n// throws Error",
   "id": 329,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const contentSourceKey = '' // your content source key\nconst user = 'enterprise_search' // username\nconst permissions = { permissions: ['permission2'] } // permissions to add to the user\n\n// client\n//   .addUserPermissions(contentSourceKey, user, permissions)\n  .then(response => {\n    // handle response\n  })\n  .catch(error => {\n    // handle error\n  })",
   "id": 330,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//set ray position\nthis.ray.setOrigin(400, 300);\n//set ray direction (in radians)\nthis.ray.setAngle(2);\n//set ray direction (in degrees)\nthis.ray.setAngleDeg(90);\n//cast single ray and get closets intersection, hit mapped object and hit segment\nlet intersection = this.ray.cast();\nlet hitObject = intersection.object;\nlet hitSegment = intersection.segment;\n\n//cast rays in all directions (toward all mapped objects vertices / points)\n// let intersections = this.ray.castCircle();\n\n//set ray's cone angle (in radians)\nthis.ray.setCone(1);\n//set ray's cone angle (in degrees)\nthis.ray.setConeDeg(90);\n\n//cast rays in a cone\nlet intersections = this.ray.castCone();",
   "id": 331,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// public address: qLUHmrFGexxpyHwQphLpE1czZNFE5m1xmV\n// private key (WIF): cNQKccYYQyGX9G9Qxq2DJev9jHygbZpb2UG7EvUapbtDx5XhkhYE",
   "id": 332,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// MOUNTED, // First render of the chart\n// INTERVAL, // If you specify an update interval, it will be called every n seconds\n// NEW_LOADER, // The loader function changed\n// NEW_DOMAIN, // The outer domain changed,\n// NEW_SUBDOMAIN, // The user zoomed to a new subdomain.\n// UPDATE_POINTS_PER_SERIES, // The pointsPerSeries prop has changed",
   "id": 333,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const appCred = 'yourappcred';\nconst connectionURL = 'nodeConnectionURL';",
   "id": 334,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "api.convertToCoordinates(\"filled.count.soap\")\n  .then(function(response) {\n    console.log(\"[convertToCoordinates]\", response);\n  })\n  .catch(function(error) { // catch errors here\n    console.log(\"[code]\", error.code);\n    console.log(\"[message]\", error.message);\n  });",
   "id": 335,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Iterable from \"iterable.flow\"",
   "id": 336,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// $ExpectType void\n// f(1);\n\n// $ExpectError\n// f(\"one\");",
   "id": 337,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "db.status(function(obj){\n    console.log('Status', obj);\n});",
   "id": 338,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const book = new Book();\n\nRx.Observable.combineLatest(\n  book.subject('chapter1'),\n  book.subject('chapter2'),\n)\n.subscribe(() => {\n  console.log('Two first chapters are ready');\n});\n\nbook.publish('chapter1');\nbook.publish('chapter2');",
   "id": 339,
   "stars": 0,
   "errors": [
    2552,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// about:inspect",
   "id": 340,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.",
   "id": 341,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var token = etcd.get(\"key\", console.log);\ntoken.abort() // also aliased as token.cancel()\n\nconsole.log(\"Request is cancelled: \", token.isAborted());",
   "id": 342,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// htdocs/example/\n//   |- example.js     <-- your 'example' script file",
   "id": 343,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { parseSkinFile } = require('json2ableton-live-skin');\n// const skinFileBuffer = fs.readFileSync(__dirname + '/skinFile.ask');\n// const skin = parseSkinFile(skinFileBuffer);\n// console.log(skin);\n// => {\"format\":\"live9\",\"ControlForeground\":[0,0,0,255],\"TextDisabled\":[90,90,9...\"ViewCheckControlDisabledOff\":[66,66,66,255]}",
   "id": 344,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { MentionsInput, Mention } from 'react-mentions'",
   "id": 345,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var morphology = require(\"ball-morphology\")\n\nrequire(\"get-pixels\")(\"bwimage.png\", function(err, data) {\n  var r = data.pick(-1, -1, 0)\n  \n  // ... do stuff ...\n})",
   "id": 346,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// web3.utils.decodeBech32Address(hrp, bech32Address)",
   "id": 347,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ObjectStorage = require('ibmcloud-objectstorage');\nvar config = {\n    provider: 'openstack',\n    useServiceCatalog: true,\n    useInternal: false,\n    keystoneAuthVersion: 'v3',\n    authUrl: '',\n    tenantId: '', //projectId from credentials\n    domainId: '',\n    username: '',\n    password: '',\n    region: '' //dallas or london region\n};\nvar os = new ObjectStorage(config, \"my-container\");",
   "id": 348,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Vue from 'vue'\nimport VuePagination from 'v-pc-pagination'\nVue.use(VuePagination)",
   "id": 349,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// is.number(42);\n// => true\n\n// is.number(NaN);\n// => false\n\n// is.not.number('42');\n// => true\n\n// is.all.number('foo', 1);\n// => false\n\n// is.any.number({}, 2);\n// => true\n\n// 'all' and 'any' interfaces can also take array parameter\n// is.all.number([42, 'foo', 1]);\n// => false",
   "id": 350,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "({\n  timelineContext: {\n    timelineWidth,\n    visibleTimeStart,\n    visibleTimeEnd,\n    canvasTimeStart,\n    canvasTimeEnd\n  },\n  headerContext: {\n    unit,\n//     intervals: this.state.intervals\n  },\n//   getRootProps: this.getRootProps,\n//   getIntervalProps: this.getIntervalProps,\n  showPeriod,\n  //contextual data passed through headerData\n  data,\n})=> React.Node",
   "id": 351,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ParseServer         = require('parse-server').ParseServer;\nvar AzureStorageAdapter = require('parse-server-azure').FilesAdapter;\n\nvar account = 'YOUR_AZURE_STORAGE_ACCOUNT_NAME';\nvar container = 'YOUR_AZURE_STORAGE_CONTAINER_NAME';\nvar options = {\n    accessKey: 'YOUR_ACCESS_KEY',\n    directAccess: false // If set to true, files will be served by Azure Blob Storage directly\n}\n\nvar api = new ParseServer({\n  appId: process.env.APP_ID || 'myAppId',\n  serverURL: process.env.SERVER_URL || 'http://localhost:1337'\n//   (...)\n//   filesAdapter: new AzureStorageAdapter(account, container, options);\n});",
   "id": 352,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const cache = yieldCache();",
   "id": 353,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import TelephoneInput from 'react-tel-input-japan';\n\n// React.renderComponent(\n  <div>\n//     <TelephoneInput\n//       value={this.state.value}\n//       onChange={(value, valid) => this.setState({ value, valid })}\n      placeholder={'input telephone number'}\n    />\n//   </div>,\n//   document.querySelector('#element'));",
   "id": 354,
   "stars": 0,
   "errors": [
    17004,
    2695,
    17004,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Conditionally execute a function to continue configuration\n// condition: Boolean\n// whenTruthy: Function -> ChainedMap\n  // invoked when condition is truthy, given a single argument of the ChainedMap instance\n// whenFalsy: Optional Function -> ChainedMap\n  // invoked when condition is falsy, given a single argument of the ChainedMap instance\n// when(condition, whenTruthy, whenFalsy)",
   "id": 355,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Reset current visitor\n// analytics.reset()",
   "id": 356,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var tr = require(\"tr-064\");\nvar tr064 = new tr.TR064();\ntr064.initTR064Device(\"fritz.box\", 49000, function (err, device) {\n    if (!err) {\n       var wanip = device.services[\"urn:dslforum-org:service:WANIPConnection:1\"];\n       wanip.actions.GetInfo(function(err, result){\n               console.log(result);\n       });\n    }\n});\n",
   "id": 357,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <vue-googlemap-polygon :paths=\"paths\" :events=\"events\" @change=\"change\" editable ></vue-googlemap-polygon>",
   "id": 358,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Account = dynogels.define('Account', {\n  hashKey : 'email',\n\n  // add the timestamp attributes (updatedAt, createdAt)\n  timestamps : true,\n\n  schema : {\n//     email   : Joi.string().email(),\n//     name    : Joi.string(),\n//     age     : Joi.number(),\n//     roles   : dynogels.types.stringSet(),\n    settings : {\n//       nickname      : Joi.string(),\n//       acceptedTerms : Joi.boolean().default(false)\n    }\n  }\n});",
   "id": 359,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const strava = require('strava-v3');\nstrava.athlete.get({'access_token':'abcde'},function(err,payload,limits) {\n    //do something with your payload, track rate limits\n    console.log(limits);\n    /*\n    output:\n    {\n       shortTermUsage: 3,\n       shortTermLimit: 600,\n       longTermUsage: 12,\n       longTermLimit: 30000\n    }\n    */\n});",
   "id": 360,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "$scope.$on('auth:account-destroy-error', function(ev, reason) {\n//   alert(\"Account deletion failed: \" + reason.errors[0]);\n});",
   "id": 361,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const logging = require(\"console-logging\");\nconst logger = logging.logger;",
   "id": 362,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { MatomoService } from \"bim-gdpr/src/services/matomo/matomo\"\n\n// Create services :\n// const matomo = bGDPR.createService( new MatomoService('//matomo.php') )\n// matomo.setWeight( -1 ) // Place matomo first.\n\n// Then initialize\nbGDPR\n//     .setTemplate( new DefaultTemplate() ) // Initialize the view\n    .init() // Initialize the core",
   "id": 363,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require('gulp');\nvar concatCss = require('gulp-concat-css');\n\ngulp.task('default', function () {\n  return gulp.src('assets/**/*.css')\n    .pipe(concatCss(\"styles/bundle.css\"))\n    .pipe(gulp.dest('out/'));\n});",
   "id": 364,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// ALMA_APIKEY=l7xxabcdefghijklmnopqrstuvwxyz node test.js ",
   "id": 365,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const M5Stack = require(\"m5stackjs\");\n\nlet m5 = new M5Stack('OBNIZ_ID_HERE');\n\nm5.onconnect = async function () {\n  m5.buttonA.onchange = (state) => {\n      console.log(state);\n  }\n  \n  const servo = m5.wired(\"ServoMotor\", {signal:2});\n  servo.angle(90);\n\n};\n",
   "id": 366,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// TodoLib.js\nimport memoize from 'memoize-one';\nimport { createStatedLib } from '@stated-library/base';\nimport createTodo from './createTodo';\nimport fetchTodosFromCloud from './fetchTodosFromCloud';\n\nexport default function createTodoLib() {\n\n  const getCompletedTodos = memoize(\n    todos => todos.filter(todo => todo.completed)\n  );\n\n  const getActiveTodos = memoize(\n    todos => todos.filter(todo => !todo.completed)\n  );\n\n  function deriveState(rawState) {\n    return {\n      ...rawState,\n      get activeTodos() {\n        return getActiveTodos(rawState.todos);\n      },\n      get completedTodos() {\n        return getCompletedTodos(rawState.todos);\n      },\n    }\n  }\n\n  return createStatedLib(\n    { todos: [] },\n    base => ({\n\n      addTodo(text) {\n        base.updateState({\n//             todos: base.state.todos.concat(makeTodo(text)),\n          }, 'ADD_TODO');\n      },\n\n      toggleTodo(id) {\n        base.updateState({\n          todos: base.state.todos.map(todo =>\n            todo.id === id ? { ...todo, completed: !todo.completed } : todo)\n        }, 'TOGGLE_TODO');\n      },\n\n      async fetchTodos() {\n        base.updateState({ isFetching: true }, 'FETCH_TODOS_START');\n        const newTodos = await fetchTodosFromCloud();\n        base.updateState({\n          todos: base.state.todos.concat(newTodos),\n          isFetching: false,\n        }, 'FETCH_TODOS_COMPLETE');\n      },\n    }),\n  { deriveState });\n// ",
   "id": 367,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 45,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const fs = require('fs');\nconst { generate } = require('gas-entry-generator');\n\nconst fooSource = fs.readFileSync('foo.js', {encoding: 'utf8'});\nconst options = {\n  comment: true,\n  autoGlobalExports: true // Enable to detect exports.* to generate entry point functions.\n};\nconst output = generate(fooSource, options);\nconsole.log(output.entryPointFunctions);\nconsole.log('-----');\nconsole.log(output.globalAssignments);",
   "id": 368,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Config = require('webpack-chain');\n\nconst config = new Config();",
   "id": 369,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n// your-component.js\nimport Dummy from 'innoark-npm2'\n\n// ...\n// <Dummy className=\"dummy\" />\n// ...\n\n// your-component.css\n// .dummy {\n//   color: white;\n//   background-color: purple;\n// }\n",
   "id": 370,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const trusona = new Trusona(token, secret)\n\n// const document = await trusona.getIdentityDocument(document.id)\n\n// document.verificationStatus // UNVERIFIED, UNVERIFIABLE, VERIFIED, or FAILED",
   "id": 371,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// async MergeIntoMKV(downloadedFile = LocalVideoObjectSchema,\n//                    srt_subtitles = array(SubtitleMeta),\n//                    selectedFile = VideoObjectSchema)",
   "id": 372,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// jamr -w ./model.json -i ./text-file.txt -o ./where-ever.txt -n 5 -s 5000",
   "id": 373,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export default {\n  modules: [\n    'nuxt-feed-yandex-market'\n  ],\n  yandexMarket: {\n    data: {}, // JSON with data or a function that returns the JSON \n    path: '/yandex-market.xml', // The route to your xml file\n    validate: true,\n    cacheTime: 1000 * 3600 * 24 \n  }\n}",
   "id": 374,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// if ('scrollRestoration' in window.history) {\n  window.history.scrollRestoration = 'manual';\n// }",
   "id": 375,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Counter = () => {\n//   const [count, setCount] = useState(0)\n//   return <div>\n//     <button onClick={() => setCount(count + 1)} >Increment</button>\n//     <span>count: {count}</span>\n//   </div>\n}",
   "id": 376,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// removeRow(\n//   change: Change,\n  options: {\n//     at?: number,\n//     normalize?: boolean,\n  }\n// ): Change",
   "id": 377,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// On GET /statistics\n// Get the top score\n// if (url === '/top-score') {\n    dpd.scores.get({$limit: 1, $sort: {score: -1}}, function(result) {\n//     setResult(result[0]);\n    });\n// }",
   "id": 378,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "                                                                                      \n    am([34, 56, 78]).forEach(function (value, i) {\n           console.log(value, i);\n    })\n    \n    .log()  // 34 0, 56 1, 78 2, [34, 56, 78]\n    \n    .error(err=>{      \n              // handle errors at end of chain\n      \n    })\n  ",
   "id": 379,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "AuthModule.forRoot({\n  domain: 'YOUR_AUTH0_DOMAIN',\n  clientId: 'YOUR_AUTH0_CLIENT_ID',\n  organization: 'YOUR_ORGANIZATION_ID'\n// }),",
   "id": 380,
   "stars": 0,
   "errors": [
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const InsertHtmlWebpackPlugin = require('insert-html-webpack-plugin')\n\nnew InsertHtmlWebpackPlugin(\n  // 第一个参数，必填，配置文件列表\n  {\n    js: [\n      // 可以配置多个，按顺序依次插入\n      { path: 'a.js' }, // path属性表示使用script内联方式\n      { path: 'b.js' },\n      { url: 'https://c.com/c.js' } // url属性表示使用script外部引入方式\n    ],\n    css: [\n      { path: 'd.css' }, // path属性表示使用style内联方式\n      { url: 'https://e.com/e.css' } // url属性表示使用link外部引入方式\n    ]\n  },\n  // 第二个参数，可选，配置插入位置，默认值如下\n  {\n    jsNode: '<body>', // 指定js要插入的节点位置\n    jsSide: 'after', // js要插入在节点位置处的前面还是后面，可选值'after'、'before'\n    cssNode: '</title>', // 指定css要插入的节点位置\n    cssSide: 'after', // css要插入在节点位置处的前面还是��面，可选值'after'、'before'\n  }\n)",
   "id": 381,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// \"../../whatwg-fetch/fetch.js\": path.join( // this is the third-party dependency in the lrnwebcomponents\n//   __dirname,\n  \"../node_modules/whatwg-fetch/fetch.js\" // this is where it lives in node_modules\n// )",
   "id": 382,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { enableProdMode, NgZone } from '@angular/core';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { Router } from '@angular/router';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport singleSpaAngular from 'single-spa-angular';\nimport { singleSpaPropsSubject } from './single-spa/single-spa-props';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst lifecycles = singleSpaAngular({\n  bootstrapFunction: singleSpaProps => {\n    singleSpaPropsSubject.next(singleSpaProps);\n    return platformBrowserDynamic().bootstrapModule(AppModule);\n  },\n  template: '<app-root />',\n  Router,\n  NgZone,\n//   domElementGetter: () => document.getElementById('angular-app')\n});\n\nexport const bootstrap = lifecycles.bootstrap;\nexport const mount = lifecycles.mount;\nexport const unmount = lifecycles.unmount;",
   "id": 383,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 22,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  }
 ],
 "After TS Fixes": [
  {
   "code": "let $PS = require('ps-ajaxqueue');\n\n$PS.ajaxQueue({\n    url: \"https://api.ipify.org/?format=jsonp\",\n    dataType: \"jsonp\",\n    clearQueueDelay: null\n}).done(function (data) {\n    console.log(data);\n});",
   "id": 0,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const style={{\n    standaloneLayout:{display:'flex', maxWidth:'fit-content'}\n}}",
   "id": 1,
   "stars": 0,
   "errors": [
    1136,
    2451,
    1003,
    2451,
    1005,
    2451,
    1003,
    2451,
    1005,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var express   = require(\"express\")\nvar nofavicon = require(\"express-no-favicons\")\nvar app       = express();\n\napp.use(nofavicon());\n\napp.listen(process.env.PORT)",
   "id": 2,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { poll, ORDER_CREATED } = require('lib-events');\n\nasync function processMessage({ type, source, id, checksum }, ack) {\n  if (type === ORDER_CREATED) {\n    console.log(`${source} created an order!`);\n  }\n\n  await ack()\n}\n\nexports.process = async function () {\n  await poll(processMessage, {\n    maxNumberOfMessages: 10,\n    maxIterations: 10\n  });\n}",
   "id": 3,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " // returns a data object with the name of the control and the raw MIDI message\nkmix.on('any', (data) => {\n    console.log('control-name', data.control, 'control-data', data.raw)\n    // data.control example: 'fader-1'\n    // data.raw example: [176,1,67]\n    switch(data.control){\n        case 'fader-1':\n            console.log('fader-1', data.raw)\n            break;\n        case 'button-vu':\n            console.log('button-vu', data.raw)\n            break;\n        case 'button-vu:off':\n            console.log('button-vu:off', data.raw)\n            break;\n        default:\n            console.log('any other data', data)\n    }\n})",
   "id": 4,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Schema from '@jalik/schema';\n\nexport const ExampleSchema = new Schema({\n  time: {\n    type: 'string',\n    // The time must be like 'HH:mm'\n    pattern: '^\\\\d{1,2}:\\\\d{1,2}$'\n  },\n  password: {\n    type: 'string',\n    // The password must contain alphanumeric and special characters\n    pattern: /^[a-zA-Z0-9_&#@$*%?!]+$/\n  }\n});",
   "id": 5,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const sander = require('@marionebl/sander');\nconst Tesseract = require('tesseract.js');\nconst {langPath} = require('@tessdata/eng');\nconst { buffer } = require('stream/consumers');\r\n\nconst image = sander.readFile('some-image.png');\nconst tesseract = Tesseract.create({langPath});\n\ntesseract.recognize(Buffer, {\n  lang: 'eng'\n});",
   "id": 6,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const sagaABC = function* sagaABC() {\n  yield take('ACTION_A');\n  // Do some I/O here.\n  yield put(actionB());\n  yield put(actionC());\n};\n\nconst sagaDE = function* sagaDE() {\n  yield take('ACTION_D');\n  yield put(actionE());\n};\r\n\r\nfunction* take(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 7,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "`external: [...Object.keys(pkg.dependencies || {}), ...Object.keys(pkg.peerDependencies || {})],`",
   "id": 8,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mkpdf = require('mkpdf')\n\nmkpdf().from('/path/to/document.md').to('/path/to/document.pdf', function () {\n    console.log('Done')\n})\n\n// Or using streams\nvar fs = require('fs')\n\nfs.createReadStream('/path/to/document.md')\n    .pipe(mkpdf())\n    .pipe(fs.createWriteStream('/path/to/document.pdf'))",
   "id": 9,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import sinon from 'sinon';\nimport { expect } from 'chai';",
   "id": 10,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Cacher = require(\"softweb-cacher\");",
   "id": 11,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { start } = require(\"repl\")\r\n\n- Register providers inside the your start/app.js file.\n```js\nconst providers = [\n    ...\n        '@faisal50x/ray/providers/RayProvider',\n    ...\n]",
   "id": 12,
   "stars": 0,
   "errors": [
    2339,
    2451,
    2362,
    2304,
    1005,
    1005,
    1005,
    1005,
    1005,
    2451,
    1005,
    2349,
    1161,
    1160
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = ({name, source, places, index, count, filesCount, errorsCount}) => {\n    return '';\n};",
   "id": 13,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Get the current state of analytics\nanalytics.getState()\n\n// Get a subpath of state\nanalytics.getState('context.offline')",
   "id": 14,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const isChromeAgent = (context) => {\n  return context.req.headers['User-Agent'].indexOf('Chrome') !== -1;\n}\n\napp.useIf(isChromeAgent, async (context) => {\n  context.res.headers['Content-Type'] = 'text/html';\n});\n\n// now if a route was called from Chrome browser, the response will be set to HTML COntent-Type",
   "id": 15,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var x11 = require('x11-hash-js');\n\nconsole.log(x11.digest('The great experiment continues.'));\n// -> '4da3b7c5ff698c6546564ebc72204f31885cd87b75b2b3ca5a93b5d75db85b8c'",
   "id": 16,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const myMessage = await wtsqs.popOne()\n// The message no longer exists in queue\nconsole.log(myMessage)\n// output:\n{\n  id: 'messageId',\n  receiptHandle: 'messageReceiptHandle'\n  md5: 'messageMD5',\n  body: { a: 1 }\n}",
   "id": 17,
   "stars": 0,
   "errors": [
    2304,
    2695,
    2304,
    1005,
    2695,
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { create } = require(\"domain\")\r\n\n\n## Issues\nIf you have questions or issues feel free to create new an topic in const [issues](https://github.com/Smip/ngx-materialize/issues).\n\n## License\n\nLicensed under [MIT](https://opensource.org/licenses/MIT).",
   "id": 18,
   "stars": 0,
   "errors": [
    1127,
    1127,
    1005,
    2552,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2448,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1005,
    2304,
    1109,
    1005,
    1127,
    2749,
    8010,
    1127,
    1005,
    1005,
    1005,
    1005,
    1005,
    1003,
    1110,
    8010,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import LazyBackgroundSizes from 'vue-lazy-background-sizes';\n\nconst MyLazyBackground = {\n    mixins: [LazyBackgroundSizes],\n    data() {\n        return {\n            screens: ['762', '1200'],\n        }\n    },\n}\n\nVue.component('my-lazy-background', MyLazyBackground);",
   "id": 19,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "backand.initiate({\n  appName: 'APP_NAME',\n  signUpToken: 'SIGNUP_TOKEN',\n  anonymousToken: 'ANONYMOUS_TOKEN'\n});\n\nbackand.service.useAnonymousAuth()\n  .then(() => {\n      return backand.service.getList('USERS');\n  })\n  .then((response) => {\n      console.log(response);\n  })\n  .catch(function(error){\n      console.log(error);\n  });\n",
   "id": 20,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "mp.people.saveJson(\"example.json\");",
   "id": 21,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "# Install package\nyarn add @boldgrid/components\n\n# Import CSS files from dist folder (SASS).\n@import '@boldgrid/components/dist/css/components.min.css';\r\n\r\nfunction folder(SASS) {\r\n    throw new Error('Function not implemented.')\r\n}\r\n",
   "id": 22,
   "stars": 0,
   "errors": [
    1127,
    1005,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    1146,
    1161,
    1127,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "WWWWWW||WWWWWW\n W W W||W W W\n      ||\n    ( OO )__________\n     /  |           \\\n    /o o|    MIT     \\\n    \\___/||_||__||_|| *\n         || ||  || ||\n        _||_|| _||_||\n       (__|__|(__|__|",
   "id": 23,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    2304,
    1109,
    1127,
    1161,
    1127,
    2304,
    1109,
    2304,
    2304,
    2304,
    1109,
    1109,
    1109,
    1109,
    1109,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport logo from './logo.png'; // Tell Webpack this JS file uses this image\n\nconsole.log(logo); // /logo.84287d09.png\n\nfunction Header() {\n  // Import result is the URL of your image\n  return <img src={logo} alt=\"Logo\" />;\n}\n\nexport default Header;",
   "id": 24,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<html>\n  ...\n  <head>\n    ...\n    <script src=\"angular.js\"></script>\n    <script src=\"bower_components/ngSnakeCamel/ng-snake-camel.js\"></script>\n    ...\n  </head>\n  ...\n</html>",
   "id": 25,
   "stars": 0,
   "errors": [
    17004,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const mongoose = require('mongoose');\n\nmongoose.connect(connectionOptions);\n\nconst keyv = new keyv({\n  store: new KeyvMongoDB({ mongooseConnection: mongoose.connection })\n});",
   "id": 26,
   "stars": 0,
   "errors": [
    2304,
    2448,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "grunt.initConfig({\n  checkFileSize: {\n    options: {\n      separator: ': ',\n      punctuation: ' !!!',\n    },\n    files: {\n      'dest/default_options': ['src/testing', 'src/123'],\n    },\n  },\n});",
   "id": 27,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const removeEmptyLines = require(\"remove-blank-lines\");\n\nconsole.log(removeEmptyLines(\n    `Hello\n\nWorld!\n\n\n  **   **\n\n  **   **\n\n     -\n\n*         *\n\n *********`\n));\n// =>\n// Hello\n// World!\n//   **   **\n//   **   **\n//      -\n// *         *\n//  *********",
   "id": 28,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var failpoints = require('failpoints').create();\n\n// setup failpoints\n\nfailpoints.setAll(true);\nfailpoints.setAll({probability: 0.5});\nfailpoints.setAll(false);\n",
   "id": 29,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const HumanName = new GraphQLValidatedString({\n  name: 'HumanName'\n}).regex(/([a-zA-Z]{3,30}\\s*)+/);\n\nAssert.throws(()=> {\n  HumanName.parseValue('aa');\n}, /does not match/);",
   "id": 30,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import set from \"just-safe-set\";\n\nconst obj1 = {};\nset(obj1, \"a.aa.aaa\", 4); // true\nobj1; // {a: {aa: {aaa: 4}}}\n\nconst obj2 = {};\nset(obj2, const [a, aa, aaa], 4); // true\nobj2; // {a: {aa: {aaa: 4}}}\n\nconst obj3 = { a: { aa: { aaa: 2 } } };\nset(obj3, \"a.aa.aaa\", 3); // true\nobj3; // {a: {aa: {aaa: 3}}}\n\n// don't clobber existing\nconst obj4 = { a: { aa: { aaa: 2 } } };\nset(obj4, \"a.aa\", { bbb: 7 }); // false\n\nconst obj5 = { a: {} };\nconst sym = Symbol();\nset(obj5.a, sym, 7); // true\nobj5; // {a: {Symbol(): 7}}",
   "id": 31,
   "stars": 0,
   "errors": [
    1135,
    1134,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { title } = require(\"process\")\r\n\r\nid: '0000-0000-0000-0000',\ndifficulty: [..],\nclearRate: number,\ntitle: 'Name',\nimg: 'Url',\nthumbnailImg: 'Url',\ngameStyle: [..],\ncreatedAt: Timestamp,\ntag: [..],\nstared: number,\nplayed: number,\nshared: number,\nclears: number,\nattempts: number,\nmaker: \n  \\_ login: 'Nintendo ID',\n  \\_ faceImg: 'Url',\n  \\_ flag: 'Country',\n  \\_ name: 'Name'",
   "id": 32,
   "stars": 0,
   "errors": [
    2695,
    2304,
    1005,
    2695,
    1109,
    1003,
    1003,
    2304,
    1005,
    2693,
    2695,
    1005,
    2695,
    2304,
    1005,
    2695,
    2304,
    1005,
    2695,
    2304,
    1005,
    2695,
    1109,
    1003,
    1003,
    2304,
    1005,
    2304,
    2695,
    2304,
    1005,
    2695,
    1109,
    1003,
    1003,
    2304,
    1005,
    2693,
    2695,
    2304,
    1005,
    2693,
    2695,
    2304,
    1005,
    2693,
    2695,
    2304,
    1005,
    2693,
    2695,
    2304,
    1005,
    2693,
    2695,
    2304,
    1005,
    1127,
    1434,
    2304,
    2695,
    1127,
    1434,
    2304,
    2695,
    1127,
    1434,
    2304,
    2695,
    1127,
    1434,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { name } = require(\"assert\")\r\n\r\nnode scripts/integrate.js --name acme --openapi https://api.acme.com/openapi.json\n# or\nnode scripts/integrate.js --name acme_rss --rss https://acme.com/rss.xml",
   "id": 33,
   "stars": 0,
   "errors": [
    2305,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1127,
    1005,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import * as PIXI from 'pixi.js';\nimport {Spine} from 'pixi-spine';\n\nconst app = new PIXI.Application();\ndocument.body.appendChild(app.view);\n\napp.loader\n    .add('spineCharacter', 'spine-data-1/HERO.json')\n    .load(function (loader, resources) {\n        const animation = new Spine(resources.spineCharacter.spineData);\n\n        // add the animation to the scene and render...\n        app.stage.addChild(animation);\n        \n        if (animation.state.hasAnimation('run')) {\n            // run forever, little boy!\n            animation.state.setAnimation(0, 'run', true);\n            // dont run too fast\n            animation.state.timeScale = 0.1;\n        }\n        \n        app.start();\n    });",
   "id": 34,
   "stars": 0,
   "errors": [
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Rasha.thumbprint({ jwk: jwk }).then(function (thumbprint) {\n  console.log(thumbprint);\n});",
   "id": 35,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "let cc = {\n  \"sn\":3788106,\n   \"an\":[\"2c4b523bfa2b54a3c2cfec376336ef6e\",\"dc1edbe0708e179e84e6ee0185849811\",\"1b32715dea8bd66c6136f2bb226a9783\",\"cf4a451a23d256299f306e0170632e9c\",\"7bee1781698bfd26a40d384e3e9ba233\",\"57a59cc3fe0a9e2b0ef55d9ee7d83aa0\",\"8741aba5f9ada55cd4cc7ad9ff8cfc5e\",\"27a940f79e5bb895218dc6fee619439a\",\"6d7611020258dc07544255aecb05f94e\",\"8fd75c4a543107c762473cb5c6814b25\",\"b8fb577d62bee5e47622084deec2dc72\",\"2dddefde6b2da5f85d8a50af78a8c6ef\",\"0152c280f2b1df572e679edc5bf5aae4\",\"213bce1b1e301b90e82189ba0a908e89\",\"2f35eda22494903e5c680856304610b1\",\"64bdfe44432444514e8234fa115b9352\",\"6943424a235be73f86a065fe97756b03\",\"e037963736d439d4bc72efa49aa4f2e5\",\"da555eaad78e610e5beb51ec5d051781\",\"47849f44ee8ee1d0d41782ca21dacdc3\",\"4ec1fea2c736e8e82e1836cef7512cdb\",\"de9ec5865fa289a09059ab8a87e73ac4\",\"fb5fca0a5196333023043f080a6fb666\",\"c8df8adefe8b25103358df30491c5409\",\"dae2b572756a596fa8c97f55e8712854\"]\n}\n\nlet data = {\n  \"coin\" : cc,\n  \"paydata\" : \"email, stack, 100, 0,0,0,0,0, alex.skywallet.cc, Car payment,, ready\\nemail, stack, 150, 0,0,0,0,0, john.skywallet.cc, My debt,, ready\\nemail, stack, 21150, 0,0,0,0,0, roller.skywallet.cc, Chargeback,, ready\",\n  \"id\": \"f2494e21fcd4e54a5acd7be6f2be6e50\"\n\n}\nlet c = r.apiBillPay(data, () => {}).then(response => {\n  if (response.code != RaidaJS.ERR_NO_ERROR) {\n    console.log(\"Billpay sent\")\n    return\n  }\n\n  if (response.code == RaidaJS.ERR_SENT_PARTIALLY) {\n    console.log(\"Only \" + response.amount + \" CloudCoins sent. Try again later using the same ID: \" + response.id)\n    console.log(\"Recipients NOT sent:\")\n    for (let i = 0; i < response.recipients; i++) {\n      if (response.recipients[i].status == \"ready\")\n        console.log(response.recipients[i].address + \",\")\n    }\n  }\n}",
   "id": 36,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "_.mixin({awaitEach});",
   "id": 37,
   "stars": 0,
   "errors": [
    2304,
    18004
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nmodal.modal; // the modal element\nmodal.openButtons; // an array of open buttons\nmodal.closeButtons; // an array of close buttons\nmodal.isOpen; // boolean indicating if the modal is currently open\n",
   "id": 38,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var coinbase = web3.pi.coinbase;\nvar balance = web3.pi.getBalance(coinbase);",
   "id": 39,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// App.js\nimport React from 'react'\nimport { createRouter, Link } from 'react-context-router'\n\nconst NotFound = () => <div>Not Found</div>\n\nconst Nav = () => (\n  <nav>\n    <Link href='/' children='Home' />\n    <Link href='/posts/1' children='First Post' />\n  </nav>\n)\n\nclass App extends React.Component {\n  render () {\n    const { route } = this.props\n    const Comp = route.component || NotFound\n\n    return (\n      <div>\n        <Nav />\n        <Comp />\n      </div>\n    )\n  }\n}\n\nexport default createRouter(App)",
   "id": 40,
   "stars": 0,
   "errors": [
    17004,
    17004,
    17004,
    17004,
    2339,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 22,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { Scrollbars } from 'react-custom-scrollbars';\n\nclass App extends Component {\n  render() {\n    return (\n      <Scrollbars style={{ width: 500, height: 300 }}>\n        <p>Some great content...</p>\n      </Scrollbars>\n    );\n  }\n}",
   "id": 41,
   "stars": 0,
   "errors": [
    2304,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { TagInputModule } from 'ngx-chips';\n\nTagInputModule.withDefaults({\n    tagInput: {\n        placeholder: 'Add a new tag',\n        // add here other default values for tag-input\n    },\n    dropdown: {\n        displayBy: 'my-display-value',\n        // add here other default values for tag-input-dropdown\n    }\n});",
   "id": 42,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const axios = require('axios').default;\n\n// axios.<method> will now provide autocomplete and parameter typings",
   "id": 43,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nimport {SectionsContainer, Section, Header, Footer} from 'react-fullpage';\n\n// => in the render() method of your app\nreturn (\n  <Header>\n    <a href=\"#sectionOne\" className=\"opa\">Section One</a>\n    <a href=\"#sectionTwo\">Section Two</a>\n    <a href=\"#sectionThree\">Section Three</a>\n  </Header>\n  <Footer>\n    <a href=\"\" className=\"opa\">Dcoumentation</a>\n    <a href=\"\">Example Source</a>\n    <a href=\"\">About</a>\n  </Footer>\n  <SectionsContainer {...options}>\n    <Section>Page 1</Section>\n    <Section>Page 2</Section>\n    <Section>Page 3</Section>\n  </SectionsContainer>\n);\n",
   "id": 44,
   "stars": 0,
   "errors": [
    2657
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "* 但是��要引入app.js这个文件，因为所有的**入口全都从这个app.js进入**",
   "id": 45,
   "stars": 0,
   "errors": [
    1109,
    2304,
    1127,
    1127,
    2304,
    1127,
    2304,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "@Store({\n  endpoint: 'system',\n  mutations: {\n    login: {\n      type: MutationType.POST,\n      path: 'security/login'\n    }\n  }\n})",
   "id": 46,
   "stars": 0,
   "errors": [
    1146
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "metrics.mexists( 'net.bytesRX' );\n// returns true\n\nmetrics.mexists( 'cpu.utilization' );\n// returns false",
   "id": 47,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {observer} from 'mobx-react';\nimport {Form} from 'mobx-antd-form';\n\nconst FormItem = Form.Item;\nconst FormField = Form.Field;\n\n@Form.create({\n    fields: ({demo}) => demo.fields\n})\n@observer\nclass BasicForms extends React.Component {\n    \n    handleSubmit = e => {\n        const {dispatch, form} = this.props;\n        e.preventDefault();\n        form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                // submit form\n            }\n        });\n    };\n    \n    // ** 实现 title 的 label 属性随着其 value 属性变化 **\n    render(){\n        \n        const {form, demo} = this.props;\n        \n        function formatMessage(arg0) {\r\n            throw new Error('Function not implemented.');\r\n        }\r\n\r\n        return (\n            <Form onSubmit={this.handleSubmit} hideRequiredMark style={{marginTop: 8}}>\n                <FormItem field={form.get('title')}>\n                    <FormField field={form.get('title')} label={demo.fields.title.value}>\n                        <Input placeholder='请输入标题'/>\n                    </FormField>\n                </FormItem>\n                <FormItem field={form.get('date')}>\n                    <FormField field={form.get('date')} rules={[{required: true, message: '我的优先级更高'}]}>\n                        <RangePicker\n                            style={{width: '100%'}}\n                            placeholder={[\n                                formatMessage({id: 'form.date.placeholder.start'}),\n                                formatMessage({id: 'form.date.placeholder.end'}),\n                            ]}\n                        />\n                    </FormField>\n                </FormItem>\n                <FormItem style={{marginTop: 32}}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        <FormattedMessage id=\"form.submit\"/>\n                    </Button>\n                    <Button style={{marginLeft: 8}}>\n                        <FormattedMessage id=\"form.save\"/>\n                    </Button>                                            \n                </FormItem>\n            </Form>\n        );\n    }\n}",
   "id": 48,
   "stars": 0,
   "errors": [
    1219,
    2304,
    2339,
    2339,
    17004,
    17004,
    17004,
    17004,
    2304,
    17004,
    17004,
    17004,
    2304,
    17004,
    17004,
    2304,
    17004,
    2552,
    2304,
    17004,
    2304,
    17004,
    2552,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 52,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import map from \"just-map-object\";\n\n// DEPRECATED: use just-map-values\nmap({ a: 3, b: 5, c: 9 }, (key, value) => value + 1); // {a: 4, b: 6, c: 10}\nmap({ a: 3, b: 5, c: 9 }, (key, value) => key); // {a: 'a', b: 'b', c: 'c'}\nmap({ a: 3, b: 5, c: 9 }, (key, value) => key + value); // {a: 'a3', b: 'b5', c: 'c9'}",
   "id": 49,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "store.log('user'); // {\"name\":\"James Bond\",\"email\":\"bond007@live.com\",\"bio\":\"I spy for a living.\"}",
   "id": 50,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { stat } = require(\"fs\")\r\n\r\nnpx hermione merge-stat-exports src-report-1.JSON src-report-2.json --html dest-html-report --json report.json",
   "id": 51,
   "stars": 0,
   "errors": [
    1434,
    2304,
    1434,
    2304,
    2304,
    2363,
    2363,
    1005,
    2304,
    2304,
    1351,
    2304,
    2304,
    1351,
    2552,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "grunt.initConfig({\n\n    copy: {\n        somefiles: {\n            src: \"./mydir/**\",\n            dest: \"./myNormallyOutputDir/\"\n        }\n    },\n    multidest: {\n        copy_some_files: {\n            tasks: [\n                \"copy:somefiles\"\n            ]\n            dest: [\"./dist/distdir1\", \"./dist/distdir2\"]\n        },\n    },\n});",
   "id": 52,
   "stars": 0,
   "errors": [
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var fs = require('fs'),\n  Proposal = require('proposal'),\n  readProposal = Proposal(fs.readFile);",
   "id": 53,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const minify = require('minify');",
   "id": 54,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { run } = require(\"node:test\")\r\n\r\ndocker pull apachecn0/matplotlib-doc-zh\ndocker run -tid -p <port>:80 apachecn0/matplotlib-doc-zh\n# 访问 http://localhost:{port} 查看文档",
   "id": 55,
   "stars": 0,
   "errors": [
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    2304,
    2304,
    1434,
    2304,
    2362,
    2304,
    2304,
    2304,
    1109,
    1005,
    2304,
    2304,
    2304,
    2304,
    1127,
    1005,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "let fullsizeCanvasElement = document.getElementById('fullsize-canvas');\nlet thumbnailCanvasElement = document.getElementById('thumbnail-canvas');\n\nCanvasCamera.initialize(fullsizeCanvasElement, thumbnailCanvasElement);\n\nlet options:CanvasCamera.CanvasCameraOptions = {\n    cameraFacing: 'front',\n    fps: 15,\n    thumbnailRatio: 1/6,\n    onAfterDraw: function(frame) {\n      // do something with each frame of the fullsize canvas element only\n      // frame.image.src; // file path or base64 data URI\n      // frame.element.toDataURL(); // requested base64 data URI\n    }\n};\n\nCanvasCamera.start(options);",
   "id": 56,
   "stars": 0,
   "errors": [
    2584,
    2584,
    2304,
    2503,
    8010,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "describe('run', () => {\n  fancy\n  .stdout()\n  .do(() => console.log('foo'))\n  .do(({stdout}) => expect(stdout).to.equal('foo\\n'))\n  .it('runs this callback last', () => {\n    // test code\n  })\n\n  // add to context object\n  fancy\n  .add('a', () => 1)\n  .add('b', () => 2)\n  // context will be {a: 1, b: 2}\n  .it('does something with context', context => {\n    // test code\n  })\n})\r\n\r\nfunction expect(stdout) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 57,
   "stars": 0,
   "errors": [
    2593,
    2304,
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "require(\"typeface-open-sans\")",
   "id": 58,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "app.set('adminAuthServerMaster', function(msg, cb){\n  if(auth success) {\n    cb('ok');\n  } else {\n    cb('bad');\n  }\n})\r\n\r\nfunction cb(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 59,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1005,
    2304,
    1128,
    1005,
    1128,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "DEBUG=mysql-express-session*,mysql-connection-manager node your-app.js",
   "id": 60,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    1109,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Boilerplate = require('boilerplate');\nvar h5bp = new Boilerplate({\n  options: {\n    cwd: 'vendor/h5bp/dist'\n  },\n  root: {src: ['{.*,*.*}'],   dest: 'src/'},\n  css:  {src: ['css/*.css'],  dest: 'src/'},\n  doc:  {src: ['doc/*.md'],   dest: 'src/'},\n  js:   {src: ['js/**/*.js'], dest: 'src/'}\n});\nconsole.log(h5bp);",
   "id": 61,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const DEV_COMMAND=gatsby -u http://localhost:8080 -r -o ./out",
   "id": 62,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1005,
    1110,
    8010
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var view = async (view) => {\n    //Create an collection with a bindable field.\n    view.userData = { userName : \"John Doe\" };\n    //Bind the inner HTML of the element to the field on the collection\n    view.$nameLabel.bind = () => view.userData.userName;\n};\n\nexport { view };",
   "id": 63,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// middleware/authentication.js\n\nvar Authentication = require('../lib/authentication');\n\nfunction(req, res, next) {\n  var token = req.get('X-AUTH-TOKEN');\n\n  if(!token) {\n    /* instead of redirecting to login, give the\n    *  deep linking middleware a chance to store the\n    *  current request url, and THEN redirect to login\n    *  via the login option\n    */\n    next();\n  }\n\n  Authentication\n  .authenticate(token)\n  .then(function(tokenOrWhateverAuthYields) {\n    // we can now pass this in as the authentication option\n    req.user = tokenOrWhateverAuthYields;\n    next();\n  })\n  .error(function(e) {\n    // redirect to login since they gave us a bad token\n  });\n}",
   "id": 64,
   "stars": 0,
   "errors": [
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/* Set worksheet sheet to \"normal\" */\nws[\"!margins\"]={left:0.7, right:0.7, top:0.75,bottom:0.75,header:0.3,footer:0.3}\n/* Set worksheet sheet to \"wide\" */\nws[\"!margins\"]={left:1.0, right:1.0, top:1.0, bottom:1.0, header:0.5,footer:0.5}\n/* Set worksheet sheet to \"narrow\" */\nws[\"!margins\"]={left:0.25,right:0.25,top:0.75,bottom:0.75,header:0.3,footer:0.3}",
   "id": 65,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require('gulp');\nvar jspmAssets = require('gulp-jspm-assets');\n\ngulp.task('sass', function() {\n    jspmAssets({\n      'bootstrap', 'sass/**/*.scss',\n      'foundation', 'sass/**/*.scss'\n    })\n    .pipe(whateverTask())\n    .pipe(gulp.dest('dest'));\n});\r\n\r\nfunction whateverTask() {\r\n    throw new Error('Function not implemented.');\r\n}\r\n",
   "id": 66,
   "stars": 0,
   "errors": [
    1005,
    1005,
    1005,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " // Content to be scrolled\nvar $scrollContent = document.getElementById(\"content-scroll-vertical\");\nvar $scrollView = $scrollContent.parentNode; // Container for the content\nvar options = {\n    bounds: true,\n    direction: \"vertical\",\n    scrollbar: \"scrollbar-vertical\" // CSS class\n};\n$scrollView.scroll_bar = new RADJS_ScrollView.ScrollBar($scrollView, {\n    className: options.scrollbar,\n    direction: options.direction,\n    smart: $scrollContent.querySelector(\"div.list_of_something\")\n}); // `scroll_bar` it's just a custom name\n// Create and attach ScrollView.\n// `scroller` it's just a custom name, but in WebComponent it's predefined.\n$scrollView.scroller = new RADJS_ScrollView($scrollView, options);\n// Create and attach custom pointer events, because of: IE support, SVG elements etc.\n// `tracker` is also custom name but it's also predefined in WebComponent\n$scrollView.tracker = new PointerTracker($scrollView, $scrollView.scroller);",
   "id": 67,
   "stars": 0,
   "errors": [
    2584,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const okayRecs = require('@andrewshell/okay-recs');\n\n// Source of all user ratings in system.\nconst allUserRatings = {\n    \"user0\": {\n        \"https://www.metacritic.com/tv/112263\": 1,\n        \"https://www.metacritic.com/tv/24\": 4,\n        \"https://www.metacritic.com/tv/30-rock\": 3,\n        \"https://www.metacritic.com/tv/alias\": 2,\n        \"https://www.metacritic.com/tv/archer\": 2,\n        \"https://www.metacritic.com/tv/arrested-development\": 2,\n        \"https://www.metacritic.com/tv/band-of-brothers\": 3,\n        ...\n    },\n    \"user1\": {\n        \"https://www.metacritic.com/tv/3rd-rock-from-the-sun\": 2,\n        \"https://www.metacritic.com/tv/adventure-time\": 4,\n        \"https://www.metacritic.com/tv/archer\": 1,\n        \"https://www.metacritic.com/tv/arrested-development\": 3,\n        \"https://www.metacritic.com/tv/better-call-saul\": 4\n        ...\n    },\n    ...\n};\n\n// Subset of user ratings that you want recommendations and similar users for.\n// Note: This example shows one user, but can work for multiple users at once.\nconst subUserRatings = {\n    user10: allUserRatings['user10']\n};\n\n// Sum of scores of people who gave program 1 a rating of x gave to program 2\n// Intermediate structure for user recommendations. Should be cached.\nconst allProgramScores = okayRecs.programScores(allUserRatings);\n\n// What programs are the users most likely to like?\nconst subUserRecommendations = okayRecs.userRecommendations(allProgramScores, subUserRatings);\n\n// What other users is this user similar to?\nconst subUserSimilarUsers = okayRecs.similarUsers(allUserRatings, subUserRatings);",
   "id": 68,
   "stars": 0,
   "errors": [
    1109,
    1005,
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 28,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// integrify.rules.js\n\nmodule.exports = [\n  {\n    rule: 'REPLICATE_ATTRIBUTES',\n    name: 'replicateMasterToDetail',\n    // ...\n  },\n  // ...\n];",
   "id": 69,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "angular.module('myApp', ['ionic.native']).controller('MyPageController', function ($cordovaCamera) {\n  $cordovaCamera.getPicture().then(\n    function (data) {\n      console.log('Took a picture!', data);\n    },\n    function (err) {\n      console.log('Error occurred while taking a picture', err);\n    }\n  );\n});",
   "id": 70,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// gatsby-browser.js\nimport 'simple-css-reset';",
   "id": 71,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "chai.expect(semver.parse('Linux 14.04')).to.equal(null);\nchai.expect(semver.parse('A development version')).to.equal(null);\nchai.expect(semver.parse('Version A')).to.equal(null);",
   "id": 72,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "dsa.setInstance(dsaId); // DSA ID",
   "id": 73,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "web3.setProvider(new web3.providers.HttpProvider('http://host.url', 0, BasicAuthUsername, BasicAuthPassword));",
   "id": 74,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n//从数据库中查询出来的数据对象\nvar arr = [{id: 10, name: \"name1\", value: \"value1\"}, {id: 11, name: \"name2\", value: \"value2\"}];\n//把id值作为key生成一个对象\n/* data = {10: {id: 10, name: \"name1\", value: \"value1\"}, 11: {id: 11, name: \"name2\", value: \"value2\"}} */\nvar data = arrToObj(arr, \"id\");\n//把id值作为key，只需要name的值\n//data = {10: \"name1\", 11: \"name2\"}\nvar data = arrToObj(arr, \"id\", \"name\");\n//只获取id的值\n// ids = [10, 11];\nvar ids = arrToObj(arr, \"id\", null);\r\n\r\nfunction arrToObj(arr, arg1) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 75,
   "stars": 0,
   "errors": [
    2554,
    2554
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { equal } = require(\"assert\");\r\n\r\nclick(\"html>body>div>div:eq(0)>button\");\nandThen(function () {\n equal(find(\"#foo\").length, 0, \"foo removed AFTER user [INSERT REASON]\");\n});\n\r\nfunction click(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 76,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { through } = require('streamss-through')\nlet cnt = 0\n\nrequire('fs').createReadStream(__filename, { encoding: 'utf8', highWaterMark: 30 })\n.pipe(through(\n  { decodeStrings: false },\n  function transform(str) {\n    cnt += 1\n    this.push(str.replace(/\\s/g, '‧') + '\\n')\n  },\n  function flush() {\n    console.log('\\ncounted num of chunks: ' + cnt)\n  }\n))\n.pipe(process.stdout)",
   "id": 77,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const demethodize = require(\"just-demethodize\");\n\nconst trimFn = demethodize(\"\".trim);\n[\"hello \", \" goodbye\", \"hello again\"].map(trimFn);",
   "id": 78,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const mapped = {\n  a: data.a,\n  b: data.b\n}",
   "id": 79,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var o2x = require('object-to-xml');\n\nvar obj = { \n  '?xml version=\\\"1.0\\\" encoding=\\\"iso-8859-1\\\"?' : null,\n  request : {\n    '@' : {\n      type : 'product',\n      id : 12344556\n    },\n    '#' : {\n      query : {\n        vendor : 'redhat',\n        name : 'linux'\n      }\n    }\n  }\n};\n\nconsole.log(o2x(obj));\n\n/*\n<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n<request type=\"product\" id=\"12344556\">\n  <query>\n    <vendor>redhat</vendor>\n    <name>linux</name>\n  </query>\n</request>\n*/",
   "id": 80,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 26,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "let post = new post();\n\nawait post.save(); // creates a new post\n\npost.set('title', 'New title');\nawait post.save(); // updates an existing post\r\n\r\nexport { };\r\n",
   "id": 81,
   "stars": 0,
   "errors": [
    2448,
    1378,
    1378
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var imdbWatchlist = require('imdb-watchlist');\n\nimdbWatchlist('ur23098466').then(function (watchlist) {\n  // watchlist is an array of objects on the form:\n  // { title: '', imdbId: ''}\n\n  // This will log out a random movie from your watchlist\n  console.log(watchlist[Math.floor(Math.random() * watchlist.length)]);\n});",
   "id": 82,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "JsonRoutes.ErrorMiddleware.use(\n  '/handle-error',\n  RestMiddleware.handleErrorAsJson\n);\n\nJsonRoutes.add('get', 'handle-error', function () {\n  var error = new Meteor.Error('not-found', 'Not Found');\n  error.statusCode = 404;\n  throw error;\n});",
   "id": 83,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const loggedIn = res._headers['logged-in'] === \"true\";",
   "id": 84,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "server.register({\n    register: require('hapi-droutes'),\n    options: {\n        'root':'routes/please/search_in/here',\n        'match':'resource/*/route.*.js',\n        'dependencies':['hello','hapi']\n    }\n}, function (err) {\n    if (err) throw err;\n});",
   "id": 85,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var cacheInterceptor = function cacheInterceptor(args) {\n  var req = args.req,\n      res = args.res;\n    // retrieve cached response\n    return cacheStore.getCacheRes(req)\n      .then((cachedRes) => {\n        return new Promise((resolve, reject) => {\n          try {\n            if (cachedRes) {\n              // response with cached result\n              res.end(cachedRes);\n              // abort the executing of passes sequence\n              reject();\n            } else {\n              // continue executing other passes\n              resolve();\n            }\n          } catch (err) {\n            reject(err);\n          }\n        })\n      })\n  };\n// insert this pass before the default 'deleteLength' pass\nProxy.before('web', 'deleteLength', cacheInterceptor);\n",
   "id": 86,
   "stars": 0,
   "errors": [
    2304,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<LoadIt load={() => import('./LoadMe')} />",
   "id": 87,
   "stars": 0,
   "errors": [
    17004,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import parallel from 'apr-parallel';\n\nconst then = (v) => new Promise((resolve) => resolve(v));\n\nconst withArray = await parallel([\n  async () => await then(1),\n  async () => await then(2)\n]);\n\n// withArray = [1, 2]\n\nconst withObject = await parallel({\n  one: async () => await then(1),\n  two: async () => await then(2)\n});\n\n// withObject = { one: 1, two: 2 }",
   "id": 88,
   "stars": 0,
   "errors": [
    1378,
    1378
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// run tests\ngrunt\n\n// run tests and show a test coverage report\ngrunt specs",
   "id": 89,
   "stars": 0,
   "errors": [
    2304,
    1434,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// foo.js\nObject.defineProperty(exports, '__esModule', {value: true})\n\nexports.default = {\n  foo: 'default-foo'\n}\n\nexports.foo = 'foo'",
   "id": 90,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'core-js/features/array/includes';\nimport 'core-js/features/object/assign';",
   "id": 91,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nconst adapter = adapter(BaseAdapter);\n\nexports.api = Function.https.onRequest((...args) => adapter.handle(...args));",
   "id": 92,
   "stars": 0,
   "errors": [
    2448,
    2304,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "my-app\n├── README.md\n├── node_modules\n├── package.json\n├── .gitignore\n├── public\n│   └── favicon.ico\n│   └── index.html\n│   └── manifest.json\n└── src\n    └── App.css\n    └── App.js\n    └── App.test.js\n    └── index.css\n    └── index.js\n    └── logo.svg\n    └── registerServiceWorker.js",
   "id": 93,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    1128,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { MoodleClient } = require('node-moodle');\nconst moodle = new MoodleClient({ ... });\n\nasync function main() {\n  try {\n    //Request data\n    var req = {\n      users: [\n        {\n          firstname: \"Foo\",\n          lastname: \"Bar\",\n          username: \"foo\",\n          password: \"FooBar123!\",\n          email: \"foo@example.com\",\n        }\n      ]\n    };\n\n    //Invoke a method\n    var res = await moodle.core.user.createUsers(req);\n    \n    //Response data\n    console.log(res);\n    /*\n    [\n      {\n        \"id\": 3,\n        \"username\": \"foo\"\n      }\n    ]\n    */\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\nmain();",
   "id": 94,
   "stars": 0,
   "errors": [
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 31,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  const cache = LRUCache([cacheSize = 10]);\n\n // return an item from the cache\n  cache.get(key)\n\n  // add an item to the cache. overwrite if already exists\n  cache.set(key, value) \n\n  // remove an item from the cache\n  cache.remove(key) \n\n  // reset the cache to an empty and fresh state\n  cache.clear(limit = 10) \n\n  // Traverse each cached item and call a function\n  // callback is passed [node element, element number, cache instance] \n  cache.forEach(callback) \n\n  // return a JSON represenation of the cache\n  cache.toJSON() \r\n\r\nfunction LRUCache(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 95,
   "stars": 0,
   "errors": [
    2304,
    2339,
    2304,
    2339,
    2304,
    2304,
    2339,
    2304,
    2339,
    2304,
    2339,
    2304,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { connectPubsub } from '@yoctol/message-queue';\n\nconst pubsub = await connectPubsub({\n  driver: 'rabbitmq',\n  amqpConfig: {\n    url: 'amqp://localhost',\n    exchange: 'amqp.exchange',\n    connectOptions: {\n      //node-amqp-connection-manager connect() options \n      heartbeatIntervalInSeconds: 5,\n      ...\n      connectionOptions: {\n        //amqplib connection options\n        ...\n      },\n    },\n    createChannelOptions: {\n      //node-amqp-connection-manager createChannel() options \n      name: 'channelName',\n      Set: ...,\n      json: true,\n    },\n },\n});",
   "id": 96,
   "stars": 0,
   "errors": [
    2304,
    1005,
    1136,
    1109,
    1135,
    1128,
    2695,
    1005,
    1128,
    1128,
    2695,
    1109,
    1128,
    1128,
    1128,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function(i) {\n    // delete the tag at index i\n}",
   "id": 97,
   "stars": 0,
   "errors": [
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "facebookConnectPlugin.showDialog({\n    method: \"share\",\n    picture:'https://www.google.co.jp/logos/doodles/2014/doodle-4-google-2014-japan-winner-5109465267306496.2-hp.png',\n    name:'Test Post',\n    message:'First photo post',\n    caption: 'Testing using phonegap plugin',\n    description: 'Posting photo using phonegap facebook plugin'\n  }, function (response) {\n    console.log(response)\n  }, function (response) {\n    console.log(response)\n  }\n);",
   "id": 98,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "namiConfig.logger = require('log4js').getLogger('Nami.Core');\nvar nami = new (require(\"nami\").Nami)(namiConfig);",
   "id": 99,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "#@ Node\nnode_modules\n\n# Build\nbuild\n\n# Coverage directory\ncoverage\n\n# logs\n*.log\n.logs\n\n#@ Platform Specific\n.DS_Store\nThumbs.db",
   "id": 100,
   "stars": 0,
   "errors": [
    1127,
    1005,
    1146,
    2304,
    1127,
    1005,
    2304,
    2304,
    1127,
    1005,
    2304,
    2304,
    2304,
    1127,
    1005,
    2304,
    1109,
    1127,
    1005,
    1146,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { error } = require(\"console\")\r\n\n@param {Error|null} err Pass an Error Object here to indicate an Error\n                        occured. Very useful for validation; stops the flow here.\n\n@param {string} key     The key of the property that has finished, \n                        this gives you a chance to format the key name.\n\n@param {*} value        The value you want the key to have\n",
   "id": 101,
   "stars": 0,
   "errors": [
    1146,
    2362,
    18050,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    1435,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    1003,
    1146,
    2693,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2695,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1435,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    1146,
    1109,
    1109,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const storybook = require('@ltht-react/storybook');\n\n// TODO: DEMONSTRATE API",
   "id": 102,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "ionic cordova plugin add cordova-plugin-alicloud-feedback --variable const APP_KEY=你的KEY --variable const APP_SECRET=const 你的SECRET",
   "id": 103,
   "stars": 0,
   "errors": [
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2448,
    2304,
    1005,
    1005,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const socks5http = require('socks5-http');\n\n// set socks5 proxy port and host\n// 1080 and \"localhost\" is default\nsocks5http.setSocks5(1080, \"localhost\")\n\n// https GET\nsocks5http.get(\"https://www.google.com\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})\n\n// http GET\nsocks5http.get(\"http://www.google.com\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})\n\n// ip and custom port\nsocks5http.get(\"http://47.98.223.187:3000\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})",
   "id": 104,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 29,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var app = require(\"your-awesome-component\");\nvar instance = new app(yourDiv);",
   "id": 105,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Usage: spraygun <template> <project-directory>\n\nGenerate a project in the specified directory, based on a template.\n\nFor example, to generate a react app in a directory named hello-world:\n  $ npx spraygun -t react hello-world\n\nThe officially supported spraygun templates are:\n  -t express\n  -t react\n  -t react-ts\n\nTo use a custom template, specify one of the following:\n  -p path   a local template directory\n  -r URL    a git repository URL",
   "id": 106,
   "stars": 0,
   "errors": [
    2304,
    2304,
    17004,
    17008,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import com.lynxit.contactswrapper.ContactsWrapperPackage;\n...\n\n@Override\nprotected List<ReactPackage> getPackages() {\n    return Arrays.<ReactPackage>asList(\n        new MainReactPackage(),\n        ...,\n       new ContactsWrapperPackage()\n   );\n}\r\n\r\nfunction getPackages() {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 107,
   "stars": 0,
   "errors": [
    8002,
    1005,
    1128,
    1146,
    2304,
    2365,
    2304,
    1005,
    1003,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "flv.$canvas;",
   "id": 108,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const conf = require('run-con')('myapp', {\n    port: 12345,\n    mode: 'test'\n});\n\nconsole.log(JSON.stringify(conf, null, 2));",
   "id": 109,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { type } = require(\"os\");\r\n\r\ntype.isAsyncFunction(async function(){}) //=> true",
   "id": 110,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { ProviderStore } from 'react-redux-just'\n\nconst model = {\n  state: {\n    date: {\n      __options:{\n        type: 'date',\n        value: new Date(),\n        receiving: date => date.toString(),\n        request: (resolve, reject) => {\n              fetch( REQUEST_URL , {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ title: 'React POST Request' })\n                })\n                .then(response => response.json())\n                .then(({result}) => resolve(result));\n            }\n      }\n    }\n  }\n}\n\nReactDOM.render(\n    <ProviderStore model={model}>\n      <App />\n    </ProviderStore>\n  ,document.getElementById('root')\n);\n\r\nfunction fetch(REQUEST_URL, arg1) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n",
   "id": 111,
   "stars": 0,
   "errors": [
    2304,
    2339,
    2304,
    17004,
    17004,
    2304,
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 30,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import IntentLauncher, { IntentConstant } from 'react-native-intent-launcher'\n...\nIntentLauncher.startActivity({\n    action: 'android.settings.APPLICATION_DETAILS_SETTINGS',\n    data: 'package:com.example'\n})\n...",
   "id": 112,
   "stars": 0,
   "errors": [
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { run } = require(\"node:test\")\r\n\r\ncd contracts\nnpm install\nnpm run build",
   "id": 113,
   "stars": 0,
   "errors": [
    1434,
    2304,
    2304,
    1434,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var NodeWebcam = require( \"node-webcam\" );\n\nvar FSWebcam = NodeWebcam.FSWebcam; //require( \"node-webcam/webcams/FSWebcam\" );\n\nvar opts = {};\n\nvar cam = new FSWebcam( opts );",
   "id": 114,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import propType, { ow } from 'ow-prop-type'\n\nclass MyComponent extends React.Component {\n  static propTypes = {\n    // propType with a predicate\n    total: propType(\n      ow\n        .number\n        .integer\n        .greaterThanOrEqual(0)\n    ),\n    // propType with a callback, must return a predicate\n    current: propType((props) => {\n      return ow\n        .number\n        .integer\n        .greaterThanOrEqual(0)\n        .lessThanOrEqual(props.total)\n    }\n  }\n}",
   "id": 115,
   "stars": 0,
   "errors": [
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Vue from 'vue'\nimport Vuetify from 'vuetify'\nimport DaySpanVuetify from 'dayspan-vuetify'\nimport App from './App.vue'\n\nimport 'vuetify/dist/vuetify.min.css'\nimport 'material-design-icons-iconfont/dist/material-design-icons.css'\nimport 'dayspan-vuetify/dist/lib/dayspan-vuetify.min.css'\n\nVue.config.productionTip = false\n\nVue.use(Vuetify);\n\nVue.use(DaySpanVuetify, {\n  methods: {\n    getDefaultEventColor: () => '#1976d2'\n  }\n});\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})",
   "id": 116,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "grunt.initConfig({\n  mustache_html: {\n    development: {\n      options: {\n        src: 'src',\n        dist: 'dist',\n        type: 'mustache' // mustache Or hbs\n      },\n      globals: {\n        analytics_id: 'UA-123456-1'\n      }\n    }\n  }\n});",
   "id": 117,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<script src=\"path/to/dist/js/tether.min.js\"></script>",
   "id": 118,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { request } = require(\"http\")\r\n\r\nfunction log(response) {\n  console.log(`Transaction ID: ${response.transactionId}`)\n  console.log(`Function code: ${response.functionCode}`)\n  console.log(`Total number of registers: ${response.noOfRegisters}`)\n  console.log(`Values: ${response.registerValues.join(', ')}`)\n}\n\nasync function example() {\n  try {\n    const response = await client.send(request)\n    log(response)\n  } catch (error) {\n    console.log(`Error: ${error}`)\n  }\n}\n\nexample()",
   "id": 119,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Size (Body, H1, etc.)\n  Alignment (Left, Center, Right)\n    Weight (Regular, Semibold, etc.)\n      Color\r\n\r\nfunction Size(Body, H1, arg2) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 120,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    1003,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    1003,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/* bookType can be 'xlsx' or 'xlsm' or 'xlsb' */\nvar wopts = { bookType:'xlsx', bookSST:false, type:'binary' };\n\nvar wbout = XLSX.write(workbook,wopts);\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n  for (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n  return buf;\n}\n\n/* the saveAs call downloads a file on the local machine */\nsaveAs(new Blob([s2ab(wbout)],{type:\"\"}), \"test.xlsx\")\r\n\r\nfunction saveAs(arg0, arg1) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 121,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2322
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var dfltCfg = { slot: 'foo' },\n  meta = { defaultConfig: dfltCfg,\n    descr: 'A nice foo for your app.',\n    apiVersion: 1,\n    };\n\nfunction install(app, plugCfg, appCfg) {\n  if (plugCfg === appCfg) { plugCfg = false; }\n  var slot = (plugCfg.slot\n    || appCfg.fooSlot   // <-- that's why we checked above\n    || dfltCfg.slot);\n  app[slot] = function () { return 'bar @ ' + app.name; };\n}\n\nmodule.exports = require('plugmgr1801-pmb/plugify')(module, meta, install);",
   "id": 122,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// get most used from main entry\nimport { SVGO, SVGO_LITE, CONFIG_LITE, PLUGINS_DEFAULT_LIST } from 'libsvgo/module/lib/svgo'\n\n// or get each separately\nimport { SVGO_LITE } from 'libsvgo/module/lib/svgo-lite'\nimport { SVGO_LITECONFIG_LITE } from 'libsvgo/module/lib/svgo/config-lite'\n\n// get each plugin separately\nimport * as addAttributesToSVGElement from 'libsvgo/module/plugins/addAttributesToSVGElement'",
   "id": 123,
   "stars": 0,
   "errors": [
    2300,
    2300
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { name } = require(\"assert\")\r\n\r\ntypeorm init --name MyProject --database mysql",
   "id": 124,
   "stars": 0,
   "errors": [
    2305,
    1435,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { start } = require(\"repl\")\r\n\n- ...\\ControlManifest.Input.xml\n\n    modify as needed...\n\n\n\n- modify ...\\node_modules\\pcf-start\\bin\\pcf-start.js\n\n    enable cors by adding cors: true, \n\n```javascript\n// Start server\nvar options = {\n    port: 8181,\n    host: '0.0.0.0',\n    cors: true, \n    root: path.resolve(process.cwd(), codePath),\n    open: true,\n",
   "id": 125,
   "stars": 0,
   "errors": [
    2339,
    2362,
    1109,
    1127,
    1005,
    1005,
    2304,
    2304,
    8016,
    1005,
    2304,
    1005,
    1127,
    2304,
    1127,
    2304,
    1127,
    2304,
    1127,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2695,
    2349,
    1160
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// configuring client\nconst prosperworks = require('prosperworks')({\n  email: process.env.EMAIL,\n  token: process.env.TOKEN\n});\n\n// using async / await (native in Node.js v8.x)\nvar result = await prosperworks.companies.list();\nconsole.log(JSON.stringify(result, null, 2));\n\n// or using with promises\nprosperworks.companies.list()\n.then(result => {\n  console.log(JSON.stringify(result, null, 2));\n})",
   "id": 126,
   "stars": 0,
   "errors": [
    1378
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/** @type {string[]} */\nconst verbs = require('verb-corpus');\n\nconsole.log(verbs.length);",
   "id": 127,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { BuildpackJob } from 'dray-client';\nlet compilation = new BuildpackJob(manager);\ncompilation.addFiles([\n    {name: 'foo.ino', data: new Buffer()}\n]);\ncompilation.setEnvironment({\n    PLATFORM_ID: 6\n});\ncompilation.setBuildpacks([\n    'particle/buildpack-wiring-preprocessor',\n    'particle/buildpack-particle-firmware:0.5.1-photon'\n]);\ncompilation.submit().then((binaries) => {\n    // Do something with binaries\n}, (reason) => {\n    console.error(\"Compilation error:\", reason)\n});",
   "id": 128,
   "stars": 0,
   "errors": [
    2304,
    2554
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var prefixed = store.withIdPrefix('foo:')\n\nprefixed.add({ _id: 'bar', value: 42 }) // will add the object with id 'foo:bar'\n  .then(function (doc) {\n    // update documents with id 'foo:other' and 'foo:bar'\n    return prefixed.update(['other', 'foo:bar'], { other: 'baz' })\n  })\n\n// Finds all objects which id start with 'foo:'\nprefixed.findAll().then(function (docs) {})\n\n// Handle all changes to objects which id start with 'foo:'\nprefixed.on('change', function (eventName, doc) {})\n\nvar moarPrefixed = prefixed.withIdPrefix('moarPrefix:') // prefix is now 'foo:moarPrefix:'",
   "id": 129,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const RequestParameters = require('@luigisamurai/request-parameters');\nconst JSONFile = require('./JSONFile');\n\nconst request = new RequestParameters.Request();\n\n// request-promises options\nconst setting = {\n  resolveWithFullResponse: true,\n  simple: false\n};\n\n// set the common parameters\nrequest.setParameters({\n  baseUrl: 'http://www.google.com',\n  setting\n});\n\n// Get request with request-parameter dependency\nconst getPromise = request.send(JSONFile.GET, {\n  urlParams: { homeId: 1 },\n  queryParams: { offset: 0, limit: 100 },\n});\n\n// Also can use async - await to wait the promises\ngetPromise.then((response) => {\n  const statusCode = response.statusCode;\n  const body = response.body;\n\n  console.log(statusCode, ' ', body);\n});\n\n// Post request with request-parameter dependency\nconst postPromise = request.send(JSONFile.Post, {\n  body: { name: 'home view' }\n});\n\npostPromise.then((response) => {\n  const statusCode = response.statusCode;\n  const body = response.body;\n\n  console.log(statusCode, ' ', body);\n});\n\n// Note the URIs don't exist so the request return 404 status code.",
   "id": 130,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 28,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "$('li', 'ul', '<ul id=\"fruits\">...</ul>');",
   "id": 131,
   "stars": 0,
   "errors": [
    2592
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const speechToText = new speechToText({\n/* authenticator, version, serviceUrl, etc... */\n});\nconst recognizeStream = recognizeUsingWebSocket(params);\n\n// getTransactionId returns a Promise that resolves to the ID\nrecognizeStream.getTransactionId().then(\n  globalTransactionId => console.log(globalTransactionId),\n  err => console.log(err),\n);\r\n\r\nfunction recognizeUsingWebSocket(params) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 132,
   "stars": 0,
   "errors": [
    2448,
    2304,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { name } = require(\"assert\")\r\n\r\nyo axi-dtsi-gulp-angular [app-name]",
   "id": 133,
   "stars": 0,
   "errors": [
    2305,
    1434,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "chance.month({country: 'de'})\n// 'Juli'",
   "id": 134,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const scope = nock('http://www.headdy.com')\n  .replyDate()\n  .get('/')\n  .reply(200, { hello: 'world' })\r\n\r\nfunction nock(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 135,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//to create some new merge fields in your list\n//http://developer.mailchimp.com/documentation/mailchimp/reference/lists/merge-fields/\n\nmailchimp\n  .post('batches', {\n    operations : [\n      {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG1',\n          type : 'string'\n        })\n      }, {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG2',\n          type : 'string'\n        })\n      }, {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG3',\n          type : 'string'\n        })\n      }\n    ]\n  })\n  .then(function(result){\n    console.log(result);\n  })\n  .catch(function(error){\n    console.log(error);\n  });",
   "id": 136,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 33,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { log } = require(\"console\");\r\n\r\nlog.bind(logger, levelName);",
   "id": 137,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const crypto = require('crypto');\nfunction verifySignature({\n  data,\n  signature,\n  publicKey\n}) {\n  // Verify that we signed correctly using public key\n  const verify = crypto.createVerify('RSA-SHA384');\n  verify.write(data);\n  verify.end();\n\n  // True if signature is verified\n  return verify.verify(publicKey, signature, 'base64');\n}",
   "id": 138,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": ".b-foo {\n  .bar {\n    …\n  }\n  \n  .qux {\n    …\n  }\n}",
   "id": 139,
   "stars": 0,
   "errors": [
    1128,
    2304,
    2304,
    1005,
    1128,
    1434,
    2304,
    1127,
    1128,
    1434,
    2304,
    1127
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export interface GoogleLocationDetailResult {\n  adr_address: string;\n  formatted_address: string;\n  icon: string;\n  id: string;\n  name: string;\n  place_id: string;\n  scope: string;\n  reference: string;\n  url: string;\n  utc_offset: number;\n  vicinity: string;\n  types: string[];\n  geometry: {\n    location: {\n      lat: number;\n      lng: number;\n    };\n    viewport: {\n      [type: string]: {\n        lat: number;\n        lng: number;\n      };\n    };\n  };\n  address_components: Array<{\n    long_name: string;\n    short_name: string;\n    types: string[];\n  }>;\n}",
   "id": 140,
   "stars": 0,
   "errors": [
    8006
   ],
   "hasCode": true,
   "nondeletedLines": 31,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "ImagePickerIOS.openCameraDialog({\n  showImages: true,\n  showVideos: false\n}, (imageUrl, height, width) => {\n  // success\n}, (error) => {\n  // cancel\n});",
   "id": 141,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "expect(const [button1, button2, button3]).to.be.verticallyAligned('top', 1.5);\r\n\r\nfunction expect(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 142,
   "stars": 0,
   "errors": [
    1135,
    1005,
    1134,
    1005,
    1005,
    1005,
    2695
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const hdl = require('hdl-js');\n\nconst {\n  emulator: {\n    Clock,\n    Pin,\n  },\n} = hdl;\n\nconst clock = new Clock({rate: 10, value: -5});\nconst pin = new Pin({name: 'a'});\n\n// Track clock events.\nclock.on('tick', value => pin.setValue(value));\n\nclock.tick();\n\nconsole.log(pin.getValue()); // +5;",
   "id": 143,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const App = () => {\n    return \n        <serviceList.ProvideAll>\n            // rest of the application\n        </serviceList.ProvideAll>\n    ;\n}",
   "id": 144,
   "stars": 0,
   "errors": [
    17004,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "getQueue(callback)\r\n\r\nfunction getQueue(callback) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 145,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n// Find the top 10 students who have taken a particular course\n// and earned a grade of at least 3:\n\nconst classes = {\n   Student: null,\n   Course: course\n}\n\nconst criteria = {\n  descending: 'grade',\n  greaterThanOrEqualTo: ['grade', 3],\n  limit: 10,\n  include: 'student'\n}\n\nconst joinObjs = await parsm.getJoinQuery(classes, criteria).find()\n\n\r\nexport { }\r\n// joinObjs is now an array of instances of the class 'Student2Course'\n// with details of students in the 'student' column.",
   "id": 146,
   "stars": 0,
   "errors": [
    2304,
    1378,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "catalog\n    Promise\n        files\n            index.js — your polyfill\n\n        index.json\n        index.js",
   "id": 147,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    1127,
    1434,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//main.js\nimport BoxButton from 'box-components-button'\nVue.use(BoxButton)",
   "id": 148,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "ffmpeg('/path/to/file.avi').noVideo();\r\n\r\nfunction ffmpeg(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 149,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const outStr = \"[{\\\"Root\\\":\\\"0x763f7f5e16506128824178bf2ee855e35a4b93689e8e54ed1e3d03177da09917\\\",\\\"State\\\":{\\\"Num\\\":345,\\\"OS\\\":{\\\"Index\\\":384,\\\"OutCM\\\":null,\\\"Out_O\\\":null,\\\"Out_Z\\\":{\\\"AssetCM\\\":\\\"0x5545b6d57ef6a35b124963daa0dee992da5243e31eb0d99d8f66d0f1a13e9012\\\",\\\"EInfo\\\":\\\"0x04fc0547da3590767317c3719f7b89516f7afb01037ca09cefc0bd75b4dccb95cfff665a0028069289960dcf07b69928e8d3da06ad0249ba7fd2c31505f5eef96db8741382f68be2e34210be409a84ae67be5c4687ddef64c13bba278d5fbea9d69f1a335585c8544a3b3eac8e7812041a01d95326f8da65e588784cc70c1b5a4b5dd7d0f5921007aef4043ac515cadc864ac206b2902a04022603566a437deb3100fdc04b88eb249746631447cf25964fb8f32fb4314455efbc1ea7520865f52aa762629ab8eed99e0a7918918dfe186188ddf61d7fb3d855a64d71ff5c9688\\\",\\\"OutCM\\\":\\\"0x5d3ba6999629152264618694968cd18a7a4c7790e2c213498e99209c564039ab\\\",\\\"PKr\\\":\\\"0xfaf5e31e63cf54a81cb494e57719abf9e2af71fb52720a4ad476ce78006ac0af202f0329828102356f29597815773200b75775b6837bf8592e20eb4df75e73a9c01a79af111451f7f38f4c2f79f03772a9e09b31d5c7bf2ab37808835362c4a0\\\",\\\"Proof\\\":\\\"0x02902bbd460a55b0dbaf4a96848d0b24ef5f2faab6409b3d68dc77f8f32a96a41d0a450a6076693fd6bef7e4466e6f0533e18905c8fc656741e7d1faf2ae298dba7edb87ab8b1293900e3fac4bd8e47a09b1ee02cf7770965bf990f60c53f57a3c08032dcc4023c7aa706f8fd35c68119caa73d15e8ca1ff35cc9e69fcdd8e46d5120c\\\",\\\"RPK\\\":\\\"0xb74e284e16cc77659690cee346076701a1040539ce84e6af71292f0acd5a906d\\\"},\\\"RootCM\\\":\\\"0xe495fe6b43813719352a6256e826dfae9d61d32b28ce1814e0b6a60b9cb05009\\\"},\\\"TxHash\\\":\\\"0x91a5cc04f6af1803bd8a523fcf23bc845c42552bb7d6d0a49e347ef5070ba274\\\"}}]\"\n\ntx.DecOut(\n  outStr,\n  keys.tk.ToBase58(),\n  (err, content) => {\n    if (err) {\n      console.error(err)\n    } else {\n      console.log(content)\n    }\n  }\n)",
   "id": 150,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Mongoose from 'mongoose';\n\nconst Test = new Mongoose.Schema({...\nexport  {tests:Test}",
   "id": 151,
   "stars": 0,
   "errors": [
    1109,
    1005,
    2448,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {any, boolean, number, string} from \"schemation\"\nimport {and, not, or}                 from \"schemation\"\nimport {where}                        from \"schemation\"\nimport {optional}                     from \"schemation\"\nimport {lazy}                         from \"schemation\"",
   "id": 152,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "freebase.search(\"doug\",{type: \"/ice_hockey/hockey_player\"})",
   "id": 153,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function inc(v) {\n  return v + 1;\n}\n\nfunction decr(v) {\n  return v - 1;\n}\n\nArrow(inc).next(Arrow(decr)).run(1) == Arrow.next(Arrow(inc), Arrow(decr)).run(1);\r\n\r\nfunction Arrow(inc) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 154,
   "stars": 0,
   "errors": [
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { env } = require(\"process\")\r\n\r\nUSAGE\n  $ dev-env export PROJECT\n\nARGUMENTS\n  PROJECT  project name\n\nOPTIONS\n  -d, --database  database\n  -h, --help      show CLI help",
   "id": 155,
   "stars": 0,
   "errors": [
    2304,
    1434,
    2592,
    2304,
    2363,
    1005,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "replace( \"java\" ).ignoringCase(); // => ReplaceDefinition\r\n\r\nfunction replace(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 156,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "console.log(arrayTransformer.stringToArray(db.get('newArray')))",
   "id": 157,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "agenda.on('success:send email', function(job) {\n  console.log(\"Sent Email Successfully to: %s\", job.attrs.data.to);\n});",
   "id": 158,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Error(err) {\n  console.log(\"SQL Error: \" + err);\n},\n\nsuccessCB() {\n  console.log(\"SQL executed fine\");\n},\n\nopenCB() {\n  console.log(\"Database OPENED\");\n},\n\nvar db = SQLite.openDatabase(\"test.db\", \"1.0\", \"Test Database\", 200000, openCB, Error);\ndb.transaction((tx) => {\n  tx.executeSql('SELECT * FROM Employees a, Departments b WHERE a.department = b.department_id', [], (tx, results) => {\n      console.log(\"Query completed\");\n\n      // Get rows with Web SQL Database spec compliance.\n\n      var len = results.rows.length;\n      for (let i = 0; i < len; i++) {\n        let row = results.rows.item(i);\n        console.log(`Employee name: ${row.name}, Dept Name: ${row.deptName}`);\n      }\n\n      // Alternatively, you can use the non-standard raw method.\n\n      /*\n        let rows = results.rows.raw(); // shallow copy of rows Array\n\n        rows.map(row => console.log(`Employee name: ${row.name}, Dept Name: ${row.deptName}`));\n      */\n    });\n});\r\n\r\nfunction successCB() {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 159,
   "stars": 0,
   "errors": [
    2304,
    1005,
    2304,
    1128,
    1005,
    1128,
    2304,
    1005,
    1128,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 27,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {Screen} from 'geoeye-js'\n\nconst screen = new Screen({\n  config: './config.json', \n  container: 'container'\n});",
   "id": 160,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var userMetric = metric.instance();\nuserMetric.start('metric');\n....\nuserMetric.end('metric');",
   "id": 161,
   "stars": 0,
   "errors": [
    2304,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var level = require('level-hyper')\nvar Snapshot = require('level-snapshot')\n\nvar db = level('./db')\nvar snapshot = Snapshot(db)\n\nsnapshot.on('snapshot:complete', function (snapshotName) {\n  console.log('took snapshot', snapshotName)\n})\n\nsnapshot.start()",
   "id": 162,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import duration from 'callbag-duration-progress'\nimport forEach from 'callbag-for-each'\nimport map from 'callbag-map'\nimport pipe from 'callbag-pipe'\n\nconst distance = d => t => t * d\n\nconst easeOut = p => 1 - (1 - p) * (1 - p)\n\nconst moveBall = (ball, easing) => {\n  pipe(\n    duration(1000),\n    map(easing),\n    map(distance(400)),\n    forEach(y => {\n      ball.style.transform = `translate3d(0, ${y}px, 0)`\n    }),\n  )\n}\n\nmoveBall(document.getElementById('ball'), easeOut)",
   "id": 163,
   "stars": 0,
   "errors": [
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const putout = require('putout');",
   "id": 164,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "git clone https://github.com/provable-things/ptokens.js.git",
   "id": 165,
   "stars": 0,
   "errors": [
    1434,
    2304,
    1434,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { text } from 'node:stream/consumers';\r\nimport CryptoAesCbc from 'react-native-crypto-aes-cbc';\nimport { text } from 'stream/consumers';\r\n\nconst key = \"XXXXX\" // in base64 format\nconst iv = \"XXXX\"   // in base 64 format\nconst keysize128 = \"128\" \nconst keysize256 = \"256\"\nconst text = \"Sachin Agrawal\"\n\n  CryptoAesCbc.encryptInHex(iv,key,\"sachin agrawal\",\"128\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.encryptInBase64(iv,key,\"sachin agrawal\",\"128\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.encryptInHex(iv,key256,\"sachin agrawal\",\"256\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.encryptInBase64(iv,key256,\"sachin agrawal\",\"256\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.decryptByBase64(iv,key,\"ZN+DBxlPG+2lmWx6Bu7bqA==\",\"128\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByHex(iv,key,\"64df8307194f1beda5996c7a06eedba8\",\"128\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByBase64(iv,key256,\"Re3CIB8H3wYkUdl/l6WGGw==\",\"256\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByHex(iv,key256,\"45edc2201f07df062451d97f97a5861b\",\"256\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.sha256(\"sachin\",(hashKey) => {\n    console.log(hashKey)\n  })",
   "id": 166,
   "stars": 0,
   "errors": [
    2300,
    2440,
    2300,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 35,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var sorting = require('postcss-sorting')\n\npostcss([\n  sorting({ 'sort-order': require('cssortie') })\n]))\r\n\r\nfunction postcss(arg0) {\r\n    throw new Error('Function not implemented.')\r\n}\r\n",
   "id": 167,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Kick off the handshake with the iFrame\nconst handshake = new SecurePostmate({\n  container: document.getElementById('some-div'), // Element to inject frame into\n  url: 'http://child.com/page.html'\n});\n\n// When parent <-> child handshake is complete, data may be requested from the child\nhandshake.then(child => {\n\n  // Fetch the height property in child.html and set it to the iFrames height\n  child.get('height')\n    .then(height => child.frame.style.height = `${height}px`);\n\n  // Listen to a particular event from the child\n  child.on('some-event', data => console.log(data)); // Logs \"Hello, World!\"\n});",
   "id": 168,
   "stars": 0,
   "errors": [
    2304,
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<collection instance>.find({<query key>: {$in: [<query value>]}}, ...)",
   "id": 169,
   "stars": 0,
   "errors": [
    17004,
    17008,
    17004,
    17008,
    2304,
    1005,
    17004,
    17008,
    1381,
    1381,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var rand = require('random-pro');\nconsole.log(rand.generateEvenNumber(10,100));\n// 96\nconsole.log(rand.generateEvenNumber(10,30));\n// 22",
   "id": 170,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const client = require(\"badonker\");\nconst honker = new client();\n\nasync function test() {\n  console.log(await honker.bulknsfw.booty());\n}\n\ntest();",
   "id": 171,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// select the right Ad Id according to platform\n  var admobid = {};\n  if( /(android)/i.test(navigator.userAgent) ) { // for android & amazon-fireos\n    admobid = {\n      banner: 'ca-app-pub-xxx/xxx', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/yyy'\n    };\n  } else if(/(ipod|iphone|ipad)/i.test(navigator.userAgent)) { // for ios\n    admobid = {\n      banner: 'ca-app-pub-xxx/zzz', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/kkk'\n    };\n  } else { // for windows phone\n    admobid = {\n      banner: 'ca-app-pub-xxx/zzz', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/kkk'\n    };\n  }",
   "id": 172,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "let counter = 0;\n\nconst increment = anticipatedCall(() => {\n  counter = counter + 1;\n});\n\nincrement\n  .nthCallDuring(3, () => {\n    counter = 5;\n    increment();\n    increment();\n    increment();\n  })\n  .then(() => console.log(`counter value is ${counter}`));\n\r\nfunction anticipatedCall(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n// Prints `counter value is 8`",
   "id": 173,
   "stars": 0,
   "errors": [
    2339,
    2349,
    2349,
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {Handler} from 'handleable';\n\nlet h = new Handler();\n\nlet e = await h.handle(\n  new Error('unhandled error'), // error instance\n  [ // list of handler recipes\n    {\n      handler: 'block', // handler name\n      message: '%{foo} unhandled error', // optional handler error message\n      block: async () => true // handler-specific property,\n      foo: 'bar' // custom variable for the message\n    },\n    {\n      handler: 'mongoUniqueness', // handler name\n      message: 'already taken', // optional handler error message\n      indexName: 'uniqueEmail' // handler-specific property\n    }\n  ]\n); // -> a list of errors",
   "id": 174,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { connect } = require(\"http2\")\r\n\r\nconnect({host: 'mqtt.test.io', ssl: true, path: '/mqtt'})\n  .then(client => { ... })\n\n// or\nconnect('wss://mqtt.test.io/mqtt')\n  .then(client => { ... })\r\n\r\nfunction connect(arg0) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 175,
   "stars": 0,
   "errors": [
    2440,
    2339,
    1128,
    1109,
    2339,
    1128,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  const handler = wrapper({\n      url: 'http://example.com/endpoint',\n      endpoint: '/endpoint',\n      auth: 'auth',\n      headers: 'headers',\n      method: 'method',\n      path_params: 'path_param',\n      query_params: 'query_param',\n      required_fields: 'required_fields',\n      request_map: 'request_map',\n      response_map: 'response_map',\n      transform_response: 'transform_response'      \n  });\r\n\r\nfunction wrapper(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 176,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Select = require('react-select-plus');\n\nvar isLoadingExternally = true;\n\n<Select\n  name=\"form-field-name\"\n    isLoading={isLoadingExternally}\n    ...\n/>",
   "id": 177,
   "stars": 0,
   "errors": [
    17004,
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "> pipep([\n    function(a) { return Promise.resolve(a + 3); },\n    function(b) { return Promise.resolve(b * 10); },\n  ])(6);\nPromise\n90\r\n\r\nfunction pipep(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 178,
   "stars": 0,
   "errors": [
    1109,
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var json = {\"hey\": \"guy\",\"anumber\": 243,\"anobject\": {\"whoa\": \"nuts\",\"anarray\": [1,2,\"thr<h1>ee\"], \"more\":\"stuff\"},\"awesome\": true,\"bogus\": false,\"meaning\": null, \"japanese\":\"明日がある。\", \"link\": \"http://jsonview.com\", \"notLink\": \"http://jsonview.com is great\"};\n\n$(function() {\n  $(\"#json\").JSONView(json);\n  // with options\n  $(\"#json-collasped\").JSONView(json, { collapsed: true });\n});",
   "id": 179,
   "stars": 0,
   "errors": [
    2592,
    2592,
    2592
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "runIt(args, const [options]);\r\n\r\nfunction runIt(args, arg1) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 180,
   "stars": 0,
   "errors": [
    2304,
    1135,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<p-accordion>\n    <p-accordionTab header=\"Header 1\">\n       Content 1\n    </p-accordionTab>\n    <p-accordionTab header=\"Header 2\">\n        Content 2\n    </p-accordionTab>\n    <p-accordionTab header=\"Header 3\">\n        Content 3    \n    </p-accordionTab>\n</p-accordion>",
   "id": 181,
   "stars": 0,
   "errors": [
    17004,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "rcon.init('fsrcon/init')\n  .then(\n    // resolved\n    function () {\n      ..\n    },  \n    // rejected\n    function (err) {\n      ..\n    }\n  );",
   "id": 182,
   "stars": 0,
   "errors": [
    2304,
    1128,
    1128,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'view-design/dist/styles/iview.css';",
   "id": 183,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {render, html} from '//unpkg.com/lighterhtml?module';\n\ndocument.body.appendChild(\n  // as unkeyed one-off content, right away 🎉\n  html.node`<strong>any</strong> one-off content!<div/>`\n);\n\n// as automatically rendered wired content 🤯\ntodo(document.body.lastChild);\nfunction todo(node, items = []) {\n  render(node, html`\n  <ul>${\n  items.map((what, i) => html`\n    <li data-i=${i} onclick=${remove}> ${what} </li>`)\n  }</ul>\n  <button onclick=${add}> add </button>`);\n  function add() {\n    items.push(prompt('do'));\n    todo(node, items);\n  }\n  function remove(e) {\n    items.splice(e.currentTarget.dataset.i, 1);\n    todo(node, items);\n  }\n}\r\n\r\nfunction prompt(arg0) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n",
   "id": 184,
   "stars": 0,
   "errors": [
    2584,
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 24,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Fetch from 'rd-fetch';\n\nFetch.json('https://example.com/api')\n  .then((response) => {\n    console.log(response.json);\n  })\n  .catch((error) => {\n    console.log(error.json);\n  });",
   "id": 185,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var $DOM = require( \"mock-dom-resources\" );\n\n// ..",
   "id": 186,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Schema.plugin(\n  mongooseHidden,\n  {\n    hidden: {\n      ...omitCommonFields.underscored.objTrue,\n      some_other_field: true,\n      another_field_to_ignore: true\n    }\n  }\n);",
   "id": 187,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Accordion from \"@beisen/accordion\"\n",
   "id": 188,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<script src=\"rstate.min.js\"></script>",
   "id": 189,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "    <Extension Géoportail pour iTowns>/\n        GpPluginItowns.js\n            (version minifiée du code javascript pour une utilisation en production)\n        GpPluginItowns.css\n            (version minifiée des css pour une utilisation en production)\n        GpPluginItowns-src.js\n            (version non minifiée du code javascript pour une utilisation en développement)\n        GpPluginItowns-src.css\n            (version non minifiée des css pour une utilisation en développement)",
   "id": 190,
   "stars": 0,
   "errors": [
    17004,
    2304,
    17008,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { fail } = require('assert');\r\nvar mixtool = require('mix-h5');\nconst { fail } = require('node:assert');\r\n\n\n// 统计（百度，cnzz）\nvar tracking = mixtool.tracking;\n// init tracking\ntracking.add('baidu', 'xxxxxx'); // baidu site id\ntracking.add('cnzz', 'xxxxxx'); // cnzz site id\n\n\nsetTimeout(function() {\n    tracking.log('loaded');\n}, 1000);\n\n\n// 图片预加载\nvar imgLoader = mixtool.imgLoader;\n// over: preload over, count: loaded image length, length: preload image total length\n// map: loaded image name, percent: count/length, fakePercent: fake percent\nimgLoader.preloadImg(function(over, count, length, map, percent, fakePercent) {\n    if(over && 100 == percent) {\n        // todo\n    } else {\n        console.log(percent);\n    }\n}, {\n    selector: 'xxx', // 预加载图片地址筛选器, default: '.image-resource-wrap span, img.image-resource'\n    fakeTime: xxx, // 模拟加载时间, default: 2000\n    fakePercent: xxx // 模拟加载百分比, default: 50\n});\n// get preload image\nimgLoader.get('images/logo.png'); // 返回带版本号的图片地址，如果有cdn前缀就返回前缀，该方法必须要在preloadImg方法执行之后才能调用\n\n\n// 设置微信分享内容\nvar wxtool = mixtool.wx;\nwxtool.setShare({\n    title: 'xxx', // 分享标题\n    link: 'xxx', // 分享链接\n    img: 'xxx', // 分享图片\n    desc: 'xxx', // 分享描述\n    shareLog: {\n        openid: 'xxx', // 用户微信openid\n        nickname: 'xxx', // 用户昵称\n        ...: 'xxx' // 头像等其他用户信息\n    }, // 分享统计\n    success: function() {...}, // 分享成功回调函数\n    fail: function() {...} // 分享失败回调函数\n});\n\n\n// 微信支付\nvar wxtool = mixtool.wx;\nwxtool.pay({\n    openid: 'xxx', // 用户openId\n    product_id: 'xxx', // 商品ID\n    body: 'xxx', // 商品描述\n    total_fee: 'xxx', // 总金额\n    detail: 'xxx', // 商品详情\n    attach: 'xxx', // 附加数据\n    out_trade_no: 'xxx', // 商户订单号\n    success: function() {...}, // 支付成功回调函数\n    fail: function() {...} // 支付失败回调函数\n});\n\n\n// 注：上述微信分享和微信支付功能默认配置的是逆行信息科技公众号的appId，在其它公众号项目中使用这些微信功能，需要先执行initWXSDK方法传入相应的appid：\nwxtool.init({\n    appId: 'xxxxxx', // appid  页面域名需要与公众号中设置的回调一致\n    sdkUrl: '//res.wx.qq.com/open/js/jweixin-1.1.0.js', // 微信js sdk地址\n    siteSignApi: 'http://jishub.com/api/siteSign', // 签名接口\n    sitePayApi: 'http://jishub.com/api/sitePay', // 微信支付统一下单\n    jsApiList: [ // 开启的js接口：定制分享内容支付\n        'onMenuShareTimeline',\n        'onMenuShareAppMessage',\n        'chooseWXPay'\n    ],\n    initFail: function () { // 初始化失败\n        console.log('wx init fail');\n    },\n    initDone: function () { // 初始化成功\n        console.log('wx init done');\n    },\n    debug: false // debug模式\n}, function () {\n    // 初始化成功回调\n});\n\n\n// 监测手机横竖屏(限制横屏)\nmixtool.landscape({\n    'pic': 'xxx', // 提示图片\n    'text': '为了更好的体验，请将手机/平板竖过来', // 提示文字\n    'bgcolor': '#32373b', // 遮罩背景色\n    'txtColor': '#ffd40a', // 遮罩字颜色\n    'prefix': 'MixShine', // 遮罩class样式名 prefix + '_landscape'\n    'zIndex': 10000, // 遮罩z-index值\n    'init': false // 监测初始化后回调\n}, function() {\n    // 横屏回调\n}, function () {\n    // 竖屏回调\n});\n\n\n// 监测手机横竖屏(手动控制限制横屏还是竖屏)使用new关键字创建限制实例\nvar restrict = new mixtool.landscape({\n    'manual': true, // 手动控制时必须设为true\n    'pic': 'xxx', // 提示图片\n    'text': '为了更好的体验，请将手机/平板竖过来', // 限制横屏时的提示文字\n    'vetiText': '为了更好的体验，请将手机/平板横过来', // 限制竖屏时的提示文字\n    'bgcolor': '#32373b', // 遮罩背景色\n    'txtColor': '#ffd40a', // 遮罩字颜色\n    'prefix': 'MixShine', // 遮罩class样式��� prefix + '_landscape'\n    'zIndex': 10000, // 遮罩z-index值\n    'init': false // 监测初始化后回调\n}, function() {\n    // 横屏回调\n}, function () {\n    // 竖屏回调\n});\nrestrict.restrictLand(); // 限制横屏\nrestrict.restrictVeti(); // 限制竖屏\nrestrict.noRestrict(); // 无限制\nrestrict.restrictAll(); // 横屏竖屏都限制\n\n\n\n// util工具集\nvar util = mixtool.util;\n\nutil.loadScript // 加载js\nutil.loadImage // 加载图片\nutil.nextFrame // requestAnimationFrame或者setTimeout fallback\nutil.cancelFrame // cancelRequestAnimationFrame或者clearTimeout fallback\nutil.setCssPrefix // 根据浏览器设置css前缀\nutil.styleVender // 根据浏览器获取css前缀\nutil.browser // 浏览器内核判断 ex: util.browser.versions.ios\nutil.isFunction\nutil.isString\nutil.isArray\nutil.getElement // 根据输入内容返回DOM元素，传入字符串就作为DOM的id，传入DOM元素返回本身\nutil.getOffset // 根据输入内容返回DOM元素，传入字符串就作为DOM的id，传入DOM元素相对给定相对元素或body左上角的偏移量\nutil.extend // 将源对象的所有属性拷贝到目标对象中\nutil.genNonceStr // 获取随机数\nutil.setCookie\nutil.getCookie\nutil.getUrlQuery // 读取url上带的参数\nutil.buildUrlQuery // 拼接url参数",
   "id": 191,
   "stars": 0,
   "errors": [
    2300,
    2300,
    2304,
    2304,
    1109,
    1005,
    1128,
    1109,
    1005,
    1128,
    1109,
    1135,
    1128,
    1109,
    1005,
    1128,
    1109,
    1135
   ],
   "hasCode": true,
   "nondeletedLines": 113,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/**\n   * wechatConfig 配置信息\n   * \n   * @param appid 应用唯一标识，在微信开放平台提交应用审核通过后获得\n   * @param redirectUri 重定向地址，需要进行UrlEncode\n   * @param scope 应用授权作用域，拥有多个作用域用逗号（,）分隔，网页应用目前仅填写snsapi_login即可\n   * @param loginType 默认 jssdk\n   * @param style     提供\"black\"、\"white\"可选，默认为黑色文字描述。详见文档底部FAQ\n   * @param href 自定义样式链接，第三方可根据实际需求覆盖默认样式。详见文档底部FAQ\n   * @param state 用于保持请求和回调的状态，授权请求后原样带回给第三方。该参数可用于防止csrf攻击（跨站请求伪造攻击），建议第三方带上该参数，可设置为简单的随机数加session进行校验\n   * @param selfRedirect true：手机点击确认登录后可以在 iframe 内跳转到 redirect_uri，false：手机点击确认登录后可以在 top window 跳转到 redirect_uri。默认为 false。\n*/\n\nimport { DWWeChatLoginConfig } from 'angular-daiwei-wechat-login';\n\n@AppComponent({\n  ...\n  template: `<dw-wechat-login [width]=\"'300px'\" [height]=\"'410px'\" [config]=\"weChatConfig\">\n            </dw-wechat-login>`\n})\nexport class AppComponent {\n\n  wechatConfig: DWWeChatLoginConfig = {\n    appid: 'wxbdc5610cc59c1631',\n    redirectUri: 'https%3A%2F%2Fpassport.yhd.com%2Fwechat%2Fcallback.do',\n    state: '3d6be0a4035d839573b04816624a415e',\n  };\n\n  constructor() {}\n}\n",
   "id": 192,
   "stars": 0,
   "errors": [
    2348,
    2304,
    1005,
    1136,
    1005,
    1219,
    8010
   ],
   "hasCode": true,
   "nondeletedLines": 26,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" />\n<link rel=\"stylesheet\" href=\"dist/leaflet-push-content-control.css\" />",
   "id": 193,
   "stars": 0,
   "errors": [
    17004,
    2657,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CrudWrapper = require('mrs-node-util').crud;",
   "id": 194,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "await mongooseQueue.reset()\nconsole.log('The queue was completely purged of all jobs.')\r\n\r\nexport { }\r\n",
   "id": 195,
   "stars": 0,
   "errors": [
    1378,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Route('/home', HomeComponent)\n    .meta({\n        title: 'Home',\n        icon: 'fa-home'\n    });\n\n// Output\n{\n    path: '/home',\n    component: HomeComponent,\n    meta: {\n        title: 'Home',\n        icon: 'fa-home'\n    }\n}\r\n\r\nfunction Route(arg0, HomeComponent) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 196,
   "stars": 0,
   "errors": [
    2304,
    2339,
    2695,
    2304,
    1005,
    2304,
    2695,
    2304,
    1005,
    2695,
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "MP.Memberships.get('/some/future/url', myAccessToken)\n  .then(function (data) {\n    console.log(\"You got the data:\", data);\n  });",
   "id": 197,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// constructor\ninterface CurrencyFormatterProps {\n  locales: string | string[],\n  minimumIntegerDigits?: number,\n  precision?: number,\n  useGrouping?: boolean,\n  localeMatcher?: 'lookup' | 'best fit',\n  formatter?: typeof CurrencyFormatter.formatter,\n\n  style?: 'decimal' | 'currency' | 'percent',\n  currency?: string,\n  currencyDisplay?: 'symbol' | 'code' | 'name',\n}\n\n//options of format\ninterface optionsofformat {\n  minimumIntegerDigits?: number,\n  precision?: number,\n  useGrouping?: boolean,\n  localeMatcher?: 'lookup' | 'best fit',\n\n  style?: 'decimal' | 'currency' | 'percent',\n  currency?: string,\n  currencyDisplay?: 'symbol' | 'code' | 'name',\n}",
   "id": 198,
   "stars": 0,
   "errors": [
    8006,
    2304,
    8006
   ],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "☁ ~ cat Garden.js\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst GardenStyle = styled.div`\n  opacity: 1\n`\n\nconst Garden = props => (\n  <GardenStyle>Hello {props.text}</GardenStyle>\n)\n\nexport default Garden",
   "id": 199,
   "stars": 0,
   "errors": [
    1127,
    2304,
    1005,
    2448,
    2339,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "#!/usr/bin/env node\n\nvar husk = require('..').exec();\n\nhusk()\n  .whoami(function(code, signal) {\n    console.log('[code: %s, signal: %s]', code, signal);\n  })\n  .once('end', console.log.bind(null, '%s'))\n  .print()\n  .run();",
   "id": 200,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/* Predicate fn */\nfind(\n  item => item.id === 1,\n  todos\n)\n// => {id: 1, name: \"lorem\", tagId: 2}\n\n/* Matching object */\nfindWith(\n  {\n    \"id\": 1\n  },\n  todos\n)\n// => {id: 1, name: \"lorem\", tagId: 2}\n\n/* Matching object & predicate fn */\nfilterWith(\n  {\n    \"tagId\": is // same as `tagId: source => is(source)`\n  },\n  todos\n)\n// => [{id: 1, name: \"lorem\", tagId: 2}]\n\n/* Syntactic sugar */\nfilterWith(\n  {\n    \"!tagId\": is // same as `tagId: not(is)`\n  },\n  todos\n)\n\r\nfunction find(arg0, todos) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n// => [\n//  {id: 2, name: \"ipsum\", tagId: null},\n//  {id: 3, name: \"dolor\", tagId: null}\n// ]",
   "id": 201,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 29,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { ReadableStream } = require('stream/web');\r\nconst htmlStream = require('web-html-stream');\n\n/**\n * @param {object} node, a DOM node like object.\n * @return {object} Anything really; return values are accumulated in an\n *   array.\n */\nfunction handler(node, ctx) {\n    // Do something with the node\n    return node;\n}\n\nconst testDoc = \"<html><body><div>\"\n        + \"<test-element foo='bar'>foo</test-element>\"\n        + \"</div></body>\";\n\nconst inputStream = new ReadableStream({\n    start(controller) {\n        controller.enqueue(testDoc);\n        controller.close();\n    }\n});\n\n// Create a matcher to handle some elements, using CSS syntax. To avoid\n// shipping a CSS parser to clients, CSS selectors are only supported in node.\nvar reader = new htmlStream.HTMLTransformReader(inputStream, {\n    transforms: [\n        { selector: 'test-element[foo=\"bar\"]', handler: handler },\n        { selector: 'foo-bar', handler: handler },\n    ],\n    ctx: { hello: 'world' }\n});\n\n// Create the same matcher using more verbose selector objects. These are\n// especially useful when processing dynamic values, as this avoids the need to\n// escape special chars in CSS selectors.\nreader = new htmlStream.HTMLTransformReader(inputStream, {\n    transforms: [{\n        selector: {\n            nodeName: 'test-element',\n            attributes: [['foo', '=', 'bar']]\n        },\n        handler: handler,\n        // Optional: Request node.innerHTML / outerHTML as `ReadableStream`\n        // instances. Only available in rule objects.\n        stream: false\n    }],\n    ctx: { hello: 'world' }\n});\n\n// Read matches\nreader.read()\n.then(res => {\n    console.log(res);\n    return reader.read();\n})\n// {\n//   done: false,\n//   value: [\n//     \"<html><body><div>\",\n//     {\n//       \"nodeName\": \"test-element\",\n//       \"attributes\": {\n//         \"foo\": \"bar\"\n//       },\n//       \"outerHTML\": \"<test-element foo='bar'>foo</test-element>\",\n//       \"innerHTML\": \"foo\"\n//     },\n//     \"</div></body>\"\n//   ]\n// }\n.then(res => console.log);\n// { done: true, value: undefined }",
   "id": 202,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 43,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// here is our parent conductor\nvar parentConductor = rc.createConductor({\n    name: 'parent',\n    props: function() {\n        return {\n            count: 0,\n            candies: [ 'twix', 'snickers', 'kit kat' ]\n        };\n    }\n});\n\n// now we inherit by specifying a deps config\nvar childConductor = rc.createConductor({\n    name: 'child',\n    deps: [ parentConductor ],\n    props: function(inheritedProps) {\n        // children conductor are provided with the parent props.\n        // you can choose to mutate this object for the child conductor.\n\n        // note that mutating inheritedProps does NOT affect the parent\n        // conductor's props!\n        inheritedProps.count += 1;\n        inheritedProps.candies = inheritedProps.candies.concat('butterfinger');\n\n        // like the parent conductor, this returned value will become immutable\n        return inheritedProps;\n    },\n    handlers: [\n        function render(req, res, next) {\n            var props = rc.getProps(req);\n\n            res.render(props, next);\n            // => will render:\n            // {\n            //      count: 1,\n            //      candies: [ 'twix', 'snickers', 'kit kat', 'butterfinger' ]\n            // }\n        }\n    ]\n});",
   "id": 203,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 24,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  ...\n  height: '50%-1',\n  left: '45%+1',\n  ...",
   "id": 204,
   "stars": 0,
   "errors": [
    1128,
    2695,
    2304,
    1005,
    2695,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "proxyList.getByCountryCode('FR')\n          .then(function (proxies) {\n            // get proxies here\n          })\n          .catch(function (error) {\n            throw new Error(error);\n          });",
   "id": 205,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/*** Add company table, insert some data and connect with user table ***/\n\nCREATE TABLE \"company\"\n(\n   id serial,\n   company_name character(20) NOT NULL,\n   CONSTRAINT pk_company PRIMARY KEY (id),\n   CONSTRAINT uk_company UNIQUE (company_name)\n)\nWITH (\n  OIDS = FALSE\n);\n\nINSERT INTO \"company\"(company_name)\n    VALUES ('Company 1');\n\nALTER TABLE \"user\"\n  ADD COLUMN company_id integer;\n\nUPDATE \"user\" SET const company_id = 1;\n\nALTER TABLE \"user\"\n   ALTER COLUMN company_id SET NOT NULL;\n\nALTER TABLE \"user\"\n  ADD CONSTRAINT fk_user FOREIGN KEY (company_id) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE NO ACTION;\n\r\nfunction character(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 206,
   "stars": 0,
   "errors": [
    1434,
    2304,
    1434,
    2304,
    2349,
    2304,
    1005,
    2304,
    2304,
    1005,
    1005,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    2349,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2448,
    2304,
    1434,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    1435,
    2304,
    1434,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1435,
    2304,
    1434,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var csgotm = require('node-csgotm-api');\nvar api = new csgotm.API(options);",
   "id": 207,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { connected } = require(\"process\")\r\n\r\nlistening\nclient connected\nargs: arg1,arg2\nbody: Hello World!",
   "id": 208,
   "stars": 0,
   "errors": [
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    1434,
    2304,
    2304,
    8013
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {makeDispatcher} from \"robojs\"\nvar myNewEventDispatcher=makeDispatcher();",
   "id": 209,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "swangular.success(\"Great job!\");",
   "id": 210,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "sudo yum install clamav",
   "id": 211,
   "stars": 0,
   "errors": [
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { call } = require(\"assert\")\r\n\r\nIf in Player A's simulation the character just dodged the bullet in time, but in Player B's simulation the character didn't dodge that same bullet in time - strictly due to fuzziness - our two simulations are no longer in sync and we aren't sharing a game state any longer. We call this non-deterministic physics.",
   "id": 212,
   "stars": 0,
   "errors": [
    2305,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2693,
    2304,
    1005,
    1005,
    2304,
    2304,
    1005,
    2304,
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n    var contentType = 'Content-Type';\n    var body = new CreatenewUpdatePropertyManagerRequest({\"key\":\"value\"});\n\n    controller.createnewPropertyManager(contentType, body, function(error, response, context) {\n\n    \n    });",
   "id": 213,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "client.summarization(\"<Your text to summarize>\")",
   "id": 214,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<Mark wrap=\"span\">*text*</Mark>",
   "id": 215,
   "stars": 0,
   "errors": [
    17004,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const renderer = templateEngine.render(string[, parameters, style]);",
   "id": 216,
   "stars": 0,
   "errors": [
    2304,
    2693,
    2695,
    1109,
    2695,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "form.on('field', (name, value) => {});",
   "id": 217,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { version } = require(\"os\")\r\n\r\nonvif-ptz goto-home\n\nMove the camera to the home position.\n\nOptions:\n  --help          Show help  [boolean]\n  --version       Show version number  [boolean]\n  --baseUrl       The baseUrl of the camera.  [string] [required]\n  --path          The onvif path of the camera.  [string] [default: \"/onvif/device_service\"]\n  --username, -u  The username of the camera.  [string] [required]\n  --password, -p  The password of the camera.  [string] [required]",
   "id": 218,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1005,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    2693,
    2632,
    1005,
    2304,
    1434,
    2693,
    2693,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    2693,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    2693,
    1109,
    1128,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    2693,
    2304,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    2693,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "pusudb.use('ws', function(req, socket, next){\n    console.log(req.headers) \n    console.log(req.params) // URL params\n    console.log(req.body) // Body-Data\n    console.log(req.docs) // Result sending to client \n    next()\n})",
   "id": 219,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Cookies from \"ts-cookies\";",
   "id": 220,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var LayerWebhooks = require('layer-webhooks');\n\n// Initialize by providing your Layer credentials\nvar layer = new LayerWebhooks({\n  token: API_TOKEN,\n  appId: APP_ID\n});\n\n// Register a webhook\nlayer.webhooks.register({\n  events: ['message.sent'],\n  url: 'https://mydomain.com/mywebhooks/messages-sent',\n  secret: 'Frodo is a Dodo',\n  config: {\n    name: 'My sample webhook'\n  }\n}, function(err, res) {\n  if (err) return console.error(err);\n\n  // Webhook registered\n});",
   "id": 221,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function App() {\n  return (\n    <Auth\n      loginCall={loginCall}\n      meCall={meCall}\n      storageBackend={storageBackend}\n      storageNamespace='my-auth'\n      render={(authActions, authState, userState) => /* render my children */}\n    />\n  )\n}",
   "id": 222,
   "stars": 0,
   "errors": [
    17004,
    2304,
    2304,
    2304,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const HOST=mypublicdevhost.com",
   "id": 223,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import VuePictureCut from 'vue-picture-cut';\nVue.use(VuePictureCut);",
   "id": 224,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<iconly name=\"activity\" type=\"bold\" />\n<iconly name=\"activity\" type=\"bulk\" />\n<iconly name=\"activity\" type=\"light\" />\n<iconly name=\"activity\" type=\"outline\" />\n<iconly name=\"activity\" type=\"broken\" />\n<iconly name=\"activity\" type=\"tone\" />",
   "id": 225,
   "stars": 0,
   "errors": [
    17004,
    2657,
    17004,
    17004,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nfunction transferTokens(sender, to, amount) {\n  const web3 = new web3();\n  const TokenContract = web3.eth.contract(Token.abi).at(Token.address);\n  const data = TokenContract.transfer.getData(to, amount);\n  const options = { data, from: sender, to: Token.address };\n  return Transaction({ options });\n}\n\nconst tx = transferTokens(\n  '0xe8d3266f3c4f083ab8864b5e04aea7b087044e49',\n  '0x7967c4f4512195ba83ae8f08ca30f7b145be6cf8',\n  1000000\n);\n\nconst txhash = await tx.transact(provider);\r\n\r\nfunction Transaction(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 226,
   "stars": 0,
   "errors": [
    2448,
    2304,
    2304,
    2304,
    1375,
    1378,
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { createLogger } = require('@livy/logger')\n\nconst logger = createLogger('my-app-logger', {\n  mode: 'async'\n})",
   "id": 227,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nvar Yobit = require('yobit-exchange-api');\nvar VersionTwo = require('yobit-exchange-api/lib/version_two');\nvar Trade = require('yobit-exchange-api/lib/trade');\n\nvar keys = {key: '', secret: ''}\nvar yobit = new Yobit(keys)\nvar version2 = new VersionTwo(keys);\nvar trade = new Trade(keys);\n\ntrade.getInfo(function(err, data) {\n  console.log(data);\n})\n\nversion2.ticker('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nversion2.depth('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nversion2.trades('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nyobit.fee(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.ticker(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.depth(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.trades(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.info(function(err, data) {\n  console.log(data);\n})\n",
   "id": 228,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 34,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<AllDocs db=\"dbname\" include_docs ... />",
   "id": 229,
   "stars": 0,
   "errors": [
    17004,
    2304,
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "gauge1:+3\n - tag1:v1\n - tag2:v2",
   "id": 230,
   "stars": 0,
   "errors": [
    2304,
    1005,
    2304,
    2304,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const AssetsQueryOptions = require('drequest-maxdome').AssetsQueryOptions;\n\nconst assetId = <assetId>;\nconst assetsQueryOptions = new AssetsQueryOptions(assetId);\n\nconst assets =\n  await maxdome.request('assets')\n    .addOptions(assetsQueryOptions)\n    .send();",
   "id": 231,
   "stars": 0,
   "errors": [
    17004,
    17008,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {\n  isMobile,\n  isSmall,\n  isTablet,\n  isDesktop\n} from \"@times-stories/style-guide/helpers\";\n\nisMobile(); // Boolean\nisSmall(); // Boolean\nisTablet(); // Boolean\nisDesktop(); // Boolean",
   "id": 232,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/**\n* @param  {String}  language        Language identifier\n* @param  {String}  modelsString    Array with speakers-voice models-(optional)defaultStyle correspondence (e.g. '[[\"speaker1\",\"model1\",\"style1\"],[\"speaker2\",\"model2\"]]')\n* @param  {String}  vttText         Subtitle text, in VTT format\n* @param  {Number[]}    selectedSentences   Array with indexes of sentences to be synthesized\n* @return {String}                  JSON-formatted string for synthesis\n*/",
   "id": 233,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "exlog.error(new Error());",
   "id": 234,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {\n  EpubView, // Underlaying epub-canvas (wrapper for epub.js iframe)\n  EpubViewStyle, // Styles for EpubView, you can pass it to the instance as a style prop for customize it\n  ReactReader, // A simple epub-reader with left/right button and chapter navigation\n  ReactReaderStyle // Styles for the epub-reader it you need to customize it\n} from \"react-reader\";",
   "id": 235,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// {app_root}/config/plugin.js\nexports.cuteLogger = {\n  enable: true,\n  package: 'egg-cute-logger',\n};",
   "id": 236,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const asyncIteratorToStream = require(\"async-iterator-to-stream\");\n\n// promisified fs\nconst fs = require(\"mz/fs\");\n\nconst createReadStream = asyncIteratorToStream(async function*(file) {\n  const fd = await fs.open(file, \"r\");\n  try {\n    let size = yield;\n    while (true) {\n      const buf = Buffer.alloc(size);\n      const [n] = await fs.read(fd, buf, 0, size, null);\n      if (n < size) {\n        yield buf.slice(0, n);\n        return;\n      }\n      size = yield buf;\n    }\n  } finally {\n    await fs.close(fd);\n  }\n});\n\ncreateReadStream(\"foo.txt\").pipe(process.stdout);",
   "id": 237,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "좌절\n아아아아",
   "id": 238,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const jwksClient = require('jwks-rsa');\n\nconst client = jwksClient({\n  rateLimit: true,\n  jwksRequestsPerMinute: 10, // Default value\n  jwksUri: 'https://sandrino.auth0.com/.well-known/jwks.json'\n});\n\nconst kid = 'RkI5MjI5OUY5ODc1N0Q4QzM0OUYzNkVGMTJDOUEzQkFCOTU3NjE2Rg';\nconst key = await client.getSigningKey(kid);\nconst signingKey = key.getPublicKey();",
   "id": 239,
   "stars": 0,
   "errors": [
    1378
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const cwb = new CWBClient(API_KEY)",
   "id": 240,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  \"homepage\": \"http://mywebsite.com/relativepath\",",
   "id": 241,
   "stars": 0,
   "errors": [
    1005,
    2695,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export default async function (e, t, a) {\n    let n = document.createElement(e);\n    n.append(...(await a));\n    return Object.assign(n, t);\n}",
   "id": 242,
   "stars": 0,
   "errors": [
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "require('ranker')(null, app);",
   "id": 243,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "--> POST / {\"jsonrpc\":\"2.0\",\"id\":3,\"method\":\"eth_gasPrice\",\"params\":[]}\n<-- {\"jsonrpc\":\"2.0\",\"result\":\"0x2e90edd000\",\"id\":3}",
   "id": 244,
   "stars": 0,
   "errors": [
    2365,
    1109,
    2304,
    2363,
    2356
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { name } = require(\"assert\")\r\n\r\nformatter --const name=\"Fred Flintstone\" Australia < test/template.txt",
   "id": 245,
   "stars": 0,
   "errors": [
    2305,
    2304,
    1005,
    1005,
    1005,
    17004,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  var nconf = require('nconf');\n\n  //\n  // Requiring `nconf-redis` will extend the `nconf`\n  // module.\n  //\n  require('nconf-redis');\n\n  nconf.use('redis', { host: 'localhost', port: 6379, ttl: 60 * 60 * 1000 });",
   "id": 246,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Type definitions for Node.js 10.12\n// Project: http://nodejs.org/\n// Definitions by: Microsoft TypeScript <https://github.com/Microsoft>\n//                 Definitely Typed <https://github.com/DefinitelyTyped>\n//                 Alberto Schiabel <https://github.com/jkomyno>",
   "id": 247,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import formCreate from 'form-create'\nimport { maker } from 'form-create'\nVue.use(formCreate)",
   "id": 248,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// scss\nimport 'node_modules/@auraxy/react-select/lib/css/index.scss'\n\n// css\nimport 'node_modules/@auraxy/react-select/lib/css/index.css'",
   "id": 249,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import HttpModule from 'react-native-http-module';\n\nconst httpModule = new HttpModule(baseURL, headers);",
   "id": 250,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import tinyDelay from \"tiny-delay\"\n\ntinyDelay()",
   "id": 251,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "autossh({\n  host: '111.22.333.444',\n  username: 'root',\n  localPort: 'auto',\n  remotePort: 5432,\n  sshPort: 9999\n});\r\n\r\nfunction autossh(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 252,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  \"acm:DescribeCertificate\", // only for custom domains\n  \"acm:ListCertificates\",    // only for custom domains\n  \"acm:RequestCertificate\",  // only for custom domains\n  \"cloudfront:CreateCloudFrontOriginAccessIdentity\",\n  \"cloudfront:CreateDistribution\",\n  \"cloudfront:CreateInvalidation\",\n  \"cloudfront:GetDistribution\",\n  \"cloudfront:GetDistributionConfig\",\n  \"cloudfront:ListCloudFrontOriginAccessIdentities\",\n  \"cloudfront:ListDistributions\",\n  \"cloudfront:ListDistributionsByLambdaFunction\",\n  \"cloudfront:ListDistributionsByWebACLId\",\n  \"cloudfront:ListFieldLevelEncryptionConfigs\",\n  \"cloudfront:ListFieldLevelEncryptionProfiles\",\n  \"cloudfront:ListInvalidations\",\n  \"cloudfront:ListPublicKeys\",\n  \"cloudfront:ListStreamingDistributions\",\n  \"cloudfront:UpdateDistribution\",\n  \"iam:AttachRolePolicy\",\n  \"iam:CreateRole\",\n  \"iam:CreateServiceLinkedRole\",\n  \"iam:GetRole\",\n  \"iam:PutRolePolicy\",\n  \"iam:PassRole\",\n  \"lambda:CreateFunction\",\n  \"lambda:EnableReplication\",\n  \"lambda:DeleteFunction\",            // only for custom domains\n  \"lambda:GetFunction\",\n  \"lambda:GetFunctionConfiguration\",\n  \"lambda:PublishVersion\",\n  \"lambda:UpdateFunctionCode\",\n  \"lambda:UpdateFunctionConfiguration\",\n  \"route53:ChangeResourceRecordSets\", // only for custom domains\n  \"route53:ListHostedZonesByName\",\n  \"route53:ListResourceRecordSets\",   // only for custom domains\n  \"s3:CreateBucket\",\n  \"s3:GetAccelerateConfiguration\",\n  \"s3:GetObject\",                     // only if persisting state to S3 for CI/CD\n  \"s3:ListBucket\",\n  \"s3:PutAccelerateConfiguration\",\n  \"s3:PutBucketPolicy\",\n  \"s3:PutObject\"",
   "id": 253,
   "stars": 0,
   "errors": [
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695
   ],
   "hasCode": true,
   "nondeletedLines": 42,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const appAuth = auth(\n    {\n        // Simple case where roles is a text field in User containing roles separated by commas\n        rolesGetter: async (context, userId) => {\n            const user = context.app.service(\"users\").get(userId);\n            return user.roles.split(\",\") || [];\n        },\n    },\n    \"jwt\"\n);\n\napp.service(\"service\").hooks({\n    before: {\n        all: appAuth,\n    },\n});\r\n\r\nfunction auth(arg0, arg1) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 254,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport logo from './logo.png'; // Tell Webpack this JS file uses this image\n\nconsole.log(logo); // /logo.84287d09.png\n\nfunction Header() {\n  // Import result is the URL of your image\n  return <img src={logo} alt=\"Logo\" />;\n}\n\nexport default Header;",
   "id": 255,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//data为代付同步返回的结果\nif(llpaycahpayInstance.submitSuccess(data)){\n    //todo,更新提现订单....\n}",
   "id": 256,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var obj = { 'a': { 'b': { 'c': 'd' } } };\n\nvar val = dget( obj );\n\r\nfunction dget(obj) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n// returns 'd'",
   "id": 257,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "    phonebook listall\n",
   "id": 258,
   "stars": 0,
   "errors": [
    1434,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": ".container {\n    width: 100%;\n    height: 100%;\n  }",
   "id": 259,
   "stars": 0,
   "errors": [
    1128,
    1435,
    2304,
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = function(eor){\n  return eor.define(\"Application\").extend(function(){\n    this.title = \"Express Override\";\n  })\n  .methods({\n    index : function(req, res) {\n      var sampleModel = eor.getModule(\"Sample\", \"Model\");\n      if(sampleModel.index()){\n        res.render('index', { title: this.title })\n      }else{\n        res.render('index', { title: this.title, error_message : \"ErrorCode => -1111\"});\n      }\n    },\n\n    hello : function(req, res) {\n      res.render('index', { title: eor.shared.name })\n    }\n  })\n};",
   "id": 260,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport { shallow } from 'enzyme';\nimport App from './App';\n\nit('renders without crashing', () => {\n  shallow(<App />);\n});",
   "id": 261,
   "stars": 0,
   "errors": [
    2593,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "bit.get(\"mempool\").then((mepool) => {\n  //  mempool := {\n  //    tx: <array of mempool transactions>\n  //  }\n})",
   "id": 262,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "clock.syncTime();",
   "id": 263,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "grunt.initConfig({\n  tishadow: {\n    test: {\n      command: 'spec',\n      options: {\n        junit: true\n      }\n    },\n    run: {\n      command: 'run',\n      options: {\n        junit: true,\n        patch: true,\n        preclear: true\n      }\n    }\n  }\n});",
   "id": 264,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": ".loginForm\n.username\n.usernameLabel\n.password\n.passwordLabel\n.remember\n.rememberLabel\n.button\n.forgotLink",
   "id": 265,
   "stars": 0,
   "errors": [
    1128,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const successCount = librato.metric('foo.success.count')\nconst errorCount   = librato.metric('foo.error.count')\n\nSomePromise().then(doSomething)\n             .then(doSomethingElse)\n             .then(successCount)    // Increment on success\n             .catch(errorCount)     // Increment error on failure\r\n\r\nfunction SomePromise() {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 266,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2339,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import LockTableView from 'react-native-locktable';",
   "id": 267,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "gh is 1 --comment 'Node GH rocks!'",
   "id": 268,
   "stars": 0,
   "errors": [
    1434,
    2304,
    2304,
    1228,
    2357,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const input = document.querySelector('input');\nconst button = document.querySelector('.js-add-signature');\nbutton.addEventListener(event => {\n    textFieldEdit.insert(input, 'Made by 🐝 with pollen.');\n});",
   "id": 269,
   "stars": 0,
   "errors": [
    2584,
    2584,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "vue + ts + prettier\n\n  extends: [\n    'plugin:@etherfe/vue-typescript'\n    'plugin:@etherfe/vue-prettier'\n  ]",
   "id": 270,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    1128,
    1128,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import SensorManager from \"rnative-sensor-manager\";\nSensorManager.startPressure(100);\nDeviceEventEmitter.addListener(\"pressure\", (data) => {\n  /**\n   * data.pressure\n   **/\n});\nSensorManager.stopPressure();",
   "id": 271,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const inspector = require('event-loop-inspector')();\nconst dump = inspector.dump();\n\nconsole.log(dump);",
   "id": 272,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// the value stored in column `key` of table `test` is encrypted in database\nconst testDao = dao.create(pool).table('test').encrypt(['key']);\n\nawait pool.transaction(async (query): Promise<boolean> => {\n  await dao.create(pool).delete().from('unittest_dao').exec(query);\n  await testDao.insert({\n    key: 'key1',\n    count: 1,\n    value: 'value1'\n  }).exec(query);\n  await testDao.update().set({\n    key: 'key1',\n    count: 1,\n    value: 'value2'\n  }).exec(query);\n  return true;\n})\r\n\r\nexport { };\r\n",
   "id": 273,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1378,
    2304,
    8010,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  bordinoAuthenticate.validateToken('mytoken')\n                     .then((isValide)=>{\n                       //do your job\n                     })\n                     .catch((e)=>(\n                       //handle error\n                     ))",
   "id": 274,
   "stars": 0,
   "errors": [
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { Plugin } from 'munar-core'\nexport default class MyPlugin extends Plugin {\n  // etc\n}",
   "id": 275,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import ActionSheet from 'react-native-actionsheet'\n\nclass Demo extends React.Component {\n  showActionSheet = () => {\n    this.ActionSheet.show()\n  }\n  render() {\n    return (\n      <View>\n        <Text onPress={this.showActionSheet}>Open ActionSheet</Text>\n        <ActionSheet\n          ref={o => this.ActionSheet = o}\n          title={'Which one do you like ?'}\n          options={['Apple', 'Banana', 'cancel']}\n          cancelButtonIndex={2}\n          destructiveButtonIndex={1}\n          onPress={(index) => { /* do something */ }}\n        />\n      </View>\n    )\n  }\n}",
   "id": 276,
   "stars": 0,
   "errors": [
    2304,
    17004,
    2304,
    17004,
    2304,
    2304,
    17004,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 21,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Field.add('ID', Field.INTEGER({\n  primaryKey    : true,\n  autoIncrement : true,\n  allowNull     : false,\n  validate      : { min: 1 }\n}))\nField.add('PK_INTEGER', Field.INTEGER({\n  primaryKey : true,\n  allowNull  : false,\n  validate   : { min: 1 }\n}))\nField.add('PK_UUID', Field.UUID({\n  primaryKey : true,\n  allowNull  : false\n}))",
   "id": 277,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { diveDeco } from 'diving-decompression'\n...\nconst dive = { depth: 100, bottomTime: 135 };\nconst decoObject = diveDeco(dive);\nconsole.log(decoObject)",
   "id": 278,
   "stars": 0,
   "errors": [
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var model = {\n  web: 'http://www.google.com',\n  images: 'http://images.google.com/'\n};",
   "id": 279,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "console.log(source.expand());",
   "id": 280,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const eip = require('eip');\nconst redis = require('redis');\nconst { PubSub, Queue } = require('eip-redis');\nconst { Timer } = require('eip-timer');\n\nconst redisPub = redis.createClient();\nconst redisSub =  redis.createClient({return_buffers:true});\n\nconst pubSub = new PubSub(1, 1000, redisPub, redisSub, 'namespace') // eventsPerPeriod, periodInMS\nconst queue = new Queue(redisPub, 'namespace');\nconst resource = x => x;\n\nconst throttler = new eip.Route().throttleResource({ pubSub, queue, resource, Timer });",
   "id": 281,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "void 0",
   "id": 282,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { loading, error, data, refetch } = useAxios({\n    url: \"api-url\",\n});\nreturn (\n    <div className=\"App\">\n        <h1>{loading && \"Loading\"}</h1>\n        <h1>{error && \"Error!\"}</h1>\n        <button onClick={refetch}>Refetch</button>\n        <div>{data && JSON.stringify(data)}</div>\n    </div>\n);\r\n\r\nfunction useAxios(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 283,
   "stars": 0,
   "errors": [
    2339,
    2339,
    2339,
    2339,
    1108
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "await client.balances()\nawait client.balance('BTC')\nawait client.depositAddress('BTC')\nawait client.withdraw('BTC', { quantity: 1.2, address: 'abcde' })\nawait client.order('30594e6e-ba54-4914-96f3-5b9d5de2468e')\nawait client.orderHistory('BTC-ETH')\nawait client.withdrawalHistory('BTC')\nawait client.depositHistory('BTC')\r\n\r\nexport { }\r\n",
   "id": 284,
   "stars": 0,
   "errors": [
    1378,
    2304,
    1378,
    2304,
    1378,
    2304,
    1378,
    2304,
    1378,
    2304,
    1378,
    2304,
    1378,
    2304,
    1378,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CoreApiV10 = require('core_api_v10');\n\nvar api = new CoreApiV10.AuthApi()\n\nvar authorization = \"authorization_example\"; // {String} JWT access token\n\nvar opts = { \n  'model': new CoreApiV10.TwoFactorAuthenticatorConfirm() // {TwoFactorAuthenticatorConfirm} \n};\napi.v10Auth2faConfirmPost(authorization, opts).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n\n",
   "id": 285,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// using promise API\nrecursive(\"/app\", {\n  ignores: [\"README.md\"],\n  fs, // in-memory fs\n  debug: true,\n  log: (...msg) => console.log(\"readdir\", ...msg)\n}).then(successFn, errFn);\r\n\r\nfunction recursive(arg0, arg1) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 286,
   "stars": 0,
   "errors": [
    18004,
    2339,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { name } = require(\"assert\");\r\n\r\n<template>\n  <div id=\"app\" v-if=\"hydrated\">\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data: () => ({ hydrated: false }),\n  async mounted() {\n    await this.$apollo.provider.defaultClient.hydrated()\n    this.hydrated = true\n  },\n}\n</script>",
   "id": 287,
   "stars": 0,
   "errors": [
    2305,
    17004,
    2657,
    17004,
    17004,
    17004,
    1005,
    1382,
    2304,
    1005,
    1381,
    2339,
    1005,
    1381,
    1381
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "konstructor-cli new my-app",
   "id": 288,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1005,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const repl = require('re-pl');\nconst run = require('setlist');\n\nrun(function* () {\n  // Initialize variables and do some work here\n  ...\n  let value = yield someWorkHere();\n\n  // Pause execution to inspect ongoing process\n  const value = yield repl(($)=>eval($))(value);\n\n  // The edited/unedited return value can be used later\n  return lastWorkHere(value);\n});",
   "id": 289,
   "stars": 0,
   "errors": [
    1128,
    2304,
    1005,
    2448,
    2588,
    1005,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "walk(function(r, n){ return r+n }, 0, ...[1,2,3]) // -> 6\r\n\r\nfunction walk(arg0, arg1, arg2) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 290,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var WrapperBuilder = require('thunkify-object').WrapperBuilder;\n\nvar Wrapper = new WrapperBuilder()\n .addEvent(['on', 'once'])\n .addPassThrough('emit')\n .getWrapper();",
   "id": 291,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { table } = require(\"console\");\r\n\r\ntable.page(1);",
   "id": 292,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { info } = require(\"console\")\r\n\r\nuser> @hubot 5rolli\nHubot>\n## test-project\n- 残り: 29.5 days (38.4 days/people, to: 2016/03/06)\n- 消化: 31.2 days (40.6 days/people, es: 247%)\n\nuser> @hubot 5rolli info test-project\nhubot>\n## test-project\n\n### タスク残り時間 (5時間/日, 1.3人換算)\n- 予想: 29.5 days (38.4 days/people, to: 2016/03/06)\n- 最速: 21 days (27.4 days/people, to: 2016/02/28)\n- 最悪: 65.4 days (85.1 days/people, to: 2016/05/01)\n\n### 完了タスク消化時間\n- 31.2 days (40.6 days/people)\n\n### タスク消化率\n- 予想: 31.4%\n- 最速: 32.7%\n- 最悪: 25.9%\n\n### 完了タスク消化ペース\n- 予想: 247%\n- 最速: 303%\n- 最悪: 136%\n\n### 初回終了予想日 (開始日: 2015/11/27)\n- 予想: 2016/01/31 (diff: 35 days)\n- 最速: 2016/01/17 (diff: 42 days)\n- 最悪: 2016/04/03 (diff: 28 days)\r\n\r\nfunction days(arg0, arg1, to, arg3) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 293,
   "stars": 0,
   "errors": [
    2304,
    1109,
    1146,
    1005,
    1351,
    2304,
    2304,
    1127,
    1127,
    1005,
    2593,
    2304,
    2304,
    1005,
    1005,
    2362,
    1005,
    2362,
    2304,
    2304,
    1005,
    2304,
    1005,
    1005,
    1005,
    2362,
    2304,
    2304,
    1005,
    1109,
    2304,
    1109,
    1146,
    1005,
    1351,
    2304,
    1434,
    2593,
    2304,
    2304,
    1127,
    1127,
    1005,
    2593,
    2304,
    1127,
    1127,
    1127,
    1005,
    2304,
    1351,
    2304,
    2304,
    1351,
    2304,
    2304,
    1005,
    1005,
    2362,
    1005,
    2362,
    2304,
    2304,
    1005,
    2304,
    1005,
    1005,
    2362,
    1005,
    2362,
    2304,
    2304,
    1005,
    2304,
    1005,
    1005,
    1005,
    2362,
    2304,
    2304,
    1005,
    1127,
    1127,
    1127,
    1005,
    2304,
    1005,
    1005,
    2362,
    2304,
    1127,
    1127,
    1127,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    1127,
    1127,
    1127,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    1127,
    1127,
    1127,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2349,
    2304,
    1005,
    1005,
    2304,
    1005,
    2349,
    2304,
    1005,
    1005,
    2304,
    1005,
    2349,
    2304,
    1005,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 30,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'suneditor/dist/css/suneditor.min.css'\nimport suneditor from 'suneditor'\n// Import codeMirror\nimport CodeMirror from 'codemirror'\nimport 'codemirror/mode/htmlmixed/htmlmixed'\nimport 'codemirror/lib/codemirror.css'\n\nsuneditor.create('sample', {\n    codeMirror: CodeMirror // window.CodeMirror,\n    // Set options\n    // codeMirror: {\n    //     src: CodeMirror,\n    //     options: {...}\n    // }\n    buttonList: [\n        ['codeView']\n    ],\n    height: 400\n});",
   "id": 294,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/*\nexample.js\n\nthis node script will serve a lightweight swagger-ui crud-api backed by mongodb\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n          $ npm install swagger-mongodb && npm_config_server_port=1337 node example.js\n    3. open a browser to http://localhost:1337\n    4. interact with the swagger-ui crud-api\n*/\n\n/*jslint\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n\n(function (local) {\n    'use strict';\n    switch (local.modeJs) {\n\n\n\n    // run node js-env code\n    case 'node':\n        // export local\n        module.exports = local;\n        // init assets\n        local.utility2.cacheDict.assets['/'] = '<!DOCTYPE html>\\n' +\n/* jslint-ignore-begin */\n'<html>\\n' +\n'<head>\\n' +\n'    <meta charset=\"UTF-8\">\\n' +\n'    <title>\\n' +\n'    {{envDict.npm_package_name}} [{{envDict.npm_package_version}}]\\n' +\n'    </title>\\n' +\n'    <link rel=\"stylesheet\" href=\"/assets/utility2.css\">\\n' +\n'    <style>\\n' +\n'    * {\\n' +\n'        box-sizing: border-box;\\n' +\n'    }\\n' +\n'    body {\\n' +\n'        background-color: #fff;\\n' +\n'        font-family: Helvetical Neue, Helvetica, Arial, sans-serif;\\n' +\n'    }\\n' +\n'    body > div {\\n' +\n'        margin: 20px 0 20px 0;\\n' +\n'    }\\n' +\n'    .testReportDiv {\\n' +\n'        display: none;\\n' +\n'    }\\n' +\n'    </style>\\n' +\n'    {{envDict.npm_config_html_head_extra}}\\n' +\n'</head>\\n' +\n'<body>\\n' +\n'    <div class=\"ajaxProgressDiv\" style=\"display: none;\">\\n' +\n'    <div class=\"ajaxProgressBarDiv ajaxProgressBarDivLoading\">loading</div>\\n' +\n'    </div>\\n' +\n'    <h1>{{envDict.npm_package_name}} [{{envDict.npm_package_version}}]</h1>\\n' +\n'    <h3>{{envDict.npm_package_description}}</h3>\\n' +\n'    <div class=\"testReportDiv\"></div>\\n' +\n'    <div id=\"swagger-ui-container\" style=\"display: none;\"></div>\\n' +\n'    <iframe height=\"512\" src=\"/assets/swagger-ui.html\" width=\"100%\"></iframe>\\n' +\n'    <script src=\"/assets/utility2.js\"></script>\\n' +\n'    <script src=\"/assets/swagger-ui.rollup.js\"></script>\\n' +\n'    <script src=\"/assets/swagger-mongodb.js\"></script>\\n' +\n'    <script src=\"/assets/example.js\"></script>\\n' +\n'    <script src=\"/test/test.js\"></script>\\n' +\n'    <script>\\n' +\n'    window.utility2 = window.utility2 || {};\\n' +\n'    window.utility2.envDict = {\\n' +\n'        npm_package_description: \"{{envDict.npm_package_description}}\",\\n' +\n'        npm_package_name: \"{{envDict.npm_package_name}}\",\\n' +\n'        npm_package_version: \"{{envDict.npm_package_version}}\"\\n' +\n'    };\\n' +\n'    document.querySelector(\"iframe\").onload = function () {\\n' +\n'        var self;\\n' +\n'        self = this;\\n' +\n'        self.height = innerHeight - self.offsetTop - 20;\\n' +\n'        self.contentWindow.location.hash = location.hash;\\n' +\n'        self.contentWindow.onclick = function () {\\n' +\n'            setTimeout(function () {\\n' +\n'                location.hash = self.contentWindow.location.hash;\\n' +\n'            });\\n' +\n'        };\\n' +\n'    };\\n' +\n'    </script>\\n' +\n'    {{envDict.npm_config_html_body_extra}}\\n' +\n'</body>\\n' +\n/* jslint-ignore-end */\n            '</html>\\n';\n        local.utility2.cacheDict.assets['/'] = local.utility2.stringFormat(\n            local.utility2.cacheDict.assets['/'],\n            { envDict: local.utility2.envDict },\n            ''\n        );\n        local.utility2.cacheDict.assets['/assets/example.js'] =\n            local.utility2.istanbul_lite.instrumentSync(\n                local.fs.readFileSync(__dirname + '/example.js', 'utf8'),\n                __dirname + '/example.js'\n            );\n        local.utility2.cacheDict.assets['/test/test.js'] =\n            local.utility2.istanbul_lite.instrumentInPackage(\n                local.fs.readFileSync(local.swmg.__dirname + '/test.js', 'utf8'),\n                local.swmg.__dirname + '/test.js',\n                'swagger-mongodb'\n            );\n        // init mongodb-client\n        local.utility2.onReady.counter += 1;\n        local.utility2.taskRunOrSubscribe({\n            key: 'swagger-mongodb.mongodbConnect',\n            onTask: function (onError) {\n                local.mongodb.MongoClient.connect(\n                    local.utility2.envDict.npm_config_mongodb_url ||\n                        'mongodb://localhost:27017/test',\n                    function (error, db) {\n                            // validate no error occurred\n                            local.utility2.assert(!error, error);\n                            local.swmg.db = db;\n                            onError();\n                            local.utility2.onReady();\n                        }\n                );\n            }\n        });\n        // init middleware\n        local.middleware = local.utility2.middlewareGroupCreate([\n            // init pre-middleware\n            local.utility2.middlewareInit,\n            // init cached-assets middleware\n            local.utility2.middlewareAssetsCached,\n            // init http-body-get middleware\n            local.utility2.middlewareBodyGet,\n            // init http-body-parse-upload middleware\n            function (request, response, nextMiddleware) {\n                var boundary, bodyText;\n                // jslint-hack\n                local.utility2.nop(response);\n                local.utility2.testTryCatch(function () {\n                    if ((request.headers['content-type'] || '')\n                            .indexOf('multipart/form-data') !== 0) {\n                        nextMiddleware();\n                        return;\n                    }\n                    boundary =\n                        '--' + (/boundary=(.*)/).exec(request.headers['content-type'])[1];\n                    request.swmgBodyParsed = {};\n                    bodyText = String(request.bodyRaw);\n                    bodyText.split(boundary).slice(1, -1).forEach(function (part) {\n                        request.swmgBodyParsed[\n                            (/\\bname=\"([^\"]*)/).exec(part)[1]\n                        ] = part.split('\\r\\n\\r\\n').slice(1).join('\\r\\n\\r\\n').slice(0, -2);\n                    });\n                    // set file\n                    bodyText.replace('\\r\\n\\r\\n', function (match0, ii) {\n                        // jslint-hack\n                        local.utility2.nop(match0);\n                        request.swmgBodyParsed.file = request.bodyRaw\n                            .slice(ii + 4, -(boundary.length + 6))\n                            .toString('base64');\n                    });\n                    request.swmgBodyParsed.file = request.bodyRaw\n                        .slice(bodyText.lastIndexOf('\\r\\n\\r\\n') + 4, -(boundary.length + 6))\n                        .toString('base64');\n                    // set filename\n                    request.swmgBodyParsed.filename = (/\\bfilename=\"([^\"]+)/).exec(bodyText);\n                    request.swmgBodyParsed.filename =\n                        request.swmgBodyParsed.filename &&\n                        request.swmgBodyParsed.filename[1];\n                    nextMiddleware();\n                }, nextMiddleware);\n            },\n            // init http-body-parse middleware\n            local.swmg.middlewareBodyParse,\n            // init swagger pre-middleware\n            function (request, response, nextMiddleware) {\n                // jslint-hack\n                local.utility2.nop(request);\n                // enable cors\n                // http://en.wikipedia.org/wiki/Cross-origin_resource_sharing\n                response.setHeader(\n                    'Access-Control-Allow-Methods',\n                    'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'\n                );\n                response.setHeader('Access-Control-Allow-Origin', '*');\n                // init content-type\n                response.setHeader('Content-Type', 'application/json; charset=UTF-8');\n                nextMiddleware();\n            },\n            // init swagger middleware\n            local.swmg.middlewareSwagger\n        ]);\n        // init error-middleware\n        local.middlewareError = local.swmg.middlewareError;\n        // init petstore-api\n        (function () {\n            var methodPath, options, schema;\n            options = local.utility2.jsonCopy(require(local.swmg.local\n                .swagger_ui_lite.__dirname + '/swagger.json'));\n            options = {\n                definitions: options.definitions,\n                paths: options.paths,\n                tags: options.tags\n            };\n            // remove unused properties\n            delete options.definitions.ApiResponse;\n            // init schema\n            Object.keys(options.definitions).forEach(function (schemaName) {\n                schema = options.definitions[schemaName];\n                // init id\n                schema.properties.id = { type: 'string' };\n                schema['x-inheritList'] = [{ $ref: '#/definitions/JsonapiResource' }];\n            });\n            local.utility2.objectSetOverride(options, {\n                definitions: {\n                    // init Pet schema\n                    Pet: {\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            id: 'pet0',\n                            name: 'birdie',\n                            photoUrls: [],\n                            status: 'available',\n                            tags: [{ name: 'bird'}]\n                        }, {\n                            id: 'pet1',\n                            name: 'kittie',\n                            status: 'pending',\n                            photoUrls: [],\n                            tags: [{ name: 'cat'}]\n                        }, {\n                            id: 'pet2',\n                            name: 'doggie',\n                            photoUrls: [],\n                            status: 'sold',\n                            tags: [{ name: 'dog'}]\n                        }],\n                        _collectionName: 'SwmgPet'\n                    },\n                    // init Order schema\n                    Order: {\n                        // create index\n                        _collectionCreateIndexList: [{\n                            key: { status: 1 },\n                            name: 'status_1'\n                        }],\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            id: 'order0',\n                            status: 'available'\n                        }, {\n                            id: 'order1',\n                            status: 'pending'\n                        }, {\n                            id: 'order2',\n                            status: 'sold'\n                        }],\n                        _collectionName: 'SwmgOrder',\n                        properties: {\n                            petId: { type: 'string' }\n                        }\n                    },\n                    // init User schema\n                    User: {\n                        // create index\n                        _collectionCreateIndexList: [{\n                            key: { username: 1 },\n                            name: 'username_1',\n                            unique: true\n                        }],\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            email: 'john@doe.com',\n                            firstName: 'john',\n                            id: 'user0',\n                            lastName: 'doe',\n                            password: 'hello',\n                            phone: '1234-5678',\n                            username: 'john.doe'\n                        }, {\n                            email: 'jane@doe.com',\n                            firstName: 'jane',\n                            id: 'user1',\n                            lastName: 'doe',\n                            password: 'bye',\n                            phone: '8765-4321',\n                            username: 'jane.doe'\n                        }],\n                        _collectionName: 'SwmgUser'\n                    }\n                },\n                // init crud-api\n                paths: {\n                    '/pet/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgPet',\n                        _crudApi: 'pet',\n                        _schemaName: 'Pet',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['pet']\n                    } },\n                    '/store/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgOrder',\n                        _crudApi: 'store',\n                        _schemaName: 'Order',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['store']\n                    } },\n                    '/user/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgUser',\n                        _crudApi: 'user',\n                        _schemaName: 'User',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['user']\n                    } }\n                }\n            }, 4);\n            // transform petstore-api to swagger-mongodb's crud-api\n            Object.keys(options.paths).forEach(function (path) {\n                Object.keys(options.paths[path]).forEach(function (method) {\n                    methodPath = options.paths[path][method];\n                    // init methodPath._schemaName\n                    switch (path.split('/')[1]) {\n                    case 'pet':\n                        methodPath._schemaName = 'Pet';\n                        break;\n                    case 'store':\n                        methodPath._schemaName = 'Order';\n                        break;\n                    case 'user':\n                        methodPath._schemaName = 'User';\n                        break;\n                    }\n                    methodPath._collectionName = 'Swmg' + methodPath._schemaName;\n                    delete methodPath.produces;\n                    delete methodPath.responses;\n                    delete methodPath.security;\n                    // init jsonapi response\n                    local.utility2.objectSetDefault(methodPath, { responses: {\n                        200: {\n                            description: '200 ok - http://jsonapi.org/format' +\n                                '/#document-structure-top-level',\n                            schema: { $ref: '#/definitions/JsonapiResponse{{_schemaName}}' }\n                        }\n                    } }, 2);\n                    // init crudCreateMany / crudCreateOne / crudDeleteByIdOne / crudGetByIdOne\n                    switch (methodPath.operationId) {\n                    case 'addPet':\n                    case 'createUser':\n                    case 'placeOrder':\n                        methodPath.operationId = 'crudCreateOne';\n                        break;\n                    case 'createUsersWithArrayInput':\n                    case 'createUsersWithListInput':\n                        methodPath.operationId = 'crudCreateMany';\n                        break;\n                    case 'deleteOrder':\n                    case 'deletePet':\n                    case 'deleteUser':\n                        methodPath.operationId = 'crudDeleteByIdOne';\n                        break;\n                    case 'getOrderById':\n                    case 'getPetById':\n                    case 'getUserByName':\n                        methodPath.operationId = 'crudGetByIdOne';\n                        break;\n                    }\n                    // init id\n                    (methodPath.parameters || []).forEach(function (paramDef) {\n                        switch (paramDef.name) {\n                        case 'orderId':\n                        case 'petId':\n                            delete paramDef.format;\n                            paramDef.type = 'string';\n                            break;\n                        }\n                    });\n                });\n            });\n            local.swmg.apiUpdate(options);\n        }());\n        // init petstore-middleware\n        local.middleware.middlewareList.push(function (request, response, nextMiddleware) {\n            var modeNext, onNext, options;\n            modeNext = 0;\n            onNext = function (error, data) {\n                local.utility2.testTryCatch(function () {\n                    modeNext = error\n                        ? Infinity\n                        : modeNext + 1;\n                    switch (modeNext) {\n                    case 1:\n                        // init id\n                        ((request.swmgMethodPath && request.swmgMethodPath.parameters) || [\n                        ]).forEach(function (paramDef) {\n                            switch (paramDef.name) {\n                            case 'orderId':\n                            case 'petId':\n                                request.swmgParamDict.id = request.swmgParamDict[paramDef.name];\n                                break;\n                            }\n                        });\n                        // init options\n                        if (request.swmgMethodPath) {\n                            options = {\n                                collectionName: request.swmgMethodPath._collectionName,\n                                data: request.swmgParamDict,\n                                operationId: request.swmgMethodPath.operationId,\n                                paramDefList: request.swmgMethodPath.parameters,\n                                schemaName: request.swmgMethodPath._schemaName\n                            };\n                        }\n                        switch (request.swmgPathname) {\n                        // handle pet request\n                        case 'DELETE /pet/':\n                        case 'GET /pet/':\n                        case 'POST /pet':\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /pet/findByStatus':\n                            options.operationId = 'crudGetByQueryMany';\n                            options.data.fields = '{}';\n                            options.data.hint = '{}';\n                            options.data.limit = 100;\n                            options.data.query = '{\"status\":{\"$in\":' +\n                                JSON.stringify(options.data.status) + '}}';\n                            options.data.skip = 0;\n                            options.data.sort = '{\"_timeModified\":-1}';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /pet/findByTags':\n                            options.operationId = 'crudGetByQueryMany';\n                            options.data.fields = '{}';\n                            options.data.hint = '{}';\n                            options.data.limit = 100;\n                            options.data.query = '{\"status\":{\"$in\":' +\n                                JSON.stringify(options.data.tags) + '}}';\n                            options.data.skip = 0;\n                            options.data.sort = '{\"_timeModified\":-1}';\n                            options.paramDefList[0].default = 'bird,cat,dog';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /pet/':\n                            options.data.upsert = true;\n                            options.data.body = {\n                                id: options.data.id,\n                                name: options.data.name,\n                                status: options.data.status\n                            };\n                            options.operationId = 'crudUpdateOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /pet//':\n                            options.data.body = {\n                                additionalMetadata: options.data.additionalMetadata,\n                                file: options.data.file,\n                                filename:\n                                    request.swmgBodyParsed && request.swmgBodyParsed.filename,\n                                id: options.id\n                            };\n                            options.data.upsert = true;\n                            options.operationId = 'crudUpdateOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'PUT /pet':\n                            options.data.upsert = true;\n                            options.operationId = 'crudReplaceOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        // handle store request\n                        case 'DELETE /store/order/':\n                        case 'GET /store/order/':\n                        case 'POST /store/order':\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /store/inventory':\n                            options.data = { body: [{\n                                $group: { _id: '$status', total: { $sum: 1} }\n                            }, {\n                                $project: { _id: 0, status: '$_id', total: '$total' }\n                            }]};\n                            options.operationId = 'crudAggregateMany';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        // handle user request\n                        case 'DELETE /user/':\n                        case 'GET /user/':\n                        case 'POST /user/createWithArray':\n                        case 'POST /user/createWithList':\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /user':\n                            options.data.username = options.data.body.username;\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'PUT /user/':\n                            options.data.body.username = options.data.username;\n                            options.data.upsert = true;\n                            options.operationId = 'crudReplaceOne';\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        default:\n                            nextMiddleware();\n                        }\n                        break;\n                    default:\n                        // validate no error occurred\n                        local.utility2.assert(!error, error);\n                        // respond with json-object\n                        response.end(JSON.stringify(data));\n                    }\n                }, nextMiddleware);\n            };\n            onNext();\n        });\n        // run server-test\n        local.utility2.testRunServer(local);\n        break;\n    }\n}((function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code\n    (function () {\n        // init local\n        local = {};\n        // init js-env\n        local.modeJs = (function () {\n            try {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            } catch (errorCaughtNode) {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    'browser';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // export local\n        local.global.local = local;\n        // init swagger-mongodb\n        local.swmg = local.modeJs === 'browser'\n            ? window.swmg\n            : require('swagger-mongodb');\n        // import swmg.local\n        Object.keys(local.swmg.local).forEach(function (key) {\n            local[key] = local[key] || local.swmg.local[key];\n        });\n        // init utility2\n        local.utility2 = local.swmg.local.utility2;\n        // init onReady\n        local.utility2.onReadyInit();\n    }());\n    return local;\n}())));",
   "id": 295,
   "stars": 0,
   "errors": [
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2769,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2304,
    2584,
    2339,
    2339,
    2304,
    2339,
    2339,
    2339,
    2304,
    2339,
    2339,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 506,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "client.indexes.list({ $select: ['name', 'fields'] });",
   "id": 296,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = require('export-files')(__dirname, '**/*.json');",
   "id": 297,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export default new Store(hydrate({\n  modules: {\n    flights: {\n      state: {\n        selected: null,\n        in_flight: []\n      }\n    }\n  }\n}))\r\n\r\nfunction hydrate(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 298,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Ajv from 'ajv';\nimport betterAjvErrors from 'better-ajv-errors';\n// const Ajv = require('ajv');\n// const betterAjvErrors = require('better-ajv-errors');\n\n// You need to pass `jsonPointers: true`\nconst ajv = new Ajv({ jsonPointers: true });\n\n// Load schema and data\nconst schema = ...;\nconst data = ...;\n\nconst validate = ajv.compile(schema);\nconst valid = validate(data);\n\nif (!valid) {\n  const output = betterAjvErrors(schema, data, validate.errors);\n  console.log(output);\n}",
   "id": 299,
   "stars": 0,
   "errors": [
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "    import SmartFlatList from 'react-native-smart-refresh-flatlist'",
   "id": 300,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Prefer: const status=200",
   "id": 301,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import CanvasSlider from '@martsis/canvas-slider';",
   "id": 302,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import isEmpty from 'just-is-empty';\n isEmpty({a: 3, b: 5}) // false\n isEmpty([1, 2]) // false\n isEmpty(new Set([1, 2, 2])) // false\n isEmpty((new Map()).set('a', 2)) // false\n isEmpty({}) // true\n isEmpty([]) // true\n isEmpty(new Set()) // true\n isEmpty(new Map()) // true\n isEmpty('abc') // false\n isEmpty('') // true\n isEmpty(0) // true\n isEmpty(1) // true\n isEmpty(true) // true\n isEmpty(Symbol('abc')); // true\n isEmpty(//); // true\n isEmpty(new String('abc')); // false\n isEmpty(new String('')); // true\n isEmpty(new Boolean(true)); // true\n isEmpty(null) // true\n isEmpty(undefined) // true",
   "id": 303,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 21,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const fs = require('fs');\nconst readable = require('co-readable');\nconst co = require('co');\n\nconst read = readable(fs.createReadStream('bigfile'));\n\nco(function* () {\n  let buf;\n  let size = 0;\n  while (buf = yield read(1024)) {\n    console.log('read %d bytes', buf.length);\n    size += buf.length;\n  }\n  console.log('total read %d bytes', size);\n}).catch(function (err) {\n  console.error(err.stack);\n});",
   "id": 304,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'onap-ui-common/lib/style.css';",
   "id": 305,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var tou8 = require('utf8-to-uint8array')\nvar str = '💩'\nconsole.log(tou8(str))",
   "id": 306,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "grunt.initConfig({\n  winston: {\n    myLogger: {\n      options: {\n        hooks: [\n          function (logger) {\n            logger.on('logging', function (transport, level, msg, meta) {\n              // [msg] and [meta] have now been logged at [level] to [transport]\n            });\n          },\n          function (logger) {\n            logger.addColors({\n              foo: 'blue',\n              bar: 'green',\n              baz: 'yellow',\n              foobar: 'red'\n            });\n          }\n        ]\n      }\n    }\n  }\n});",
   "id": 307,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 22,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "     api.stuff.items.POST",
   "id": 308,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "pull(\n  pl.read(db, {live: true}),\n  //log data as it comes,\n  //because tail will keep the connection open\n  //so we'll never see the end otherwise.\n  pull.through(console.log),\n  //note, pull-streams will not drain unless something is\n  //pulling the data through, so we have to add drain\n  //even though the data we want is coming from pull.through()\n  pull.drain()\n)\r\n\r\nfunction pull(arg0, arg1, arg2) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 309,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require(\"gulp\");\nvar reveasy = require(\"gulp-rev-easy\");\n\ngulp.task(\"reveasy\", function (argument) {\n  gulp.src(\"test.html\")\n    .pipe(reveasy({\n        fileTypes:['img1'],\n        elementAttributes:{\n            img1:{\n                name:'img',\n                src:'data-src'\n            }\n        }))\n    .pipe(gulp.dest(\"./dist\"))\n})",
   "id": 310,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "> S.reduce (S.concat) ('abc') (Nothing)\n'abc'\n\n> S.reduce (S.concat) ('abc') (Just ('xyz'))\n'abcxyz'\r\n\r\nfunction Just(arg0) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 311,
   "stars": 0,
   "errors": [
    1109,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const defaults = {\n    passengers: {\n        adults: 1,\n        children: 0\n    }\n}",
   "id": 312,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "type ResolveResourceFn = (\n  resourceIri?: Iri,\n  context?: any,\n  info?: GraphQLResolveInfo\n) => ?ResolverOutput<any>",
   "id": 313,
   "stars": 0,
   "errors": [
    8008,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const StringToken = Any(\n  /^('[^'\\\\]*(?:\\\\.[^'\\\\]*)*')/,  // single-quoted\n  /^(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")/,  // double-quoted\n);\n\nconst Identifier = /^([a-zA-Z_$][a-zA-Z0-9_$]*)/;\nconst SumExpression = All(Identifier, '=', Identifier, '+', Identifier);\r\n\r\nfunction Any(arg0, arg1) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 314,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const assert = require('assert')\n\nfunction counter (value) {\n    switch (typeof value) {\n    case 'object': {\n            if (null) {\n                return 1\n            }\n            let sum = 0\n            if (Array.isArray(value)) {\n                for (const item of value) {\n                    sum += counter(item)\n                }\n            }\n            for (const name in value) {\n                for (const item of value) {\n                    sum += counter(value[name])\n                }\n            }\n        }\n    default:\n        return 1\n    }\n}\n\nassert.equal(counter({ a: 'x', b: [ 'y', 'z' ] }), 3, 'found three scalar values')",
   "id": 315,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 24,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Model = bookshelf.Model.extend({\n    casts: {\n        // Property 'locked' will be converted into a boolean value\n        locked: 'boolean',\n\n        age(dbValue) {\n            return parseInt(dbValue, 10);\n        },\n\n        notFourtyTwo() {\n            return 42;\n        }\n    }\n});\n\nModel.forge().fetch('id', 91)\n        .then( model => {\n            typeof model.get('locked'); // 'boolean'\n            model.get('notFourtyTwo');  // 42\n            typeof model.get('age'); // 'number'\n        });",
   "id": 316,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { access } = require(\"fs\");\r\n\r\naccess.list(options, callback);",
   "id": 317,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// shave and a haircut, two bits :D\ngrunt.task.run('beep:twobits');",
   "id": 318,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ModulusCombine = require('modulus-combine');\n\n// 4 digits before the decimal and keep 5 decimal digits (9 total)\nvar modulusCombine = new ModulusCombine(4, 10);\n\nmodulusCombine.compress(3.456789, 367.123123123);\n// -> 34567800000036712000\n\nmodulusCombine.deflate(34567800000036712000);\n// -> [ 3.45678, 367.12448 ]\n",
   "id": 319,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function (d) { return this.accessor(d) !== undefined && this.accessor(d) !== ''; }",
   "id": 320,
   "stars": 0,
   "errors": [
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// '../mock/index';\nconst item = {\n  id: 2,\n  wechatId: 'aaaaaa',\n  wechatName: '测试公众号',\n  appId: '1414',\n  type: 2,\n};\n\nlet start = 0;\nconst getList = () => {\n  const recordList = [];\n  for (let i = 0; i < 10; i++) {\n    const temp = { ...item };\n    Object.keys(temp).forEach((k) => {\n      temp[k] += start++;\n    });\n    recordList.push(temp);\n  }\n\n  return recordList;\n};\n\nexport const api = () => Promise.resolve({\n  totalRecord: 666,\n  recordList: getList(),\n});\n",
   "id": 321,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": ".orderBy(\"key1\", \"key2\");\n.orderBy({ \"key1\": \"asc\" }, { \"key2\": \"desc\" });\n.orderBy([\"key1\", \"key2\"]);\n.orderBy([{ \"key1\": \"asc\" }, { \"key2\": \"desc\" }]);\r\n\r\nfunction orderBy(arg0, arg1) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 322,
   "stars": 0,
   "errors": [
    1128,
    1128,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { handle } from 'kefir.handle';\n\nvar source = Kefir.sequentially(100, [0, 1, 2, 3]);\nvar result = source::handle({\n  value(emitter) { /* value handler */ }\n})",
   "id": 323,
   "stars": 0,
   "errors": [
    2304,
    1005,
    1134,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "sc ip 获取本机ip",
   "id": 324,
   "stars": 0,
   "errors": [
    1434,
    2304,
    1434,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import scroll from \"@threespot/freeze-scroll\";\n\n// Disable scrolling\nscroll.freeze();\n\n// Enable scrolling\nscroll.unfreeze();",
   "id": 325,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nconst run = async() => {\n  // 默认参数\n  const expire = {\n    expireTime: 24, // 过期时间 24h\n    unit: 'hour', // hour | minute | second | millisecond\n    auto: true, // 自动过期， 开启会定时清除24h以前的数据\n  }\n\n  // 使用默认过期时间 expire\n  await databee.expire();\n\n  // 自定义数据过期时间\n  await databee.expire(expire);\n}",
   "id": 326,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function getIssueEventsCollection(comicId, characters, creators, limit, modifiedSince, name, nameStartsWith, offset, orderBy, series, stories, callback)",
   "id": 327,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { platform } = require(\"os\")\r\n\r\ngit module Date --remote web-platform-tests",
   "id": 328,
   "stars": 0,
   "errors": [
    1434,
    2304,
    8006,
    1005,
    2304,
    1005,
    2304,
    2363,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "stachedown.renderStrict('The {{important_thing}} must be visible.', {});\n// throws Error",
   "id": 329,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const contentSourceKey = '' // your content source key\nconst user = 'enterprise_search' // username\nconst permissions = { permissions: ['permission2'] } // permissions to add to the user\n\nclient\n  .addUserPermissions(contentSourceKey, user, permissions)\n  .then(response => {\n    // handle response\n  })\n  .catch(error => {\n    // handle error\n  })",
   "id": 330,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//set ray position\nthis.ray.setOrigin(400, 300);\n//set ray direction (in radians)\nthis.ray.setAngle(2);\n//set ray direction (in degrees)\nthis.ray.setAngleDeg(90);\n//cast single ray and get closets intersection, hit mapped object and hit segment\nlet intersection = this.ray.cast();\nlet hitObject = intersection.object;\nlet hitSegment = intersection.segment;\n\n//cast rays in all directions (toward all mapped objects vertices / points)\nlet intersections = this.ray.castCircle();\n\n//set ray's cone angle (in radians)\nthis.ray.setCone(1);\n//set ray's cone angle (in degrees)\nthis.ray.setConeDeg(90);\n\n//cast rays in a cone\nlet intersections = this.ray.castCone();",
   "id": 331,
   "stars": 0,
   "errors": [
    2451,
    2451
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "public address: qLUHmrFGexxpyHwQphLpE1czZNFE5m1xmV\nprivate key (WIF): cNQKccYYQyGX9G9Qxq2DJev9jHygbZpb2UG7EvUapbtDx5XhkhYE\r\n\r\nfunction key(WIF) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 332,
   "stars": 0,
   "errors": [
    1128,
    2304,
    1128,
    2304,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "MOUNTED, // First render of the chart\nINTERVAL, // If you specify an update interval, it will be called every n seconds\nNEW_LOADER, // The loader function changed\nNEW_DOMAIN, // The outer domain changed,\nNEW_SUBDOMAIN, // The user zoomed to a new subdomain.\nUPDATE_POINTS_PER_SERIES, // The pointsPerSeries prop has changed",
   "id": 333,
   "stars": 0,
   "errors": [
    2304,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2304,
    2304,
    2304,
    2304,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const appCred = 'yourappcred';\nconst connectionURL = 'nodeConnectionURL';",
   "id": 334,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "api.convertToCoordinates(\"filled.count.soap\")\n  .then(function(response) {\n    console.log(\"[convertToCoordinates]\", response);\n  })\n  .catch(function(error) { // catch errors here\n    console.log(\"[code]\", error.code);\n    console.log(\"[message]\", error.message);\n  });",
   "id": 335,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Iterable from \"iterable.flow\"",
   "id": 336,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// $ExpectType void\nf(1);\n\n// $ExpectError\nf(\"one\");\r\n\r\nfunction f(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 337,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "db.status(function(obj){\n    console.log('Status', obj);\n});",
   "id": 338,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const book = new book();\n\nRx.Observable.combineLatest(\n  book.subject('chapter1'),\n  book.subject('chapter2'),\n)\n.subscribe(() => {\n  console.log('Two first chapters are ready');\n});\n\nbook.publish('chapter1');\nbook.publish('chapter2');",
   "id": 339,
   "stars": 0,
   "errors": [
    2448,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { inspect } = require(\"util\");\r\n\r\nabout:inspect",
   "id": 340,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.",
   "id": 341,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var token = etcd.get(\"key\", console.log);\ntoken.abort() // also aliased as token.cancel()\n\nconsole.log(\"Request is cancelled: \", token.isAborted());",
   "id": 342,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "htdocs/example/\n  |- example.js     <-- your 'example' script file",
   "id": 343,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1109,
    2363,
    2304,
    2304,
    1005,
    1005,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { parseSkinFile } = require('json2ableton-live-skin');\nconst skinFileBuffer = fs.readFileSync(__dirname + '/skinFile.ask');\nconst skin = parseSkinFile(skinFileBuffer);\nconsole.log(skin);\n// => {\"format\":\"live9\",\"ControlForeground\":[0,0,0,255],\"TextDisabled\":[90,90,9...\"ViewCheckControlDisabledOff\":[66,66,66,255]}",
   "id": 344,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { MentionsInput, Mention } from 'react-mentions'",
   "id": 345,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var morphology = require(\"ball-morphology\")\n\nrequire(\"get-pixels\")(\"bwimage.png\", function(err, data) {\n  var r = data.pick(-1, -1, 0)\n  \n  // ... do stuff ...\n})",
   "id": 346,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "web3.utils.decodeBech32Address(hrp, bech32Address)",
   "id": 347,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ObjectStorage = require('ibmcloud-objectstorage');\nvar config = {\n    provider: 'openstack',\n    useServiceCatalog: true,\n    useInternal: false,\n    keystoneAuthVersion: 'v3',\n    authUrl: '',\n    tenantId: '', //projectId from credentials\n    domainId: '',\n    username: '',\n    password: '',\n    region: '' //dallas or london region\n};\nvar os = new ObjectStorage(config, \"my-container\");",
   "id": 348,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Vue from 'vue'\nimport VuePagination from 'v-pc-pagination'\nVue.use(VuePagination)",
   "id": 349,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "is.number(42);\n=> true\n\nis.number(NaN);\n=> false\n\nis.not.number('42');\n=> true\n\nis.all.number('foo', 1);\n=> false\n\nis.any.number({}, 2);\n=> true\n\n// 'all' and 'any' interfaces can also take array parameter\nis.all.number([42, 'foo', 1]);\n=> false",
   "id": 350,
   "stars": 0,
   "errors": [
    2304,
    1128,
    2304,
    1128,
    2304,
    1128,
    2304,
    1128,
    2304,
    1128,
    2304,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "({\n  timelineContext: {\n    timelineWidth,\n    visibleTimeStart,\n    visibleTimeEnd,\n    canvasTimeStart,\n    canvasTimeEnd\n  },\n  headerContext: {\n    unit,\n    intervals: this.state.intervals\n  },\n  getRootProps: this.getRootProps,\n  getIntervalProps: this.getIntervalProps,\n  showPeriod,\n  //contextual data passed through headerData\n  data,\n})=> React.Node",
   "id": 351,
   "stars": 0,
   "errors": [
    2300,
    1359,
    2300,
    1005,
    1005,
    2300,
    1359,
    2300,
    1005,
    2300,
    1359,
    2300,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ParseServer         = require('parse-server').ParseServer;\nvar AzureStorageAdapter = require('parse-server-azure').FilesAdapter;\n\nvar account = 'YOUR_AZURE_STORAGE_ACCOUNT_NAME';\nvar container = 'YOUR_AZURE_STORAGE_CONTAINER_NAME';\nvar options = {\n    accessKey: 'YOUR_ACCESS_KEY',\n    directAccess: false // If set to true, files will be served by Azure Blob Storage directly\n}\n\nvar api = new ParseServer({\n  appId: process.env.APP_ID || 'myAppId',\n  serverURL: process.env.SERVER_URL || 'http://localhost:1337'\n  (...)\n  filesAdapter: new AzureStorageAdapter(account, container, options);\n});",
   "id": 352,
   "stars": 0,
   "errors": [
    2349,
    1109,
    1005,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const cache = yieldCache();\r\n\r\nfunction yieldCache() {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 353,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import TelephoneInput from 'react-tel-input-japan';\n\nReact.renderComponent(\n  <div>\n    <TelephoneInput\n      value={this.state.value}\n      onChange={(value, valid) => this.setState({ value, valid })}\n      placeholder={'input telephone number'}\n    />\n  </div>,\n  document.querySelector('#element'));",
   "id": 354,
   "stars": 0,
   "errors": [
    2304,
    17004,
    17004,
    2532,
    2532,
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Conditionally execute a function to continue configuration\n// condition: Boolean\n// whenTruthy: Function -> ChainedMap\n  // invoked when condition is truthy, given a single argument of the ChainedMap instance\n// whenFalsy: Optional Function -> ChainedMap\n  // invoked when condition is falsy, given a single argument of the ChainedMap instance\nwhen(condition, whenTruthy, whenFalsy)\r\n\r\nfunction when(condition, whenTruthy, whenFalsy) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 355,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Reset current visitor\nanalytics.reset()",
   "id": 356,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var tr = require(\"tr-064\");\nvar tr064 = new tr.TR064();\ntr064.initTR064Device(\"fritz.box\", 49000, function (err, device) {\n    if (!err) {\n       var wanip = device.services[\"urn:dslforum-org:service:WANIPConnection:1\"];\n       wanip.actions.GetInfo(function(err, result){\n               console.log(result);\n       });\n    }\n});\n",
   "id": 357,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<vue-googlemap-polygon :paths=\"paths\" :events=\"events\" @change=\"change\" editable ></vue-googlemap-polygon>",
   "id": 358,
   "stars": 0,
   "errors": [
    17004,
    1003,
    1003,
    1003,
    1146,
    1005,
    2304,
    1109,
    2304,
    2304,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Account = dynogels.define('Account', {\n  hashKey : 'email',\n\n  // add the timestamp attributes (updatedAt, createdAt)\n  timestamps : true,\n\n  schema : {\n    email   : Joi.string().email(),\n    name    : Joi.string(),\n    age     : Joi.number(),\n    roles   : dynogels.types.stringSet(),\n    settings : {\n      nickname      : Joi.string(),\n      acceptedTerms : Joi.boolean().default(false)\n    }\n  }\n});",
   "id": 359,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const strava = require('strava-v3');\nstrava.athlete.get({'access_token':'abcde'},function(err,payload,limits) {\n    //do something with your payload, track rate limits\n    console.log(limits);\n    /*\n    output:\n    {\n       shortTermUsage: 3,\n       shortTermLimit: 600,\n       longTermUsage: 12,\n       longTermLimit: 30000\n    }\n    */\n});",
   "id": 360,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "$scope.$on('auth:account-destroy-error', function(ev, reason) {\n  alert(\"Account deletion failed: \" + reason.errors[0]);\n});\r\n\r\nfunction alert(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 361,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const logging = require(\"console-logging\");\nconst logger = logging.logger;",
   "id": 362,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { MatomoService } from \"bim-gdpr/src/services/matomo/matomo\"\n\n// Create services :\nconst matomo = bGDPR.createService( new MatomoService('//matomo.php') )\nmatomo.setWeight( -1 ) // Place matomo first.\n\n// Then initialize\nbGDPR\n    .setTemplate( new DefaultTemplate() ) // Initialize the view\n    .init() // Initialize the core",
   "id": 363,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require('gulp');\nvar concatCss = require('gulp-concat-css');\n\ngulp.task('default', function () {\n  return gulp.src('assets/**/*.css')\n    .pipe(concatCss(\"styles/bundle.css\"))\n    .pipe(gulp.dest('out/'));\n});",
   "id": 364,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const ALMA_APIKEY=const l7xxabcdefghijklmnopqrstuvwxyz node test.js ",
   "id": 365,
   "stars": 0,
   "errors": [
    1109,
    1005,
    1005,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const M5Stack = require(\"m5stackjs\");\n\nlet m5 = new M5Stack('OBNIZ_ID_HERE');\n\nm5.onconnect = async function () {\n  m5.buttonA.onchange = (state) => {\n      console.log(state);\n  }\n  \n  const servo = m5.wired(\"ServoMotor\", {signal:2});\n  servo.angle(90);\n\n};\n",
   "id": 366,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// TodoLib.js\nimport memoize from 'memoize-one';\nimport { createStatedLib } from '@stated-library/base';\nimport createTodo from './createTodo';\nimport fetchTodosFromCloud from './fetchTodosFromCloud';\n\nexport default function createTodoLib() {\n\n  const getCompletedTodos = memoize(\n    todos => todos.filter(todo => todo.completed)\n  );\n\n  const getActiveTodos = memoize(\n    todos => todos.filter(todo => !todo.completed)\n  );\n\n  function deriveState(rawState) {\n    return {\n      ...rawState,\n      get activeTodos() {\n        return getActiveTodos(rawState.todos);\n      },\n      get completedTodos() {\n        return getCompletedTodos(rawState.todos);\n      },\n    }\n  }\n\n  return createStatedLib(\n    { todos: [] },\n    base => ({\n\n      addTodo(text) {\n        base.updateState({\n            todos: base.state.todos.concat(makeTodo(text)),\n          }, 'ADD_TODO');\n      },\n\n      toggleTodo(id) {\n        base.updateState({\n          todos: base.state.todos.map(todo =>\n            todo.id === id ? { ...todo, completed: !todo.completed } : todo)\n        }, 'TOGGLE_TODO');\n      },\n\n      async fetchTodos() {\n        base.updateState({ isFetching: true }, 'FETCH_TODOS_START');\n        const newTodos = await fetchTodosFromCloud();\n        base.updateState({\n          todos: base.state.todos.concat(newTodos),\n          isFetching: false,\n        }, 'FETCH_TODOS_COMPLETE');\n      },\n    }),\n  { deriveState });\n\r\n    function makeTodo(text) {\r\n        throw new Error('Function not implemented.');\r\n    }\r\n",
   "id": 367,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 49,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const fs = require('fs');\nconst { generate } = require('gas-entry-generator');\n\nconst fooSource = fs.readFileSync('foo.js', {encoding: 'utf8'});\nconst options = {\n  comment: true,\n  autoGlobalExports: true // Enable to detect exports.* to generate entry point functions.\n};\nconst output = generate(fooSource, options);\nconsole.log(output.entryPointFunctions);\nconsole.log('-----');\nconsole.log(output.globalAssignments);",
   "id": 368,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Config = require('webpack-chain');\n\nconst config = new Config();",
   "id": 369,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n// your-component.js\nimport Dummy from 'innoark-npm2'\n\n...\n<Dummy className=\"dummy\" />\n...\n\n// your-component.css\n.Dummy {\n  color: white;\n  background-color: purple;\n}\n",
   "id": 370,
   "stars": 0,
   "errors": [
    1128,
    17004,
    1128,
    1128,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const trusona = new trusona(token, secret)\n\nconst document = await trusona.getIdentityDocument(document.id)\n\ndocument.verificationStatus // UNVERIFIED, UNVERIFIABLE, VERIFIED, or FAILED\r\n\r\nexport { }\r\n",
   "id": 371,
   "stars": 0,
   "errors": [
    2448,
    2304,
    2304,
    1378,
    2448
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "async MergeIntoMKV(downloadedFile = LocalVideoObjectSchema,\n                   srt_subtitles = Array(SubtitleMeta),\n                   selectedFile = VideoObjectSchema)\r\n\r\nfunction MergeIntoMKV(arg0, arg1, arg2) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 372,
   "stars": 0,
   "errors": [
    1434,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { text } = require(\"stream/consumers\")\r\n\r\njamr -w ./model.json -i ./text-file.txt -o ./where-ever.txt -n 5 -s 5000",
   "id": 373,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1003,
    2304,
    2304,
    1003,
    2363,
    2304,
    2304,
    1003,
    2304,
    2304,
    2304,
    1005,
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export default {\n  modules: [\n    'nuxt-feed-yandex-market'\n  ],\n  yandexMarket: {\n    data: {}, // JSON with data or a function that returns the JSON \n    path: '/yandex-market.xml', // The route to your xml file\n    validate: true,\n    cacheTime: 1000 * 3600 * 24 \n  }\n}",
   "id": 374,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "if ('scrollRestoration' in window.history) {\n  window.history.scrollRestoration = 'manual';\n}",
   "id": 375,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Counter = () => {\n  const [count, setCount] = useState(0)\n  return <div>\n    <button onClick={() => setCount(count + 1)} >Increment</button>\n    <span>count: {count}</span>\n  </div>\n}\r\n\r\nfunction useState(arg0) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 376,
   "stars": 0,
   "errors": [
    2461,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "removeRow(\n  change: Change,\n  options: {\n    at?: number,\n    normalize?: boolean,\n  }\n): Change\r\n\r\nfunction removeRow(change, Change, options, arg3) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 377,
   "stars": 0,
   "errors": [
    2304,
    1005,
    2304,
    2304,
    1005,
    2693,
    2693,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// On GET /statistics\n\r\nconst { url } = require(\"inspector\");\r\n\r\n// Get the top score\nif (URL === '/top-score') {\n    dpd.scores.get({$limit: 1, $sort: {score: -1}}, function(result) {\n    result(result[0]);\n    });\n}",
   "id": 378,
   "stars": 0,
   "errors": [
    2367,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "                                                                                      \n    am([34, 56, 78]).forEach(function (value, i) {\n           console.log(value, i);\n    })\n    \n    .log()  // 34 0, 56 1, 78 2, [34, 56, 78]\n    \n    .error(err=>{      \n              // handle errors at end of chain\n      \n    })\n\r\nfunction am(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n  ",
   "id": 379,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "AuthModule.forRoot({\n  domain: 'YOUR_AUTH0_DOMAIN',\n  clientId: 'YOUR_AUTH0_CLIENT_ID',\n  organization: 'YOUR_ORGANIZATION_ID'\n}),",
   "id": 380,
   "stars": 0,
   "errors": [
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const InsertHtmlWebpackPlugin = require('insert-html-webpack-plugin')\n\nnew InsertHtmlWebpackPlugin(\n  // 第一个参数，必填，配置文件列表\n  {\n    js: [\n      // 可以配置多个，按顺序依次插入\n      { path: 'a.js' }, // path属性表示使用script内联方式\n      { path: 'b.js' },\n      { url: 'https://c.com/c.js' } // url属性表示使用script外部引入方式\n    ],\n    css: [\n      { path: 'd.css' }, // path属性表示使用style内联方式\n      { url: 'https://e.com/e.css' } // url属性表示使用link外部引入方式\n    ]\n  },\n  // 第二个参数，可选，配置插入位置，默认值如下\n  {\n    jsNode: '<body>', // 指定js要插入的节点位置\n    jsSide: 'after', // js要插入在节点位置处的前面还是后面，可选值'after'、'before'\n    cssNode: '</title>', // 指定css要插入的节点位置\n    cssSide: 'after', // css要插入在节点位置处的前面还是��面，可选值'after'、'before'\n  }\n)",
   "id": 381,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\"../../whatwg-fetch/fetch.js\"\r\nconst path = require(\"path\")\r\n\r\n: path.join( // this is the third-party dependency in the lrnwebcomponents\n  __dirname,\n  \"../node_modules/whatwg-fetch/fetch.js\" // this is where it lives in node_modules\n)",
   "id": 382,
   "stars": 0,
   "errors": [
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { enableProdMode, NgZone } from '@angular/core';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { Router } from '@angular/router';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport singleSpaAngular from 'single-spa-angular';\nimport { singleSpaPropsSubject } from './single-spa/single-spa-props';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst lifecycles = singleSpaAngular({\n  bootstrapFunction: singleSpaProps => {\n    singleSpaPropsSubject.next(singleSpaProps);\n    return platformBrowserDynamic().bootstrapModule(AppModule);\n  },\n  template: '<app-root />',\n  Router,\n  NgZone,\n  domElementGetter: () => document.getElementById('angular-app')\n});\n\nexport const bootstrap = lifecycles.bootstrap;\nexport const mount = lifecycles.mount;\nexport const unmount = lifecycles.unmount;",
   "id": 383,
   "stars": 0,
   "errors": [
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  }
 ],
 "After Custom Fixes": [
  {
   "code": "let $PS = require('ps-ajaxqueue');\n\n$PS.ajaxQueue({\n    url: \"https://api.ipify.org/?format=jsonp\",\n    dataType: \"jsonp\",\n    clearQueueDelay: null\n}).done(function (data) {\n    console.log(data);\n});",
   "id": 0,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var style\nstyle={{\nvar maxWidth = \"Your Value Here\"\n    standaloneLayout:{display:'flex', maxWidth:'fit-content'}\n}}",
   "id": 1,
   "stars": 0,
   "errors": [
    1136,
    2695,
    1005,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var express   = require(\"express\")\nvar nofavicon = require(\"express-no-favicons\")\nvar app       = express();\n\napp.use(nofavicon());\n\napp.listen(process.env.PORT)",
   "id": 2,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { poll, ORDER_CREATED } = require('lib-events');\n\nasync function processMessage({ type, source, id, checksum }, ack) {\n  if (type === ORDER_CREATED) {\n    console.log(`${source} created an order!`);\n  }\n\n  await ack()\n}\n\nexports.process = async function () {\n  await poll(processMessage, {\n    maxNumberOfMessages: 10,\n    maxIterations: 10\n  });\n}",
   "id": 3,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var kmix = \"Your Value Here\";\n // returns a data object with the name of the control and the raw MIDI message\nkmix.on('any', (data) => {\n    console.log('control-name', data.control, 'control-data', data.raw)\n    // data.control example: 'fader-1'\n    // data.raw example: [176,1,67]\n    switch(data.control){\n        case 'fader-1':\n            console.log('fader-1', data.raw)\n            break;\n        case 'button-vu':\n            console.log('button-vu', data.raw)\n            break;\n        case 'button-vu:off':\n            console.log('button-vu:off', data.raw)\n            break;\n        default:\n            console.log('any other data', data)\n    }\n})",
   "id": 4,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Schema from '@jalik/schema';\n\nexport const ExampleSchema = new Schema({\n  time: {\n    type: 'string',\n    // The time must be like 'HH:mm'\n    pattern: '^\\\\d{1,2}:\\\\d{1,2}$'\n  },\n  password: {\n    type: 'string',\n    // The password must contain alphanumeric and special characters\n    pattern: /^[a-zA-Z0-9_&#@$*%?!]+$/\n  }\n});",
   "id": 5,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const sander = require('@marionebl/sander');\nconst Tesseract = require('tesseract.js');\nconst {langPath} = require('@tessdata/eng');\n\nconst image = sander.readFile('some-image.png');\nconst tesseract = Tesseract.create({langPath});\n\nvar buffer = \"Your Value Here\";\n\ntesseract.recognize(buffer, {\n  lang: 'eng'\n});",
   "id": 6,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const sagaABC = function* sagaABC() {\n  var take = \"Your Value Here\";\n  yield take('ACTION_A');\n  // Do some I/O here.\n  yield put(actionB());\n  yield put(actionC());\n};\n\nconst sagaDE = function* sagaDE() {\n  yield take('ACTION_D');\n  yield put(actionE());\n};",
   "id": 7,
   "stars": 0,
   "errors": [
    2349,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "`external: [...Object.keys(pkg.dependencies || {}), ...Object.keys(pkg.peerDependencies || {})],`",
   "id": 8,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mkpdf = require('mkpdf')\n\nmkpdf().from('/path/to/document.md').to('/path/to/document.pdf', function () {\n    console.log('Done')\n})\n\n// Or using streams\nvar fs = require('fs')\n\nfs.createReadStream('/path/to/document.md')\n    .pipe(mkpdf())\n    .pipe(fs.createWriteStream('/path/to/document.pdf'))",
   "id": 9,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import sinon from 'sinon';\nimport { expect } from 'chai';",
   "id": 10,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Cacher = require(\"softweb-cacher\");",
   "id": 11,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nvar Register = \"Your Value Here\"\n- Register providers inside the your start/app.js file.\n```js\nconst providers = [\n    ...\n        '@faisal50x/ray/providers/RayProvider',\n    ...\n]",
   "id": 12,
   "stars": 0,
   "errors": [
    2362,
    1005,
    1005,
    1005,
    1005,
    1005,
    1005,
    2349,
    1161,
    1160
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = ({name, source, places, index, count, filesCount, errorsCount}) => {\n    return '';\n};",
   "id": 13,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var analytics = \"Your Value Here\"\n// Get the current state of analytics\nanalytics.getState()\n\n// Get a subpath of state\nanalytics.getState('context.offline')",
   "id": 14,
   "stars": 0,
   "errors": [
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const isChromeAgent = (context) => {\n  return context.req.headers['User-Agent'].indexOf('Chrome') !== -1;\n}\n\nvar app = \"Your Value Here\";\n\napp.useIf(isChromeAgent, async (context) => {\n  context.res.headers['Content-Type'] = 'text/html';\n});\n\n// now if a route was called from Chrome browser, the response will be set to HTML COntent-Type",
   "id": 15,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var x11 = require('x11-hash-js');\n\nconsole.log(x11.digest('The great experiment continues.'));\n// -> '4da3b7c5ff698c6546564ebc72204f31885cd87b75b2b3ca5a93b5d75db85b8c'",
   "id": 16,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var wtsqs = \"Your Value Here\"\nconst myMessage = await wtsqs.popOne()\n// The message no longer exists in queue\nconsole.log(myMessage)\n// output:\n{\n  id: 'messageId',\n  receiptHandle: 'messageReceiptHandle'\n  md5: 'messageMD5',\n  body: { a: 1 }\n}",
   "id": 17,
   "stars": 0,
   "errors": [
    2339,
    2695,
    2304,
    1005,
    2695,
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n\n var Issues = \"Your Value Here\"\n## Issues\nvar If = \"Your Value Here\"\n var you = \"Your Value Here\"\n var have = \"Your Value Here\"\n var questions = \"Your Value Here\"\n var or = \"Your Value Here\"\n var issues = \"Your Value Here\"\n var feel = \"Your Value Here\"\n var free = \"Your Value Here\"\n var to = \"Your Value Here\"\n var create = \"Your Value Here\"\n var an = \"Your Value Here\"\nIf you have questions or issues feel free to create new an topic in [issues](https://github.com/Smip/ngx-materialize/issues).\n\n## License\n\nLicensed under [MIT](https://opensource.org/licenses/MIT).",
   "id": 18,
   "stars": 0,
   "errors": [
    1127,
    1127,
    1005,
    1434,
    1434,
    1434,
    1434,
    1434,
    1434,
    1434,
    1434,
    1434,
    1434,
    2351,
    1005,
    2304,
    2349,
    2304,
    1005,
    1127,
    1127,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import LazyBackgroundSizes from 'vue-lazy-background-sizes';\n\nconst MyLazyBackground = {\n    mixins: [LazyBackgroundSizes],\n    data() {\n        return {\n            screens: ['762', '1200'],\n        }\n    },\n}\n\nvar Vue = \"Your Value Here\";\n\nVue.component('my-lazy-background', MyLazyBackground);",
   "id": 19,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var backand = \"Your Value Here\";\nbackand.initiate({\n  appName: 'APP_NAME',\n  signUpToken: 'SIGNUP_TOKEN',\n  anonymousToken: 'ANONYMOUS_TOKEN'\n});\n\nbackand.service.useAnonymousAuth()\n  .then(() => {\n      return backand.service.getList('USERS');\n  })\n  .then((response) => {\n      console.log(response);\n  })\n  .catch(function(error){\n      console.log(error);\n  });\n",
   "id": 20,
   "stars": 0,
   "errors": [
    2339,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mp = \"Your Value Here\";\nmp.people.saveJson(\"example.json\");",
   "id": 21,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var Install = \"Your Value Here\"\n var package = \"Your Value Here\"\n# Install package\nvar yarn = \"Your Value Here\"\n var add = \"Your Value Here\"\nyarn add @boldgrid/components\n\n var Import = \"Your Value Here\"\n var CSS = \"Your Value Here\"\n var files = \"Your Value Here\"\n var from = \"Your Value Here\"\n var dist = \"Your Value Here\"\n var folder = \"Your Value Here\"\n# Import CSS files from dist folder (SASS).\n@import '@boldgrid/components/dist/css/components.min.css';",
   "id": 22,
   "stars": 0,
   "errors": [
    1127,
    1005,
    1434,
    1434,
    1146,
    1161,
    1127,
    1005,
    1434,
    1434,
    1434,
    1434,
    2349,
    2304,
    1003,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var WWWWWW = \"Your Value Here\"\nWWWWWW||WWWWWW\n var W = \"Your Value Here\"\n var OO = \"Your Value Here\"\n W W W||W W W\n      ||\nvar __________ = \"Your Value Here\"\n    ( OO )__________\n     /  |           \\\n    /o o|    MIT     \\\n    \\___/||_||__||_|| *\n         || ||  || ||\n        _||_|| _||_||\n       (__|__|(__|__|",
   "id": 23,
   "stars": 0,
   "errors": [
    1434,
    1434,
    1005,
    1109,
    2349,
    1005,
    2362,
    1161,
    2304,
    1005,
    2304,
    2304,
    1127,
    1127,
    2304,
    1109,
    2304,
    2304,
    2304,
    1109,
    1109,
    1109,
    1109,
    1109,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport logo from './logo.png'; // Tell Webpack this JS file uses this image\n\nconsole.log(logo); // /logo.84287d09.png\n\nfunction Header() {\n  // Import result is the URL of your image\n  return <img src={logo} alt=\"Logo\" />;\n}\n\nexport default Header;",
   "id": 24,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<html>\n  ...\n  <head>\n    ...\n    <script src=\"angular.js\"></script>\n    <script src=\"bower_components/ngSnakeCamel/ng-snake-camel.js\"></script>\n    ...\n  </head>\n  ...\n</html>",
   "id": 25,
   "stars": 0,
   "errors": [
    17004,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const mongoose = require('mongoose');\n\nvar connectionOptions = \"Your Value Here\";\n\nmongoose.connect(connectionOptions);\n\nvar Keyv = \"Your Value Here\";\n\nconst keyv = new Keyv({\n  store: new KeyvMongoDB({ mongooseConnection: mongoose.connection })\n});",
   "id": 26,
   "stars": 0,
   "errors": [
    2351,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\";\ngrunt.initConfig({\n  checkFileSize: {\n    options: {\n      separator: ': ',\n      punctuation: ' !!!',\n    },\n    files: {\n      'dest/default_options': ['src/testing', 'src/123'],\n    },\n  },\n});",
   "id": 27,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const removeEmptyLines = require(\"remove-blank-lines\");\n\nconsole.log(removeEmptyLines(\n    `Hello\n\nWorld!\n\n\n  **   **\n\n  **   **\n\n     -\n\n*         *\n\n *********`\n));\n// =>\n// Hello\n// World!\n//   **   **\n//   **   **\n//      -\n// *         *\n//  *********",
   "id": 28,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var failpoints = require('failpoints').create();\n\n// setup failpoints\n\nfailpoints.setAll(true);\nfailpoints.setAll({probability: 0.5});\nfailpoints.setAll(false);\n",
   "id": 29,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var GraphQLValidatedString = \"Your Value Here\";\nconst HumanName = new GraphQLValidatedString({\n  name: 'HumanName'\n}).regex(/([a-zA-Z]{3,30}\\s*)+/);\n\nAssert.throws(()=> {\n  HumanName.parseValue('aa');\n}, /does not match/);",
   "id": 30,
   "stars": 0,
   "errors": [
    2351,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import set from \"just-safe-set\";\n\nconst obj1 = {};\nset(obj1, \"a.aa.aaa\", 4); // true\nobj1; // {a: {aa: {aaa: 4}}}\n\nconst obj2 = {};\nvar a = \"Your Value Here\";\nvar aa = \"Your Value Here\";\nvar aaa = \"Your Value Here\";\nset(obj2, [a, aa, aaa], 4); // true\nobj2; // {a: {aa: {aaa: 4}}}\n\nconst obj3 = { a: { aa: { aaa: 2 } } };\nset(obj3, \"a.aa.aaa\", 3); // true\nobj3; // {a: {aa: {aaa: 3}}}\n\n// don't clobber existing\nconst obj4 = { a: { aa: { aaa: 2 } } };\nset(obj4, \"a.aa\", { bbb: 7 }); // false\n\nconst obj5 = { a: {} };\nconst sym = Symbol();\nset(obj5.a, sym, 7); // true\nobj5; // {a: {Symbol(): 7}}",
   "id": 31,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var difficulty = \"Your Value Here\"\nid: '0000-0000-0000-0000',\n var clearRate = \"Your Value Here\"\ndifficulty: [..],\n var title = \"Your Value Here\"\nclearRate: number,\n var img = \"Your Value Here\"\ntitle: 'Name',\n var thumbnailImg = \"Your Value Here\"\nimg: 'Url',\n var gameStyle = \"Your Value Here\"\nthumbnailImg: 'Url',\n var createdAt = \"Your Value Here\"\ngameStyle: [..],\n var Timestamp = \"Your Value Here\"\n var tag = \"Your Value Here\"\ncreatedAt: Timestamp,\n var stared = \"Your Value Here\"\ntag: [..],\n var played = \"Your Value Here\"\nstared: number,\n var shared = \"Your Value Here\"\nplayed: number,\n var clears = \"Your Value Here\"\nshared: number,\n var attempts = \"Your Value Here\"\nclears: number,\n var maker = \"Your Value Here\"\nattempts: number,\nmaker: \nvar _ = \"Your Value Here\"\n  \\_ login: 'Nintendo ID',\n  \\_ faceImg: 'Url',\n  \\_ flag: 'Country',\n  \\_ name: 'Name'",
   "id": 32,
   "stars": 0,
   "errors": [
    2695,
    1109,
    2695,
    1109,
    1003,
    1003,
    1109,
    2693,
    2695,
    1109,
    2695,
    1109,
    2695,
    1109,
    2695,
    1109,
    2695,
    1109,
    1003,
    1003,
    1109,
    2695,
    1109,
    2695,
    1109,
    1003,
    1003,
    1109,
    2693,
    2695,
    1109,
    2693,
    2695,
    1109,
    2693,
    2695,
    1109,
    2693,
    2695,
    1109,
    2693,
    2695,
    1005,
    1127,
    1434,
    2695,
    1127,
    1434,
    2695,
    1127,
    1434,
    2695,
    1127,
    1434
   ],
   "hasCode": true,
   "nondeletedLines": 35,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var node = \"Your Value Here\"\n var scripts = \"Your Value Here\"\nnode scripts/integrate.js --name acme --openapi https://api.acme.com/openapi.json\n# or\nnode scripts/integrate.js --name acme_rss --rss https://acme.com/rss.xml",
   "id": 33,
   "stars": 0,
   "errors": [
    1434,
    2362,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1127,
    1005,
    2304,
    1434,
    2362,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import * as PIXI from 'pixi.js';\nimport {Spine} from 'pixi-spine';\n\nconst app = new PIXI.Application();\ndocument.body.appendChild(app.view);\n\napp.loader\n    .add('spineCharacter', 'spine-data-1/HERO.json')\n    .load(function (loader, resources) {\n        const animation = new Spine(resources.spineCharacter.spineData);\n\n        // add the animation to the scene and render...\n        app.stage.addChild(animation);\n        \n        if (animation.state.hasAnimation('run')) {\n            // run forever, little boy!\n            animation.state.setAnimation(0, 'run', true);\n            // dont run too fast\n            animation.state.timeScale = 0.1;\n        }\n        \n        app.start();\n    });",
   "id": 34,
   "stars": 0,
   "errors": [
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Rasha = \"Your Value Here\";\nRasha.thumbprint({ jwk: jwk }).then(function (thumbprint) {\n  console.log(thumbprint);\n});",
   "id": 35,
   "stars": 0,
   "errors": [
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "let cc = {\n  \"sn\":3788106,\n   \"an\":[\"2c4b523bfa2b54a3c2cfec376336ef6e\",\"dc1edbe0708e179e84e6ee0185849811\",\"1b32715dea8bd66c6136f2bb226a9783\",\"cf4a451a23d256299f306e0170632e9c\",\"7bee1781698bfd26a40d384e3e9ba233\",\"57a59cc3fe0a9e2b0ef55d9ee7d83aa0\",\"8741aba5f9ada55cd4cc7ad9ff8cfc5e\",\"27a940f79e5bb895218dc6fee619439a\",\"6d7611020258dc07544255aecb05f94e\",\"8fd75c4a543107c762473cb5c6814b25\",\"b8fb577d62bee5e47622084deec2dc72\",\"2dddefde6b2da5f85d8a50af78a8c6ef\",\"0152c280f2b1df572e679edc5bf5aae4\",\"213bce1b1e301b90e82189ba0a908e89\",\"2f35eda22494903e5c680856304610b1\",\"64bdfe44432444514e8234fa115b9352\",\"6943424a235be73f86a065fe97756b03\",\"e037963736d439d4bc72efa49aa4f2e5\",\"da555eaad78e610e5beb51ec5d051781\",\"47849f44ee8ee1d0d41782ca21dacdc3\",\"4ec1fea2c736e8e82e1836cef7512cdb\",\"de9ec5865fa289a09059ab8a87e73ac4\",\"fb5fca0a5196333023043f080a6fb666\",\"c8df8adefe8b25103358df30491c5409\",\"dae2b572756a596fa8c97f55e8712854\"]\n}\n\nlet data = {\n  \"coin\" : cc,\n  \"paydata\" : \"email, stack, 100, 0,0,0,0,0, alex.skywallet.cc, Car payment,, ready\\nemail, stack, 150, 0,0,0,0,0, john.skywallet.cc, My debt,, ready\\nemail, stack, 21150, 0,0,0,0,0, roller.skywallet.cc, Chargeback,, ready\",\n  \"id\": \"f2494e21fcd4e54a5acd7be6f2be6e50\"\n\n}\nvar r = \"Your Value Here\"\nlet c = r.apiBillPay(data, () => {}).then(response => {\n  if (response.code != RaidaJS.ERR_NO_ERROR) {\n    console.log(\"Billpay sent\")\n    return\n  }\n\n  if (response.code == RaidaJS.ERR_SENT_PARTIALLY) {\n    console.log(\"Only \" + response.amount + \" CloudCoins sent. Try again later using the same ID: \" + response.id)\n    console.log(\"Recipients NOT sent:\")\n    for (let i = 0; i < response.recipients; i++) {\n      if (response.recipients[i].status == \"ready\")\n        console.log(response.recipients[i].address + \",\")\n    }\n  }\n}",
   "id": 36,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 24,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var _ = \"Your Value Here\";\n_.mixin({awaitEach});",
   "id": 37,
   "stars": 0,
   "errors": [
    2339,
    18004
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nvar modal = \"Your Value Here\";\nmodal.modal; // the modal element\nmodal.openButtons; // an array of open buttons\nmodal.closeButtons; // an array of close buttons\nmodal.isOpen; // boolean indicating if the modal is currently open\n",
   "id": 38,
   "stars": 0,
   "errors": [
    2339,
    2339,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var web3 = \"Your Value Here\";\nvar coinbase = web3.pi.coinbase;\nvar balance = web3.pi.getBalance(coinbase);",
   "id": 39,
   "stars": 0,
   "errors": [
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// App.js\nimport React from 'react'\nimport { createRouter, Link } from 'react-context-router'\n\nconst NotFound = () => <div>Not Found</div>\n\nconst Nav = () => (\n  <nav>\n    <Link href='/' children='Home' />\n    <Link href='/posts/1' children='First Post' />\n  </nav>\n)\n\nclass App extends React.Component {\n  render () {\n    const { route } = this.props\n    const Comp = route.component || NotFound\n\n    return (\n      <div>\n        <Nav />\n        <Comp />\n      </div>\n    )\n  }\n}\n\nexport default createRouter(App)",
   "id": 40,
   "stars": 0,
   "errors": [
    17004,
    17004,
    17004,
    17004,
    2339,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 22,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { Scrollbars } from 'react-custom-scrollbars';\n\nvar Component = \"Your Value Here\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Scrollbars style={{ width: 500, height: 300 }}>\n        <p>Some great content...</p>\n      </Scrollbars>\n    );\n  }\n}",
   "id": 41,
   "stars": 0,
   "errors": [
    2507,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { TagInputModule } from 'ngx-chips';\n\nTagInputModule.withDefaults({\n    tagInput: {\n        placeholder: 'Add a new tag',\n        // add here other default values for tag-input\n    },\n    dropdown: {\n        displayBy: 'my-display-value',\n        // add here other default values for tag-input-dropdown\n    }\n});",
   "id": 42,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const axios = require('axios').default;\n\n// axios.<method> will now provide autocomplete and parameter typings",
   "id": 43,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nimport {SectionsContainer, Section, Header, Footer} from 'react-fullpage';\n\n// => in the render() method of your app\nreturn (\n  <Header>\n    <a href=\"#sectionOne\" className=\"opa\">Section One</a>\n    <a href=\"#sectionTwo\">Section Two</a>\n    <a href=\"#sectionThree\">Section Three</a>\n  </Header>\n  <Footer>\n    <a href=\"\" className=\"opa\">Dcoumentation</a>\n    <a href=\"\">Example Source</a>\n    <a href=\"\">About</a>\n  </Footer>\n  <SectionsContainer {...options}>\n    <Section>Page 1</Section>\n    <Section>Page 2</Section>\n    <Section>Page 3</Section>\n  </SectionsContainer>\n);\n",
   "id": 44,
   "stars": 0,
   "errors": [
    2657
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var 但是 = \"Your Value Here\"\nvar 入口全都从这个app = \"Your Value Here\"\n* 但是��要引入app.js这个文件，因为所有的**入口全都从这个app.js进入**",
   "id": 45,
   "stars": 0,
   "errors": [
    2362,
    2363,
    1127,
    1127,
    1005,
    1127,
    1005,
    2339,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "@Store({\n  endpoint: 'system',\n  mutations: {\n    login: {\n      type: MutationType.POST,\n      path: 'security/login'\n    }\n  }\n})",
   "id": 46,
   "stars": 0,
   "errors": [
    1146
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var metrics = \"Your Value Here\";\nmetrics.mexists( 'net.bytesRX' );\n// returns true\n\nmetrics.mexists( 'cpu.utilization' );\n// returns false",
   "id": 47,
   "stars": 0,
   "errors": [
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {observer} from 'mobx-react';\nimport {Form} from 'mobx-antd-form';\n\nconst FormItem = Form.Item;\nconst FormField = Form.Field;\n\nvar React = \"Your Value Here\";\n\n@Form.create({\n    fields: ({demo}) => demo.fields\n})\n@observer\nclass BasicForms extends React.Component {\n    \n    handleSubmit = e => {\n        const {dispatch, form} = this.props;\n        e.preventDefault();\n        form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                // submit form\n            }\n        });\n    };\n    \n    // ** 实现 title 的 label 属性随着其 value 属性变化 **\n    render(){\n        \n        const {form, demo} = this.props;\n        \n        return (\n            <Form onSubmit={this.handleSubmit} hideRequiredMark style={{marginTop: 8}}>\n                <FormItem field={form.get('title')}>\n                    <FormField field={form.get('title')} label={demo.fields.title.value}>\n                        <Input placeholder='请输入标题'/>\n                    </FormField>\n                </FormItem>\n                <FormItem field={form.get('date')}>\n                    <FormField field={form.get('date')} rules={[{required: true, message: '我的优先级更高'}]}>\n                        <RangePicker\n                            style={{width: '100%'}}\n                            placeholder={[\n                                formatMessage({id: 'form.date.placeholder.start'}),\n                                formatMessage({id: 'form.date.placeholder.end'}),\n                            ]}\n                        />\n                    </FormField>\n                </FormItem>\n                <FormItem style={{marginTop: 32}}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        <FormattedMessage id=\"form.submit\"/>\n                    </Button>\n                    <Button style={{marginLeft: 8}}>\n                        <FormattedMessage id=\"form.save\"/>\n                    </Button>                                            \n                </FormItem>\n            </Form>\n        );\n    }\n}",
   "id": 48,
   "stars": 0,
   "errors": [
    1219,
    2339,
    2339,
    2339,
    17004,
    17004,
    17004,
    17004,
    2304,
    17004,
    17004,
    17004,
    2304,
    2304,
    2304,
    17004,
    17004,
    2304,
    17004,
    2304,
    2304,
    17004,
    2304,
    17004,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 50,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import map from \"just-map-object\";\n\n// DEPRECATED: use just-map-values\nmap({ a: 3, b: 5, c: 9 }, (key, value) => value + 1); // {a: 4, b: 6, c: 10}\nmap({ a: 3, b: 5, c: 9 }, (key, value) => key); // {a: 'a', b: 'b', c: 'c'}\nmap({ a: 3, b: 5, c: 9 }, (key, value) => key + value); // {a: 'a3', b: 'b5', c: 'c9'}",
   "id": 49,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var store = \"Your Value Here\";\nstore.log('user'); // {\"name\":\"James Bond\",\"email\":\"bond007@live.com\",\"bio\":\"I spy for a living.\"}",
   "id": 50,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var npx = \"Your Value Here\"\n var hermione = \"Your Value Here\"\n var merge = \"Your Value Here\"\nnpx hermione merge-stat-reports src-report-1.json src-report-2.json --html dest-html-report --json report.json",
   "id": 51,
   "stars": 0,
   "errors": [
    1434,
    1434,
    2362,
    2304,
    2552,
    1005,
    2304,
    2304,
    1351,
    2552,
    2304,
    2304,
    1351,
    2552,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\";\ngrunt.initConfig({\n\n    copy: {\n        somefiles: {\n            src: \"./mydir/**\",\n            dest: \"./myNormallyOutputDir/\"\n        }\n    },\n    multidest: {\n        copy_some_files: {\n            tasks: [\n                \"copy:somefiles\"\n            ]\n            dest: [\"./dist/distdir1\", \"./dist/distdir2\"]\n        },\n    },\n});",
   "id": 52,
   "stars": 0,
   "errors": [
    2339,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var fs = require('fs'),\n  Proposal = require('proposal'),\n  readProposal = Proposal(fs.readFile);",
   "id": 53,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var minify;\nminify = require('minify');",
   "id": 54,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var docker = \"Your Value Here\"\n var pull = \"Your Value Here\"\n var apachecn0 = \"Your Value Here\"\ndocker pull apachecn0/matplotlib-doc-zh\ndocker run -tid -p <port>:80 apachecn0/matplotlib-doc-zh\n# 访问 http://localhost:{port} 查看文档",
   "id": 55,
   "stars": 0,
   "errors": [
    1434,
    1434,
    2362,
    2304,
    2304,
    2304,
    1434,
    2304,
    2304,
    2304,
    2304,
    1109,
    1005,
    2362,
    2304,
    2304,
    2304,
    1127,
    1005,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "let fullsizeCanvasElement = document.getElementById('fullsize-canvas');\nlet thumbnailCanvasElement = document.getElementById('thumbnail-canvas');\n\nvar CanvasCamera = \"Your Value Here\";\n\nCanvasCamera.initialize(fullsizeCanvasElement, thumbnailCanvasElement);\n\nlet options:CanvasCamera.CanvasCameraOptions = {\n    cameraFacing: 'front',\n    fps: 15,\n    thumbnailRatio: 1/6,\n    onAfterDraw: function(frame) {\n      // do something with each frame of the fullsize canvas element only\n      // frame.image.src; // file path or base64 data URI\n      // frame.element.toDataURL(); // requested base64 data URI\n    }\n};\n\nCanvasCamera.start(options);",
   "id": 56,
   "stars": 0,
   "errors": [
    2584,
    2584,
    2339,
    2749,
    8010,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "describe('run', () => {\n  var fancy = \"Your Value Here\"\n  fancy\n  .stdout()\n  .do(() => console.log('foo'))\n  .do(({stdout}) => expect(stdout).to.equal('foo\\n'))\n  .it('runs this callback last', () => {\n    // test code\n  })\n\n  // add to context object\n  fancy\n  .add('a', () => 1)\n  .add('b', () => 2)\n  // context will be {a: 1, b: 2}\n  .it('does something with context', context => {\n    // test code\n  })\n})",
   "id": 57,
   "stars": 0,
   "errors": [
    2593,
    2339,
    2304,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "require(\"typeface-open-sans\")",
   "id": 58,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var app = \"Your Value Here\";\napp.set('adminAuthServerMaster', function(msg, cb){\n  if(auth success) {\n    cb('ok');\n  } else {\n    cb('bad');\n  }\n})",
   "id": 59,
   "stars": 0,
   "errors": [
    2339,
    2304,
    1005,
    2304,
    1128,
    1005,
    2304,
    1128,
    2304,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var DEBUG\nvar mysql = \"Your Value Here\"\nDEBUG=mysql-express-session*,mysql-connection-manager node your-app.js",
   "id": 60,
   "stars": 0,
   "errors": [
    2362,
    2304,
    2304,
    1109,
    2362,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Boilerplate = require('boilerplate');\nvar h5bp = new Boilerplate({\n  options: {\n    cwd: 'vendor/h5bp/dist'\n  },\n  root: {src: ['{.*,*.*}'],   dest: 'src/'},\n  css:  {src: ['css/*.css'],  dest: 'src/'},\n  doc:  {src: ['doc/*.md'],   dest: 'src/'},\n  js:   {src: ['js/**/*.js'], dest: 'src/'}\n});\nconsole.log(h5bp);",
   "id": 61,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var DEV_COMMAND\nvar gatsby = \"Your Value Here\"\nDEV_COMMAND=gatsby -u http://localhost:8080 -r -o ./out",
   "id": 62,
   "stars": 0,
   "errors": [
    2362,
    2304,
    1005,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var view = async (view) => {\n    //Create an collection with a bindable field.\n    view.userData = { userName : \"John Doe\" };\n    //Bind the inner HTML of the element to the field on the collection\n    view.$nameLabel.bind = () => view.userData.userName;\n};\n\nexport { view };",
   "id": 63,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// middleware/authentication.js\n\nvar Authentication = require('../lib/authentication');\n\nfunction(req, res, next) {\n  var token = req.get('X-AUTH-TOKEN');\n\n  if(!token) {\n    /* instead of redirecting to login, give the\n    *  deep linking middleware a chance to store the\n    *  current request url, and THEN redirect to login\n    *  via the login option\n    */\n    next();\n  }\n\n  Authentication\n  .authenticate(token)\n  .then(function(tokenOrWhateverAuthYields) {\n    // we can now pass this in as the authentication option\n    req.user = tokenOrWhateverAuthYields;\n    next();\n  })\n  .error(function(e) {\n    // redirect to login since they gave us a bad token\n  });\n}",
   "id": 64,
   "stars": 0,
   "errors": [
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/* Set worksheet sheet to \"normal\" */\nws[\"!margins\"]={left:0.7, right:0.7, top:0.75,bottom:0.75,header:0.3,footer:0.3}\n/* Set worksheet sheet to \"wide\" */\nws[\"!margins\"]={left:1.0, right:1.0, top:1.0, bottom:1.0, header:0.5,footer:0.5}\n/* Set worksheet sheet to \"narrow\" */\nws[\"!margins\"]={left:0.25,right:0.25,top:0.75,bottom:0.75,header:0.3,footer:0.3}",
   "id": 65,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require('gulp');\nvar jspmAssets = require('gulp-jspm-assets');\n\ngulp.task('sass', function() {\n    var whateverTask = \"Your Value Here\";\n    jspmAssets({\n      'bootstrap', 'sass/**/*.scss',\n      'foundation', 'sass/**/*.scss'\n    })\n    .pipe(whateverTask())\n    .pipe(gulp.dest('dest'));\n});",
   "id": 66,
   "stars": 0,
   "errors": [
    1005,
    1005,
    1005,
    1005,
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " // Content to be scrolled\nvar $scrollContent = document.getElementById(\"content-scroll-vertical\");\nvar $scrollView = $scrollContent.parentNode; // Container for the content\nvar options = {\n    bounds: true,\n    direction: \"vertical\",\n    scrollbar: \"scrollbar-vertical\" // CSS class\n};\nvar RADJS_ScrollView = \"Your Value Here\";\n$scrollView.scroll_bar = new RADJS_ScrollView.ScrollBar($scrollView, {\n    className: options.scrollbar,\n    direction: options.direction,\n    smart: $scrollContent.querySelector(\"div.list_of_something\")\n}); // `scroll_bar` it's just a custom name\n// Create and attach ScrollView.\n// `scroller` it's just a custom name, but in WebComponent it's predefined.\n$scrollView.scroller = new RADJS_ScrollView($scrollView, options);\n// Create and attach custom pointer events, because of: IE support, SVG elements etc.\n// `tracker` is also custom name but it's also predefined in WebComponent\n$scrollView.tracker = new PointerTracker($scrollView, $scrollView.scroller);",
   "id": 67,
   "stars": 0,
   "errors": [
    2584,
    2339,
    2351,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const okayRecs = require('@andrewshell/okay-recs');\n\n// Source of all user ratings in system.\nconst allUserRatings = {\n    \"user0\": {\n        \"https://www.metacritic.com/tv/112263\": 1,\n        \"https://www.metacritic.com/tv/24\": 4,\n        \"https://www.metacritic.com/tv/30-rock\": 3,\n        \"https://www.metacritic.com/tv/alias\": 2,\n        \"https://www.metacritic.com/tv/archer\": 2,\n        \"https://www.metacritic.com/tv/arrested-development\": 2,\n        \"https://www.metacritic.com/tv/band-of-brothers\": 3,\n        ...\n    },\n    \"user1\": {\n        \"https://www.metacritic.com/tv/3rd-rock-from-the-sun\": 2,\n        \"https://www.metacritic.com/tv/adventure-time\": 4,\n        \"https://www.metacritic.com/tv/archer\": 1,\n        \"https://www.metacritic.com/tv/arrested-development\": 3,\n        \"https://www.metacritic.com/tv/better-call-saul\": 4\n        ...\n    },\n    ...\n};\n\n// Subset of user ratings that you want recommendations and similar users for.\n// Note: This example shows one user, but can work for multiple users at once.\nconst subUserRatings = {\n    user10: allUserRatings['user10']\n};\n\n// Sum of scores of people who gave program 1 a rating of x gave to program 2\n// Intermediate structure for user recommendations. Should be cached.\nconst allProgramScores = okayRecs.programScores(allUserRatings);\n\n// What programs are the users most likely to like?\nconst subUserRecommendations = okayRecs.userRecommendations(allProgramScores, subUserRatings);\n\n// What other users is this user similar to?\nconst subUserSimilarUsers = okayRecs.similarUsers(allUserRatings, subUserRatings);",
   "id": 68,
   "stars": 0,
   "errors": [
    1109,
    1005,
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 28,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// integrify.rules.js\n\nmodule.exports = [\n  {\n    rule: 'REPLICATE_ATTRIBUTES',\n    name: 'replicateMasterToDetail',\n    // ...\n  },\n  // ...\n];",
   "id": 69,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var angular = \"Your Value Here\";\nangular.module('myApp', ['ionic.native']).controller('MyPageController', function ($cordovaCamera) {\n  $cordovaCamera.getPicture().then(\n    function (data) {\n      console.log('Took a picture!', data);\n    },\n    function (err) {\n      console.log('Error occurred while taking a picture', err);\n    }\n  );\n});",
   "id": 70,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// gatsby-browser.js\nimport 'simple-css-reset';",
   "id": 71,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var chai = \"Your Value Here\";\nchai.expect(semver.parse('Linux 14.04')).to.equal(null);\nchai.expect(semver.parse('A development version')).to.equal(null);\nchai.expect(semver.parse('Version A')).to.equal(null);",
   "id": 72,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2339,
    2304,
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var dsa = \"Your Value Here\";\ndsa.setInstance(dsaId); // DSA ID",
   "id": 73,
   "stars": 0,
   "errors": [
    2339,
    2552
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var web3 = \"Your Value Here\";\nweb3.setProvider(new web3.providers.HttpProvider('http://host.url', 0, BasicAuthUsername, BasicAuthPassword));",
   "id": 74,
   "stars": 0,
   "errors": [
    2339,
    2339,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n//从数据库中查询出来的数据对象\nvar arr = [{id: 10, name: \"name1\", value: \"value1\"}, {id: 11, name: \"name2\", value: \"value2\"}];\nvar arrToObj = \"Your Value Here\";\n//把id值作为key生成一个对象\n/* data = {10: {id: 10, name: \"name1\", value: \"value1\"}, 11: {id: 11, name: \"name2\", value: \"value2\"}} */\nvar data = arrToObj(arr, \"id\");\n//把id值作为key，只需要name的值\n//data = {10: \"name1\", 11: \"name2\"}\nvar data = arrToObj(arr, \"id\", \"name\");\n//只获取id的值\n// ids = [10, 11];\nvar ids = arrToObj(arr, \"id\", null);",
   "id": 75,
   "stars": 0,
   "errors": [
    2349,
    2349,
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var click = \"Your Value Here\";\nclick(\"html>body>div>div:eq(0)>button\");\nandThen(function () {\n equal(find(\"#foo\").length, 0, \"foo removed AFTER user [INSERT REASON]\");\n});\n",
   "id": 76,
   "stars": 0,
   "errors": [
    2349,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { through } = require('streamss-through')\nlet cnt = 0\n\nrequire('fs').createReadStream(__filename, { encoding: 'utf8', highWaterMark: 30 })\n.pipe(through(\n  { decodeStrings: false },\n  function transform(str) {\n    cnt += 1\n    this.push(str.replace(/\\s/g, '‧') + '\\n')\n  },\n  function flush() {\n    console.log('\\ncounted num of chunks: ' + cnt)\n  }\n))\n.pipe(process.stdout)",
   "id": 77,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const demethodize = require(\"just-demethodize\");\n\nconst trimFn = demethodize(\"\".trim);\n[\"hello \", \" goodbye\", \"hello again\"].map(trimFn);",
   "id": 78,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var data = \"Your Value Here\";\nconst mapped = {\n  a: data.a,\n  b: data.b\n}",
   "id": 79,
   "stars": 0,
   "errors": [
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var o2x = require('object-to-xml');\n\nvar obj = { \n  '?xml version=\\\"1.0\\\" encoding=\\\"iso-8859-1\\\"?' : null,\n  request : {\n    '@' : {\n      type : 'product',\n      id : 12344556\n    },\n    '#' : {\n      query : {\n        vendor : 'redhat',\n        name : 'linux'\n      }\n    }\n  }\n};\n\nconsole.log(o2x(obj));\n\n/*\n<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n<request type=\"product\" id=\"12344556\">\n  <query>\n    <vendor>redhat</vendor>\n    <name>linux</name>\n  </query>\n</request>\n*/",
   "id": 80,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 26,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Post = \"Your Value Here\";\nlet post = new Post();\n\nawait post.save(); // creates a new post\n\npost.set('title', 'New title');\nawait post.save(); // updates an existing post",
   "id": 81,
   "stars": 0,
   "errors": [
    2351,
    1375,
    1378,
    1375,
    1378
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var imdbWatchlist = require('imdb-watchlist');\n\nimdbWatchlist('ur23098466').then(function (watchlist) {\n  // watchlist is an array of objects on the form:\n  // { title: '', imdbId: ''}\n\n  // This will log out a random movie from your watchlist\n  console.log(watchlist[Math.floor(Math.random() * watchlist.length)]);\n});",
   "id": 82,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var JsonRoutes = \"Your Value Here\";\nJsonRoutes.ErrorMiddleware.use(\n  '/handle-error',\n  RestMiddleware.handleErrorAsJson\n);\n\nJsonRoutes.add('get', 'handle-error', function () {\n  var error = new Meteor.Error('not-found', 'Not Found');\n  error.statusCode = 404;\n  throw error;\n});",
   "id": 83,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var res = \"Your Value Here\";\nconst loggedIn = res._headers['logged-in'] === \"true\";",
   "id": 84,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var server = \"Your Value Here\";\nserver.register({\n    register: require('hapi-droutes'),\n    options: {\n        'root':'routes/please/search_in/here',\n        'match':'resource/*/route.*.js',\n        'dependencies':['hello','hapi']\n    }\n}, function (err) {\n    if (err) throw err;\n});",
   "id": 85,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var cacheInterceptor = function cacheInterceptor(args) {\n  var req = args.req,\n      res = args.res;\n    var cacheStore = \"Your Value Here\";\n    // retrieve cached response\n    return cacheStore.getCacheRes(req)\n      .then((cachedRes) => {\n        return new Promise((resolve, reject) => {\n          try {\n            if (cachedRes) {\n              // response with cached result\n              res.end(cachedRes);\n              // abort the executing of passes sequence\n              reject();\n            } else {\n              // continue executing other passes\n              resolve();\n            }\n          } catch (err) {\n            reject(err);\n          }\n        })\n      })\n  };\n// insert this pass before the default 'deleteLength' pass\nproxy.before('web', 'deleteLength', cacheInterceptor);\n",
   "id": 86,
   "stars": 0,
   "errors": [
    2339,
    2552
   ],
   "hasCode": true,
   "nondeletedLines": 21,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var LoadIt = \"Your Value Here\";\n<LoadIt load={() => import('./LoadMe')} />",
   "id": 87,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import parallel from 'apr-parallel';\n\nconst then = (v) => new Promise((resolve) => resolve(v));\n\nconst withArray = await parallel([\n  async () => await then(1),\n  async () => await then(2)\n]);\n\n// withArray = [1, 2]\n\nconst withObject = await parallel({\n  one: async () => await then(1),\n  two: async () => await then(2)\n});\n\n// withObject = { one: 1, two: 2 }",
   "id": 88,
   "stars": 0,
   "errors": [
    1378,
    1378
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\"\n// run tests\ngrunt\n\n// run tests and show a test coverage report\n var specs = \"Your Value Here\"\ngrunt specs",
   "id": 89,
   "stars": 0,
   "errors": [
    1434
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// foo.js\nObject.defineProperty(exports, '__esModule', {value: true})\n\nexports.default = {\n  foo: 'default-foo'\n}\n\nexports.foo = 'foo'",
   "id": 90,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'core-js/features/array/includes';\nimport 'core-js/features/object/assign';",
   "id": 91,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nvar setAdapter = \"Your Value Here\";\nconst adapter = setAdapter(BaseAdapter);\n\nexports.api = functions.https.onRequest((...args) => adapter.handle(...args));",
   "id": 92,
   "stars": 0,
   "errors": [
    2349,
    2552,
    2552
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var my = \"Your Value Here\"\nmy-app\n├── README.md\n├── node_modules\n├── package.json\n├── .gitignore\n├── public\n│   └── favicon.ico\n│   └── index.html\n│   └── manifest.json\n└── src\n    └── App.css\n    └── App.js\n    └── App.test.js\n    └── index.css\n    └── index.js\n    └── logo.svg\n    └── registerServiceWorker.js",
   "id": 93,
   "stars": 0,
   "errors": [
    2362,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    1128,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { MoodleClient } = require('node-moodle');\nconst moodle = new MoodleClient({ ... });\n\nasync function main() {\n  try {\n    //Request data\n    var req = {\n      users: [\n        {\n          firstname: \"Foo\",\n          lastname: \"Bar\",\n          username: \"foo\",\n          password: \"FooBar123!\",\n          email: \"foo@example.com\",\n        }\n      ]\n    };\n\n    //Invoke a method\n    var res = await moodle.core.user.createUsers(req);\n    \n    //Response data\n    console.log(res);\n    /*\n    [\n      {\n        \"id\": 3,\n        \"username\": \"foo\"\n      }\n    ]\n    */\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\nmain();",
   "id": 94,
   "stars": 0,
   "errors": [
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 31,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  var LRUCache = \"Your Value Here\";\n  const cache = LRUCache([cacheSize = 10]);\n\n // return an item from the cache\n  cache.get(key)\n\n  // add an item to the cache. overwrite if already exists\n  cache.set(key, value) \n\n  // remove an item from the cache\n  cache.remove(key) \n\n  // reset the cache to an empty and fresh state\n  cache.clear(limit = 10) \n\n  // Traverse each cached item and call a function\n  // callback is passed [node element, element number, cache instance] \n  cache.forEach(callback) \n\n  // return a JSON represenation of the cache\n  cache.toJSON() ",
   "id": 95,
   "stars": 0,
   "errors": [
    2349,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { connectPubsub } from '@yoctol/message-queue';\n\nvar connectionOptions = \"Your Value Here\";\n\nconst pubsub = await connectPubsub({\n  driver: 'rabbitmq',\n  amqpConfig: {\n    url: 'amqp://localhost',\n    exchange: 'amqp.exchange',\n    connectOptions: {\n      //node-amqp-connection-manager connect() options \n      heartbeatIntervalInSeconds: 5,\n      ...\n      connectionOptions: {\n        //amqplib connection options\n        ...\n      },\n    },\n    createChannelOptions: {\n      //node-amqp-connection-manager createChannel() options \n      name: 'channelName',\n      setup: ...,\n      json: true,\n    },\n },\n});",
   "id": 96,
   "stars": 0,
   "errors": [
    2698,
    1005,
    1136,
    1109,
    1135,
    1128,
    2695,
    2552,
    1005,
    1128,
    1128,
    2695,
    1109,
    1128,
    1128,
    1128,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 21,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function(i) {\n    // delete the tag at index i\n}",
   "id": 97,
   "stars": 0,
   "errors": [
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var facebookConnectPlugin = \"Your Value Here\";\nfacebookConnectPlugin.showDialog({\n    method: \"share\",\n    picture:'https://www.google.co.jp/logos/doodles/2014/doodle-4-google-2014-japan-winner-5109465267306496.2-hp.png',\n    name:'Test Post',\n    message:'First photo post',\n    caption: 'Testing using phonegap plugin',\n    description: 'Posting photo using phonegap facebook plugin'\n  }, function (response) {\n    console.log(response)\n  }, function (response) {\n    console.log(response)\n  }\n);",
   "id": 98,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "namiConfig.logger = require('log4js').getLogger('Nami.Core');\nvar nami = new (require(\"nami\").Nami)(namiConfig);",
   "id": 99,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "#@ Node\nvar node_modules = \"Your Value Here\"\nnode_modules\n\n var Build = \"Your Value Here\"\n# Build\nvar build = \"Your Value Here\"\nbuild\n\n var Coverage = \"Your Value Here\"\n var directory = \"Your Value Here\"\n# Coverage directory\nvar coverage = \"Your Value Here\"\ncoverage\n\n var logs = \"Your Value Here\"\n# logs\n*.log\n.logs\n\n#@ Platform Specific\n.DS_Store\nThumbs.db",
   "id": 100,
   "stars": 0,
   "errors": [
    1127,
    1005,
    1127,
    1005,
    1127,
    1005,
    1127,
    1005,
    2362,
    1109,
    1127,
    1005,
    1146,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n var err = \"Your Value Here\"\n var Pass = \"Your Value Here\"\n var an = \"Your Value Here\"\n var error = \"Your Value Here\"\n var object = \"Your Value Here\"\n var here = \"Your Value Here\"\n var to = \"Your Value Here\"\n var indicate = \"Your Value Here\"\n@param {Error|null} err Pass an error object here to indicate an error\n                        var occured = \"Your Value Here\"\n                        occured. Very useful for validation; stops the flow here.\n\n@param {string} key     The key of the property that has finished, \n                        this gives you a chance to format the key name.\n\n@param {*} value        The value you want the key to have\n",
   "id": 101,
   "stars": 0,
   "errors": [
    1146,
    2362,
    18050,
    1434,
    1434,
    1434,
    1434,
    1434,
    1434,
    1434,
    1434,
    1434,
    2339,
    1005,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1003,
    1146,
    2693,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2695,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    1435,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    1146,
    1109,
    1109,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const storybook = require('@ltht-react/storybook');\n\n// TODO: DEMONSTRATE API",
   "id": 102,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ionic = \"Your Value Here\"\n var cordova = \"Your Value Here\"\n var plugin = \"Your Value Here\"\n var add = \"Your Value Here\"\n var alicloud = \"Your Value Here\"\nionic cordova plugin add cordova-plugin-alicloud-feedback --variable APP_KEY=你的KEY --variable APP_SECRET=你的SECRET",
   "id": 103,
   "stars": 0,
   "errors": [
    1434,
    1434,
    1434,
    1434,
    2362,
    2363,
    2363,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const socks5http = require('socks5-http');\n\n// set socks5 proxy port and host\n// 1080 and \"localhost\" is default\nsocks5http.setSocks5(1080, \"localhost\")\n\n// https GET\nsocks5http.get(\"https://www.google.com\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})\n\n// http GET\nsocks5http.get(\"http://www.google.com\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})\n\n// ip and custom port\nsocks5http.get(\"http://47.98.223.187:3000\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})",
   "id": 104,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 29,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var app = require(\"your-awesome-component\");\nvar yourDiv = \"Your Value Here\";\nvar instance = new app(yourDiv);",
   "id": 105,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var spraygun = \"Your Value Here\";\n var template = \"Your Value Here\";\nUsage: spraygun <template> <project-directory>\n\nGenerate a project in the specified directory, based on a template.\n\nFor example, to generate a react app in a directory named hello-world:\n  $ npx spraygun -t react hello-world\n\nThe officially supported spraygun templates are:\n  -t express\n  -t react\n  -t react-ts\n\nTo use a custom template, specify one of the following:\n  -p path   a local template directory\n  -r URL    a git repository URL",
   "id": 106,
   "stars": 0,
   "errors": [
    17004,
    17008,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import com.lynxit.contactswrapper.ContactsWrapperPackage;\n...\n\n@Override\n var List = \"Your Value Here\";\n var ReactPackage = \"Your Value Here\";\n var getPackages = \"Your Value Here\";\nprotected List<ReactPackage> getPackages() {\n    return Arrays.<ReactPackage>asList(\n        new MainReactPackage(),\n        ...,\n       new ContactsWrapperPackage()\n   );\n}",
   "id": 107,
   "stars": 0,
   "errors": [
    8002,
    1005,
    1128,
    1128,
    2349,
    1005,
    1003,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var flv = \"Your Value Here\";\nflv.$canvas;",
   "id": 108,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const conf = require('run-con')('myapp', {\n    port: 12345,\n    mode: 'test'\n});\n\nconsole.log(JSON.stringify(conf, null, 2));",
   "id": 109,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var type = \"Your Value Here\";\ntype.isAsyncFunction(async function(){}) //=> true",
   "id": 110,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { ProviderStore } from 'react-redux-just'\n\nconst model = {\n  state: {\n    date: {\n      __options:{\n        type: 'date',\n        value: new Date(),\n        receiving: date => date.toString(),\n        request: (resolve, reject) => {\n              var fetch = \"Your Value Here\";\n              fetch( REQUEST_URL , {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ title: 'React POST Request' })\n                })\n                .then(response => response.json())\n                .then(({result}) => resolve(result));\n            }\n      }\n    }\n  }\n}\n\nReactDOM.render(\n    <ProviderStore model={model}>\n      <App />\n    </ProviderStore>\n  ,document.getElementById('root')\n);\n",
   "id": 111,
   "stars": 0,
   "errors": [
    2349,
    2304,
    2304,
    17004,
    17004,
    2304,
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 28,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import IntentLauncher, { IntentConstant } from 'react-native-intent-launcher'\n...\nIntentLauncher.startActivity({\n    action: 'android.settings.APPLICATION_DETAILS_SETTINGS',\n    data: 'package:com.example'\n})\n...",
   "id": 112,
   "stars": 0,
   "errors": [
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var cd = \"Your Value Here\"\n var contracts = \"Your Value Here\"\ncd contracts\nvar npm = \"Your Value Here\"\n var install = \"Your Value Here\"\nnpm install\n var run = \"Your Value Here\"\n var build = \"Your Value Here\"\nnpm run build",
   "id": 113,
   "stars": 0,
   "errors": [
    1434,
    1434,
    1434,
    1434
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var NodeWebcam = require( \"node-webcam\" );\n\nvar FSWebcam = NodeWebcam.FSWebcam; //require( \"node-webcam/webcams/FSWebcam\" );\n\nvar opts = {};\n\nvar cam = new FSWebcam( opts );",
   "id": 114,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import propType, { ow } from 'ow-prop-type'\n\nvar React = \"Your Value Here\"\n\nclass MyComponent extends React.Component {\n  static propTypes = {\n    // propType with a predicate\n    total: propType(\n      ow\n        .number\n        .integer\n        .greaterThanOrEqual(0)\n    ),\n    // propType with a callback, must return a predicate\n    current: propType((props) => {\n      return ow\n        .number\n        .integer\n        .greaterThanOrEqual(0)\n        .lessThanOrEqual(props.total)\n    }\n  }\n}",
   "id": 115,
   "stars": 0,
   "errors": [
    2339,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Vue from 'vue'\nimport Vuetify from 'vuetify'\nimport DaySpanVuetify from 'dayspan-vuetify'\nimport App from './App.vue'\n\nimport 'vuetify/dist/vuetify.min.css'\nimport 'material-design-icons-iconfont/dist/material-design-icons.css'\nimport 'dayspan-vuetify/dist/lib/dayspan-vuetify.min.css'\n\nVue.config.productionTip = false\n\nVue.use(Vuetify);\n\nVue.use(DaySpanVuetify, {\n  methods: {\n    getDefaultEventColor: () => '#1976d2'\n  }\n});\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})",
   "id": 116,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\";\ngrunt.initConfig({\n  mustache_html: {\n    development: {\n      options: {\n        src: 'src',\n        dist: 'dist',\n        type: 'mustache' // mustache Or hbs\n      },\n      globals: {\n        analytics_id: 'UA-123456-1'\n      }\n    }\n  }\n});",
   "id": 117,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<script src=\"path/to/dist/js/tether.min.js\"></script>",
   "id": 118,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function log(response) {\n  console.log(`Transaction ID: ${response.transactionId}`)\n  console.log(`Function code: ${response.functionCode}`)\n  console.log(`Total number of registers: ${response.noOfRegisters}`)\n  console.log(`Values: ${response.registerValues.join(', ')}`)\n}\n\nasync function example() {\n  try {\n    var client = \"Your Value Here\"\n    const response = await client.send(request)\n    log(response)\n  } catch (error) {\n    console.log(`Error: ${error}`)\n  }\n}\n\nexample()",
   "id": 119,
   "stars": 0,
   "errors": [
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Size = \"Your Value Here\"\nSize (Body, H1, etc.)\n  Alignment (Left, Center, Right)\n    Weight (Regular, Semibold, etc.)\n      Color",
   "id": 120,
   "stars": 0,
   "errors": [
    2349,
    2304,
    2304,
    2304,
    1003,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    1003,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/* bookType can be 'xlsx' or 'xlsm' or 'xlsb' */\nvar wopts = { bookType:'xlsx', bookSST:false, type:'binary' };\n\nvar XLSX = \"Your Value Here\";\n\nvar wbout = XLSX.write(workbook,wopts);\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n  for (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n  return buf;\n}\n\n/* the saveAs call downloads a file on the local machine */\nsaveAs(new Blob([s2ab(wbout)],{type:\"\"}), \"test.xlsx\")",
   "id": 121,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2304,
    2322
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var dfltCfg = { slot: 'foo' },\n  meta = { defaultConfig: dfltCfg,\n    descr: 'A nice foo for your app.',\n    apiVersion: 1,\n    };\n\nfunction install(app, plugCfg, appCfg) {\n  if (plugCfg === appCfg) { plugCfg = false; }\n  var slot = (plugCfg.slot\n    || appCfg.fooSlot   // <-- that's why we checked above\n    || dfltCfg.slot);\n  app[slot] = function () { return 'bar @ ' + app.name; };\n}\n\nmodule.exports = require('plugmgr1801-pmb/plugify')(module, meta, install);",
   "id": 122,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// get most used from main entry\nimport { SVGO, SVGO_LITE, CONFIG_LITE, PLUGINS_DEFAULT_LIST } from 'libsvgo/module/lib/svgo'\n\n// or get each separately\nimport { SVGO_LITE } from 'libsvgo/module/lib/svgo-lite'\nimport { SVGO_LITECONFIG_LITE } from 'libsvgo/module/lib/svgo/config-lite'\n\n// get each plugin separately\nimport * as addAttributesToSVGElement from 'libsvgo/module/plugins/addAttributesToSVGElement'",
   "id": 123,
   "stars": 0,
   "errors": [
    2300,
    2300
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var typeorm = \"Your Value Here\"\n var init = \"Your Value Here\"\ntypeorm init --name MyProject --database mysql",
   "id": 124,
   "stars": 0,
   "errors": [
    1435,
    2356,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nvar ControlManifest = \"Your Value Here\"\n- ...\\ControlManifest.Input.xml\n\n    modify as needed...\n\n\n\n- modify ...\\node_modules\\pcf-start\\bin\\pcf-start.js\n\n    enable cors by adding cors: true, \n\n```javascript\n// Start server\nvar options = {\n    port: 8181,\n    host: '0.0.0.0',\n    cors: true, \n    root: path.resolve(process.cwd(), codePath),\n    open: true,\n",
   "id": 125,
   "stars": 0,
   "errors": [
    2362,
    1109,
    1127,
    1005,
    1005,
    2304,
    2304,
    8016,
    1005,
    2304,
    1005,
    1127,
    2304,
    1127,
    2304,
    2304,
    1127,
    2304,
    1127,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2695,
    2349,
    1160
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// configuring client\nconst prosperworks = require('prosperworks')({\n  email: process.env.EMAIL,\n  token: process.env.TOKEN\n});\n\n// using async / await (native in Node.js v8.x)\nvar result = await prosperworks.companies.list();\nconsole.log(JSON.stringify(result, null, 2));\n\n// or using with promises\nprosperworks.companies.list()\n.then(result => {\n  console.log(JSON.stringify(result, null, 2));\n})",
   "id": 126,
   "stars": 0,
   "errors": [
    1378
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/** @type {string[]} */\nconst verbs = require('verb-corpus');\n\nconsole.log(verbs.length);",
   "id": 127,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { BuildpackJob } from 'dray-client';\nvar manager = \"Your Value Here\";\nlet compilation = new BuildpackJob(manager);\ncompilation.addFiles([\n    {name: 'foo.ino', data: new Buffer()}\n]);\ncompilation.setEnvironment({\n    PLATFORM_ID: 6\n});\ncompilation.setBuildpacks([\n    'particle/buildpack-wiring-preprocessor',\n    'particle/buildpack-particle-firmware:0.5.1-photon'\n]);\ncompilation.submit().then((binaries) => {\n    // Do something with binaries\n}, (reason) => {\n    console.error(\"Compilation error:\", reason)\n});",
   "id": 128,
   "stars": 0,
   "errors": [
    2554
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var store = \"Your Value Here\"\nvar prefixed = store.withIdPrefix('foo:')\n\nprefixed.add({ _id: 'bar', value: 42 }) // will add the object with id 'foo:bar'\n  .then(function (doc) {\n    // update documents with id 'foo:other' and 'foo:bar'\n    return prefixed.update(['other', 'foo:bar'], { other: 'baz' })\n  })\n\n// Finds all objects which id start with 'foo:'\nprefixed.findAll().then(function (docs) {})\n\n// Handle all changes to objects which id start with 'foo:'\nprefixed.on('change', function (eventName, doc) {})\n\nvar moarPrefixed = prefixed.withIdPrefix('moarPrefix:') // prefix is now 'foo:moarPrefix:'",
   "id": 129,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const RequestParameters = require('@luigisamurai/request-parameters');\nvar requiere = \"Your Value Here\";\nconst JSONFile = requiere('./JSONFile');\n\nconst request = new RequestParameters.Request();\n\n// request-promises options\nconst setting = {\n  resolveWithFullResponse: true,\n  simple: false\n};\n\n// set the common parameters\nrequest.setParameters({\n  baseUrl: 'http://www.google.com',\n  setting\n});\n\n// Get request with request-parameter dependency\nconst getPromise = request.send(JSONFile.GET, {\n  urlParams: { homeId: 1 },\n  queryParams: { offset: 0, limit: 100 },\n});\n\n// Also can use async - await to wait the promises\ngetPromise.then((response) => {\n  const statusCode = response.statusCode;\n  const body = response.body;\n\n  console.log(statusCode, ' ', body);\n});\n\n// Post request with request-parameter dependency\nconst postPromise = request.send(JSONFile.Post, {\n  body: { name: 'home view' }\n});\n\npostPromise.then((response) => {\n  const statusCode = response.statusCode;\n  const body = response.body;\n\n  console.log(statusCode, ' ', body);\n});\n\n// Note the URIs don't exist so the request return 404 status code.",
   "id": 130,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 29,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "$('li', 'ul', '<ul id=\"fruits\">...</ul>');",
   "id": 131,
   "stars": 0,
   "errors": [
    2592
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var SpeechToTextV1 = \"Your Value Here\";\nconst speechToText = new SpeechToTextV1({\n/* authenticator, version, serviceUrl, etc... */\n});\nconst recognizeStream = recognizeUsingWebSocket(params);\n\n// getTransactionId returns a Promise that resolves to the ID\nrecognizeStream.getTransactionId().then(\n  globalTransactionId => console.log(globalTransactionId),\n  err => console.log(err),\n);",
   "id": 132,
   "stars": 0,
   "errors": [
    2351,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var yo = \"Your Value Here\"\n var axi = \"Your Value Here\"\nyo axi-dtsi-gulp-angular [app-name]",
   "id": 133,
   "stars": 0,
   "errors": [
    1434,
    2362,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var chance = \"Your Value Here\";\nchance.month({country: 'de'})\n// 'Juli'",
   "id": 134,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var nock = \"Your Value Here\";\nconst scope = nock('http://www.headdy.com')\n  .replyDate()\n  .get('/')\n  .reply(200, { hello: 'world' })",
   "id": 135,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mailchimp = \"Your Value Here\";\n//to create some new merge fields in your list\n//http://developer.mailchimp.com/documentation/mailchimp/reference/lists/merge-fields/\n\nmailchimp\n  .post('batches', {\n    operations : [\n      {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG1',\n          type : 'string'\n        })\n      }, {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG2',\n          type : 'string'\n        })\n      }, {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG3',\n          type : 'string'\n        })\n      }\n    ]\n  })\n  .then(function(result){\n    console.log(result);\n  })\n  .catch(function(error){\n    console.log(error);\n  });",
   "id": 136,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 34,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var log = \"Your Value Here\";\nlog.bind(logger, levelName);",
   "id": 137,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const crypto = require('crypto');\nfunction verifySignature({\n  data,\n  signature,\n  publicKey\n}) {\n  // Verify that we signed correctly using public key\n  const verify = crypto.createVerify('RSA-SHA384');\n  verify.write(data);\n  verify.end();\n\n  // True if signature is verified\n  return verify.verify(publicKey, signature, 'base64');\n}",
   "id": 138,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var b = \"Your Value Here\"\n.b-foo {\n  .bar {\n    …\n  }\n  \n  .qux {\n    …\n  }\n}",
   "id": 139,
   "stars": 0,
   "errors": [
    2339,
    2304,
    1005,
    1180,
    1434,
    2304,
    1127,
    1128,
    1434,
    2304,
    1127,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export interface GoogleLocationDetailResult {\n  adr_address: string;\n  formatted_address: string;\n  icon: string;\n  id: string;\n  name: string;\n  place_id: string;\n  scope: string;\n  reference: string;\n  url: string;\n  utc_offset: number;\n  vicinity: string;\n  types: string[];\n  geometry: {\n    location: {\n      lat: number;\n      lng: number;\n    };\n    viewport: {\n      [type: string]: {\n        lat: number;\n        lng: number;\n      };\n    };\n  };\n  address_components: Array<{\n    long_name: string;\n    short_name: string;\n    types: string[];\n  }>;\n}",
   "id": 140,
   "stars": 0,
   "errors": [
    8006
   ],
   "hasCode": true,
   "nondeletedLines": 31,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ImagePickerIOS = \"Your Value Here\";\nImagePickerIOS.openCameraDialog({\n  showImages: true,\n  showVideos: false\n}, (imageUrl, height, width) => {\n  // success\n}, (error) => {\n  // cancel\n});",
   "id": 141,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var expect = \"Your Value Here\";\nexpect([button1, button2, button3]).to.be.verticallyAligned('top', 1.5);",
   "id": 142,
   "stars": 0,
   "errors": [
    2349,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const hdl = require('hdl-js');\n\nconst {\n  emulator: {\n    Clock,\n    Pin,\n  },\n} = hdl;\n\nconst clock = new Clock({rate: 10, value: -5});\nconst pin = new Pin({name: 'a'});\n\n// Track clock events.\nclock.on('tick', value => pin.setValue(value));\n\nclock.tick();\n\nconsole.log(pin.getValue()); // +5;",
   "id": 143,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const App = () => {\n         var serviceList = \"Your Value Here\";\n    return \n        <serviceList.ProvideAll>\n            // rest of the application\n        </serviceList.ProvideAll>\n    ;\n}",
   "id": 144,
   "stars": 0,
   "errors": [
    17004,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var getQueue = \"Your Value Here\";\ngetQueue(callback)",
   "id": 145,
   "stars": 0,
   "errors": [
    2349,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nvar course = \"Your Value Here\"\n// Find the top 10 students who have taken a particular course\n// and earned a grade of at least 3:\n\nconst classes = {\n   Student: null,\n   Course: course\n}\n\nconst criteria = {\n  descending: 'grade',\n  greaterThanOrEqualTo: ['grade', 3],\n  limit: 10,\n  include: 'student'\n}\n\nvar parsm = \"Your Value Here\"\n\nconst joinObjs = await parsm.getJoinQuery(classes, criteria).find()\n\n// joinObjs is now an array of instances of the class 'Student2Course'\n// with details of students in the 'student' column.",
   "id": 146,
   "stars": 0,
   "errors": [
    1375,
    1378,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var catalog = \"Your Value Here\"\ncatalog\n    Promise\n        var files = \"Your Value Here\"\n        files\n            var index = \"Your Value Here\"\n            index.js — your polyfill\n\n        index.json\n        index.js",
   "id": 147,
   "stars": 0,
   "errors": [
    2339,
    1127,
    1434,
    2304,
    2304,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//main.js\nimport BoxButton from 'box-components-button'\nvar Vue = \"Your Value Here\"\nVue.use(BoxButton)",
   "id": 148,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ffmpeg = \"Your Value Here\";\nffmpeg('/path/to/file.avi').noVideo();",
   "id": 149,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const outStr = \"[{\\\"Root\\\":\\\"0x763f7f5e16506128824178bf2ee855e35a4b93689e8e54ed1e3d03177da09917\\\",\\\"State\\\":{\\\"Num\\\":345,\\\"OS\\\":{\\\"Index\\\":384,\\\"OutCM\\\":null,\\\"Out_O\\\":null,\\\"Out_Z\\\":{\\\"AssetCM\\\":\\\"0x5545b6d57ef6a35b124963daa0dee992da5243e31eb0d99d8f66d0f1a13e9012\\\",\\\"EInfo\\\":\\\"0x04fc0547da3590767317c3719f7b89516f7afb01037ca09cefc0bd75b4dccb95cfff665a0028069289960dcf07b69928e8d3da06ad0249ba7fd2c31505f5eef96db8741382f68be2e34210be409a84ae67be5c4687ddef64c13bba278d5fbea9d69f1a335585c8544a3b3eac8e7812041a01d95326f8da65e588784cc70c1b5a4b5dd7d0f5921007aef4043ac515cadc864ac206b2902a04022603566a437deb3100fdc04b88eb249746631447cf25964fb8f32fb4314455efbc1ea7520865f52aa762629ab8eed99e0a7918918dfe186188ddf61d7fb3d855a64d71ff5c9688\\\",\\\"OutCM\\\":\\\"0x5d3ba6999629152264618694968cd18a7a4c7790e2c213498e99209c564039ab\\\",\\\"PKr\\\":\\\"0xfaf5e31e63cf54a81cb494e57719abf9e2af71fb52720a4ad476ce78006ac0af202f0329828102356f29597815773200b75775b6837bf8592e20eb4df75e73a9c01a79af111451f7f38f4c2f79f03772a9e09b31d5c7bf2ab37808835362c4a0\\\",\\\"Proof\\\":\\\"0x02902bbd460a55b0dbaf4a96848d0b24ef5f2faab6409b3d68dc77f8f32a96a41d0a450a6076693fd6bef7e4466e6f0533e18905c8fc656741e7d1faf2ae298dba7edb87ab8b1293900e3fac4bd8e47a09b1ee02cf7770965bf990f60c53f57a3c08032dcc4023c7aa706f8fd35c68119caa73d15e8ca1ff35cc9e69fcdd8e46d5120c\\\",\\\"RPK\\\":\\\"0xb74e284e16cc77659690cee346076701a1040539ce84e6af71292f0acd5a906d\\\"},\\\"RootCM\\\":\\\"0xe495fe6b43813719352a6256e826dfae9d61d32b28ce1814e0b6a60b9cb05009\\\"},\\\"TxHash\\\":\\\"0x91a5cc04f6af1803bd8a523fcf23bc845c42552bb7d6d0a49e347ef5070ba274\\\"}}]\"\n\nvar tx = \"Your Value Here\"\n\ntx.DecOut(\n  outStr,\n  keys.tk.ToBase58(),\n  (err, content) => {\n    if (err) {\n      console.error(err)\n    } else {\n      console.log(content)\n    }\n  }\n)",
   "id": 150,
   "stars": 0,
   "errors": [
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Mongoose from 'mongoose';\n\nconst Test = new Mongoose.Schema({...\nexport  {tests:Test}",
   "id": 151,
   "stars": 0,
   "errors": [
    1109,
    1005,
    2448,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {any, boolean, number, string} from \"schemation\"\nimport {and, not, or}                 from \"schemation\"\nimport {where}                        from \"schemation\"\nimport {optional}                     from \"schemation\"\nimport {lazy}                         from \"schemation\"",
   "id": 152,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var freebase = \"Your Value Here\";\nfreebase.search(\"doug\",{type: \"/ice_hockey/hockey_player\"})",
   "id": 153,
   "stars": 0,
   "errors": [
    2554
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function inc(v) {\n  return v + 1;\n}\n\nfunction decr(v) {\n  return v - 1;\n}\n\nvar Arrow = \"Your Value Here\";\n\nArrow(inc).next(Arrow(decr)).run(1) == Arrow.next(Arrow(inc), Arrow(decr)).run(1);",
   "id": 154,
   "stars": 0,
   "errors": [
    2349,
    2349,
    2339,
    2349,
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var USAGE = \"Your Value Here\"\nUSAGE\n var dev = \"Your Value Here\"\n  $ dev-env export PROJECT\n\nARGUMENTS\n  PROJECT  project name\n\nOPTIONS\n  -d, --database  database\n  -h, --help      show CLI help",
   "id": 155,
   "stars": 0,
   "errors": [
    1434,
    2592,
    2362,
    2304,
    1005,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var replace = \"Your Value Here\";\nreplace( \"java\" ).ignoringCase(); // => ReplaceDefinition",
   "id": 156,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var arrayTransformer = \"Your Value Here\";\nconsole.log(arrayTransformer.stringToArray(db.get('newArray')))",
   "id": 157,
   "stars": 0,
   "errors": [
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var agenda = \"Your Value Here\";\nagenda.on('success:send email', function(job) {\n  console.log(\"Sent Email Successfully to: %s\", job.attrs.data.to);\n});",
   "id": 158,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var errorCB = \"Your Value Here\";\nvar err = \"Your Value Here\";\nerrorCB(err) {\n  console.log(\"SQL Error: \" + err);\n},\n\nvar successCB = \"Your Value Here\";\n\nsuccessCB() {\n  console.log(\"SQL executed fine\");\n},\n\nopenCB() {\n  console.log(\"Database OPENED\");\n},\n\nvar db = SQLite.openDatabase(\"test.db\", \"1.0\", \"Test Database\", 200000, openCB, errorCB);\ndb.transaction((tx) => {\n  tx.executeSql('SELECT * FROM Employees a, Departments b WHERE a.department = b.department_id', [], (tx, results) => {\n      console.log(\"Query completed\");\n\n      // Get rows with Web SQL Database spec compliance.\n\n      var len = results.rows.length;\n      for (let i = 0; i < len; i++) {\n        let row = results.rows.item(i);\n        console.log(`Employee name: ${row.name}, Dept Name: ${row.deptName}`);\n      }\n\n      // Alternatively, you can use the non-standard raw method.\n\n      /*\n        let rows = results.rows.raw(); // shallow copy of rows Array\n\n        rows.map(row => console.log(`Employee name: ${row.name}, Dept Name: ${row.deptName}`));\n      */\n    });\n});",
   "id": 159,
   "stars": 0,
   "errors": [
    2349,
    1005,
    1128,
    2349,
    1005,
    1128,
    2304,
    1005,
    1128,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 27,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {Screen} from 'geoeye-js'\n\nconst screen = new Screen({\n  config: './config.json', \n  container: 'container'\n});",
   "id": 160,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var metric = \"Your Value Here\";\nvar userMetric = metric.instance();\nuserMetric.start('metric');\n....\nuserMetric.end('metric');",
   "id": 161,
   "stars": 0,
   "errors": [
    2339,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var level = require('level-hyper')\nvar Snapshot = require('level-snapshot')\n\nvar db = level('./db')\nvar snapshot = Snapshot(db)\n\nsnapshot.on('snapshot:complete', function (snapshotName) {\n  console.log('took snapshot', snapshotName)\n})\n\nsnapshot.start()",
   "id": 162,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import duration from 'callbag-duration-progress'\nimport forEach from 'callbag-for-each'\nimport map from 'callbag-map'\nimport pipe from 'callbag-pipe'\n\nconst distance = d => t => t * d\n\nconst easeOut = p => 1 - (1 - p) * (1 - p)\n\nconst moveBall = (ball, easing) => {\n  pipe(\n    duration(1000),\n    map(easing),\n    map(distance(400)),\n    forEach(y => {\n      ball.style.transform = `translate3d(0, ${y}px, 0)`\n    }),\n  )\n}\n\nmoveBall(document.getElementById('ball'), easeOut)",
   "id": 163,
   "stars": 0,
   "errors": [
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const putout = require('putout');",
   "id": 164,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var git = \"Your Value Here\"\n var clone = \"Your Value Here\"\ngit clone https://github.com/provable-things/ptokens.js.git",
   "id": 165,
   "stars": 0,
   "errors": [
    1434,
    1434,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import CryptoAesCbc from 'react-native-crypto-aes-cbc';\n\nvar key;\n\n var iv;\nkey = \"XXXXX\" // in base64 format\n   var keysize128;\niv = \"XXXX\"   // in base 64 format\n var keysize256;\nkeysize128 = \"128\" \nkeysize256 = \"256\"\nvar text;\ntext = \"Sachin Agrawal\"\n\n  CryptoAesCbc.encryptInHex(iv,key,\"sachin agrawal\",\"128\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.encryptInBase64(iv,key,\"sachin agrawal\",\"128\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  var key256 = \"Your Value Here\";\n  CryptoAesCbc.encryptInHex(iv,key256,\"sachin agrawal\",\"256\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.encryptInBase64(iv,key256,\"sachin agrawal\",\"256\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.decryptByBase64(iv,key,\"ZN+DBxlPG+2lmWx6Bu7bqA==\",\"128\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByHex(iv,key,\"64df8307194f1beda5996c7a06eedba8\",\"128\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByBase64(iv,key256,\"Re3CIB8H3wYkUdl/l6WGGw==\",\"256\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByHex(iv,key256,\"45edc2201f07df062451d97f97a5861b\",\"256\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.sha256(\"sachin\",(hashKey) => {\n    console.log(hashKey)\n  })",
   "id": 166,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 39,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var sorting = require('postcss-sorting')\n\nvar postcss = \"Your Value Here\"\n\npostcss([\n  sorting({ 'sort-order': require('cssortie') })\n]))",
   "id": 167,
   "stars": 0,
   "errors": [
    2349,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var SecurePostmate = \"Your Value Here\";\n// Kick off the handshake with the iFrame\nconst handshake = new SecurePostmate({\n  container: document.getElementById('some-div'), // Element to inject frame into\n  url: 'http://child.com/page.html'\n});\n\n// When parent <-> child handshake is complete, data may be requested from the child\nhandshake.then(child => {\n\n  // Fetch the height property in child.html and set it to the iFrames height\n  child.get('height')\n    .then(height => child.frame.style.height = `${height}px`);\n\n  // Listen to a particular event from the child\n  child.on('some-event', data => console.log(data)); // Logs \"Hello, World!\"\n});",
   "id": 168,
   "stars": 0,
   "errors": [
    2351,
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var $in = \"Your Value Here\";\n<collection instance>.find({<query key>: {$in: [<query value>]}}, ...)",
   "id": 169,
   "stars": 0,
   "errors": [
    17004,
    17008,
    17004,
    17008,
    1005,
    17004,
    17008,
    1381,
    1381,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var rand = require('random-pro');\nconsole.log(rand.generateEvenNumber(10,100));\n// 96\nconsole.log(rand.generateEvenNumber(10,30));\n// 22",
   "id": 170,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const client = require(\"badonker\");\nconst honker = new client();\n\nasync function test() {\n  console.log(await honker.bulknsfw.booty());\n}\n\ntest();",
   "id": 171,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// select the right Ad Id according to platform\n  var admobid = {};\n  var navigator = \"Your Value Here\";\n  if( /(android)/i.test(navigator.userAgent) ) { // for android & amazon-fireos\n    admobid = {\n      banner: 'ca-app-pub-xxx/xxx', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/yyy'\n    };\n  } else if(/(ipod|iphone|ipad)/i.test(navigator.userAgent)) { // for ios\n    admobid = {\n      banner: 'ca-app-pub-xxx/zzz', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/kkk'\n    };\n  } else { // for windows phone\n    admobid = {\n      banner: 'ca-app-pub-xxx/zzz', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/kkk'\n    };\n  }",
   "id": 172,
   "stars": 0,
   "errors": [
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "let counter = 0;\n\nvar anticipatedCall = \"Your Value Here\";\n\nconst increment = anticipatedCall(() => {\n  counter = counter + 1;\n});\n\nincrement\n  .nthCallDuring(3, () => {\n    counter = 5;\n    increment();\n    increment();\n    increment();\n  })\n  .then(() => console.log(`counter value is ${counter}`));\n// Prints `counter value is 8`",
   "id": 173,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {Handler} from 'handleable';\n\nlet h = new Handler();\n\nlet e = await h.handle(\n  new Error('unhandled error'), // error instance\n  [ // list of handler recipes\n    {\n      handler: 'block', // handler name\n      message: '%{foo} unhandled error', // optional handler error message\n      block: async () => true // handler-specific property,\n      foo: 'bar' // custom variable for the message\n    },\n    {\n      handler: 'mongoUniqueness', // handler name\n      message: 'already taken', // optional handler error message\n      indexName: 'uniqueEmail' // handler-specific property\n    }\n  ]\n); // -> a list of errors",
   "id": 174,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var connect = \"Your Value Here\"\nconnect({host: 'mqtt.test.io', ssl: true, path: '/mqtt'})\n  .then(client => { ... })\n\n// or\nconnect('wss://mqtt.test.io/mqtt')\n  .then(client => { ... })",
   "id": 175,
   "stars": 0,
   "errors": [
    2349,
    1128,
    1109,
    2349,
    1128,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  var wrapper = \"Your Value Here\";\n  const handler = wrapper({\n      url: 'http://example.com/endpoint',\n      endpoint: '/endpoint',\n      auth: 'auth',\n      headers: 'headers',\n      method: 'method',\n      path_params: 'path_param',\n      query_params: 'query_param',\n      required_fields: 'required_fields',\n      request_map: 'request_map',\n      response_map: 'response_map',\n      transform_response: 'transform_response'      \n  });",
   "id": 176,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Select = require('react-select-plus');\n\nvar isLoadingExternally = true;\n\n<Select\n  name=\"form-field-name\"\n    isLoading={isLoadingExternally}\n    ...\n/>",
   "id": 177,
   "stars": 0,
   "errors": [
    17004,
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var pipep = \"Your Value Here\";\n> pipep([\n    function(a) { return Promise.resolve(a + 3); },\n    function(b) { return Promise.resolve(b * 10); },\n  ])(6);\npromise\n90",
   "id": 178,
   "stars": 0,
   "errors": [
    1109,
    2349,
    2552
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var json = {\"hey\": \"guy\",\"anumber\": 243,\"anobject\": {\"whoa\": \"nuts\",\"anarray\": [1,2,\"thr<h1>ee\"], \"more\":\"stuff\"},\"awesome\": true,\"bogus\": false,\"meaning\": null, \"japanese\":\"明日がある。\", \"link\": \"http://jsonview.com\", \"notLink\": \"http://jsonview.com is great\"};\n\n$(function() {\n  $(\"#json\").JSONView(json);\n  // with options\n  $(\"#json-collasped\").JSONView(json, { collapsed: true });\n});",
   "id": 179,
   "stars": 0,
   "errors": [
    2592,
    2592,
    2592
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var runIt = \"Your Value Here\";\nrunIt(args, [options]);",
   "id": 180,
   "stars": 0,
   "errors": [
    2349,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<p-accordion>\n    <p-accordionTab header=\"Header 1\">\n       Content 1\n    </p-accordionTab>\n    <p-accordionTab header=\"Header 2\">\n        Content 2\n    </p-accordionTab>\n    <p-accordionTab header=\"Header 3\">\n        Content 3    \n    </p-accordionTab>\n</p-accordion>",
   "id": 181,
   "stars": 0,
   "errors": [
    17004,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var rcon = \"Your Value Here\";\nrcon.init('fsrcon/init')\n  .then(\n    // resolved\n    function () {\n      ..\n    },  \n    // rejected\n    function (err) {\n      ..\n    }\n  );",
   "id": 182,
   "stars": 0,
   "errors": [
    2339,
    1128,
    1128,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'view-design/dist/styles/iview.css';",
   "id": 183,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {render, html} from '//unpkg.com/lighterhtml?module';\n\ndocument.body.appendChild(\n  // as unkeyed one-off content, right away 🎉\n  html.node`<strong>any</strong> one-off content!<div/>`\n);\n\n// as automatically rendered wired content 🤯\ntodo(document.body.lastChild);\nfunction todo(node, items = []) {\n  render(node, html`\n  <ul>${\n  items.map((what, i) => html`\n    <li data-i=${i} onclick=${remove}> ${what} </li>`)\n  }</ul>\n  <button onclick=${add}> add </button>`);\n  function add() {\n    var prompt = \"Your Value Here\";\n    items.push(prompt('do'));\n    todo(node, items);\n  }\n  function remove(e) {\n    items.splice(e.currentTarget.dataset.i, 1);\n    todo(node, items);\n  }\n}",
   "id": 184,
   "stars": 0,
   "errors": [
    2584,
    2584,
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 22,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Fetch from 'rd-fetch';\n\nFetch.json('https://example.com/api')\n  .then((response) => {\n    console.log(response.json);\n  })\n  .catch((error) => {\n    console.log(error.json);\n  });",
   "id": 185,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var $DOM = require( \"mock-dom-resources\" );\n\n// ..",
   "id": 186,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Schema = \"Your Value Here\";\nSchema.plugin(\n  mongooseHidden,\n  {\n    hidden: {\n      ...omitCommonFields.underscored.objTrue,\n      some_other_field: true,\n      another_field_to_ignore: true\n    }\n  }\n);",
   "id": 187,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Accordion from \"@beisen/accordion\"\n",
   "id": 188,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<script src=\"rstate.min.js\"></script>",
   "id": 189,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "    var Extension = \"Your Value Here\";\n    <Extension Géoportail pour iTowns>/\n        GpPluginItowns.js\n            (version minifiée du code javascript pour une utilisation en production)\n        GpPluginItowns.css\n            (version minifiée des css pour une utilisation en production)\n        GpPluginItowns-src.js\n            (version non minifiée du code javascript pour une utilisation en développement)\n        GpPluginItowns-src.css\n            (version non minifiée des css pour une utilisation en développement)",
   "id": 190,
   "stars": 0,
   "errors": [
    17004,
    17008,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mixtool = require('mix-h5');\n\n\n// 统计（百度，cnzz）\nvar tracking = mixtool.tracking;\n// init tracking\ntracking.add('baidu', 'xxxxxx'); // baidu site id\ntracking.add('cnzz', 'xxxxxx'); // cnzz site id\n\n\nsetTimeout(function() {\n    tracking.log('loaded');\n}, 1000);\n\n\n// 图片预加载\nvar imgLoader = mixtool.imgLoader;\nvar xxx = \"Your Value Here\";\n// over: preload over, count: loaded image length, length: preload image total length\n// map: loaded image name, percent: count/length, fakePercent: fake percent\nimgLoader.preloadImg(function(over, count, length, map, percent, fakePercent) {\n    if(over && 100 == percent) {\n        // todo\n    } else {\n        console.log(percent);\n    }\n}, {\n    selector: 'xxx', // 预加载图片地址筛选器, default: '.image-resource-wrap span, img.image-resource'\n    fakeTime: xxx, // 模拟加载时间, default: 2000\n    fakePercent: xxx // 模拟加载百分比, default: 50\n});\n// get preload image\nimgLoader.get('images/logo.png'); // 返回带版本号的图片地址，如果有cdn前缀就返回前缀，该方法必须要在preloadImg方法执行之后才能调用\n\n\n// 设置微信分享内容\nvar wxtool = mixtool.wx;\nvar fail = \"Your Value Here\";\nwxtool.setShare({\n    title: 'xxx', // 分享标题\n    link: 'xxx', // 分享链接\n    img: 'xxx', // 分享图片\n    desc: 'xxx', // 分享描述\n    shareLog: {\n        openid: 'xxx', // 用户微信openid\n        nickname: 'xxx', // 用户昵称\n        ...: 'xxx' // 头像等其他用户信息\n    }, // 分享统计\n    success: function() {...}, // 分享成功回调函数\n    fail: function() {...} // 分享失败回调函数\n});\n\n\n// 微信支付\nvar wxtool = mixtool.wx;\nwxtool.pay({\n    openid: 'xxx', // 用户openId\n    product_id: 'xxx', // 商品ID\n    body: 'xxx', // 商品描述\n    total_fee: 'xxx', // 总金额\n    detail: 'xxx', // 商品详情\n    attach: 'xxx', // 附加数据\n    out_trade_no: 'xxx', // 商户订单号\n    success: function() {...}, // 支付成功回调函数\n    fail: function() {...} // 支付失败回调函数\n});\n\n\n// 注：上述微信分享和微信支付功能默认配置的是逆行信息科技公众号的appId，在其它公众号项目中使用这些微信功能，需要先执行initWXSDK方法传入相应的appid：\nwxtool.init({\n    appId: 'xxxxxx', // appid  页面域名需要与公众号中设置的回调一致\n    sdkUrl: '//res.wx.qq.com/open/js/jweixin-1.1.0.js', // 微信js sdk地址\n    siteSignApi: 'http://jishub.com/api/siteSign', // 签名接口\n    sitePayApi: 'http://jishub.com/api/sitePay', // 微信支付统一下单\n    jsApiList: [ // 开启的js接口：定制分享内容支付\n        'onMenuShareTimeline',\n        'onMenuShareAppMessage',\n        'chooseWXPay'\n    ],\n    initFail: function () { // 初始化失败\n        console.log('wx init fail');\n    },\n    initDone: function () { // 初始化成功\n        console.log('wx init done');\n    },\n    debug: false // debug模式\n}, function () {\n    // 初始化成功回调\n});\n\n\n// 监测手机横竖屏(限制横屏)\nmixtool.landscape({\n    'pic': 'xxx', // 提示图片\n    'text': '为了更好的体验，请将手机/平板竖过来', // 提示文字\n    'bgcolor': '#32373b', // 遮罩背景色\n    'txtColor': '#ffd40a', // 遮罩字颜色\n    'prefix': 'MixShine', // 遮罩class样式名 prefix + '_landscape'\n    'zIndex': 10000, // 遮罩z-index值\n    'init': false // 监测初始化后回调\n}, function() {\n    // 横屏回调\n}, function () {\n    // 竖屏回调\n});\n\n\n// 监测手机横竖屏(手动控制限制横屏还是竖屏)使用new关键字创建限制实例\nvar restrict = new mixtool.landscape({\n    'manual': true, // 手动控制时必须设为true\n    'pic': 'xxx', // 提示图片\n    'text': '为了更好的体验，请将手机/平板竖过来', // 限制横屏时的提示文字\n    'vetiText': '为了更好的体验，请将手机/平板横过来', // 限制竖屏时的提示文字\n    'bgcolor': '#32373b', // 遮罩背景色\n    'txtColor': '#ffd40a', // 遮罩字颜色\n    'prefix': 'MixShine', // 遮罩class样式��� prefix + '_landscape'\n    'zIndex': 10000, // 遮罩z-index值\n    'init': false // 监测初始化后回调\n}, function() {\n    // 横屏回调\n}, function () {\n    // 竖屏回调\n});\nrestrict.restrictLand(); // 限制横屏\nrestrict.restrictVeti(); // 限制竖屏\nrestrict.noRestrict(); // 无限制\nrestrict.restrictAll(); // 横屏竖屏都限制\n\n\n\n// util工具集\nvar util = mixtool.util;\n\nutil.loadScript // 加载js\nutil.loadImage // 加载图片\nutil.nextFrame // requestAnimationFrame或者setTimeout fallback\nutil.cancelFrame // cancelRequestAnimationFrame或者clearTimeout fallback\nutil.setCssPrefix // 根据浏览器设置css前缀\nutil.styleVender // 根据浏览器获取css前缀\nutil.browser // 浏览器内核判断 ex: util.browser.versions.ios\nutil.isFunction\nutil.isString\nutil.isArray\nutil.getElement // 根据输入内容返回DOM元素，传入字符串就作为DOM的id，传入DOM元素返回本身\nutil.getOffset // 根据输入内容返回DOM元素，传入字符串就作为DOM的id，传入DOM元素相对给定相对元素或body左上角的偏移量\nutil.extend // 将源对象的所有属性拷贝到目标对象中\nutil.genNonceStr // 获取随机数\nutil.setCookie\nutil.getCookie\nutil.getUrlQuery // 读取url上带的参数\nutil.buildUrlQuery // 拼接url参数",
   "id": 191,
   "stars": 0,
   "errors": [
    1109,
    1005,
    1128,
    1109,
    1005,
    1128,
    1109,
    1135,
    1128,
    1109,
    1005,
    1128,
    1109,
    1135
   ],
   "hasCode": true,
   "nondeletedLines": 113,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/**\n   * wechatConfig 配置信息\n   * \n   * @param appid 应用唯一标识，在微信开放平台提交应用审核通过后获得\n   * @param redirectUri 重定向地址，需要进行UrlEncode\n   * @param scope 应用授权作用域，拥有多个作用域用逗号（,）分隔，网页应用目前仅填写snsapi_login即可\n   * @param loginType 默认 jssdk\n   * @param style     提供\"black\"、\"white\"可选，默认为黑色文字描述。详见文档底部FAQ\n   * @param href 自定义样式链接，第三方可根据实际需求覆盖默认样式。详见文档底部FAQ\n   * @param state 用于保持请求和回调的状态，授权请求后原样带回给第三方。该参数可用于防止csrf攻击（跨站请求伪造攻击），建议第三方带上该参数，可设置为简单的随机数加session进行校验\n   * @param selfRedirect true：手机点击确认登录后可以在 iframe 内跳转到 redirect_uri，false：手机点击确认登录后可以在 top window 跳转到 redirect_uri。默认为 false。\n*/\n\nimport { DWWeChatLoginConfig } from 'angular-daiwei-wechat-login';\n\nvar Component = \"Your Value Here\";\n\n@Component({\n  ...\n  template: `<dw-wechat-login [width]=\"'300px'\" [height]=\"'410px'\" [config]=\"weChatConfig\">\n            </dw-wechat-login>`\n})\nexport class AppComponent {\n\n  wechatConfig: DWWeChatLoginConfig = {\n    appid: 'wxbdc5610cc59c1631',\n    redirectUri: 'https%3A%2F%2Fpassport.yhd.com%2Fwechat%2Fcallback.do',\n    state: '3d6be0a4035d839573b04816624a415e',\n  };\n\n  constructor() {}\n}\n",
   "id": 192,
   "stars": 0,
   "errors": [
    2349,
    2304,
    1005,
    1136,
    1005,
    1219,
    8010
   ],
   "hasCode": true,
   "nondeletedLines": 27,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" />\n<link rel=\"stylesheet\" href=\"dist/leaflet-push-content-control.css\" />",
   "id": 193,
   "stars": 0,
   "errors": [
    17004,
    2657,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CrudWrapper = require('mrs-node-util').crud;",
   "id": 194,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mongooseQueue = \"Your Value Here\"\nawait mongooseQueue.reset()\nconsole.log('The queue was completely purged of all jobs.')",
   "id": 195,
   "stars": 0,
   "errors": [
    1375,
    1378,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Route = \"Your Value Here\";\nRoute('/home', HomeComponent)\n    .meta({\n        title: 'Home',\n        icon: 'fa-home'\n    });\n\n// Output\n{\n    path: '/home',\n    component: HomeComponent,\n    meta: {\n        title: 'Home',\n        icon: 'fa-home'\n    }\n}",
   "id": 196,
   "stars": 0,
   "errors": [
    2349,
    2304,
    2695,
    2304,
    1005,
    2304,
    2695,
    2304,
    1005,
    2695,
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var MP = \"Your Value Here\";\nMP.Memberships.get('/some/future/url', myAccessToken)\n  .then(function (data) {\n    console.log(\"You got the data:\", data);\n  });",
   "id": 197,
   "stars": 0,
   "errors": [
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CurrencyFormatter = \"Your Value Here\";\n// constructor\ninterface CurrencyFormatterProps {\n  locales: string | string[],\n  minimumIntegerDigits?: number,\n  precision?: number,\n  useGrouping?: boolean,\n  localeMatcher?: 'lookup' | 'best fit',\n  formatter?: typeof CurrencyFormatter.formatter,\n\n  style?: 'decimal' | 'currency' | 'percent',\n  currency?: string,\n  currencyDisplay?: 'symbol' | 'code' | 'name',\n}\n\n//options of format\ninterface optionsofformat {\n  minimumIntegerDigits?: number,\n  precision?: number,\n  useGrouping?: boolean,\n  localeMatcher?: 'lookup' | 'best fit',\n\n  style?: 'decimal' | 'currency' | 'percent',\n  currency?: string,\n  currencyDisplay?: 'symbol' | 'code' | 'name',\n}",
   "id": 198,
   "stars": 0,
   "errors": [
    8006,
    2339,
    8006
   ],
   "hasCode": true,
   "nondeletedLines": 21,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var cat = \"Your Value Here\"\n☁ ~ cat Garden.js\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst GardenStyle = styled.div`\n  opacity: 1\n`\n\nconst Garden = props => (\n  <GardenStyle>Hello {props.text}</GardenStyle>\n)\n\nexport default Garden",
   "id": 199,
   "stars": 0,
   "errors": [
    1127,
    1005,
    2448,
    2339,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "#!/usr/bin/env node\n\nvar husk = require('..').exec();\n\nhusk()\n  .whoami(function(code, signal) {\n    console.log('[code: %s, signal: %s]', code, signal);\n  })\n  .once('end', console.log.bind(null, '%s'))\n  .print()\n  .run();",
   "id": 200,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var find = \"Your Value Here\"\n/* Predicate fn */\nfind(\n  item => item.id === 1,\n  todos\n)\n// => {id: 1, name: \"lorem\", tagId: 2}\n\n/* Matching object */\nfindWith(\n  {\n    \"id\": 1\n  },\n  todos\n)\n// => {id: 1, name: \"lorem\", tagId: 2}\n\n/* Matching object & predicate fn */\nfilterWith(\n  {\n    \"tagId\": is // same as `tagId: source => is(source)`\n  },\n  todos\n)\n// => [{id: 1, name: \"lorem\", tagId: 2}]\n\n/* Syntactic sugar */\nfilterWith(\n  {\n    \"!tagId\": is // same as `tagId: not(is)`\n  },\n  todos\n)\n// => [\n//  {id: 2, name: \"ipsum\", tagId: null},\n//  {id: 3, name: \"dolor\", tagId: null}\n// ]",
   "id": 201,
   "stars": 0,
   "errors": [
    2349,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 27,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const htmlStream = require('web-html-stream');\n\n/**\n * @param {object} node, a DOM node like object.\n * @return {object} Anything really; return values are accumulated in an\n *   array.\n */\nfunction handler(node, ctx) {\n    // Do something with the node\n    return node;\n}\n\nconst testDoc = \"<html><body><div>\"\n        + \"<test-element foo='bar'>foo</test-element>\"\n        + \"</div></body>\";\n\nvar ReadableStream = \"Your Value Here\";\n\nconst inputStream = new ReadableStream({\n    start(controller) {\n        controller.enqueue(testDoc);\n        controller.close();\n    }\n});\n\n// Create a matcher to handle some elements, using CSS syntax. To avoid\n// shipping a CSS parser to clients, CSS selectors are only supported in node.\nvar reader = new htmlStream.HTMLTransformReader(inputStream, {\n    transforms: [\n        { selector: 'test-element[foo=\"bar\"]', handler: handler },\n        { selector: 'foo-bar', handler: handler },\n    ],\n    ctx: { hello: 'world' }\n});\n\n// Create the same matcher using more verbose selector objects. These are\n// especially useful when processing dynamic values, as this avoids the need to\n// escape special chars in CSS selectors.\nreader = new htmlStream.HTMLTransformReader(inputStream, {\n    transforms: [{\n        selector: {\n            nodeName: 'test-element',\n            attributes: [['foo', '=', 'bar']]\n        },\n        handler: handler,\n        // Optional: Request node.innerHTML / outerHTML as `ReadableStream`\n        // instances. Only available in rule objects.\n        stream: false\n    }],\n    ctx: { hello: 'world' }\n});\n\n// Read matches\nreader.read()\n.then(res => {\n    console.log(res);\n    return reader.read();\n})\n// {\n//   done: false,\n//   value: [\n//     \"<html><body><div>\",\n//     {\n//       \"nodeName\": \"test-element\",\n//       \"attributes\": {\n//         \"foo\": \"bar\"\n//       },\n//       \"outerHTML\": \"<test-element foo='bar'>foo</test-element>\",\n//       \"innerHTML\": \"foo\"\n//     },\n//     \"</div></body>\"\n//   ]\n// }\n.then(res => console.log);\n// { done: true, value: undefined }",
   "id": 202,
   "stars": 0,
   "errors": [
    2351
   ],
   "hasCode": true,
   "nondeletedLines": 43,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var rc = \"Your Value Here\";\n// here is our parent conductor\nvar parentConductor = rc.createConductor({\n    name: 'parent',\n    props: function() {\n        return {\n            count: 0,\n            candies: [ 'twix', 'snickers', 'kit kat' ]\n        };\n    }\n});\n\n// now we inherit by specifying a deps config\nvar childConductor = rc.createConductor({\n    name: 'child',\n    deps: [ parentConductor ],\n    props: function(inheritedProps) {\n        // children conductor are provided with the parent props.\n        // you can choose to mutate this object for the child conductor.\n\n        // note that mutating inheritedProps does NOT affect the parent\n        // conductor's props!\n        inheritedProps.count += 1;\n        inheritedProps.candies = inheritedProps.candies.concat('butterfinger');\n\n        // like the parent conductor, this returned value will become immutable\n        return inheritedProps;\n    },\n    handlers: [\n        function render(req, res, next) {\n            var props = rc.getProps(req);\n\n            res.render(props, next);\n            // => will render:\n            // {\n            //      count: 1,\n            //      candies: [ 'twix', 'snickers', 'kit kat', 'butterfinger' ]\n            // }\n        }\n    ]\n});",
   "id": 203,
   "stars": 0,
   "errors": [
    2339,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 25,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  ...\n var left = \"Your Value Here\"\n  height: '50%-1',\n  left: '45%+1',\n  ...",
   "id": 204,
   "stars": 0,
   "errors": [
    1128,
    2695,
    1005,
    2695,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var proxyList = \"Your Value Here\";\nproxyList.getByCountryCode('FR')\n          .then(function (proxies) {\n            // get proxies here\n          })\n          .catch(function (error) {\n            throw new Error(error);\n          });",
   "id": 205,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CREATE = \"Your Value Here\";\n/*** Add company table, insert some data and connect with user table ***/\n\n var TABLE = \"Your Value Here\";\n var id = \"Your Value Here\";\n var serial = \"Your Value Here\";\n var company_name = \"Your Value Here\";\n var character = \"Your Value Here\";\nCREATE TABLE \"company\"\n(\n   id serial,\n   company_name character(20) NOT NULL,\n   CONSTRAINT pk_company PRIMARY KEY (id),\n   CONSTRAINT uk_company UNIQUE (company_name)\n)\nWITH (\n  OIDS = FALSE\n);\n\nINSERT INTO \"company\"(company_name)\n    VALUES ('Company 1');\n\nALTER TABLE \"user\"\n  ADD COLUMN company_id integer;\n\nUPDATE \"user\" SET company_id = 1;\n\nALTER TABLE \"user\"\n   ALTER COLUMN company_id SET NOT NULL;\n\nALTER TABLE \"user\"\n  ADD CONSTRAINT fk_user FOREIGN KEY (company_id) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE NO ACTION;\n",
   "id": 206,
   "stars": 0,
   "errors": [
    1434,
    1434,
    2349,
    1005,
    1005,
    2349,
    1005,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    2349,
    2304,
    1434,
    2304,
    1434,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2304,
    1005,
    2304,
    2304,
    1434,
    2304,
    1434,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1435,
    2304,
    1434,
    2304,
    2304,
    1434,
    2304,
    1434,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1435,
    2304,
    1434,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 26,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var csgotm = require('node-csgotm-api');\nvar options = \"Your Value Here\";\nvar api = new csgotm.API(options);",
   "id": 207,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var listening = \"Your Value Here\"\nlistening\nvar client = \"Your Value Here\"\n var connected = \"Your Value Here\"\nclient connected\n var arg1 = \"Your Value Here\"\n var arg2 = \"Your Value Here\"\nargs: arg1,arg2\n var Hello = \"Your Value Here\"\n var World = \"Your Value Here\"\nbody: Hello World!",
   "id": 208,
   "stars": 0,
   "errors": [
    1434,
    2695,
    1434,
    8013
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {makeDispatcher} from \"robojs\"\nvar myNewEventDispatcher=makeDispatcher();",
   "id": 209,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var swangular = \"Your Value Here\";\nswangular.success(\"Great job!\");",
   "id": 210,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var sudo = \"Your Value Here\"\n var yum = \"Your Value Here\"\n var install = \"Your Value Here\"\n var clamav = \"Your Value Here\"\nsudo yum install clamav",
   "id": 211,
   "stars": 0,
   "errors": [
    1434,
    1434,
    1434
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var If = \"Your Value Here\"\nvar Player = \"Your Value Here\"\nIf in Player A's simulation the character just dodged the bullet in time, but in Player B's simulation the character didn't dodge that same bullet in time - strictly due to fuzziness - our two simulations are no longer in sync and we aren't sharing a game state any longer. We call this non-deterministic physics.",
   "id": 212,
   "stars": 0,
   "errors": [
    2322,
    1005,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2693,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n    var contentType = 'Content-Type';\n    var CreatenewUpdatePropertyManagerRequest = \"Your Value Here\";\n    var body = new CreatenewUpdatePropertyManagerRequest({\"key\":\"value\"});\n\n    controller.createnewPropertyManager(contentType, body, function(error, response, context) {\n\n    \n    });",
   "id": 213,
   "stars": 0,
   "errors": [
    2351,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var client = \"Your Value Here\";\nclient.summarization(\"<Your text to summarize>\")",
   "id": 214,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Mark = \"Your Value Here\";\n<Mark wrap=\"span\">*text*</Mark>",
   "id": 215,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var templateEngine = \"Your Value Here\";\nconst renderer = templateEngine.render(string[, parameters, style]);",
   "id": 216,
   "stars": 0,
   "errors": [
    2339,
    2693,
    2695,
    1109,
    2695,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var form = \"Your Value Here\";\nform.on('field', (name, value) => {});",
   "id": 217,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var onvif = \"Your Value Here\"\nvar ptz = \"Your Value Here\"\nonvif-ptz goto-home\n\nMove the camera to the home position.\n\nOptions:\n  --help          Show help  [boolean]\n  --version       Show version number  [boolean]\n  --baseUrl       The baseUrl of the camera.  [string] [required]\n  --path          The onvif path of the camera.  [string] [default: \"/onvif/device_service\"]\n  --username, -u  The username of the camera.  [string] [required]\n  --password, -p  The password of the camera.  [string] [required]",
   "id": 218,
   "stars": 0,
   "errors": [
    2362,
    2363,
    1005,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    2693,
    2304,
    1005,
    2304,
    1434,
    2304,
    2693,
    2693,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    2693,
    2304,
    2304,
    1005,
    2304,
    1434,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    2693,
    1109,
    1128,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    2693,
    2304,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    2693,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var pusudb = \"Your Value Here\"\npusudb.use('ws', function(req, socket, next){\n    console.log(req.headers) \n    console.log(req.params) // URL params\n    console.log(req.body) // Body-Data\n    console.log(req.docs) // Result sending to client \n    next()\n})",
   "id": 219,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Cookies from \"ts-cookies\";",
   "id": 220,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var LayerWebhooks = require('layer-webhooks');\n\nvar API_TOKEN = \"Your Value Here\";\n\nvar APP_ID = \"Your Value Here\";\n\n// Initialize by providing your Layer credentials\nvar layer = new LayerWebhooks({\n  token: API_TOKEN,\n  appId: APP_ID\n});\n\n// Register a webhook\nlayer.webhooks.register({\n  events: ['message.sent'],\n  url: 'https://mydomain.com/mywebhooks/messages-sent',\n  secret: 'Frodo is a Dodo',\n  config: {\n    name: 'My sample webhook'\n  }\n}, function(err, res) {\n  if (err) return console.error(err);\n\n  // Webhook registered\n});",
   "id": 221,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function App() {\n  var Auth = \"Your Value Here\";\n  var loginCall = \"Your Value Here\";\n  var meCall = \"Your Value Here\";\n  var storageBackend = \"Your Value Here\";\n  return (\n    <Auth\n      loginCall={loginCall}\n      meCall={meCall}\n      storageBackend={storageBackend}\n      storageNamespace='my-auth'\n      render={(authActions, authState, userState) => /* render my children */}\n    />\n  )\n}",
   "id": 222,
   "stars": 0,
   "errors": [
    17004,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var HOST;\nvar mypublicdevhost = \"Your Value Here\";\nHOST=mypublicdevhost.com",
   "id": 223,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import VuePictureCut from 'vue-picture-cut';\nvar Vue = \"Your Value Here\";\nVue.use(VuePictureCut);",
   "id": 224,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<iconly name=\"activity\" type=\"bold\" />\n<iconly name=\"activity\" type=\"bulk\" />\n<iconly name=\"activity\" type=\"light\" />\n<iconly name=\"activity\" type=\"outline\" />\n<iconly name=\"activity\" type=\"broken\" />\n<iconly name=\"activity\" type=\"tone\" />",
   "id": 225,
   "stars": 0,
   "errors": [
    17004,
    2657,
    17004,
    17004,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nfunction transferTokens(sender, to, amount) {\n  var Web3 = \"Your Value Here\";\n  const web3 = new Web3();\n  const TokenContract = web3.eth.contract(Token.abi).at(Token.address);\n  const data = TokenContract.transfer.getData(to, amount);\n  const options = { data, from: sender, to: Token.address };\n  return Transaction({ options });\n}\n\nconst tx = transferTokens(\n  '0xe8d3266f3c4f083ab8864b5e04aea7b087044e49',\n  '0x7967c4f4512195ba83ae8f08ca30f7b145be6cf8',\n  1000000\n);\n\nconst txhash = await tx.transact(provider);",
   "id": 226,
   "stars": 0,
   "errors": [
    2351,
    2304,
    2304,
    2304,
    2304,
    1375,
    1378,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { createLogger } = require('@livy/logger')\n\nconst logger = createLogger('my-app-logger', {\n  mode: 'async'\n})",
   "id": 227,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nvar Yobit = require('yobit-exchange-api');\nvar VersionTwo = require('yobit-exchange-api/lib/version_two');\nvar Trade = require('yobit-exchange-api/lib/trade');\n\nvar keys = {key: '', secret: ''}\nvar yobit = new Yobit(keys)\nvar version2 = new VersionTwo(keys);\nvar trade = new Trade(keys);\n\ntrade.getInfo(function(err, data) {\n  console.log(data);\n})\n\nversion2.ticker('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nversion2.depth('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nversion2.trades('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nyobit.fee(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.ticker(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.depth(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.trades(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.info(function(err, data) {\n  console.log(data);\n})\n",
   "id": 228,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 34,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var AllDocs = \"Your Value Here\";\n<AllDocs db=\"dbname\" include_docs ... />",
   "id": 229,
   "stars": 0,
   "errors": [
    17004,
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var tag1 = \"Your Value Here\"\ngauge1:+3\n - tag1:v1\n - tag2:v2",
   "id": 230,
   "stars": 0,
   "errors": [
    2363,
    1005,
    2304,
    2304,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const AssetsQueryOptions = require('drequest-maxdome').AssetsQueryOptions;\n\nconst assetId = <assetId>;\nconst assetsQueryOptions = new AssetsQueryOptions(assetId);\n\nconst assets =\n  await maxdome.request('assets')\n    .addOptions(assetsQueryOptions)\n    .send();",
   "id": 231,
   "stars": 0,
   "errors": [
    17004,
    17008,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {\n  isMobile,\n  isSmall,\n  isTablet,\n  isDesktop\n} from \"@times-stories/style-guide/helpers\";\n\nisMobile(); // Boolean\nisSmall(); // Boolean\nisTablet(); // Boolean\nisDesktop(); // Boolean",
   "id": 232,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/**\n* @param  {String}  language        Language identifier\n* @param  {String}  modelsString    Array with speakers-voice models-(optional)defaultStyle correspondence (e.g. '[[\"speaker1\",\"model1\",\"style1\"],[\"speaker2\",\"model2\"]]')\n* @param  {String}  vttText         Subtitle text, in VTT format\n* @param  {Number[]}    selectedSentences   Array with indexes of sentences to be synthesized\n* @return {String}                  JSON-formatted string for synthesis\n*/",
   "id": 233,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var exlog = \"Your Value Here\";\nexlog.error(new Error());",
   "id": 234,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {\n  EpubView, // Underlaying epub-canvas (wrapper for epub.js iframe)\n  EpubViewStyle, // Styles for EpubView, you can pass it to the instance as a style prop for customize it\n  ReactReader, // A simple epub-reader with left/right button and chapter navigation\n  ReactReaderStyle // Styles for the epub-reader it you need to customize it\n} from \"react-reader\";",
   "id": 235,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// {app_root}/config/plugin.js\nexports.cuteLogger = {\n  enable: true,\n  package: 'egg-cute-logger',\n};",
   "id": 236,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const asyncIteratorToStream = require(\"async-iterator-to-stream\");\n\n// promisified fs\nconst fs = require(\"mz/fs\");\n\nconst createReadStream = asyncIteratorToStream(async function*(file) {\n  const fd = await fs.open(file, \"r\");\n  try {\n    let size = yield;\n    while (true) {\n      const buf = Buffer.alloc(size);\n      const [n] = await fs.read(fd, buf, 0, size, null);\n      if (n < size) {\n        yield buf.slice(0, n);\n        return;\n      }\n      size = yield buf;\n    }\n  } finally {\n    await fs.close(fd);\n  }\n});\n\ncreateReadStream(\"foo.txt\").pipe(process.stdout);",
   "id": 237,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var 좌절 = \"Your Value Here\"\n좌절\nvar 아아아아 = \"Your Value Here\"\n아아아아",
   "id": 238,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const jwksClient = require('jwks-rsa');\n\nconst client = jwksClient({\n  rateLimit: true,\n  jwksRequestsPerMinute: 10, // Default value\n  jwksUri: 'https://sandrino.auth0.com/.well-known/jwks.json'\n});\n\nconst kid = 'RkI5MjI5OUY5ODc1N0Q4QzM0OUYzNkVGMTJDOUEzQkFCOTU3NjE2Rg';\nconst key = await client.getSigningKey(kid);\nconst signingKey = key.getPublicKey();",
   "id": 239,
   "stars": 0,
   "errors": [
    1378
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CWBClient = \"Your Value Here\";\nconst cwb = new CWBClient(API_KEY)",
   "id": 240,
   "stars": 0,
   "errors": [
    2351,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  \"homepage\": \"http://mywebsite.com/relativepath\",",
   "id": 241,
   "stars": 0,
   "errors": [
    1005,
    2695,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export default async function (e, t, a) {\n    let n = document.createElement(e);\n    n.append(...(await a));\n    return Object.assign(n, t);\n}",
   "id": 242,
   "stars": 0,
   "errors": [
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var app = \"Your Value Here\";\nrequire('ranker')(null, app);",
   "id": 243,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var POST = \"Your Value Here\";\n--> POST / {\"jsonrpc\":\"2.0\",\"id\":3,\"method\":\"eth_gasPrice\",\"params\":[]}\n<-- {\"jsonrpc\":\"2.0\",\"result\":\"0x2e90edd000\",\"id\":3}",
   "id": 244,
   "stars": 0,
   "errors": [
    2365,
    1109,
    2362,
    2363,
    2356
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var formatter = \"Your Value Here\"\nformatter --name=\"Fred Flintstone\" Australia < test/template.txt",
   "id": 245,
   "stars": 0,
   "errors": [
    2356,
    1005,
    2304,
    1005,
    2304,
    2593,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  var nconf = require('nconf');\n\n  //\n  // Requiring `nconf-redis` will extend the `nconf`\n  // module.\n  //\n  require('nconf-redis');\n\n  nconf.use('redis', { host: 'localhost', port: 6379, ttl: 60 * 60 * 1000 });",
   "id": 246,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Type definitions for Node.js 10.12\n// Project: http://nodejs.org/\n// Definitions by: Microsoft TypeScript <https://github.com/Microsoft>\n//                 Definitely Typed <https://github.com/DefinitelyTyped>\n//                 Alberto Schiabel <https://github.com/jkomyno>",
   "id": 247,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import formCreate from 'form-create'\nimport { maker } from 'form-create'\nvar Vue = \"Your Value Here\"\nVue.use(formCreate)",
   "id": 248,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// scss\nimport 'node_modules/@auraxy/react-select/lib/css/index.scss'\n\n// css\nimport 'node_modules/@auraxy/react-select/lib/css/index.css'",
   "id": 249,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import HttpModule from 'react-native-http-module';\n\nvar baseURL = \"Your Value Here\";\n\nvar headers = \"Your Value Here\";\n\nconst httpModule = new HttpModule(baseURL, headers);",
   "id": 250,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import tinyDelay from \"tiny-delay\"\n\ntinyDelay()",
   "id": 251,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var autossh = \"Your Value Here\";\nautossh({\n  host: '111.22.333.444',\n  username: 'root',\n  localPort: 'auto',\n  remotePort: 5432,\n  sshPort: 9999\n});",
   "id": 252,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  \"acm:DescribeCertificate\", // only for custom domains\n  \"acm:ListCertificates\",    // only for custom domains\n  \"acm:RequestCertificate\",  // only for custom domains\n  \"cloudfront:CreateCloudFrontOriginAccessIdentity\",\n  \"cloudfront:CreateDistribution\",\n  \"cloudfront:CreateInvalidation\",\n  \"cloudfront:GetDistribution\",\n  \"cloudfront:GetDistributionConfig\",\n  \"cloudfront:ListCloudFrontOriginAccessIdentities\",\n  \"cloudfront:ListDistributions\",\n  \"cloudfront:ListDistributionsByLambdaFunction\",\n  \"cloudfront:ListDistributionsByWebACLId\",\n  \"cloudfront:ListFieldLevelEncryptionConfigs\",\n  \"cloudfront:ListFieldLevelEncryptionProfiles\",\n  \"cloudfront:ListInvalidations\",\n  \"cloudfront:ListPublicKeys\",\n  \"cloudfront:ListStreamingDistributions\",\n  \"cloudfront:UpdateDistribution\",\n  \"iam:AttachRolePolicy\",\n  \"iam:CreateRole\",\n  \"iam:CreateServiceLinkedRole\",\n  \"iam:GetRole\",\n  \"iam:PutRolePolicy\",\n  \"iam:PassRole\",\n  \"lambda:CreateFunction\",\n  \"lambda:EnableReplication\",\n  \"lambda:DeleteFunction\",            // only for custom domains\n  \"lambda:GetFunction\",\n  \"lambda:GetFunctionConfiguration\",\n  \"lambda:PublishVersion\",\n  \"lambda:UpdateFunctionCode\",\n  \"lambda:UpdateFunctionConfiguration\",\n  \"route53:ChangeResourceRecordSets\", // only for custom domains\n  \"route53:ListHostedZonesByName\",\n  \"route53:ListResourceRecordSets\",   // only for custom domains\n  \"s3:CreateBucket\",\n  \"s3:GetAccelerateConfiguration\",\n  \"s3:GetObject\",                     // only if persisting state to S3 for CI/CD\n  \"s3:ListBucket\",\n  \"s3:PutAccelerateConfiguration\",\n  \"s3:PutBucketPolicy\",\n  \"s3:PutObject\"",
   "id": 253,
   "stars": 0,
   "errors": [
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695
   ],
   "hasCode": true,
   "nondeletedLines": 42,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var auth = \"Your Value Here\";\nconst appAuth = auth(\n    {\n        // Simple case where roles is a text field in User containing roles separated by commas\n        rolesGetter: async (context, userId) => {\n            const user = context.app.service(\"users\").get(userId);\n            return user.roles.split(\",\") || [];\n        },\n    },\n    \"jwt\"\n);\n\napp.service(\"service\").hooks({\n    before: {\n        all: appAuth,\n    },\n});",
   "id": 254,
   "stars": 0,
   "errors": [
    2349,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport logo from './logo.png'; // Tell Webpack this JS file uses this image\n\nconsole.log(logo); // /logo.84287d09.png\n\nfunction Header() {\n  // Import result is the URL of your image\n  return <img src={logo} alt=\"Logo\" />;\n}\n\nexport default Header;",
   "id": 255,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var llpaycahpayInstance = \"Your Value Here\";\n//data为代付同步返回的结果\nif(llpaycahpayInstance.submitSuccess(data)){\n    //todo,更新提现订单....\n}",
   "id": 256,
   "stars": 0,
   "errors": [
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var obj = { 'a': { 'b': { 'c': 'd' } } };\n\nvar dget = \"Your Value Here\";\n\nvar val = dget( obj );\n// returns 'd'",
   "id": 257,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "    var phonebook = \"Your Value Here\"\n var listall = \"Your Value Here\"\n    phonebook listall\n",
   "id": 258,
   "stars": 0,
   "errors": [
    1434
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var container = \"Your Value Here\";\n.container {\n    width: 100%;\n    height: 100%;\n  }",
   "id": 259,
   "stars": 0,
   "errors": [
    1128,
    1435,
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = function(eor){\n  return eor.define(\"Application\").extend(function(){\n    this.title = \"Express Override\";\n  })\n  .methods({\n    index : function(req, res) {\n      var sampleModel = eor.getModule(\"Sample\", \"Model\");\n      if(sampleModel.index()){\n        res.render('index', { title: this.title })\n      }else{\n        res.render('index', { title: this.title, error_message : \"ErrorCode => -1111\"});\n      }\n    },\n\n    hello : function(req, res) {\n      res.render('index', { title: eor.shared.name })\n    }\n  })\n};",
   "id": 260,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport { shallow } from 'enzyme';\nimport App from './App';\n\nit('renders without crashing', () => {\n  shallow(<App />);\n});",
   "id": 261,
   "stars": 0,
   "errors": [
    2593,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var bit = \"Your Value Here\";\nbit.get(\"mempool\").then((mepool) => {\n  //  mempool := {\n  //    tx: <array of mempool transactions>\n  //  }\n})",
   "id": 262,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var clock = \"Your Value Here\";\nclock.syncTime();",
   "id": 263,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\";\ngrunt.initConfig({\n  tishadow: {\n    test: {\n      command: 'spec',\n      options: {\n        junit: true\n      }\n    },\n    run: {\n      command: 'run',\n      options: {\n        junit: true,\n        patch: true,\n        preclear: true\n      }\n    }\n  }\n});",
   "id": 264,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var loginForm = \"Your Value Here\";\n.loginForm\n.username\n.usernameLabel\n.password\n.passwordLabel\n.remember\n.rememberLabel\n.button\n.forgotLink",
   "id": 265,
   "stars": 0,
   "errors": [
    1128,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var successCount\nvar librato = \"Your Value Here\"\nsuccessCount = librato.metric('foo.success.count')\nerrorCount   = librato.metric('foo.error.count')\n\nSomePromise().then(doSomething)\n             .then(doSomethingElse)\n             .then(successCount)    // Increment on success\n             .catch(errorCount)     // Increment error on failure",
   "id": 266,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2339,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import LockTableView from 'react-native-locktable';",
   "id": 267,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gh = \"Your Value Here\"\n var is = \"Your Value Here\"\nvar comment = \"Your Value Here\"\ngh is 1 --comment 'Node GH rocks!'",
   "id": 268,
   "stars": 0,
   "errors": [
    1434,
    1228,
    2357,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const input = document.querySelector('input');\nconst button = document.querySelector('.js-add-signature');\nbutton.addEventListener(event => {\n    var textFieldEdit = \"Your Value Here\";\n    textFieldEdit.insert(input, 'Made by 🐝 with pollen.');\n});",
   "id": 269,
   "stars": 0,
   "errors": [
    2584,
    2584,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var vue = \"Your Value Here\"\nvar ts = \"Your Value Here\"\nvar prettier = \"Your Value Here\"\nvue + ts + prettier\n\n  extends: [\n    'plugin:@etherfe/vue-typescript'\n    'plugin:@etherfe/vue-prettier'\n  ]",
   "id": 270,
   "stars": 0,
   "errors": [
    1128,
    1128,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import SensorManager from \"rnative-sensor-manager\";\nSensorManager.startPressure(100);\nvar DeviceEventEmitter = \"Your Value Here\";\nDeviceEventEmitter.addListener(\"pressure\", (data) => {\n  /**\n   * data.pressure\n   **/\n});\nSensorManager.stopPressure();",
   "id": 271,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const inspector = require('event-loop-inspector')();\nconst dump = inspector.dump();\n\nconsole.log(dump);",
   "id": 272,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var dao = \"Your Value Here\";\n// the value stored in column `key` of table `test` is encrypted in database\nconst testDao = dao.create(pool).table('test').encrypt(['key']);\n\nawait pool.transaction(async (query): Promise<boolean> => {\n  await dao.create(pool).delete().from('unittest_dao').exec(query);\n  await testDao.insert({\n    key: 'key1',\n    count: 1,\n    value: 'value1'\n  }).exec(query);\n  await testDao.update().set({\n    key: 'key1',\n    count: 1,\n    value: 'value2'\n  }).exec(query);\n  return true;\n})",
   "id": 273,
   "stars": 0,
   "errors": [
    2339,
    2304,
    1375,
    1378,
    2304,
    8010,
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  var bordinoAuthenticate = \"Your Value Here\";\n  bordinoAuthenticate.validateToken('mytoken')\n                     .then((isValide)=>{\n                       //do your job\n                     })\n                     .catch((e)=>(\n                       //handle error\n                     ))",
   "id": 274,
   "stars": 0,
   "errors": [
    2339,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { Plugin } from 'munar-core'\nexport default class MyPlugin extends Plugin {\n  // etc\n}",
   "id": 275,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import ActionSheet from 'react-native-actionsheet'\n\nvar React = \"Your Value Here\"\n\nclass Demo extends React.Component {\n  showActionSheet = () => {\n    this.ActionSheet.show()\n  }\n  render() {\n    return (\n      <View>\n        <Text onPress={this.showActionSheet}>Open ActionSheet</Text>\n        <ActionSheet\n          ref={o => this.ActionSheet = o}\n          title={'Which one do you like ?'}\n          options={['Apple', 'Banana', 'cancel']}\n          cancelButtonIndex={2}\n          destructiveButtonIndex={1}\n          onPress={(index) => { /* do something */ }}\n        />\n      </View>\n    )\n  }\n}",
   "id": 276,
   "stars": 0,
   "errors": [
    2339,
    17004,
    2304,
    17004,
    2304,
    2304,
    17004,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 22,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Field = \"Your Value Here\"\nField.add('ID', Field.INTEGER({\n  primaryKey    : true,\n  autoIncrement : true,\n  allowNull     : false,\n  validate      : { min: 1 }\n}))\nField.add('PK_INTEGER', Field.INTEGER({\n  primaryKey : true,\n  allowNull  : false,\n  validate   : { min: 1 }\n}))\nField.add('PK_UUID', Field.UUID({\n  primaryKey : true,\n  allowNull  : false\n}))",
   "id": 277,
   "stars": 0,
   "errors": [
    2339,
    2339,
    2339,
    2339,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { diveDeco } from 'diving-decompression'\n...\nconst dive = { depth: 100, bottomTime: 135 };\nconst decoObject = diveDeco(dive);\nconsole.log(decoObject)",
   "id": 278,
   "stars": 0,
   "errors": [
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var model = {\n  web: 'http://www.google.com',\n  images: 'http://images.google.com/'\n};",
   "id": 279,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var source = \"Your Value Here\";\nconsole.log(source.expand());",
   "id": 280,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const eip = require('eip');\nconst redis = require('redis');\nconst { PubSub, Queue } = require('eip-redis');\nconst { Timer } = require('eip-timer');\n\nconst redisPub = redis.createClient();\nconst redisSub =  redis.createClient({return_buffers:true});\n\nconst pubSub = new PubSub(1, 1000, redisPub, redisSub, 'namespace') // eventsPerPeriod, periodInMS\nconst queue = new Queue(redisPub, 'namespace');\nconst resource = x => x;\n\nvar timer = \"Your Value Here\";\n\nconst throttler = new eip.Route().throttleResource({ pubSub, queue, resource, timer });",
   "id": 281,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "void 0",
   "id": 282,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var useAxios = \"Your Value Here\";\nconst { loading, error, data, refetch } = useAxios({\n    url: \"api-url\",\n});\nreturn (\n    <div className=\"App\">\n        <h1>{loading && \"Loading\"}</h1>\n        <h1>{error && \"Error!\"}</h1>\n        <button onClick={refetch}>Refetch</button>\n        <div>{data && JSON.stringify(data)}</div>\n    </div>\n);",
   "id": 283,
   "stars": 0,
   "errors": [
    2349,
    1108
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var client = \"Your Value Here\"\nawait client.balances()\nawait client.balance('BTC')\nawait client.depositAddress('BTC')\nawait client.withdraw('BTC', { quantity: 1.2, address: 'abcde' })\nawait client.order('30594e6e-ba54-4914-96f3-5b9d5de2468e')\nawait client.orderHistory('BTC-ETH')\nawait client.withdrawalHistory('BTC')\nawait client.depositHistory('BTC')",
   "id": 284,
   "stars": 0,
   "errors": [
    1375,
    1378,
    2339,
    1375,
    1378,
    2339,
    1375,
    1378,
    2339,
    1375,
    1378,
    2339,
    1375,
    1378,
    2339,
    1375,
    1378,
    2339,
    1375,
    1378,
    2339,
    1375,
    1378,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CoreApiV10 = require('core_api_v10');\n\nvar api = new CoreApiV10.AuthApi()\n\nvar authorization = \"authorization_example\"; // {String} JWT access token\n\nvar opts = { \n  'model': new CoreApiV10.TwoFactorAuthenticatorConfirm() // {TwoFactorAuthenticatorConfirm} \n};\napi.v10Auth2faConfirmPost(authorization, opts).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n\n",
   "id": 285,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var recursive = \"Your Value Here\";\n// using promise API\nrecursive(\"/app\", {\n  ignores: [\"README.md\"],\n  fs, // in-memory fs\n  debug: true,\n  log: (...msg) => console.log(\"readdir\", ...msg)\n}).then(successFn, errFn);",
   "id": 286,
   "stars": 0,
   "errors": [
    2349,
    18004,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var name = \"Your Value Here\";\nvar hydrated = \"Your Value Here\";\n<template>\n  <div id=\"app\" v-if=\"hydrated\">\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data: () => ({ hydrated: false }),\n  async mounted() {\n    await this.$apollo.provider.defaultClient.hydrated()\n    this.hydrated = true\n  },\n}\n</script>",
   "id": 287,
   "stars": 0,
   "errors": [
    17004,
    2657,
    17004,
    17004,
    17004,
    1005,
    1382,
    1005,
    1381,
    1005,
    1381,
    1381
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var konstructor = \"Your Value Here\"\nkonstructor-cli new my-app",
   "id": 288,
   "stars": 0,
   "errors": [
    2362,
    2304,
    1005,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const repl = require('re-pl');\nconst run = require('setlist');\n\nvar let = \"Your Value Here\";\n\nrun(function* () {\n  // Initialize variables and do some work here\n  ...\n  let value = yield someWorkHere();\n\n  // Pause execution to inspect ongoing process\n  value = yield repl(($)=>eval($))(value);\n\n  // The edited/unedited return value can be used later\n  return lastWorkHere(value);\n});",
   "id": 289,
   "stars": 0,
   "errors": [
    1128,
    2802,
    1005,
    2304,
    1005,
    2304,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var walk = \"Your Value Here\"\nwalk(function(r, n){ return r+n }, 0, ...[1,2,3]) // -> 6",
   "id": 290,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var WrapperBuilder = require('thunkify-object').WrapperBuilder;\n\nvar Wrapper = new WrapperBuilder()\n .addEvent(['on', 'once'])\n .addPassThrough('emit')\n .getWrapper();",
   "id": 291,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var table = \"Your Value Here\";\ntable.page(1);",
   "id": 292,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var user = \"Your Value Here\"\nvar rolli = \"Your Value Here\"\nuser> @hubot 5rolli\nvar Hubot = \"Your Value Here\"\nHubot>\n var project = \"Your Value Here\"\n## test-project\n- 残り: 29.5 days (38.4 days/people, to: 2016/03/06)\n- 消化: 31.2 days (40.6 days/people, es: 247%)\n\nuser> @hubot 5rolli info test-project\nhubot>\n## test-project\n\n### タスク残り時間 (5時間/日, 1.3人換算)\n- 予想: 29.5 days (38.4 days/people, to: 2016/03/06)\n- 最速: 21 days (27.4 days/people, to: 2016/02/28)\n- 最悪: 65.4 days (85.1 days/people, to: 2016/05/01)\n\n### 完了タスク消化時間\n- 31.2 days (40.6 days/people)\n\n### タスク消化率\n- 予想: 31.4%\n- 最速: 32.7%\n- 最悪: 25.9%\n\n### 完了タスク消化ペース\n- 予想: 247%\n- 最速: 303%\n- 最悪: 136%\n\n### 初回終了予想日 (開始日: 2015/11/27)\n- 予想: 2016/01/31 (diff: 35 days)\n- 最速: 2016/01/17 (diff: 42 days)\n- 最悪: 2016/04/03 (diff: 28 days)",
   "id": 293,
   "stars": 0,
   "errors": [
    1109,
    1146,
    1005,
    1351,
    1109,
    1127,
    1127,
    1005,
    2593,
    2363,
    2304,
    1005,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    2304,
    1005,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    1109,
    1109,
    1146,
    1005,
    1351,
    1434,
    2304,
    2593,
    2363,
    2304,
    1127,
    1127,
    1005,
    2593,
    2363,
    1127,
    1127,
    1127,
    1005,
    2304,
    1351,
    2304,
    2304,
    1351,
    2304,
    2304,
    1005,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    2304,
    1005,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    2304,
    1005,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    1127,
    1127,
    1127,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    1127,
    1127,
    1127,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    1127,
    1127,
    1127,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    1127,
    1127,
    1127,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2349,
    2304,
    1005,
    1005,
    2304,
    2304,
    1005,
    2349,
    2304,
    1005,
    1005,
    2304,
    2304,
    1005,
    2349,
    2304,
    1005,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 30,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'suneditor/dist/css/suneditor.min.css'\nimport suneditor from 'suneditor'\n// Import codeMirror\nimport CodeMirror from 'codemirror'\nimport 'codemirror/mode/htmlmixed/htmlmixed'\nimport 'codemirror/lib/codemirror.css'\n\nsuneditor.create('sample', {\n    codeMirror: CodeMirror // window.CodeMirror,\n    // Set options\n    // codeMirror: {\n    //     src: CodeMirror,\n    //     options: {...}\n    // }\n    buttonList: [\n        ['codeView']\n    ],\n    height: 400\n});",
   "id": 294,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/*\nexample.js\n\nthis node script will serve a lightweight swagger-ui crud-api backed by mongodb\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n          $ npm install swagger-mongodb && npm_config_server_port=1337 node example.js\n    3. open a browser to http://localhost:1337\n    4. interact with the swagger-ui crud-api\n*/\n\n/*jslint\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n\n(function (local) {\n    'use strict';\n    switch (local.modeJs) {\n\n\n\n    // run node js-env code\n    case 'node':\n        // export local\n        module.exports = local;\n        // init assets\n        local.utility2.cacheDict.assets['/'] = '<!DOCTYPE html>\\n' +\n/* jslint-ignore-begin */\n'<html>\\n' +\n'<head>\\n' +\n'    <meta charset=\"UTF-8\">\\n' +\n'    <title>\\n' +\n'    {{envDict.npm_package_name}} [{{envDict.npm_package_version}}]\\n' +\n'    </title>\\n' +\n'    <link rel=\"stylesheet\" href=\"/assets/utility2.css\">\\n' +\n'    <style>\\n' +\n'    * {\\n' +\n'        box-sizing: border-box;\\n' +\n'    }\\n' +\n'    body {\\n' +\n'        background-color: #fff;\\n' +\n'        font-family: Helvetical Neue, Helvetica, Arial, sans-serif;\\n' +\n'    }\\n' +\n'    body > div {\\n' +\n'        margin: 20px 0 20px 0;\\n' +\n'    }\\n' +\n'    .testReportDiv {\\n' +\n'        display: none;\\n' +\n'    }\\n' +\n'    </style>\\n' +\n'    {{envDict.npm_config_html_head_extra}}\\n' +\n'</head>\\n' +\n'<body>\\n' +\n'    <div class=\"ajaxProgressDiv\" style=\"display: none;\">\\n' +\n'    <div class=\"ajaxProgressBarDiv ajaxProgressBarDivLoading\">loading</div>\\n' +\n'    </div>\\n' +\n'    <h1>{{envDict.npm_package_name}} [{{envDict.npm_package_version}}]</h1>\\n' +\n'    <h3>{{envDict.npm_package_description}}</h3>\\n' +\n'    <div class=\"testReportDiv\"></div>\\n' +\n'    <div id=\"swagger-ui-container\" style=\"display: none;\"></div>\\n' +\n'    <iframe height=\"512\" src=\"/assets/swagger-ui.html\" width=\"100%\"></iframe>\\n' +\n'    <script src=\"/assets/utility2.js\"></script>\\n' +\n'    <script src=\"/assets/swagger-ui.rollup.js\"></script>\\n' +\n'    <script src=\"/assets/swagger-mongodb.js\"></script>\\n' +\n'    <script src=\"/assets/example.js\"></script>\\n' +\n'    <script src=\"/test/test.js\"></script>\\n' +\n'    <script>\\n' +\n'    window.utility2 = window.utility2 || {};\\n' +\n'    window.utility2.envDict = {\\n' +\n'        npm_package_description: \"{{envDict.npm_package_description}}\",\\n' +\n'        npm_package_name: \"{{envDict.npm_package_name}}\",\\n' +\n'        npm_package_version: \"{{envDict.npm_package_version}}\"\\n' +\n'    };\\n' +\n'    document.querySelector(\"iframe\").onload = function () {\\n' +\n'        var self;\\n' +\n'        self = this;\\n' +\n'        self.height = innerHeight - self.offsetTop - 20;\\n' +\n'        self.contentWindow.location.hash = location.hash;\\n' +\n'        self.contentWindow.onclick = function () {\\n' +\n'            setTimeout(function () {\\n' +\n'                location.hash = self.contentWindow.location.hash;\\n' +\n'            });\\n' +\n'        };\\n' +\n'    };\\n' +\n'    </script>\\n' +\n'    {{envDict.npm_config_html_body_extra}}\\n' +\n'</body>\\n' +\n/* jslint-ignore-end */\n            '</html>\\n';\n        local.utility2.cacheDict.assets['/'] = local.utility2.stringFormat(\n            local.utility2.cacheDict.assets['/'],\n            { envDict: local.utility2.envDict },\n            ''\n        );\n        local.utility2.cacheDict.assets['/assets/example.js'] =\n            local.utility2.istanbul_lite.instrumentSync(\n                local.fs.readFileSync(__dirname + '/example.js', 'utf8'),\n                __dirname + '/example.js'\n            );\n        local.utility2.cacheDict.assets['/test/test.js'] =\n            local.utility2.istanbul_lite.instrumentInPackage(\n                local.fs.readFileSync(local.swmg.__dirname + '/test.js', 'utf8'),\n                local.swmg.__dirname + '/test.js',\n                'swagger-mongodb'\n            );\n        // init mongodb-client\n        local.utility2.onReady.counter += 1;\n        local.utility2.taskRunOrSubscribe({\n            key: 'swagger-mongodb.mongodbConnect',\n            onTask: function (onError) {\n                local.mongodb.MongoClient.connect(\n                    local.utility2.envDict.npm_config_mongodb_url ||\n                        'mongodb://localhost:27017/test',\n                    function (error, db) {\n                            // validate no error occurred\n                            local.utility2.assert(!error, error);\n                            local.swmg.db = db;\n                            onError();\n                            local.utility2.onReady();\n                        }\n                );\n            }\n        });\n        // init middleware\n        local.middleware = local.utility2.middlewareGroupCreate([\n            // init pre-middleware\n            local.utility2.middlewareInit,\n            // init cached-assets middleware\n            local.utility2.middlewareAssetsCached,\n            // init http-body-get middleware\n            local.utility2.middlewareBodyGet,\n            // init http-body-parse-upload middleware\n            function (request, response, nextMiddleware) {\n                var boundary, bodyText;\n                // jslint-hack\n                local.utility2.nop(response);\n                local.utility2.testTryCatch(function () {\n                    if ((request.headers['content-type'] || '')\n                            .indexOf('multipart/form-data') !== 0) {\n                        nextMiddleware();\n                        return;\n                    }\n                    boundary =\n                        '--' + (/boundary=(.*)/).exec(request.headers['content-type'])[1];\n                    request.swmgBodyParsed = {};\n                    bodyText = String(request.bodyRaw);\n                    bodyText.split(boundary).slice(1, -1).forEach(function (part) {\n                        request.swmgBodyParsed[\n                            (/\\bname=\"([^\"]*)/).exec(part)[1]\n                        ] = part.split('\\r\\n\\r\\n').slice(1).join('\\r\\n\\r\\n').slice(0, -2);\n                    });\n                    // set file\n                    bodyText.replace('\\r\\n\\r\\n', function (match0, ii) {\n                        // jslint-hack\n                        local.utility2.nop(match0);\n                        request.swmgBodyParsed.file = request.bodyRaw\n                            .slice(ii + 4, -(boundary.length + 6))\n                            .toString('base64');\n                    });\n                    request.swmgBodyParsed.file = request.bodyRaw\n                        .slice(bodyText.lastIndexOf('\\r\\n\\r\\n') + 4, -(boundary.length + 6))\n                        .toString('base64');\n                    // set filename\n                    request.swmgBodyParsed.filename = (/\\bfilename=\"([^\"]+)/).exec(bodyText);\n                    request.swmgBodyParsed.filename =\n                        request.swmgBodyParsed.filename &&\n                        request.swmgBodyParsed.filename[1];\n                    nextMiddleware();\n                }, nextMiddleware);\n            },\n            // init http-body-parse middleware\n            local.swmg.middlewareBodyParse,\n            // init swagger pre-middleware\n            function (request, response, nextMiddleware) {\n                // jslint-hack\n                local.utility2.nop(request);\n                // enable cors\n                // http://en.wikipedia.org/wiki/Cross-origin_resource_sharing\n                response.setHeader(\n                    'Access-Control-Allow-Methods',\n                    'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'\n                );\n                response.setHeader('Access-Control-Allow-Origin', '*');\n                // init content-type\n                response.setHeader('Content-Type', 'application/json; charset=UTF-8');\n                nextMiddleware();\n            },\n            // init swagger middleware\n            local.swmg.middlewareSwagger\n        ]);\n        // init error-middleware\n        local.middlewareError = local.swmg.middlewareError;\n        // init petstore-api\n        (function () {\n            var methodPath, options, schema;\n            options = local.utility2.jsonCopy(require(local.swmg.local\n                .swagger_ui_lite.__dirname + '/swagger.json'));\n            options = {\n                definitions: options.definitions,\n                paths: options.paths,\n                tags: options.tags\n            };\n            // remove unused properties\n            delete options.definitions.ApiResponse;\n            // init schema\n            Object.keys(options.definitions).forEach(function (schemaName) {\n                schema = options.definitions[schemaName];\n                // init id\n                schema.properties.id = { type: 'string' };\n                schema['x-inheritList'] = [{ $ref: '#/definitions/JsonapiResource' }];\n            });\n            local.utility2.objectSetOverride(options, {\n                definitions: {\n                    // init Pet schema\n                    Pet: {\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            id: 'pet0',\n                            name: 'birdie',\n                            photoUrls: [],\n                            status: 'available',\n                            tags: [{ name: 'bird'}]\n                        }, {\n                            id: 'pet1',\n                            name: 'kittie',\n                            status: 'pending',\n                            photoUrls: [],\n                            tags: [{ name: 'cat'}]\n                        }, {\n                            id: 'pet2',\n                            name: 'doggie',\n                            photoUrls: [],\n                            status: 'sold',\n                            tags: [{ name: 'dog'}]\n                        }],\n                        _collectionName: 'SwmgPet'\n                    },\n                    // init Order schema\n                    Order: {\n                        // create index\n                        _collectionCreateIndexList: [{\n                            key: { status: 1 },\n                            name: 'status_1'\n                        }],\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            id: 'order0',\n                            status: 'available'\n                        }, {\n                            id: 'order1',\n                            status: 'pending'\n                        }, {\n                            id: 'order2',\n                            status: 'sold'\n                        }],\n                        _collectionName: 'SwmgOrder',\n                        properties: {\n                            petId: { type: 'string' }\n                        }\n                    },\n                    // init User schema\n                    User: {\n                        // create index\n                        _collectionCreateIndexList: [{\n                            key: { username: 1 },\n                            name: 'username_1',\n                            unique: true\n                        }],\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            email: 'john@doe.com',\n                            firstName: 'john',\n                            id: 'user0',\n                            lastName: 'doe',\n                            password: 'hello',\n                            phone: '1234-5678',\n                            username: 'john.doe'\n                        }, {\n                            email: 'jane@doe.com',\n                            firstName: 'jane',\n                            id: 'user1',\n                            lastName: 'doe',\n                            password: 'bye',\n                            phone: '8765-4321',\n                            username: 'jane.doe'\n                        }],\n                        _collectionName: 'SwmgUser'\n                    }\n                },\n                // init crud-api\n                paths: {\n                    '/pet/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgPet',\n                        _crudApi: 'pet',\n                        _schemaName: 'Pet',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['pet']\n                    } },\n                    '/store/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgOrder',\n                        _crudApi: 'store',\n                        _schemaName: 'Order',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['store']\n                    } },\n                    '/user/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgUser',\n                        _crudApi: 'user',\n                        _schemaName: 'User',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['user']\n                    } }\n                }\n            }, 4);\n            // transform petstore-api to swagger-mongodb's crud-api\n            Object.keys(options.paths).forEach(function (path) {\n                Object.keys(options.paths[path]).forEach(function (method) {\n                    methodPath = options.paths[path][method];\n                    // init methodPath._schemaName\n                    switch (path.split('/')[1]) {\n                    case 'pet':\n                        methodPath._schemaName = 'Pet';\n                        break;\n                    case 'store':\n                        methodPath._schemaName = 'Order';\n                        break;\n                    case 'user':\n                        methodPath._schemaName = 'User';\n                        break;\n                    }\n                    methodPath._collectionName = 'Swmg' + methodPath._schemaName;\n                    delete methodPath.produces;\n                    delete methodPath.responses;\n                    delete methodPath.security;\n                    // init jsonapi response\n                    local.utility2.objectSetDefault(methodPath, { responses: {\n                        200: {\n                            description: '200 ok - http://jsonapi.org/format' +\n                                '/#document-structure-top-level',\n                            schema: { $ref: '#/definitions/JsonapiResponse{{_schemaName}}' }\n                        }\n                    } }, 2);\n                    // init crudCreateMany / crudCreateOne / crudDeleteByIdOne / crudGetByIdOne\n                    switch (methodPath.operationId) {\n                    case 'addPet':\n                    case 'createUser':\n                    case 'placeOrder':\n                        methodPath.operationId = 'crudCreateOne';\n                        break;\n                    case 'createUsersWithArrayInput':\n                    case 'createUsersWithListInput':\n                        methodPath.operationId = 'crudCreateMany';\n                        break;\n                    case 'deleteOrder':\n                    case 'deletePet':\n                    case 'deleteUser':\n                        methodPath.operationId = 'crudDeleteByIdOne';\n                        break;\n                    case 'getOrderById':\n                    case 'getPetById':\n                    case 'getUserByName':\n                        methodPath.operationId = 'crudGetByIdOne';\n                        break;\n                    }\n                    // init id\n                    (methodPath.parameters || []).forEach(function (paramDef) {\n                        switch (paramDef.name) {\n                        case 'orderId':\n                        case 'petId':\n                            delete paramDef.format;\n                            paramDef.type = 'string';\n                            break;\n                        }\n                    });\n                });\n            });\n            local.swmg.apiUpdate(options);\n        }());\n        // init petstore-middleware\n        local.middleware.middlewareList.push(function (request, response, nextMiddleware) {\n            var modeNext, onNext, options;\n            modeNext = 0;\n            onNext = function (error, data) {\n                local.utility2.testTryCatch(function () {\n                    modeNext = error\n                        ? Infinity\n                        : modeNext + 1;\n                    switch (modeNext) {\n                    case 1:\n                        // init id\n                        ((request.swmgMethodPath && request.swmgMethodPath.parameters) || [\n                        ]).forEach(function (paramDef) {\n                            switch (paramDef.name) {\n                            case 'orderId':\n                            case 'petId':\n                                request.swmgParamDict.id = request.swmgParamDict[paramDef.name];\n                                break;\n                            }\n                        });\n                        // init options\n                        if (request.swmgMethodPath) {\n                            options = {\n                                collectionName: request.swmgMethodPath._collectionName,\n                                data: request.swmgParamDict,\n                                operationId: request.swmgMethodPath.operationId,\n                                paramDefList: request.swmgMethodPath.parameters,\n                                schemaName: request.swmgMethodPath._schemaName\n                            };\n                        }\n                        switch (request.swmgPathname) {\n                        // handle pet request\n                        case 'DELETE /pet/':\n                        case 'GET /pet/':\n                        case 'POST /pet':\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /pet/findByStatus':\n                            options.operationId = 'crudGetByQueryMany';\n                            options.data.fields = '{}';\n                            options.data.hint = '{}';\n                            options.data.limit = 100;\n                            options.data.query = '{\"status\":{\"$in\":' +\n                                JSON.stringify(options.data.status) + '}}';\n                            options.data.skip = 0;\n                            options.data.sort = '{\"_timeModified\":-1}';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /pet/findByTags':\n                            options.operationId = 'crudGetByQueryMany';\n                            options.data.fields = '{}';\n                            options.data.hint = '{}';\n                            options.data.limit = 100;\n                            options.data.query = '{\"status\":{\"$in\":' +\n                                JSON.stringify(options.data.tags) + '}}';\n                            options.data.skip = 0;\n                            options.data.sort = '{\"_timeModified\":-1}';\n                            options.paramDefList[0].default = 'bird,cat,dog';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /pet/':\n                            options.data.upsert = true;\n                            options.data.body = {\n                                id: options.data.id,\n                                name: options.data.name,\n                                status: options.data.status\n                            };\n                            options.operationId = 'crudUpdateOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /pet//':\n                            options.data.body = {\n                                additionalMetadata: options.data.additionalMetadata,\n                                file: options.data.file,\n                                filename:\n                                    request.swmgBodyParsed && request.swmgBodyParsed.filename,\n                                id: options.id\n                            };\n                            options.data.upsert = true;\n                            options.operationId = 'crudUpdateOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'PUT /pet':\n                            options.data.upsert = true;\n                            options.operationId = 'crudReplaceOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        // handle store request\n                        case 'DELETE /store/order/':\n                        case 'GET /store/order/':\n                        case 'POST /store/order':\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /store/inventory':\n                            options.data = { body: [{\n                                $group: { _id: '$status', total: { $sum: 1} }\n                            }, {\n                                $project: { _id: 0, status: '$_id', total: '$total' }\n                            }]};\n                            options.operationId = 'crudAggregateMany';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        // handle user request\n                        case 'DELETE /user/':\n                        case 'GET /user/':\n                        case 'POST /user/createWithArray':\n                        case 'POST /user/createWithList':\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /user':\n                            options.data.username = options.data.body.username;\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'PUT /user/':\n                            options.data.body.username = options.data.username;\n                            options.data.upsert = true;\n                            options.operationId = 'crudReplaceOne';\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        default:\n                            nextMiddleware();\n                        }\n                        break;\n                    default:\n                        // validate no error occurred\n                        local.utility2.assert(!error, error);\n                        // respond with json-object\n                        response.end(JSON.stringify(data));\n                    }\n                }, nextMiddleware);\n            };\n            onNext();\n        });\n        // run server-test\n        local.utility2.testRunServer(local);\n        break;\n    }\n}((function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code\n    (function () {\n        // init local\n        local = {};\n        // init js-env\n        local.modeJs = (function () {\n            try {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            } catch (errorCaughtNode) {\n                var navigator = \"Your Value Here\";\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    'browser';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // export local\n        local.global.local = local;\n        // init swagger-mongodb\n        local.swmg = local.modeJs === 'browser'\n            ? window.swmg\n            : require('swagger-mongodb');\n        // import swmg.local\n        Object.keys(local.swmg.local).forEach(function (key) {\n            local[key] = local[key] || local.swmg.local[key];\n        });\n        // init utility2\n        local.utility2 = local.swmg.local.utility2;\n        // init onReady\n        local.utility2.onReadyInit();\n    }());\n    return local;\n}())));",
   "id": 295,
   "stars": 0,
   "errors": [
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2769,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2584,
    2339,
    2339,
    2304,
    2339,
    2339,
    2339,
    2304,
    2339,
    2339,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 507,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var client = \"Your Value Here\";\nclient.indexes.list({ $select: ['name', 'fields'] });",
   "id": 296,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = require('export-files')(__dirname, '**/*.json');",
   "id": 297,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Store = \"Your Value Here\";\nexport default new Store(hydrate({\n  modules: {\n    flights: {\n      state: {\n        selected: null,\n        in_flight: []\n      }\n    }\n  }\n}))",
   "id": 298,
   "stars": 0,
   "errors": [
    2351,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Ajv from 'ajv';\nimport betterAjvErrors from 'better-ajv-errors';\n// const Ajv = require('ajv');\n// const betterAjvErrors = require('better-ajv-errors');\n\n// You need to pass `jsonPointers: true`\nconst ajv = new Ajv({ jsonPointers: true });\n\n// Load schema and data\nconst schema = ...;\nconst data = ...;\n\nconst validate = ajv.compile(schema);\nconst valid = validate(data);\n\nif (!valid) {\n  const output = betterAjvErrors(schema, data, validate.errors);\n  console.log(output);\n}",
   "id": 299,
   "stars": 0,
   "errors": [
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "    import SmartFlatList from 'react-native-smart-refresh-flatlist'",
   "id": 300,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var status;\nPrefer: status=200",
   "id": 301,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import CanvasSlider from '@martsis/canvas-slider';",
   "id": 302,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import isEmpty from 'just-is-empty';\n isEmpty({a: 3, b: 5}) // false\n isEmpty([1, 2]) // false\n isEmpty(new Set([1, 2, 2])) // false\n isEmpty((new Map()).set('a', 2)) // false\n isEmpty({}) // true\n isEmpty([]) // true\n isEmpty(new Set()) // true\n isEmpty(new Map()) // true\n isEmpty('abc') // false\n isEmpty('') // true\n isEmpty(0) // true\n isEmpty(1) // true\n isEmpty(true) // true\n isEmpty(Symbol('abc')); // true\n isEmpty(//); // true\n isEmpty(new String('abc')); // false\n isEmpty(new String('')); // true\n isEmpty(new Boolean(true)); // true\n isEmpty(null) // true\n isEmpty(undefined) // true",
   "id": 303,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 21,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const fs = require('fs');\nconst readable = require('co-readable');\nconst co = require('co');\n\nconst read = readable(fs.createReadStream('bigfile'));\n\nco(function* () {\n  let buf;\n  let size = 0;\n  while (buf = yield read(1024)) {\n    console.log('read %d bytes', buf.length);\n    size += buf.length;\n  }\n  console.log('total read %d bytes', size);\n}).catch(function (err) {\n  console.error(err.stack);\n});",
   "id": 304,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'onap-ui-common/lib/style.css';",
   "id": 305,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var tou8 = require('utf8-to-uint8array')\nvar str = '💩'\nconsole.log(tou8(str))",
   "id": 306,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\";\ngrunt.initConfig({\n  winston: {\n    myLogger: {\n      options: {\n        hooks: [\n          function (logger) {\n            logger.on('logging', function (transport, level, msg, meta) {\n              // [msg] and [meta] have now been logged at [level] to [transport]\n            });\n          },\n          function (logger) {\n            logger.addColors({\n              foo: 'blue',\n              bar: 'green',\n              baz: 'yellow',\n              foobar: 'red'\n            });\n          }\n        ]\n      }\n    }\n  }\n});",
   "id": 307,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "     var api = \"Your Value Here\";\n     api.stuff.items.POST",
   "id": 308,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var pull = \"Your Value Here\";\npull(\n  pl.read(db, {live: true}),\n  //log data as it comes,\n  //because tail will keep the connection open\n  //so we'll never see the end otherwise.\n  pull.through(console.log),\n  //note, pull-streams will not drain unless something is\n  //pulling the data through, so we have to add drain\n  //even though the data we want is coming from pull.through()\n  pull.drain()\n)",
   "id": 309,
   "stars": 0,
   "errors": [
    2349,
    2304,
    2304,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require(\"gulp\");\nvar reveasy = require(\"gulp-rev-easy\");\n\ngulp.task(\"reveasy\", function (argument) {\n  gulp.src(\"test.html\")\n    .pipe(reveasy({\n        fileTypes:['img1'],\n        elementAttributes:{\n            img1:{\n                name:'img',\n                src:'data-src'\n            }\n        }))\n    .pipe(gulp.dest(\"./dist\"))\n})",
   "id": 310,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Nothing = \"Your Value Here\"\nvar S = \"Your Value Here\"\n> S.reduce (S.concat) ('abc') (Nothing)\nvar Just = \"Your Value Here\"\n'abc'\n\n> S.reduce (S.concat) ('abc') (Just ('xyz'))\n'abcxyz'",
   "id": 311,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const defaults = {\n    passengers: {\n        adults: 1,\n        children: 0\n    }\n}",
   "id": 312,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Iri = \"Your Value Here\";\ntype ResolveResourceFn = (\n  resourceIri?: Iri,\n  context?: any,\n  info?: GraphQLResolveInfo\n) => ?ResolverOutput<any>",
   "id": 313,
   "stars": 0,
   "errors": [
    8008,
    2749,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Any = \"Your Value Here\";\nconst StringToken = Any(\n  /^('[^'\\\\]*(?:\\\\.[^'\\\\]*)*')/,  // single-quoted\n  /^(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")/,  // double-quoted\n);\n\nconst Identifier = /^([a-zA-Z_$][a-zA-Z0-9_$]*)/;\nconst SumExpression = All(Identifier, '=', Identifier, '+', Identifier);",
   "id": 314,
   "stars": 0,
   "errors": [
    2349,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const assert = require('assert')\n\nfunction counter (value) {\n    switch (typeof value) {\n    case 'object': {\n            if (null) {\n                return 1\n            }\n            let sum = 0\n            if (Array.isArray(value)) {\n                for (const item of value) {\n                    sum += counter(item)\n                }\n            }\n            for (const name in value) {\n                for (const item of value) {\n                    sum += counter(value[name])\n                }\n            }\n        }\n    default:\n        return 1\n    }\n}\n\nassert.equal(counter({ a: 'x', b: [ 'y', 'z' ] }), 3, 'found three scalar values')",
   "id": 315,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 24,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var bookshelf = \"Your Value Here\";\nconst Model = bookshelf.Model.extend({\n    casts: {\n        // Property 'locked' will be converted into a boolean value\n        locked: 'boolean',\n\n        age(dbValue) {\n            return parseInt(dbValue, 10);\n        },\n\n        notFourtyTwo() {\n            return 42;\n        }\n    }\n});\n\nModel.forge().fetch('id', 91)\n        .then( model => {\n            typeof modal.get('locked'); // 'boolean'\n            model.get('notFourtyTwo');  // 42\n            typeof model.get('age'); // 'number'\n        });",
   "id": 316,
   "stars": 0,
   "errors": [
    2339,
    2552
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var access = \"Your Value Here\";\naccess.list(options, callback);",
   "id": 317,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\";\n// shave and a haircut, two bits :D\ngrunt.task.run('beep:twobits');",
   "id": 318,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ModulusCombine = require('modulus-combine');\n\n// 4 digits before the decimal and keep 5 decimal digits (9 total)\nvar modulusCombine = new ModulusCombine(4, 10);\n\nmodulusCombine.compress(3.456789, 367.123123123);\n// -> 34567800000036712000\n\nmodulusCombine.deflate(34567800000036712000);\n// -> [ 3.45678, 367.12448 ]\n",
   "id": 319,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function (d) { return this.accessor(d) !== undefined && this.accessor(d) !== ''; }",
   "id": 320,
   "stars": 0,
   "errors": [
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// '../mock/index';\nconst item = {\n  id: 2,\n  wechatId: 'aaaaaa',\n  wechatName: '测试公众号',\n  appId: '1414',\n  type: 2,\n};\n\nlet start = 0;\nconst getList = () => {\n  const recordList = [];\n  for (let i = 0; i < 10; i++) {\n    const temp = { ...item };\n    Object.keys(temp).forEach((k) => {\n      temp[k] += start++;\n    });\n    recordList.push(temp);\n  }\n\n  return recordList;\n};\n\nexport const api = () => Promise.resolve({\n  totalRecord: 666,\n  recordList: getList(),\n});\n",
   "id": 321,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var orderBy = \"Your Value Here\";\n.orderBy(\"key1\", \"key2\");\n.orderBy({ \"key1\": \"asc\" }, { \"key2\": \"desc\" });\n.orderBy([\"key1\", \"key2\"]);\n.orderBy([{ \"key1\": \"asc\" }, { \"key2\": \"desc\" }]);",
   "id": 322,
   "stars": 0,
   "errors": [
    1128,
    2349,
    1128,
    2349,
    1128,
    2349,
    1128,
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { handle } from 'kefir.handle';\n\nvar Kefir = \"Your Value Here\";\n\nvar source = Kefir.sequentially(100, [0, 1, 2, 3]);\nvar result = source::handle({\n  value(emitter) { /* value handler */ }\n})",
   "id": 323,
   "stars": 0,
   "errors": [
    2339,
    1005,
    1134,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var sc = \"Your Value Here\"\n var ip = \"Your Value Here\"\n var 获取本机ip = \"Your Value Here\"\nsc ip 获取本机ip",
   "id": 324,
   "stars": 0,
   "errors": [
    1434,
    1434
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import scroll from \"@threespot/freeze-scroll\";\n\n// Disable scrolling\nscroll.freeze();\n\n// Enable scrolling\nscroll.unfreeze();",
   "id": 325,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nconst run = async() => {\n  // 默认参数\n  const expire = {\n    expireTime: 24, // 过期时间 24h\n    unit: 'hour', // hour | minute | second | millisecond\n    auto: true, // 自动过期， 开启会定时清除24h以前的数据\n  }\n\n  var databee = \"Your Value Here\";\n\n  // 使用默认过期时间 expire\n  await databee.expire();\n\n  // 自定义数据过期时间\n  await databee.expire(expire);\n}",
   "id": 326,
   "stars": 0,
   "errors": [
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function getIssueEventsCollection(comicId, characters, creators, limit, modifiedSince, name, nameStartsWith, offset, orderBy, series, stories, callback)",
   "id": 327,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var git = \"Your Value Here\"\n var submodule = \"Your Value Here\"\n var update = \"Your Value Here\"\ngit submodule update --remote web-platform-tests",
   "id": 328,
   "stars": 0,
   "errors": [
    1434,
    1435,
    2356,
    1005,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var stachedown = \"Your Value Here\";\nstachedown.renderStrict('The {{important_thing}} must be visible.', {});\n// throws Error",
   "id": 329,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const contentSourceKey = '' // your content source key\nconst user = 'enterprise_search' // username\n var client = \"Your Value Here\"\nconst permissions = { permissions: ['permission2'] } // permissions to add to the user\n\nclient\n  .addUserPermissions(contentSourceKey, user, permissions)\n  .then(response => {\n    // handle response\n  })\n  .catch(error => {\n    // handle error\n  })",
   "id": 330,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//set ray position\nthis.ray.setOrigin(400, 300);\n//set ray direction (in radians)\nthis.ray.setAngle(2);\n//set ray direction (in degrees)\nthis.ray.setAngleDeg(90);\n//cast single ray and get closets intersection, hit mapped object and hit segment\nlet intersection = this.ray.cast();\nlet hitObject = intersection.object;\nlet hitSegment = intersection.segment;\n\n//cast rays in all directions (toward all mapped objects vertices / points)\nlet intersections = this.ray.castCircle();\n\n//set ray's cone angle (in radians)\nthis.ray.setCone(1);\n//set ray's cone angle (in degrees)\nthis.ray.setConeDeg(90);\n\n//cast rays in a cone\nlet intersections = this.ray.castCone();",
   "id": 331,
   "stars": 0,
   "errors": [
    2451,
    2451
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var qLUHmrFGexxpyHwQphLpE1czZNFE5m1xmV = \"Your Value Here\"\npublic address: qLUHmrFGexxpyHwQphLpE1czZNFE5m1xmV\n var key = \"Your Value Here\"\nprivate key (WIF): cNQKccYYQyGX9G9Qxq2DJev9jHygbZpb2UG7EvUapbtDx5XhkhYE",
   "id": 332,
   "stars": 0,
   "errors": [
    1128,
    1128,
    2349,
    2304,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var MOUNTED = \"Your Value Here\";\nvar INTERVAL = \"Your Value Here\";\nvar NEW_LOADER = \"Your Value Here\";\nvar NEW_DOMAIN = \"Your Value Here\";\nvar NEW_SUBDOMAIN = \"Your Value Here\";\nvar UPDATE_POINTS_PER_SERIES = \"Your Value Here\";\nMOUNTED, // First render of the chart\nINTERVAL, // If you specify an update interval, it will be called every n seconds\nNEW_LOADER, // The loader function changed\nNEW_DOMAIN, // The outer domain changed,\nNEW_SUBDOMAIN, // The user zoomed to a new subdomain.\nUPDATE_POINTS_PER_SERIES, // The pointsPerSeries prop has changed",
   "id": 333,
   "stars": 0,
   "errors": [
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const appCred = 'yourappcred';\nconst connectionURL = 'nodeConnectionURL';",
   "id": 334,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var api = \"Your Value Here\";\napi.convertToCoordinates(\"filled.count.soap\")\n  .then(function(response) {\n    console.log(\"[convertToCoordinates]\", response);\n  })\n  .catch(function(error) { // catch errors here\n    console.log(\"[code]\", error.code);\n    console.log(\"[message]\", error.message);\n  });",
   "id": 335,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Iterable from \"iterable.flow\"",
   "id": 336,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var f = \"Your Value Here\";\n// $ExpectType void\nf(1);\n\n// $ExpectError\nf(\"one\");",
   "id": 337,
   "stars": 0,
   "errors": [
    2349,
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var db = \"Your Value Here\";\ndb.status(function(obj){\n    console.log('Status', obj);\n});",
   "id": 338,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Book = \"Your Value Here\";\nconst book = new Book();\n\nRx.Observable.combineLatest(\n  book.subject('chapter1'),\n  book.subject('chapter2'),\n)\n.subscribe(() => {\n  console.log('Two first chapters are ready');\n});\n\nbook.publish('chapter1');\nbook.publish('chapter2');",
   "id": 339,
   "stars": 0,
   "errors": [
    2351,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var inspect = \"Your Value Here\";\nabout:inspect",
   "id": 340,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.",
   "id": 341,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var etcd = \"Your Value Here\";\nvar token = etcd.get(\"key\", console.log);\ntoken.abort() // also aliased as token.cancel()\n\nconsole.log(\"Request is cancelled: \", token.isAborted());",
   "id": 342,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var htdocs = \"Your Value Here\"\nhtdocs/example/\n  |- example.js     <-- your 'example' script file",
   "id": 343,
   "stars": 0,
   "errors": [
    2362,
    2304,
    1109,
    2363,
    2304,
    2304,
    1005,
    1005,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const fs = require(\"fs\");\nconst { parseSkinFile } = require('json2ableton-live-skin');\nconst skinFileBuffer = fs.readFileSync(__dirname + '/skinFile.ask');\nconst skin = parseSkinFile(skinFileBuffer);\nconsole.log(skin);\n// => {\"format\":\"live9\",\"ControlForeground\":[0,0,0,255],\"TextDisabled\":[90,90,9...\"ViewCheckControlDisabledOff\":[66,66,66,255]}",
   "id": 344,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { MentionsInput, Mention } from 'react-mentions'",
   "id": 345,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var morphology = require(\"ball-morphology\")\n\nrequire(\"get-pixels\")(\"bwimage.png\", function(err, data) {\n  var r = data.pick(-1, -1, 0)\n  \n  // ... do stuff ...\n})",
   "id": 346,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var web3 = \"Your Value Here\";\nweb3.utils.decodeBech32Address(hrp, bech32Address)",
   "id": 347,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ObjectStorage = require('ibmcloud-objectstorage');\nvar config = {\n    provider: 'openstack',\n    useServiceCatalog: true,\n    useInternal: false,\n    keystoneAuthVersion: 'v3',\n    authUrl: '',\n    tenantId: '', //projectId from credentials\n    domainId: '',\n    username: '',\n    password: '',\n    region: '' //dallas or london region\n};\nvar os = new ObjectStorage(config, \"my-container\");",
   "id": 348,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Vue from 'vue'\nimport VuePagination from 'v-pc-pagination'\nVue.use(VuePagination)",
   "id": 349,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var is = \"Your Value Here\";\nis.number(42);\n=> true\n\nis.number(NaN);\n=> false\n\nis.not.number('42');\n=> true\n\nis.all.number('foo', 1);\n=> false\n\nis.any.number({}, 2);\n=> true\n\n// 'all' and 'any' interfaces can also take array parameter\nis.all.number([42, 'foo', 1]);\n=> false",
   "id": 350,
   "stars": 0,
   "errors": [
    2339,
    1128,
    2339,
    1128,
    2339,
    1128,
    2339,
    1128,
    2339,
    1128,
    2339,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var React = \"Your Value Here\";\n({\n  timelineContext: {\n    timelineWidth,\n    visibleTimeStart,\n    visibleTimeEnd,\n    canvasTimeStart,\n    canvasTimeEnd\n  },\n  headerContext: {\n    unit,\n    intervals: this.state.intervals\n  },\n  getRootProps: this.getRootProps,\n  getIntervalProps: this.getIntervalProps,\n  showPeriod,\n  //contextual data passed through headerData\n  data,\n})=> React.Node",
   "id": 351,
   "stars": 0,
   "errors": [
    2300,
    1359,
    2300,
    1005,
    1005,
    2300,
    1359,
    2300,
    1005,
    2300,
    1359,
    2300,
    1005,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ParseServer         = require('parse-server').ParseServer;\nvar AzureStorageAdapter = require('parse-server-azure').FilesAdapter;\n\nvar account = 'YOUR_AZURE_STORAGE_ACCOUNT_NAME';\nvar container = 'YOUR_AZURE_STORAGE_CONTAINER_NAME';\nvar options = {\n    accessKey: 'YOUR_ACCESS_KEY',\n    directAccess: false // If set to true, files will be served by Azure Blob Storage directly\n}\n\nvar api = new ParseServer({\n  appId: process.env.APP_ID || 'myAppId',\n  serverURL: process.env.SERVER_URL || 'http://localhost:1337'\n  (...)\n  filesAdapter: new AzureStorageAdapter(account, container, options);\n});",
   "id": 352,
   "stars": 0,
   "errors": [
    2349,
    1109,
    1005,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var yieldCache = \"Your Value Here\";\nconst cache = yieldCache();",
   "id": 353,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import TelephoneInput from 'react-tel-input-japan';\n\nvar React = \"Your Value Here\";\n\nReact.renderComponent(\n  <div>\n    <TelephoneInput\n      value={this.state.value}\n      onChange={(value, valid) => this.setState({ value, valid })}\n      placeholder={'input telephone number'}\n    />\n  </div>,\n  document.querySelector('#element'));",
   "id": 354,
   "stars": 0,
   "errors": [
    2339,
    17004,
    17004,
    2532,
    2532,
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var when = \"Your Value Here\";\n// Conditionally execute a function to continue configuration\n// condition: Boolean\n// whenTruthy: Function -> ChainedMap\n  // invoked when condition is truthy, given a single argument of the ChainedMap instance\n// whenFalsy: Optional Function -> ChainedMap\n  // invoked when condition is falsy, given a single argument of the ChainedMap instance\nwhen(condition, whenTruthy, whenFalsy)",
   "id": 355,
   "stars": 0,
   "errors": [
    2349,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var analytics = \"Your Value Here\";\n// Reset current visitor\nanalytics.reset()",
   "id": 356,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var tr = require(\"tr-064\");\nvar tr064 = new tr.TR064();\ntr064.initTR064Device(\"fritz.box\", 49000, function (err, device) {\n    if (!err) {\n       var wanip = device.services[\"urn:dslforum-org:service:WANIPConnection:1\"];\n       wanip.actions.GetInfo(function(err, result){\n               console.log(result);\n       });\n    }\n});\n",
   "id": 357,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var editable = \"Your Value Here\"\n<vue-googlemap-polygon :paths=\"paths\" :events=\"events\" @change=\"change\" editable ></vue-googlemap-polygon>",
   "id": 358,
   "stars": 0,
   "errors": [
    2365,
    2304,
    2304,
    2304,
    1005,
    1005,
    1005,
    1146,
    1005,
    1109,
    2304,
    2304,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var dynogels = \"Your Value Here\";\nvar Account = dynogels.define('Account', {\n  hashKey : 'email',\n\n  // add the timestamp attributes (updatedAt, createdAt)\n  timestamps : true,\n\n  schema : {\n    email   : Joi.string().email(),\n    name    : Joi.string(),\n    age     : Joi.number(),\n    roles   : dynogels.types.stringSet(),\n    settings : {\n      nickname      : Joi.string(),\n      acceptedTerms : Joi.boolean().default(false)\n    }\n  }\n});",
   "id": 359,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2304,
    2304,
    2339,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const strava = require('strava-v3');\nstrava.athlete.get({'access_token':'abcde'},function(err,payload,limits) {\n    //do something with your payload, track rate limits\n    console.log(limits);\n    /*\n    output:\n    {\n       shortTermUsage: 3,\n       shortTermLimit: 600,\n       longTermUsage: 12,\n       longTermLimit: 30000\n    }\n    */\n});",
   "id": 360,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var $scope = \"Your Value Here\";\n$scope.$on('auth:account-destroy-error', function(ev, reason) {\n  alert(\"Account deletion failed: \" + reason.errors[0]);\n});",
   "id": 361,
   "stars": 0,
   "errors": [
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const logging = require(\"console-logging\");\nconst logger = logging.logger;",
   "id": 362,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { MatomoService } from \"bim-gdpr/src/services/matomo/matomo\"\n\nvar bGDPR = \"Your Value Here\"\n\n// Create services :\nconst matomo = bGDPR.createService( new MatomoService('//matomo.php') )\nmatomo.setWeight( -1 ) // Place matomo first.\n\n// Then initialize\nbGDPR\n    .setTemplate( new DefaultTemplate() ) // Initialize the view\n    .init() // Initialize the core",
   "id": 363,
   "stars": 0,
   "errors": [
    2339,
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require('gulp');\nvar concatCss = require('gulp-concat-css');\n\ngulp.task('default', function () {\n  return gulp.src('assets/**/*.css')\n    .pipe(concatCss(\"styles/bundle.css\"))\n    .pipe(gulp.dest('out/'));\n});",
   "id": 364,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ALMA_APIKEY\nvar l7xxabcdefghijklmnopqrstuvwxyz = \"Your Value Here\"\n var node = \"Your Value Here\"\nALMA_APIKEY=l7xxabcdefghijklmnopqrstuvwxyz node test.js ",
   "id": 365,
   "stars": 0,
   "errors": [
    1005,
    2593
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const M5Stack = require(\"m5stackjs\");\n\nlet m5 = new M5Stack('OBNIZ_ID_HERE');\n\nm5.onconnect = async function () {\n  m5.buttonA.onchange = (state) => {\n      console.log(state);\n  }\n  \n  const servo = m5.wired(\"ServoMotor\", {signal:2});\n  servo.angle(90);\n\n};\n",
   "id": 366,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// TodoLib.js\nimport memoize from 'memoize-one';\nimport { createStatedLib } from '@stated-library/base';\nimport createTodo from './createTodo';\nimport fetchTodosFromCloud from './fetchTodosFromCloud';\n\nexport default function createTodoLib() {\n\n  const getCompletedTodos = memoize(\n    todos => todos.filter(todo => todo.completed)\n  );\n\n  const getActiveTodos = memoize(\n    todos => todos.filter(todo => !todo.completed)\n  );\n\n  function deriveState(rawState) {\n    return {\n      ...rawState,\n      get activeTodos() {\n        return getActiveTodos(rawState.todos);\n      },\n      get completedTodos() {\n        return getCompletedTodos(rawState.todos);\n      },\n    }\n  }\n\n  return createStatedLib(\n    { todos: [] },\n    base => ({\n\n      addTodo(text) {\n        var makeTodo = \"Your Value Here\";\n        base.updateState({\n            todos: base.state.todos.concat(makeTodo(text)),\n          }, 'ADD_TODO');\n      },\n\n      toggleTodo(id) {\n        base.updateState({\n          todos: base.state.todos.map(todo =>\n            todo.id === id ? { ...todo, completed: !todo.completed } : todo)\n        }, 'TOGGLE_TODO');\n      },\n\n      async fetchTodos() {\n        base.updateState({ isFetching: true }, 'FETCH_TODOS_START');\n        const newTodos = await fetchTodosFromCloud();\n        base.updateState({\n          todos: base.state.todos.concat(newTodos),\n          isFetching: false,\n        }, 'FETCH_TODOS_COMPLETE');\n      },\n    }),\n  { deriveState });\n",
   "id": 367,
   "stars": 0,
   "errors": [
    2349,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 47,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const fs = require('fs');\nconst { generate } = require('gas-entry-generator');\n\nconst fooSource = fs.readFileSync('foo.js', {encoding: 'utf8'});\nconst options = {\n  comment: true,\n  autoGlobalExports: true // Enable to detect exports.* to generate entry point functions.\n};\nconst output = generate(fooSource, options);\nconsole.log(output.entryPointFunctions);\nconsole.log('-----');\nconsole.log(output.globalAssignments);",
   "id": 368,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Config = require('webpack-chain');\n\nconst config = new Config();",
   "id": 369,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n// your-component.js\nimport Dummy from 'innoark-npm2'\n\n...\n<Dummy className=\"dummy\" />\n...\n\n// your-component.css\nvar dummy = \"Your Value Here\";\n.dummy {\n var white = \"Your Value Here\";\n  color: white;\n  var background = \"Your Value Here\";\n  background-color: purple;\n}\n",
   "id": 370,
   "stars": 0,
   "errors": [
    1128,
    17004,
    1128,
    1128,
    1434,
    2362,
    2304,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Trusona = \"Your Value Here\"\nconst trusona = new Trusona(token, secret)\n\nconst document = await trusona.getIdentityDocument(document.id)\n\ndocument.verificationStatus // UNVERIFIED, UNVERIFIABLE, VERIFIED, or FAILED",
   "id": 371,
   "stars": 0,
   "errors": [
    2351,
    2304,
    2304,
    1375,
    1378,
    2448
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var async = \"Your Value Here\"\n var MergeIntoMKV = \"Your Value Here\"\nasync MergeIntoMKV(downloadedFile = LocalVideoObjectSchema,\n                   srt_subtitles = array(SubtitleMeta),\n                   selectedFile = VideoObjectSchema)",
   "id": 372,
   "stars": 0,
   "errors": [
    1434,
    2349,
    2304,
    2304,
    2304,
    2552,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var jamr = \"Your Value Here\"\njamr -w ./model.json -i ./text-file.txt -o ./where-ever.txt -n 5 -s 5000",
   "id": 373,
   "stars": 0,
   "errors": [
    2362,
    2304,
    1003,
    2304,
    2304,
    1003,
    2304,
    2304,
    2304,
    1003,
    2304,
    2304,
    2304,
    1005,
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export default {\n  modules: [\n    'nuxt-feed-yandex-market'\n  ],\n  yandexMarket: {\n    data: {}, // JSON with data or a function that returns the JSON \n    path: '/yandex-market.xml', // The route to your xml file\n    validate: true,\n    cacheTime: 1000 * 3600 * 24 \n  }\n}",
   "id": 374,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var window = \"Your Value Here\";\nif ('scrollRestoration' in window.history) {\n  window.history.scrollRestoration = 'manual';\n}",
   "id": 375,
   "stars": 0,
   "errors": [
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Counter = () => {\n  var useState = \"Your Value Here\"\n  const [count, setCount] = useState(0)\n  return <div>\n    <button onClick={() => setCount(count + 1)} >Increment</button>\n    <span>count: {count}</span>\n  </div>\n}",
   "id": 376,
   "stars": 0,
   "errors": [
    2349,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var removeRow = \"Your Value Here\"\nremoveRow(\n  change: Change,\n  options: {\n    at?: number,\n    normalize?: boolean,\n  }\n): Change",
   "id": 377,
   "stars": 0,
   "errors": [
    2349,
    2304,
    1005,
    2304,
    2304,
    1005,
    2693,
    2693,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var url = \"Your Value Here\";\n// On GET /statistics\n// Get the top score\nif (url === '/top-score') {\n    var dpd = \"Your Value Here\";\n    dpd.scores.get({$limit: 1, $sort: {score: -1}}, function(result) {\n    setResult(result[0]);\n    });\n}",
   "id": 378,
   "stars": 0,
   "errors": [
    2339,
    2552
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "                                                                                          var am = \"Your Value Here\";\n                                                                                      \n    am([34, 56, 78]).forEach(function (value, i) {\n           console.log(value, i);\n    })\n    \n    .log()  // 34 0, 56 1, 78 2, [34, 56, 78]\n    \n    .error(err=>{      \n              // handle errors at end of chain\n      \n    })\n  ",
   "id": 379,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var AuthModule = \"Your Value Here\";\nAuthModule.forRoot({\n  domain: 'YOUR_AUTH0_DOMAIN',\n  clientId: 'YOUR_AUTH0_CLIENT_ID',\n  organization: 'YOUR_ORGANIZATION_ID'\n}),",
   "id": 380,
   "stars": 0,
   "errors": [
    2339,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const InsertHtmlWebpackPlugin = require('insert-html-webpack-plugin')\n\nnew InsertHtmlWebpackPlugin(\n  // 第一个参数，必填，配置文件列表\n  {\n    js: [\n      // 可以配置多个，按顺序依次插入\n      { path: 'a.js' }, // path属性表示使用script内联方式\n      { path: 'b.js' },\n      { url: 'https://c.com/c.js' } // url属性表示使用script外部引入方式\n    ],\n    css: [\n      { path: 'd.css' }, // path属性表示使用style内联方式\n      { url: 'https://e.com/e.css' } // url属性表示使用link外部引入方式\n    ]\n  },\n  // 第二个参数，可选，配置插入位置，默认值如下\n  {\n    jsNode: '<body>', // 指定js要插入的节点位置\n    jsSide: 'after', // js要插入在节点位置处的前面还是后面，可选值'after'、'before'\n    cssNode: '</title>', // 指定css要插入的节点位置\n    cssSide: 'after', // css要插入在节点位置处的前面还是��面，可选值'after'、'before'\n  }\n)",
   "id": 381,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const path = require(\"path\")\n\"../../whatwg-fetch/fetch.js\": path.join( // this is the third-party dependency in the lrnwebcomponents\n  __dirname,\n  \"../node_modules/whatwg-fetch/fetch.js\" // this is where it lives in node_modules\n)",
   "id": 382,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { enableProdMode, NgZone } from '@angular/core';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { Router } from '@angular/router';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport singleSpaAngular from 'single-spa-angular';\nimport { singleSpaPropsSubject } from './single-spa/single-spa-props';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst lifecycles = singleSpaAngular({\n  bootstrapFunction: singleSpaProps => {\n    singleSpaPropsSubject.next(singleSpaProps);\n    return platformBrowserDynamic().bootstrapModule(AppModule);\n  },\n  template: '<app-root />',\n  Router,\n  NgZone,\n  domElementGetter: () => document.getElementById('angular-app')\n});\n\nexport const bootstrap = lifecycles.bootstrap;\nexport const mount = lifecycles.mount;\nexport const unmount = lifecycles.unmount;",
   "id": 383,
   "stars": 0,
   "errors": [
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  }
 ],
 "After TS+Delete": [
  {
   "code": "let $PS = require('ps-ajaxqueue');\n\n$PS.ajaxQueue({\n    url: \"https://api.ipify.org/?format=jsonp\",\n    dataType: \"jsonp\",\n    clearQueueDelay: null\n}).done(function (data) {\n    console.log(data);\n});",
   "id": 0,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const style={{\n//     standaloneLayout:{display:'flex', maxWidth:'fit-content'}\n// }}",
   "id": 1,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var express   = require(\"express\")\nvar nofavicon = require(\"express-no-favicons\")\nvar app       = express();\n\napp.use(nofavicon());\n\napp.listen(process.env.PORT)",
   "id": 2,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { poll, ORDER_CREATED } = require('lib-events');\n\nasync function processMessage({ type, source, id, checksum }, ack) {\n  if (type === ORDER_CREATED) {\n    console.log(`${source} created an order!`);\n  }\n\n  await ack()\n}\n\nexports.process = async function () {\n  await poll(processMessage, {\n    maxNumberOfMessages: 10,\n    maxIterations: 10\n  });\n}",
   "id": 3,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " // returns a data object with the name of the control and the raw MIDI message\nkmix.on('any', (data) => {\n    console.log('control-name', data.control, 'control-data', data.raw)\n    // data.control example: 'fader-1'\n    // data.raw example: [176,1,67]\n    switch(data.control){\n        case 'fader-1':\n            console.log('fader-1', data.raw)\n            break;\n        case 'button-vu':\n            console.log('button-vu', data.raw)\n            break;\n        case 'button-vu:off':\n            console.log('button-vu:off', data.raw)\n            break;\n        default:\n            console.log('any other data', data)\n    }\n})",
   "id": 4,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Schema from '@jalik/schema';\n\nexport const ExampleSchema = new Schema({\n  time: {\n    type: 'string',\n    // The time must be like 'HH:mm'\n    pattern: '^\\\\d{1,2}:\\\\d{1,2}$'\n  },\n  password: {\n    type: 'string',\n    // The password must contain alphanumeric and special characters\n    pattern: /^[a-zA-Z0-9_&#@$*%?!]+$/\n  }\n});",
   "id": 5,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const sander = require('@marionebl/sander');\nconst Tesseract = require('tesseract.js');\nconst {langPath} = require('@tessdata/eng');\nconst { buffer } = require('stream/consumers');\r\n\nconst image = sander.readFile('some-image.png');\nconst tesseract = Tesseract.create({langPath});\n\ntesseract.recognize(Buffer, {\n  lang: 'eng'\n});",
   "id": 6,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const sagaABC = function* sagaABC() {\n  yield take('ACTION_A');\n  // Do some I/O here.\n//   yield put(actionB());\n//   yield put(actionC());\n};\n\nconst sagaDE = function* sagaDE() {\n  yield take('ACTION_D');\n//   yield put(actionE());\n};\r\n\r\nfunction* take(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 7,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "`external: [...Object.keys(pkg.dependencies || {}), ...Object.keys(pkg.peerDependencies || {})],`",
   "id": 8,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mkpdf = require('mkpdf')\n\nmkpdf().from('/path/to/document.md').to('/path/to/document.pdf', function () {\n    console.log('Done')\n})\n\n// Or using streams\nvar fs = require('fs')\n\nfs.createReadStream('/path/to/document.md')\n    .pipe(mkpdf())\n    .pipe(fs.createWriteStream('/path/to/document.pdf'))",
   "id": 9,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import sinon from 'sinon';\nimport { expect } from 'chai';",
   "id": 10,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Cacher = require(\"softweb-cacher\");",
   "id": 11,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const { start } = require(\"repl\")\r\n\n// - Register providers inside the your start/app.js file.\n// ```js\nconst providers = [\n    ...\n//         '@faisal50x/ray/providers/RayProvider',\n//     ...\n]",
   "id": 12,
   "stars": 0,
   "errors": [
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = ({name, source, places, index, count, filesCount, errorsCount}) => {\n    return '';\n};",
   "id": 13,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Get the current state of analytics\n// analytics.getState()\n\n// Get a subpath of state\n// analytics.getState('context.offline')",
   "id": 14,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const isChromeAgent = (context) => {\n  return context.req.headers['User-Agent'].indexOf('Chrome') !== -1;\n}\n\napp.useIf(isChromeAgent, async (context) => {\n  context.res.headers['Content-Type'] = 'text/html';\n});\n\n// now if a route was called from Chrome browser, the response will be set to HTML COntent-Type",
   "id": 15,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var x11 = require('x11-hash-js');\n\nconsole.log(x11.digest('The great experiment continues.'));\n// -> '4da3b7c5ff698c6546564ebc72204f31885cd87b75b2b3ca5a93b5d75db85b8c'",
   "id": 16,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const myMessage = await wtsqs.popOne()\n// The message no longer exists in queue\n// console.log(myMessage)\n// output:\n{\n//   id: 'messageId',\n  receiptHandle: 'messageReceiptHandle'\n//   md5: 'messageMD5',\n  body: { a: 1 }\n}",
   "id": 17,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { create } = require(\"domain\")\r\n\n\n// ## Issues\n// If you have questions or issues feel free to create new an topic in const [issues](https://github.com/Smip/ngx-materialize/issues).\n\n// ## License\n\n// Licensed under [MIT](https://opensource.org/licenses/MIT).",
   "id": 18,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import LazyBackgroundSizes from 'vue-lazy-background-sizes';\n\nconst MyLazyBackground = {\n    mixins: [LazyBackgroundSizes],\n    data() {\n        return {\n            screens: ['762', '1200'],\n        }\n    },\n}\n\n// Vue.component('my-lazy-background', MyLazyBackground);",
   "id": 19,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "backand.initiate({\n  appName: 'APP_NAME',\n  signUpToken: 'SIGNUP_TOKEN',\n  anonymousToken: 'ANONYMOUS_TOKEN'\n});\n\nbackand.service.useAnonymousAuth()\n  .then(() => {\n//       return backand.service.getList('USERS');\n  })\n  .then((response) => {\n      console.log(response);\n  })\n  .catch(function(error){\n      console.log(error);\n  });\n",
   "id": 20,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// mp.people.saveJson(\"example.json\");",
   "id": 21,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// # Install package\n// yarn add @boldgrid/components\n\n// # Import CSS files from dist folder (SASS).\n// @import '@boldgrid/components/dist/css/components.min.css';\r\n\r\nfunction folder(SASS) {\r\n    throw new Error('Function not implemented.')\r\n}\r\n",
   "id": 22,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// WWWWWW||WWWWWW\n//  W W W||W W W\n//       ||\n//     ( OO )__________\n//      /  |           \\\n//     /o o|    MIT     \\\n//     \\___/||_||__||_|| *\n//          || ||  || ||\n//         _||_|| _||_||\n//        (__|__|(__|__|",
   "id": 23,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport logo from './logo.png'; // Tell Webpack this JS file uses this image\n\nconsole.log(logo); // /logo.84287d09.png\n\nfunction Header() {\n  // Import result is the URL of your image\n//   return <img src={logo} alt=\"Logo\" />;\n}\n\nexport default Header;",
   "id": 24,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<html>\n  ...\n//   <head>\n    ...\n//     <script src=\"angular.js\"></script>\n//     <script src=\"bower_components/ngSnakeCamel/ng-snake-camel.js\"></script>\n    ...\n  </head>\n  ...\n</html>",
   "id": 25,
   "stars": 0,
   "errors": [
    17004,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const mongoose = require('mongoose');\n\n// mongoose.connect(connectionOptions);\n\nconst keyv = new keyv({\n//   store: new KeyvMongoDB({ mongooseConnection: mongoose.connection })\n});",
   "id": 26,
   "stars": 0,
   "errors": [
    2448
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "grunt.initConfig({\n  checkFileSize: {\n    options: {\n      separator: ': ',\n      punctuation: ' !!!',\n    },\n    files: {\n      'dest/default_options': ['src/testing', 'src/123'],\n    },\n  },\n});",
   "id": 27,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const removeEmptyLines = require(\"remove-blank-lines\");\n\nconsole.log(removeEmptyLines(\n    `Hello\n\nWorld!\n\n\n  **   **\n\n  **   **\n\n     -\n\n*         *\n\n *********`\n));\n// =>\n// Hello\n// World!\n//   **   **\n//   **   **\n//      -\n// *         *\n//  *********",
   "id": 28,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var failpoints = require('failpoints').create();\n\n// setup failpoints\n\nfailpoints.setAll(true);\nfailpoints.setAll({probability: 0.5});\nfailpoints.setAll(false);\n",
   "id": 29,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const HumanName = new GraphQLValidatedString({\n  name: 'HumanName'\n}).regex(/([a-zA-Z]{3,30}\\s*)+/);\n\nAssert.throws(()=> {\n  HumanName.parseValue('aa');\n}, /does not match/);",
   "id": 30,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import set from \"just-safe-set\";\n\nconst obj1 = {};\nset(obj1, \"a.aa.aaa\", 4); // true\nobj1; // {a: {aa: {aaa: 4}}}\n\nconst obj2 = {};\n// set(obj2, const [a, aa, aaa], 4); // true\nobj2; // {a: {aa: {aaa: 4}}}\n\nconst obj3 = { a: { aa: { aaa: 2 } } };\nset(obj3, \"a.aa.aaa\", 3); // true\nobj3; // {a: {aa: {aaa: 3}}}\n\n// don't clobber existing\nconst obj4 = { a: { aa: { aaa: 2 } } };\nset(obj4, \"a.aa\", { bbb: 7 }); // false\n\nconst obj5 = { a: {} };\nconst sym = Symbol();\nset(obj5.a, sym, 7); // true\nobj5; // {a: {Symbol(): 7}}",
   "id": 31,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { title } = require(\"process\")\r\n\r\n// id: '0000-0000-0000-0000',\n// difficulty: [..],\n// clearRate: number,\n// title: 'Name',\n// img: 'Url',\n// thumbnailImg: 'Url',\n// gameStyle: [..],\n// createdAt: Timestamp,\n// tag: [..],\n// stared: number,\n// played: number,\n// shared: number,\n// clears: number,\n// attempts: number,\n// maker: \n//   \\_ login: 'Nintendo ID',\n//   \\_ faceImg: 'Url',\n//   \\_ flag: 'Country',\n//   \\_ name: 'Name'",
   "id": 32,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const { name } = require(\"assert\")\r\n\r\n// node scripts/integrate.js --name acme --openapi https://api.acme.com/openapi.json\n// # or\n// node scripts/integrate.js --name acme_rss --rss https://acme.com/rss.xml",
   "id": 33,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import * as PIXI from 'pixi.js';\nimport {Spine} from 'pixi-spine';\n\nconst app = new PIXI.Application();\n// document.body.appendChild(app.view);\n\napp.loader\n    .add('spineCharacter', 'spine-data-1/HERO.json')\n    .load(function (loader, resources) {\n        const animation = new Spine(resources.spineCharacter.spineData);\n\n        // add the animation to the scene and render...\n        app.stage.addChild(animation);\n        \n        if (animation.state.hasAnimation('run')) {\n            // run forever, little boy!\n            animation.state.setAnimation(0, 'run', true);\n            // dont run too fast\n            animation.state.timeScale = 0.1;\n        }\n        \n        app.start();\n    });",
   "id": 34,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Rasha.thumbprint({ jwk: jwk }).then(function (thumbprint) {\n  console.log(thumbprint);\n});",
   "id": 35,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "let cc = {\n  \"sn\":3788106,\n   \"an\":[\"2c4b523bfa2b54a3c2cfec376336ef6e\",\"dc1edbe0708e179e84e6ee0185849811\",\"1b32715dea8bd66c6136f2bb226a9783\",\"cf4a451a23d256299f306e0170632e9c\",\"7bee1781698bfd26a40d384e3e9ba233\",\"57a59cc3fe0a9e2b0ef55d9ee7d83aa0\",\"8741aba5f9ada55cd4cc7ad9ff8cfc5e\",\"27a940f79e5bb895218dc6fee619439a\",\"6d7611020258dc07544255aecb05f94e\",\"8fd75c4a543107c762473cb5c6814b25\",\"b8fb577d62bee5e47622084deec2dc72\",\"2dddefde6b2da5f85d8a50af78a8c6ef\",\"0152c280f2b1df572e679edc5bf5aae4\",\"213bce1b1e301b90e82189ba0a908e89\",\"2f35eda22494903e5c680856304610b1\",\"64bdfe44432444514e8234fa115b9352\",\"6943424a235be73f86a065fe97756b03\",\"e037963736d439d4bc72efa49aa4f2e5\",\"da555eaad78e610e5beb51ec5d051781\",\"47849f44ee8ee1d0d41782ca21dacdc3\",\"4ec1fea2c736e8e82e1836cef7512cdb\",\"de9ec5865fa289a09059ab8a87e73ac4\",\"fb5fca0a5196333023043f080a6fb666\",\"c8df8adefe8b25103358df30491c5409\",\"dae2b572756a596fa8c97f55e8712854\"]\n}\n\nlet data = {\n  \"coin\" : cc,\n  \"paydata\" : \"email, stack, 100, 0,0,0,0,0, alex.skywallet.cc, Car payment,, ready\\nemail, stack, 150, 0,0,0,0,0, john.skywallet.cc, My debt,, ready\\nemail, stack, 21150, 0,0,0,0,0, roller.skywallet.cc, Chargeback,, ready\",\n  \"id\": \"f2494e21fcd4e54a5acd7be6f2be6e50\"\n\n}\nlet c = r.apiBillPay(data, () => {}).then(response => {\n  if (response.code != RaidaJS.ERR_NO_ERROR) {\n    console.log(\"Billpay sent\")\n    return\n  }\n\n//   if (response.code == RaidaJS.ERR_SENT_PARTIALLY) {\n    console.log(\"Only \" + response.amount + \" CloudCoins sent. Try again later using the same ID: \" + response.id)\n    console.log(\"Recipients NOT sent:\")\n    for (let i = 0; i < response.recipients; i++) {\n      if (response.recipients[i].status == \"ready\")\n        console.log(response.recipients[i].address + \",\")\n    }\n  }\n// }",
   "id": 36,
   "stars": 0,
   "errors": [
    2304,
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 21,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// _.mixin({awaitEach});",
   "id": 37,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n// modal.modal; // the modal element\n// modal.openButtons; // an array of open buttons\n// modal.closeButtons; // an array of close buttons\n// modal.isOpen; // boolean indicating if the modal is currently open\n",
   "id": 38,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// var coinbase = web3.pi.coinbase;\n// var balance = web3.pi.getBalance(coinbase);",
   "id": 39,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// App.js\nimport React from 'react'\nimport { createRouter, Link } from 'react-context-router'\n\n// const NotFound = () => <div>Not Found</div>\n\nconst Nav = () => (\n//   <nav>\n//     <Link href='/' children='Home' />\n//     <Link href='/posts/1' children='First Post' />\n//   </nav>\n)\n\nclass App extends React.Component {\n  render () {\n//     const { route } = this.props\n//     const Comp = route.component || NotFound\n\n    return (\n//       <div>\n//         <Nav />\n//         <Comp />\n//       </div>\n//     )\n  }\n}\n\nexport default createRouter(App)",
   "id": 40,
   "stars": 0,
   "errors": [
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { Scrollbars } from 'react-custom-scrollbars';\n\n// class App extends Component {\n//   render() {\n    return (\n      <Scrollbars style={{ width: 500, height: 300 }}>\n        <p>Some great content...</p>\n      </Scrollbars>\n    );\n//   }\n// }",
   "id": 41,
   "stars": 0,
   "errors": [
    1108
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { TagInputModule } from 'ngx-chips';\n\nTagInputModule.withDefaults({\n    tagInput: {\n        placeholder: 'Add a new tag',\n        // add here other default values for tag-input\n    },\n    dropdown: {\n        displayBy: 'my-display-value',\n        // add here other default values for tag-input-dropdown\n    }\n});",
   "id": 42,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const axios = require('axios').default;\n\n// axios.<method> will now provide autocomplete and parameter typings",
   "id": 43,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nimport {SectionsContainer, Section, Header, Footer} from 'react-fullpage';\n\n// => in the render() method of your app\nreturn (\n  <Header>\n    <a href=\"#sectionOne\" className=\"opa\">Section One</a>\n    <a href=\"#sectionTwo\">Section Two</a>\n    <a href=\"#sectionThree\">Section Three</a>\n  </Header>\n  <Footer>\n    <a href=\"\" className=\"opa\">Dcoumentation</a>\n    <a href=\"\">Example Source</a>\n    <a href=\"\">About</a>\n  </Footer>\n  <SectionsContainer {...options}>\n    <Section>Page 1</Section>\n    <Section>Page 2</Section>\n    <Section>Page 3</Section>\n  </SectionsContainer>\n);\n",
   "id": 44,
   "stars": 0,
   "errors": [
    2657
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// * 但是��要引入app.js这个文件，因为所有的**入口全都从这个app.js进入**",
   "id": 45,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "@Store({\n  endpoint: 'system',\n  mutations: {\n    login: {\n      type: MutationType.POST,\n      path: 'security/login'\n    }\n  }\n})",
   "id": 46,
   "stars": 0,
   "errors": [
    1146
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// metrics.mexists( 'net.bytesRX' );\n// returns true\n\n// metrics.mexists( 'cpu.utilization' );\n// returns false",
   "id": 47,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {observer} from 'mobx-react';\nimport {Form} from 'mobx-antd-form';\n\nconst FormItem = Form.Item;\nconst FormField = Form.Field;\n\n@Form.create({\n    fields: ({demo}) => demo.fields\n// })\n// @observer\n// class BasicForms extends React.Component {\n    \n    handleSubmit = e => {\n        const {dispatch, form} = this.props;\n        e.preventDefault();\n        form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                // submit form\n            }\n        });\n//     };\n    \n    // ** 实现 title 的 label 属性随着其 value 属性变化 **\n    render(){\n        \n        const {form, demo} = this.props;\n        \n        function formatMessage(arg0) {\r\n            throw new Error('Function not implemented.');\r\n        }\r\n\r\n        return (\n            <Form onSubmit={this.handleSubmit} hideRequiredMark style={{marginTop: 8}}>\n                <FormItem field={form.get('title')}>\n                    <FormField field={form.get('title')} label={demo.fields.title.value}>\n                        <Input placeholder='请输入标题'/>\n                    </FormField>\n                </FormItem>\n                <FormItem field={form.get('date')}>\n                    <FormField field={form.get('date')} rules={[{required: true, message: '我的优先级更高'}]}>\n                        <RangePicker\n                            style={{width: '100%'}}\n                            placeholder={[\n                                formatMessage({id: 'form.date.placeholder.start'}),\n                                formatMessage({id: 'form.date.placeholder.end'}),\n                            ]}\n                        />\n                    </FormField>\n                </FormItem>\n                <FormItem style={{marginTop: 32}}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        <FormattedMessage id=\"form.submit\"/>\n                    </Button>\n                    <Button style={{marginLeft: 8}}>\n                        <FormattedMessage id=\"form.save\"/>\n                    </Button>                                            \n                </FormItem>\n            </Form>\n        );\n    }\n}",
   "id": 48,
   "stars": 0,
   "errors": [
    1005,
    1005,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 48,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import map from \"just-map-object\";\n\n// DEPRECATED: use just-map-values\nmap({ a: 3, b: 5, c: 9 }, (key, value) => value + 1); // {a: 4, b: 6, c: 10}\nmap({ a: 3, b: 5, c: 9 }, (key, value) => key); // {a: 'a', b: 'b', c: 'c'}\nmap({ a: 3, b: 5, c: 9 }, (key, value) => key + value); // {a: 'a3', b: 'b5', c: 'c9'}",
   "id": 49,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// store.log('user'); // {\"name\":\"James Bond\",\"email\":\"bond007@live.com\",\"bio\":\"I spy for a living.\"}",
   "id": 50,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { stat } = require(\"fs\")\r\n\r\n// npx hermione merge-stat-exports src-report-1.JSON src-report-2.json --html dest-html-report --json report.json",
   "id": 51,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "grunt.initConfig({\n\n    copy: {\n        somefiles: {\n            src: \"./mydir/**\",\n            dest: \"./myNormallyOutputDir/\"\n        }\n    },\n    multidest: {\n        copy_some_files: {\n            tasks: [\n                \"copy:somefiles\"\n            ]\n//             dest: [\"./dist/distdir1\", \"./dist/distdir2\"]\n        },\n    },\n});",
   "id": 52,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var fs = require('fs'),\n  Proposal = require('proposal'),\n  readProposal = Proposal(fs.readFile);",
   "id": 53,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const minify = require('minify');",
   "id": 54,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { run } = require(\"node:test\")\r\n\r\n// docker pull apachecn0/matplotlib-doc-zh\n// docker run -tid -p <port>:80 apachecn0/matplotlib-doc-zh\n// # 访问 http://localhost:{port} 查看文档",
   "id": 55,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// let fullsizeCanvasElement = document.getElementById('fullsize-canvas');\n// let thumbnailCanvasElement = document.getElementById('thumbnail-canvas');\n\n// CanvasCamera.initialize(fullsizeCanvasElement, thumbnailCanvasElement);\n\nlet options:CanvasCamera.CanvasCameraOptions = {\n    cameraFacing: 'front',\n    fps: 15,\n    thumbnailRatio: 1/6,\n    onAfterDraw: function(frame) {\n      // do something with each frame of the fullsize canvas element only\n      // frame.image.src; // file path or base64 data URI\n      // frame.element.toDataURL(); // requested base64 data URI\n    }\n};\n\n// CanvasCamera.start(options);",
   "id": 56,
   "stars": 0,
   "errors": [
    2503,
    8010
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "describe('run', () => {\n  fancy\n  .stdout()\n  .do(() => console.log('foo'))\n//   .do(({stdout}) => expect(stdout).to.equal('foo\\n'))\n  .it('runs this callback last', () => {\n    // test code\n  })\n\n  // add to context object\n//   fancy\n  .add('a', () => 1)\n  .add('b', () => 2)\n  // context will be {a: 1, b: 2}\n  .it('does something with context', context => {\n    // test code\n  })\n})\r\n\r\nfunction expect(stdout) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 57,
   "stars": 0,
   "errors": [
    2593,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "require(\"typeface-open-sans\")",
   "id": 58,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// app.set('adminAuthServerMaster', function(msg, cb){\n//   if(auth success) {\n    cb('ok');\n//   } else {\n    cb('bad');\n//   }\n// })\r\n\r\nfunction cb(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 59,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// DEBUG=mysql-express-session*,mysql-connection-manager node your-app.js",
   "id": 60,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Boilerplate = require('boilerplate');\nvar h5bp = new Boilerplate({\n  options: {\n    cwd: 'vendor/h5bp/dist'\n  },\n  root: {src: ['{.*,*.*}'],   dest: 'src/'},\n  css:  {src: ['css/*.css'],  dest: 'src/'},\n  doc:  {src: ['doc/*.md'],   dest: 'src/'},\n  js:   {src: ['js/**/*.js'], dest: 'src/'}\n});\nconsole.log(h5bp);",
   "id": 61,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const DEV_COMMAND=gatsby -u http://localhost:8080 -r -o ./out",
   "id": 62,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var view = async (view) => {\n    //Create an collection with a bindable field.\n    view.userData = { userName : \"John Doe\" };\n    //Bind the inner HTML of the element to the field on the collection\n    view.$nameLabel.bind = () => view.userData.userName;\n};\n\nexport { view };",
   "id": 63,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// middleware/authentication.js\n\nvar Authentication = require('../lib/authentication');\n\nfunction(req, res, next) {\n  var token = req.get('X-AUTH-TOKEN');\n\n  if(!token) {\n    /* instead of redirecting to login, give the\n    *  deep linking middleware a chance to store the\n    *  current request url, and THEN redirect to login\n    *  via the login option\n    */\n    next();\n  }\n\n  Authentication\n  .authenticate(token)\n  .then(function(tokenOrWhateverAuthYields) {\n    // we can now pass this in as the authentication option\n    req.user = tokenOrWhateverAuthYields;\n    next();\n  })\n  .error(function(e) {\n    // redirect to login since they gave us a bad token\n  });\n}",
   "id": 64,
   "stars": 0,
   "errors": [
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/* Set worksheet sheet to \"normal\" */\nws[\"!margins\"]={left:0.7, right:0.7, top:0.75,bottom:0.75,header:0.3,footer:0.3}\n/* Set worksheet sheet to \"wide\" */\nws[\"!margins\"]={left:1.0, right:1.0, top:1.0, bottom:1.0, header:0.5,footer:0.5}\n/* Set worksheet sheet to \"narrow\" */\nws[\"!margins\"]={left:0.25,right:0.25,top:0.75,bottom:0.75,header:0.3,footer:0.3}",
   "id": 65,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require('gulp');\nvar jspmAssets = require('gulp-jspm-assets');\n\ngulp.task('sass', function() {\n    jspmAssets({\n//       'bootstrap', 'sass/**/*.scss',\n//       'foundation', 'sass/**/*.scss'\n    })\n    .pipe(whateverTask())\n    .pipe(gulp.dest('dest'));\n});\r\n\r\nfunction whateverTask() {\r\n    throw new Error('Function not implemented.');\r\n}\r\n",
   "id": 66,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " // Content to be scrolled\nvar $scrollContent = document.getElementById(\"content-scroll-vertical\");\nvar $scrollView = $scrollContent.parentNode; // Container for the content\nvar options = {\n    bounds: true,\n    direction: \"vertical\",\n    scrollbar: \"scrollbar-vertical\" // CSS class\n};\n$scrollView.scroll_bar = new RADJS_ScrollView.ScrollBar($scrollView, {\n    className: options.scrollbar,\n    direction: options.direction,\n    smart: $scrollContent.querySelector(\"div.list_of_something\")\n}); // `scroll_bar` it's just a custom name\n// Create and attach ScrollView.\n// `scroller` it's just a custom name, but in WebComponent it's predefined.\n// $scrollView.scroller = new RADJS_ScrollView($scrollView, options);\n// Create and attach custom pointer events, because of: IE support, SVG elements etc.\n// `tracker` is also custom name but it's also predefined in WebComponent\n// $scrollView.tracker = new PointerTracker($scrollView, $scrollView.scroller);",
   "id": 67,
   "stars": 0,
   "errors": [
    2584,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const okayRecs = require('@andrewshell/okay-recs');\n\n// Source of all user ratings in system.\nconst allUserRatings = {\n    \"user0\": {\n        \"https://www.metacritic.com/tv/112263\": 1,\n        \"https://www.metacritic.com/tv/24\": 4,\n        \"https://www.metacritic.com/tv/30-rock\": 3,\n        \"https://www.metacritic.com/tv/alias\": 2,\n        \"https://www.metacritic.com/tv/archer\": 2,\n        \"https://www.metacritic.com/tv/arrested-development\": 2,\n        \"https://www.metacritic.com/tv/band-of-brothers\": 3,\n        ...\n    },\n    \"user1\": {\n        \"https://www.metacritic.com/tv/3rd-rock-from-the-sun\": 2,\n        \"https://www.metacritic.com/tv/adventure-time\": 4,\n        \"https://www.metacritic.com/tv/archer\": 1,\n        \"https://www.metacritic.com/tv/arrested-development\": 3,\n        \"https://www.metacritic.com/tv/better-call-saul\": 4\n//         ...\n    },\n    ...\n};\n\n// Subset of user ratings that you want recommendations and similar users for.\n// Note: This example shows one user, but can work for multiple users at once.\nconst subUserRatings = {\n    user10: allUserRatings['user10']\n};\n\n// Sum of scores of people who gave program 1 a rating of x gave to program 2\n// Intermediate structure for user recommendations. Should be cached.\nconst allProgramScores = okayRecs.programScores(allUserRatings);\n\n// What programs are the users most likely to like?\nconst subUserRecommendations = okayRecs.userRecommendations(allProgramScores, subUserRatings);\n\n// What other users is this user similar to?\nconst subUserSimilarUsers = okayRecs.similarUsers(allUserRatings, subUserRatings);",
   "id": 68,
   "stars": 0,
   "errors": [
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 27,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// integrify.rules.js\n\nmodule.exports = [\n  {\n    rule: 'REPLICATE_ATTRIBUTES',\n    name: 'replicateMasterToDetail',\n    // ...\n  },\n  // ...\n];",
   "id": 69,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "angular.module('myApp', ['ionic.native']).controller('MyPageController', function ($cordovaCamera) {\n  $cordovaCamera.getPicture().then(\n    function (data) {\n      console.log('Took a picture!', data);\n    },\n    function (err) {\n      console.log('Error occurred while taking a picture', err);\n    }\n  );\n});",
   "id": 70,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// gatsby-browser.js\nimport 'simple-css-reset';",
   "id": 71,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// chai.expect(semver.parse('Linux 14.04')).to.equal(null);\n// chai.expect(semver.parse('A development version')).to.equal(null);\n// chai.expect(semver.parse('Version A')).to.equal(null);",
   "id": 72,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// dsa.setInstance(dsaId); // DSA ID",
   "id": 73,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// web3.setProvider(new web3.providers.HttpProvider('http://host.url', 0, BasicAuthUsername, BasicAuthPassword));",
   "id": 74,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n//从数据库中查询出来的数据对象\nvar arr = [{id: 10, name: \"name1\", value: \"value1\"}, {id: 11, name: \"name2\", value: \"value2\"}];\n//把id值作为key生成一个对象\n/* data = {10: {id: 10, name: \"name1\", value: \"value1\"}, 11: {id: 11, name: \"name2\", value: \"value2\"}} */\nvar data = arrToObj(arr, \"id\");\n//把id值作为key，只需要name的值\n//data = {10: \"name1\", 11: \"name2\"}\n// var data = arrToObj(arr, \"id\", \"name\");\n//只获取id的值\n// ids = [10, 11];\n// var ids = arrToObj(arr, \"id\", null);\r\n\r\nfunction arrToObj(arr, arg1) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 75,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { equal } = require(\"assert\");\r\n\r\nclick(\"html>body>div>div:eq(0)>button\");\nandThen(function () {\n//  equal(find(\"#foo\").length, 0, \"foo removed AFTER user [INSERT REASON]\");\n});\n\r\nfunction click(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 76,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { through } = require('streamss-through')\nlet cnt = 0\n\nrequire('fs').createReadStream(__filename, { encoding: 'utf8', highWaterMark: 30 })\n.pipe(through(\n  { decodeStrings: false },\n  function transform(str) {\n    cnt += 1\n    this.push(str.replace(/\\s/g, '‧') + '\\n')\n  },\n  function flush() {\n    console.log('\\ncounted num of chunks: ' + cnt)\n  }\n))\n.pipe(process.stdout)",
   "id": 77,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const demethodize = require(\"just-demethodize\");\n\nconst trimFn = demethodize(\"\".trim);\n[\"hello \", \" goodbye\", \"hello again\"].map(trimFn);",
   "id": 78,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const mapped = {\n//   a: data.a,\n//   b: data.b\n}",
   "id": 79,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var o2x = require('object-to-xml');\n\nvar obj = { \n  '?xml version=\\\"1.0\\\" encoding=\\\"iso-8859-1\\\"?' : null,\n  request : {\n    '@' : {\n      type : 'product',\n      id : 12344556\n    },\n    '#' : {\n      query : {\n        vendor : 'redhat',\n        name : 'linux'\n      }\n    }\n  }\n};\n\nconsole.log(o2x(obj));\n\n/*\n<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n<request type=\"product\" id=\"12344556\">\n  <query>\n    <vendor>redhat</vendor>\n    <name>linux</name>\n  </query>\n</request>\n*/",
   "id": 80,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 26,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// let post = new post();\n\n// await post.save(); // creates a new post\n\n// post.set('title', 'New title');\n// await post.save(); // updates an existing post\r\n\r\nexport { };\r\n",
   "id": 81,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var imdbWatchlist = require('imdb-watchlist');\n\nimdbWatchlist('ur23098466').then(function (watchlist) {\n  // watchlist is an array of objects on the form:\n  // { title: '', imdbId: ''}\n\n  // This will log out a random movie from your watchlist\n  console.log(watchlist[Math.floor(Math.random() * watchlist.length)]);\n});",
   "id": 82,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "JsonRoutes.ErrorMiddleware.use(\n  '/handle-error',\n//   RestMiddleware.handleErrorAsJson\n);\n\nJsonRoutes.add('get', 'handle-error', function () {\n  var error = new Meteor.Error('not-found', 'Not Found');\n  error.statusCode = 404;\n  throw error;\n});",
   "id": 83,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const loggedIn = res._headers['logged-in'] === \"true\";",
   "id": 84,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "server.register({\n    register: require('hapi-droutes'),\n    options: {\n        'root':'routes/please/search_in/here',\n        'match':'resource/*/route.*.js',\n        'dependencies':['hello','hapi']\n    }\n}, function (err) {\n    if (err) throw err;\n});",
   "id": 85,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var cacheInterceptor = function cacheInterceptor(args) {\n  var req = args.req,\n      res = args.res;\n    // retrieve cached response\n    return cacheStore.getCacheRes(req)\n      .then((cachedRes) => {\n        return new Promise((resolve, reject) => {\n          try {\n            if (cachedRes) {\n              // response with cached result\n              res.end(cachedRes);\n              // abort the executing of passes sequence\n              reject();\n            } else {\n              // continue executing other passes\n              resolve();\n            }\n          } catch (err) {\n            reject(err);\n          }\n        })\n      })\n  };\n// insert this pass before the default 'deleteLength' pass\n// Proxy.before('web', 'deleteLength', cacheInterceptor);\n",
   "id": 86,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <LoadIt load={() => import('./LoadMe')} />",
   "id": 87,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import parallel from 'apr-parallel';\n\nconst then = (v) => new Promise((resolve) => resolve(v));\n\nconst withArray = await parallel([\n  async () => await then(1),\n  async () => await then(2)\n]);\n\n// withArray = [1, 2]\n\nconst withObject = await parallel({\n  one: async () => await then(1),\n  two: async () => await then(2)\n});\n\n// withObject = { one: 1, two: 2 }",
   "id": 88,
   "stars": 0,
   "errors": [
    1378,
    1378
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// run tests\n// grunt\n\n// run tests and show a test coverage report\n// grunt specs",
   "id": 89,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// foo.js\nObject.defineProperty(exports, '__esModule', {value: true})\n\nexports.default = {\n  foo: 'default-foo'\n}\n\nexports.foo = 'foo'",
   "id": 90,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'core-js/features/array/includes';\nimport 'core-js/features/object/assign';",
   "id": 91,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n// const adapter = adapter(BaseAdapter);\n\n// exports.api = Function.https.onRequest((...args) => adapter.handle(...args));",
   "id": 92,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// my-app\n// ├── README.md\n// ├── node_modules\n// ├── package.json\n// ├── .gitignore\n// ├── public\n// │   └── favicon.ico\n// │   └── index.html\n// │   └── manifest.json\n// └── src\n//     └── App.css\n//     └── App.js\n//     └── App.test.js\n//     └── index.css\n//     └── index.js\n//     └── logo.svg\n//     └── registerServiceWorker.js",
   "id": 93,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { MoodleClient } = require('node-moodle');\n// const moodle = new MoodleClient({ ... });\n\nasync function main() {\n  try {\n    //Request data\n    var req = {\n      users: [\n        {\n          firstname: \"Foo\",\n          lastname: \"Bar\",\n          username: \"foo\",\n          password: \"FooBar123!\",\n          email: \"foo@example.com\",\n        }\n      ]\n    };\n\n    //Invoke a method\n//     var res = await moodle.core.user.createUsers(req);\n    \n    //Response data\n//     console.log(res);\n    /*\n    [\n      {\n        \"id\": 3,\n        \"username\": \"foo\"\n      }\n    ]\n    */\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\nmain();",
   "id": 94,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 28,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//   const cache = LRUCache([cacheSize = 10]);\n\n // return an item from the cache\n//   cache.get(key)\n\n  // add an item to the cache. overwrite if already exists\n//   cache.set(key, value) \n\n  // remove an item from the cache\n//   cache.remove(key) \n\n  // reset the cache to an empty and fresh state\n//   cache.clear(limit = 10) \n\n  // Traverse each cached item and call a function\n  // callback is passed [node element, element number, cache instance] \n//   cache.forEach(callback) \n\n  // return a JSON represenation of the cache\n//   cache.toJSON() \r\n\r\nfunction LRUCache(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 95,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { connectPubsub } from '@yoctol/message-queue';\n\nconst pubsub = await connectPubsub({\n  driver: 'rabbitmq',\n  amqpConfig: {\n    url: 'amqp://localhost',\n    exchange: 'amqp.exchange',\n    connectOptions: {\n      //node-amqp-connection-manager connect() options \n      heartbeatIntervalInSeconds: 5,\n      ...\n//       connectionOptions: {\n        //amqplib connection options\n//         ...\n//       },\n    },\n    createChannelOptions: {\n      //node-amqp-connection-manager createChannel() options \n      name: 'channelName',\n//       Set: ...,\n      json: true,\n    },\n },\n});",
   "id": 96,
   "stars": 0,
   "errors": [
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// function(i) {\n    // delete the tag at index i\n// }",
   "id": 97,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "facebookConnectPlugin.showDialog({\n    method: \"share\",\n    picture:'https://www.google.co.jp/logos/doodles/2014/doodle-4-google-2014-japan-winner-5109465267306496.2-hp.png',\n    name:'Test Post',\n    message:'First photo post',\n    caption: 'Testing using phonegap plugin',\n    description: 'Posting photo using phonegap facebook plugin'\n  }, function (response) {\n    console.log(response)\n  }, function (response) {\n    console.log(response)\n  }\n);",
   "id": 98,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "namiConfig.logger = require('log4js').getLogger('Nami.Core');\nvar nami = new (require(\"nami\").Nami)(namiConfig);",
   "id": 99,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// #@ Node\n// node_modules\n\n// # Build\n// build\n\n// # Coverage directory\n// coverage\n\n// # logs\n// *.log\n// .logs\n\n// #@ Platform Specific\n// .DS_Store\n// Thumbs.db",
   "id": 100,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { error } = require(\"console\")\r\n\n// @param {Error|null} err Pass an Error Object here to indicate an Error\n//                         occured. Very useful for validation; stops the flow here.\n\n// @param {string} key     The key of the property that has finished, \n//                         this gives you a chance to format the key name.\n\n// @param {*} value        The value you want the key to have\n",
   "id": 101,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const storybook = require('@ltht-react/storybook');\n\n// TODO: DEMONSTRATE API",
   "id": 102,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// ionic cordova plugin add cordova-plugin-alicloud-feedback --variable const APP_KEY=你的KEY --variable const APP_SECRET=const 你的SECRET",
   "id": 103,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const socks5http = require('socks5-http');\n\n// set socks5 proxy port and host\n// 1080 and \"localhost\" is default\nsocks5http.setSocks5(1080, \"localhost\")\n\n// https GET\nsocks5http.get(\"https://www.google.com\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})\n\n// http GET\nsocks5http.get(\"http://www.google.com\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})\n\n// ip and custom port\nsocks5http.get(\"http://47.98.223.187:3000\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})",
   "id": 104,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 29,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var app = require(\"your-awesome-component\");\n// var instance = new app(yourDiv);",
   "id": 105,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Usage: spraygun <template> <project-directory>\n\nGenerate a project in the specified directory, based on a template.\n\nFor example, to generate a react app in a directory named hello-world:\n  $ npx spraygun -t react hello-world\n\nThe officially supported spraygun templates are:\n  -t express\n  -t react\n  -t react-ts\n\nTo use a custom template, specify one of the following:\n  -p path   a local template directory\n//   -r URL    a git repository URL",
   "id": 106,
   "stars": 0,
   "errors": [
    2304,
    2304,
    17004,
    17008,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// import com.lynxit.contactswrapper.ContactsWrapperPackage;\n// ...\n\n// @Override\n// protected List<ReactPackage> getPackages() {\n    return Arrays.<ReactPackage>asList(\n        new MainReactPackage(),\n//         ...,\n       new ContactsWrapperPackage()\n   );\n// }\r\n\r\nfunction getPackages() {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 107,
   "stars": 0,
   "errors": [
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// flv.$canvas;",
   "id": 108,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const conf = require('run-con')('myapp', {\n    port: 12345,\n    mode: 'test'\n});\n\nconsole.log(JSON.stringify(conf, null, 2));",
   "id": 109,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { type } = require(\"os\");\r\n\r\n// type.isAsyncFunction(async function(){}) //=> true",
   "id": 110,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { ProviderStore } from 'react-redux-just'\n\nconst model = {\n  state: {\n    date: {\n      __options:{\n        type: 'date',\n        value: new Date(),\n        receiving: date => date.toString(),\n        request: (resolve, reject) => {\n              fetch( REQUEST_URL , {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ title: 'React POST Request' })\n                })\n//                 .then(response => response.json())\n//                 .then(({result}) => resolve(result));\n            }\n      }\n    }\n  }\n}\n\n// ReactDOM.render(\n//     <ProviderStore model={model}>\n//       <App />\n//     </ProviderStore>\n//   ,document.getElementById('root')\n// );\n\r\nfunction fetch(REQUEST_URL, arg1) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n",
   "id": 111,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 22,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import IntentLauncher, { IntentConstant } from 'react-native-intent-launcher'\n// ...\nIntentLauncher.startActivity({\n    action: 'android.settings.APPLICATION_DETAILS_SETTINGS',\n    data: 'package:com.example'\n})\n// ...",
   "id": 112,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { run } = require(\"node:test\")\r\n\r\n// cd contracts\n// npm install\n// npm run build",
   "id": 113,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var NodeWebcam = require( \"node-webcam\" );\n\nvar FSWebcam = NodeWebcam.FSWebcam; //require( \"node-webcam/webcams/FSWebcam\" );\n\nvar opts = {};\n\nvar cam = new FSWebcam( opts );",
   "id": 114,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import propType, { ow } from 'ow-prop-type'\n\nclass MyComponent extends React.Component {\n  static propTypes = {\n    // propType with a predicate\n    total: propType(\n      ow\n        .number\n        .integer\n        .greaterThanOrEqual(0)\n    ),\n    // propType with a callback, must return a predicate\n    current: propType((props) => {\n      return ow\n        .number\n        .integer\n        .greaterThanOrEqual(0)\n        .lessThanOrEqual(props.total)\n    }\n  }\n}",
   "id": 115,
   "stars": 0,
   "errors": [
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Vue from 'vue'\nimport Vuetify from 'vuetify'\nimport DaySpanVuetify from 'dayspan-vuetify'\nimport App from './App.vue'\n\nimport 'vuetify/dist/vuetify.min.css'\nimport 'material-design-icons-iconfont/dist/material-design-icons.css'\nimport 'dayspan-vuetify/dist/lib/dayspan-vuetify.min.css'\n\nVue.config.productionTip = false\n\nVue.use(Vuetify);\n\nVue.use(DaySpanVuetify, {\n  methods: {\n    getDefaultEventColor: () => '#1976d2'\n  }\n});\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})",
   "id": 116,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "grunt.initConfig({\n  mustache_html: {\n    development: {\n      options: {\n        src: 'src',\n        dist: 'dist',\n        type: 'mustache' // mustache Or hbs\n      },\n      globals: {\n        analytics_id: 'UA-123456-1'\n      }\n    }\n  }\n});",
   "id": 117,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <script src=\"path/to/dist/js/tether.min.js\"></script>",
   "id": 118,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { request } = require(\"http\")\r\n\r\nfunction log(response) {\n  console.log(`Transaction ID: ${response.transactionId}`)\n  console.log(`Function code: ${response.functionCode}`)\n  console.log(`Total number of registers: ${response.noOfRegisters}`)\n  console.log(`Values: ${response.registerValues.join(', ')}`)\n}\n\nasync function example() {\n  try {\n//     const response = await client.send(request)\n//     log(response)\n  } catch (error) {\n    console.log(`Error: ${error}`)\n  }\n}\n\nexample()",
   "id": 119,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Size (Body, H1, etc.)\n//   Alignment (Left, Center, Right)\n//     Weight (Regular, Semibold, etc.)\n//       Color\r\n\r\nfunction Size(Body, H1, arg2) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 120,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/* bookType can be 'xlsx' or 'xlsm' or 'xlsb' */\nvar wopts = { bookType:'xlsx', bookSST:false, type:'binary' };\n\n// var wbout = XLSX.write(workbook,wopts);\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n  for (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n  return buf;\n}\n\n/* the saveAs call downloads a file on the local machine */\n// saveAs(new Blob([s2ab(wbout)],{type:\"\"}), \"test.xlsx\")\r\n\r\nfunction saveAs(arg0, arg1) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 121,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var dfltCfg = { slot: 'foo' },\n  meta = { defaultConfig: dfltCfg,\n    descr: 'A nice foo for your app.',\n    apiVersion: 1,\n    };\n\nfunction install(app, plugCfg, appCfg) {\n  if (plugCfg === appCfg) { plugCfg = false; }\n  var slot = (plugCfg.slot\n    || appCfg.fooSlot   // <-- that's why we checked above\n    || dfltCfg.slot);\n  app[slot] = function () { return 'bar @ ' + app.name; };\n}\n\nmodule.exports = require('plugmgr1801-pmb/plugify')(module, meta, install);",
   "id": 122,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// get most used from main entry\n// import { SVGO, SVGO_LITE, CONFIG_LITE, PLUGINS_DEFAULT_LIST } from 'libsvgo/module/lib/svgo'\n\n// or get each separately\nimport { SVGO_LITE } from 'libsvgo/module/lib/svgo-lite'\nimport { SVGO_LITECONFIG_LITE } from 'libsvgo/module/lib/svgo/config-lite'\n\n// get each plugin separately\nimport * as addAttributesToSVGElement from 'libsvgo/module/plugins/addAttributesToSVGElement'",
   "id": 123,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const { name } = require(\"assert\")\r\n\r\n// typeorm init --name MyProject --database mysql",
   "id": 124,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const { start } = require(\"repl\")\r\n\n// - ...\\ControlManifest.Input.xml\n\n//     modify as needed...\n\n\n\n// - modify ...\\node_modules\\pcf-start\\bin\\pcf-start.js\n\n//     enable cors by adding cors: true, \n\n```javascript\n// Start server\nvar options = {\n    port: 8181,\n    host: '0.0.0.0',\n    cors: true, \n    root: path.resolve(process.cwd(), codePath),\n    open: true,\n// ",
   "id": 125,
   "stars": 0,
   "errors": [
    2349,
    1160
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// configuring client\nconst prosperworks = require('prosperworks')({\n  email: process.env.EMAIL,\n  token: process.env.TOKEN\n});\n\n// using async / await (native in Node.js v8.x)\n// var result = await prosperworks.companies.list();\n// console.log(JSON.stringify(result, null, 2));\n\n// or using with promises\nprosperworks.companies.list()\n.then(result => {\n  console.log(JSON.stringify(result, null, 2));\n})",
   "id": 126,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/** @type {string[]} */\nconst verbs = require('verb-corpus');\n\nconsole.log(verbs.length);",
   "id": 127,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { BuildpackJob } from 'dray-client';\nlet compilation = new BuildpackJob(manager);\ncompilation.addFiles([\n//     {name: 'foo.ino', data: new Buffer()}\n]);\ncompilation.setEnvironment({\n    PLATFORM_ID: 6\n});\ncompilation.setBuildpacks([\n    'particle/buildpack-wiring-preprocessor',\n    'particle/buildpack-particle-firmware:0.5.1-photon'\n]);\ncompilation.submit().then((binaries) => {\n    // Do something with binaries\n}, (reason) => {\n    console.error(\"Compilation error:\", reason)\n});",
   "id": 128,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var prefixed = store.withIdPrefix('foo:')\n\nprefixed.add({ _id: 'bar', value: 42 }) // will add the object with id 'foo:bar'\n  .then(function (doc) {\n    // update documents with id 'foo:other' and 'foo:bar'\n    return prefixed.update(['other', 'foo:bar'], { other: 'baz' })\n  })\n\n// Finds all objects which id start with 'foo:'\nprefixed.findAll().then(function (docs) {})\n\n// Handle all changes to objects which id start with 'foo:'\nprefixed.on('change', function (eventName, doc) {})\n\nvar moarPrefixed = prefixed.withIdPrefix('moarPrefix:') // prefix is now 'foo:moarPrefix:'",
   "id": 129,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const RequestParameters = require('@luigisamurai/request-parameters');\nconst JSONFile = require('./JSONFile');\n\nconst request = new RequestParameters.Request();\n\n// request-promises options\nconst setting = {\n  resolveWithFullResponse: true,\n  simple: false\n};\n\n// set the common parameters\nrequest.setParameters({\n  baseUrl: 'http://www.google.com',\n  setting\n});\n\n// Get request with request-parameter dependency\nconst getPromise = request.send(JSONFile.GET, {\n  urlParams: { homeId: 1 },\n  queryParams: { offset: 0, limit: 100 },\n});\n\n// Also can use async - await to wait the promises\ngetPromise.then((response) => {\n  const statusCode = response.statusCode;\n  const body = response.body;\n\n  console.log(statusCode, ' ', body);\n});\n\n// Post request with request-parameter dependency\nconst postPromise = request.send(JSONFile.Post, {\n  body: { name: 'home view' }\n});\n\npostPromise.then((response) => {\n  const statusCode = response.statusCode;\n  const body = response.body;\n\n  console.log(statusCode, ' ', body);\n});\n\n// Note the URIs don't exist so the request return 404 status code.",
   "id": 130,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 28,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// $('li', 'ul', '<ul id=\"fruits\">...</ul>');",
   "id": 131,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const speechToText = new speechToText({\n/* authenticator, version, serviceUrl, etc... */\n});\n// const recognizeStream = recognizeUsingWebSocket(params);\n\n// getTransactionId returns a Promise that resolves to the ID\nrecognizeStream.getTransactionId().then(\n  globalTransactionId => console.log(globalTransactionId),\n  err => console.log(err),\n);\r\n\r\nfunction recognizeUsingWebSocket(params) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 132,
   "stars": 0,
   "errors": [
    2448,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const { name } = require(\"assert\")\r\n\r\n// yo axi-dtsi-gulp-angular [app-name]",
   "id": 133,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// chance.month({country: 'de'})\n// 'Juli'",
   "id": 134,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const scope = nock('http://www.headdy.com')\n//   .replyDate()\n//   .get('/')\n//   .reply(200, { hello: 'world' })\r\n\r\nfunction nock(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 135,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//to create some new merge fields in your list\n//http://developer.mailchimp.com/documentation/mailchimp/reference/lists/merge-fields/\n\nmailchimp\n  .post('batches', {\n    operations : [\n      {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG1',\n          type : 'string'\n        })\n      }, {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG2',\n          type : 'string'\n        })\n      }, {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG3',\n          type : 'string'\n        })\n      }\n    ]\n  })\n  .then(function(result){\n    console.log(result);\n  })\n  .catch(function(error){\n    console.log(error);\n  });",
   "id": 136,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 33,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { log } = require(\"console\");\r\n\r\n// log.bind(logger, levelName);",
   "id": 137,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const crypto = require('crypto');\nfunction verifySignature({\n  data,\n  signature,\n  publicKey\n}) {\n  // Verify that we signed correctly using public key\n  const verify = crypto.createVerify('RSA-SHA384');\n  verify.write(data);\n  verify.end();\n\n  // True if signature is verified\n  return verify.verify(publicKey, signature, 'base64');\n}",
   "id": 138,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// .b-foo {\n//   .bar {\n//     …\n//   }\n  \n//   .qux {\n//     …\n//   }\n// }",
   "id": 139,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export interface GoogleLocationDetailResult {\n  adr_address: string;\n  formatted_address: string;\n  icon: string;\n  id: string;\n  name: string;\n  place_id: string;\n  scope: string;\n  reference: string;\n  url: string;\n  utc_offset: number;\n  vicinity: string;\n  types: string[];\n  geometry: {\n    location: {\n      lat: number;\n      lng: number;\n    };\n    viewport: {\n      [type: string]: {\n        lat: number;\n        lng: number;\n      };\n    };\n  };\n  address_components: Array<{\n    long_name: string;\n    short_name: string;\n    types: string[];\n  }>;\n}",
   "id": 140,
   "stars": 0,
   "errors": [
    8006
   ],
   "hasCode": true,
   "nondeletedLines": 31,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "ImagePickerIOS.openCameraDialog({\n  showImages: true,\n  showVideos: false\n}, (imageUrl, height, width) => {\n  // success\n}, (error) => {\n  // cancel\n});",
   "id": 141,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// expect(const [button1, button2, button3]).to.be.verticallyAligned('top', 1.5);\r\n\r\nfunction expect(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 142,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const hdl = require('hdl-js');\n\nconst {\n  emulator: {\n    Clock,\n    Pin,\n  },\n} = hdl;\n\nconst clock = new Clock({rate: 10, value: -5});\nconst pin = new Pin({name: 'a'});\n\n// Track clock events.\nclock.on('tick', value => pin.setValue(value));\n\nclock.tick();\n\nconsole.log(pin.getValue()); // +5;",
   "id": 143,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const App = () => {\n    return \n//         <serviceList.ProvideAll>\n            // rest of the application\n//         </serviceList.ProvideAll>\n    ;\n}",
   "id": 144,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// getQueue(callback)\r\n\r\nfunction getQueue(callback) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 145,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n// Find the top 10 students who have taken a particular course\n// and earned a grade of at least 3:\n\nconst classes = {\n   Student: null,\n//    Course: course\n}\n\nconst criteria = {\n  descending: 'grade',\n  greaterThanOrEqualTo: ['grade', 3],\n  limit: 10,\n  include: 'student'\n}\n\n// const joinObjs = await parsm.getJoinQuery(classes, criteria).find()\n\n\r\nexport { }\r\n// joinObjs is now an array of instances of the class 'Student2Course'\n// with details of students in the 'student' column.",
   "id": 146,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// catalog\n    Promise\n//         files\n//             index.js — your polyfill\n\n//         index.json\n//         index.js",
   "id": 147,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//main.js\nimport BoxButton from 'box-components-button'\n// Vue.use(BoxButton)",
   "id": 148,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// ffmpeg('/path/to/file.avi').noVideo();\r\n\r\nfunction ffmpeg(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 149,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const outStr = \"[{\\\"Root\\\":\\\"0x763f7f5e16506128824178bf2ee855e35a4b93689e8e54ed1e3d03177da09917\\\",\\\"State\\\":{\\\"Num\\\":345,\\\"OS\\\":{\\\"Index\\\":384,\\\"OutCM\\\":null,\\\"Out_O\\\":null,\\\"Out_Z\\\":{\\\"AssetCM\\\":\\\"0x5545b6d57ef6a35b124963daa0dee992da5243e31eb0d99d8f66d0f1a13e9012\\\",\\\"EInfo\\\":\\\"0x04fc0547da3590767317c3719f7b89516f7afb01037ca09cefc0bd75b4dccb95cfff665a0028069289960dcf07b69928e8d3da06ad0249ba7fd2c31505f5eef96db8741382f68be2e34210be409a84ae67be5c4687ddef64c13bba278d5fbea9d69f1a335585c8544a3b3eac8e7812041a01d95326f8da65e588784cc70c1b5a4b5dd7d0f5921007aef4043ac515cadc864ac206b2902a04022603566a437deb3100fdc04b88eb249746631447cf25964fb8f32fb4314455efbc1ea7520865f52aa762629ab8eed99e0a7918918dfe186188ddf61d7fb3d855a64d71ff5c9688\\\",\\\"OutCM\\\":\\\"0x5d3ba6999629152264618694968cd18a7a4c7790e2c213498e99209c564039ab\\\",\\\"PKr\\\":\\\"0xfaf5e31e63cf54a81cb494e57719abf9e2af71fb52720a4ad476ce78006ac0af202f0329828102356f29597815773200b75775b6837bf8592e20eb4df75e73a9c01a79af111451f7f38f4c2f79f03772a9e09b31d5c7bf2ab37808835362c4a0\\\",\\\"Proof\\\":\\\"0x02902bbd460a55b0dbaf4a96848d0b24ef5f2faab6409b3d68dc77f8f32a96a41d0a450a6076693fd6bef7e4466e6f0533e18905c8fc656741e7d1faf2ae298dba7edb87ab8b1293900e3fac4bd8e47a09b1ee02cf7770965bf990f60c53f57a3c08032dcc4023c7aa706f8fd35c68119caa73d15e8ca1ff35cc9e69fcdd8e46d5120c\\\",\\\"RPK\\\":\\\"0xb74e284e16cc77659690cee346076701a1040539ce84e6af71292f0acd5a906d\\\"},\\\"RootCM\\\":\\\"0xe495fe6b43813719352a6256e826dfae9d61d32b28ce1814e0b6a60b9cb05009\\\"},\\\"TxHash\\\":\\\"0x91a5cc04f6af1803bd8a523fcf23bc845c42552bb7d6d0a49e347ef5070ba274\\\"}}]\"\n\ntx.DecOut(\n  outStr,\n//   keys.tk.ToBase58(),\n  (err, content) => {\n    if (err) {\n      console.error(err)\n    } else {\n      console.log(content)\n    }\n  }\n)",
   "id": 150,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Mongoose from 'mongoose';\n\n// const Test = new Mongoose.Schema({...\n// export  {tests:Test}",
   "id": 151,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {any, boolean, number, string} from \"schemation\"\nimport {and, not, or}                 from \"schemation\"\nimport {where}                        from \"schemation\"\nimport {optional}                     from \"schemation\"\nimport {lazy}                         from \"schemation\"",
   "id": 152,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// freebase.search(\"doug\",{type: \"/ice_hockey/hockey_player\"})",
   "id": 153,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function inc(v) {\n  return v + 1;\n}\n\nfunction decr(v) {\n  return v - 1;\n}\n\n// Arrow(inc).next(Arrow(decr)).run(1) == Arrow.next(Arrow(inc), Arrow(decr)).run(1);\r\n\r\nfunction Arrow(inc) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 154,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { env } = require(\"process\")\r\n\r\n// USAGE\n//   $ dev-env export PROJECT\n\n// ARGUMENTS\n//   PROJECT  project name\n\n// OPTIONS\n//   -d, --database  database\n//   -h, --help      show CLI help",
   "id": 155,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// replace( \"java\" ).ignoringCase(); // => ReplaceDefinition\r\n\r\nfunction replace(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 156,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// console.log(arrayTransformer.stringToArray(db.get('newArray')))",
   "id": 157,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "agenda.on('success:send email', function(job) {\n  console.log(\"Sent Email Successfully to: %s\", job.attrs.data.to);\n});",
   "id": 158,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Error(err) {\n//   console.log(\"SQL Error: \" + err);\n// },\n\n// successCB() {\n  console.log(\"SQL executed fine\");\n// },\n\n// openCB() {\n  console.log(\"Database OPENED\");\n// },\n\n// var db = SQLite.openDatabase(\"test.db\", \"1.0\", \"Test Database\", 200000, openCB, Error);\ndb.transaction((tx) => {\n  tx.executeSql('SELECT * FROM Employees a, Departments b WHERE a.department = b.department_id', [], (tx, results) => {\n      console.log(\"Query completed\");\n\n      // Get rows with Web SQL Database spec compliance.\n\n      var len = results.rows.length;\n      for (let i = 0; i < len; i++) {\n        let row = results.rows.item(i);\n        console.log(`Employee name: ${row.name}, Dept Name: ${row.deptName}`);\n      }\n\n      // Alternatively, you can use the non-standard raw method.\n\n      /*\n        let rows = results.rows.raw(); // shallow copy of rows Array\n\n        rows.map(row => console.log(`Employee name: ${row.name}, Dept Name: ${row.deptName}`));\n      */\n    });\n});\r\n\r\nfunction successCB() {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 159,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {Screen} from 'geoeye-js'\n\nconst screen = new Screen({\n  config: './config.json', \n  container: 'container'\n});",
   "id": 160,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var userMetric = metric.instance();\nuserMetric.start('metric');\n// ....\nuserMetric.end('metric');",
   "id": 161,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var level = require('level-hyper')\nvar Snapshot = require('level-snapshot')\n\nvar db = level('./db')\nvar snapshot = Snapshot(db)\n\nsnapshot.on('snapshot:complete', function (snapshotName) {\n  console.log('took snapshot', snapshotName)\n})\n\nsnapshot.start()",
   "id": 162,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import duration from 'callbag-duration-progress'\nimport forEach from 'callbag-for-each'\nimport map from 'callbag-map'\nimport pipe from 'callbag-pipe'\n\nconst distance = d => t => t * d\n\nconst easeOut = p => 1 - (1 - p) * (1 - p)\n\nconst moveBall = (ball, easing) => {\n  pipe(\n    duration(1000),\n    map(easing),\n    map(distance(400)),\n    forEach(y => {\n      ball.style.transform = `translate3d(0, ${y}px, 0)`\n    }),\n  )\n}\n\n// moveBall(document.getElementById('ball'), easeOut)",
   "id": 163,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const putout = require('putout');",
   "id": 164,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// git clone https://github.com/provable-things/ptokens.js.git",
   "id": 165,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// import { text } from 'node:stream/consumers';\r\nimport CryptoAesCbc from 'react-native-crypto-aes-cbc';\n// import { text } from 'stream/consumers';\r\n\nconst key = \"XXXXX\" // in base64 format\nconst iv = \"XXXX\"   // in base 64 format\nconst keysize128 = \"128\" \nconst keysize256 = \"256\"\nconst text = \"Sachin Agrawal\"\n\n  CryptoAesCbc.encryptInHex(iv,key,\"sachin agrawal\",\"128\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.encryptInBase64(iv,key,\"sachin agrawal\",\"128\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.encryptInHex(iv,key256,\"sachin agrawal\",\"256\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.encryptInBase64(iv,key256,\"sachin agrawal\",\"256\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.decryptByBase64(iv,key,\"ZN+DBxlPG+2lmWx6Bu7bqA==\",\"128\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByHex(iv,key,\"64df8307194f1beda5996c7a06eedba8\",\"128\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByBase64(iv,key256,\"Re3CIB8H3wYkUdl/l6WGGw==\",\"256\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByHex(iv,key256,\"45edc2201f07df062451d97f97a5861b\",\"256\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.sha256(\"sachin\",(hashKey) => {\n    console.log(hashKey)\n  })",
   "id": 166,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 33,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var sorting = require('postcss-sorting')\n\npostcss([\n  sorting({ 'sort-order': require('cssortie') })\n]))\r\n\r\nfunction postcss(arg0) {\r\n    throw new Error('Function not implemented.')\r\n}\r\n",
   "id": 167,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Kick off the handshake with the iFrame\nconst handshake = new SecurePostmate({\n//   container: document.getElementById('some-div'), // Element to inject frame into\n  url: 'http://child.com/page.html'\n});\n\n// When parent <-> child handshake is complete, data may be requested from the child\nhandshake.then(child => {\n\n  // Fetch the height property in child.html and set it to the iFrames height\n  child.get('height')\n    .then(height => child.frame.style.height = `${height}px`);\n\n  // Listen to a particular event from the child\n  child.on('some-event', data => console.log(data)); // Logs \"Hello, World!\"\n});",
   "id": 168,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <collection instance>.find({<query key>: {$in: [<query value>]}}, ...)",
   "id": 169,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var rand = require('random-pro');\nconsole.log(rand.generateEvenNumber(10,100));\n// 96\nconsole.log(rand.generateEvenNumber(10,30));\n// 22",
   "id": 170,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const client = require(\"badonker\");\nconst honker = new client();\n\nasync function test() {\n  console.log(await honker.bulknsfw.booty());\n}\n\ntest();",
   "id": 171,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// select the right Ad Id according to platform\n  var admobid = {};\n  if( /(android)/i.test(navigator.userAgent) ) { // for android & amazon-fireos\n    admobid = {\n      banner: 'ca-app-pub-xxx/xxx', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/yyy'\n    };\n//   } else if(/(ipod|iphone|ipad)/i.test(navigator.userAgent)) { // for ios\n    admobid = {\n      banner: 'ca-app-pub-xxx/zzz', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/kkk'\n    };\n  } else { // for windows phone\n    admobid = {\n      banner: 'ca-app-pub-xxx/zzz', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/kkk'\n    };\n  }",
   "id": 172,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "let counter = 0;\n\nconst increment = anticipatedCall(() => {\n  counter = counter + 1;\n});\n\nincrement\n  .nthCallDuring(3, () => {\n    counter = 5;\n//     increment();\n//     increment();\n//     increment();\n  })\n  .then(() => console.log(`counter value is ${counter}`));\n\r\nfunction anticipatedCall(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n// Prints `counter value is 8`",
   "id": 173,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {Handler} from 'handleable';\n\nlet h = new Handler();\n\n// let e = await h.handle(\n  new Error('unhandled error'), // error instance\n  [ // list of handler recipes\n    {\n      handler: 'block', // handler name\n      message: '%{foo} unhandled error', // optional handler error message\n      block: async () => true // handler-specific property,\n//       foo: 'bar' // custom variable for the message\n    },\n    {\n      handler: 'mongoUniqueness', // handler name\n      message: 'already taken', // optional handler error message\n      indexName: 'uniqueEmail' // handler-specific property\n    }\n  ]\n// ); // -> a list of errors",
   "id": 174,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const { connect } = require(\"http2\")\r\n\r\nconnect({host: 'mqtt.test.io', ssl: true, path: '/mqtt'})\n//   .then(client => { ... })\n\n// or\nconnect('wss://mqtt.test.io/mqtt')\n//   .then(client => { ... })\r\n\r\nfunction connect(arg0) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 175,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  const handler = wrapper({\n      url: 'http://example.com/endpoint',\n      endpoint: '/endpoint',\n      auth: 'auth',\n      headers: 'headers',\n      method: 'method',\n      path_params: 'path_param',\n      query_params: 'query_param',\n      required_fields: 'required_fields',\n      request_map: 'request_map',\n      response_map: 'response_map',\n      transform_response: 'transform_response'      \n  });\r\n\r\nfunction wrapper(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 176,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Select = require('react-select-plus');\n\nvar isLoadingExternally = true;\n\n<Select\n  name=\"form-field-name\"\n    isLoading={isLoadingExternally}\n//     ...\n/>",
   "id": 177,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "> pipep([\n    function(a) { return Promise.resolve(a + 3); },\n    function(b) { return Promise.resolve(b * 10); },\n  ])(6);\nPromise\n90\r\n\r\nfunction pipep(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 178,
   "stars": 0,
   "errors": [
    1109,
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var json = {\"hey\": \"guy\",\"anumber\": 243,\"anobject\": {\"whoa\": \"nuts\",\"anarray\": [1,2,\"thr<h1>ee\"], \"more\":\"stuff\"},\"awesome\": true,\"bogus\": false,\"meaning\": null, \"japanese\":\"明日がある。\", \"link\": \"http://jsonview.com\", \"notLink\": \"http://jsonview.com is great\"};\n\n$(function() {\n//   $(\"#json\").JSONView(json);\n  // with options\n//   $(\"#json-collasped\").JSONView(json, { collapsed: true });\n});",
   "id": 179,
   "stars": 0,
   "errors": [
    2592
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// runIt(args, const [options]);\r\n\r\nfunction runIt(args, arg1) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 180,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<p-accordion>\n//     <p-accordionTab header=\"Header 1\">\n       Content 1\n    </p-accordionTab>\n//     <p-accordionTab header=\"Header 2\">\n        Content 2\n    </p-accordionTab>\n//     <p-accordionTab header=\"Header 3\">\n        Content 3    \n    </p-accordionTab>\n</p-accordion>",
   "id": 181,
   "stars": 0,
   "errors": [
    17004,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "rcon.init('fsrcon/init')\n  .then(\n    // resolved\n    function () {\n//       ..\n    },  \n    // rejected\n    function (err) {\n//       ..\n    }\n  );",
   "id": 182,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'view-design/dist/styles/iview.css';",
   "id": 183,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {render, html} from '//unpkg.com/lighterhtml?module';\n\n// document.body.appendChild(\n  // as unkeyed one-off content, right away 🎉\n  html.node`<strong>any</strong> one-off content!<div/>`\n// );\n\n// as automatically rendered wired content 🤯\n// todo(document.body.lastChild);\nfunction todo(node, items = []) {\n  render(node, html`\n  <ul>${\n  items.map((what, i) => html`\n    <li data-i=${i} onclick=${remove}> ${what} </li>`)\n  }</ul>\n  <button onclick=${add}> add </button>`);\n  function add() {\n    items.push(prompt('do'));\n    todo(node, items);\n  }\n  function remove(e) {\n    items.splice(e.currentTarget.dataset.i, 1);\n    todo(node, items);\n  }\n}\r\n\r\nfunction prompt(arg0) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n",
   "id": 184,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 21,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Fetch from 'rd-fetch';\n\nFetch.json('https://example.com/api')\n  .then((response) => {\n    console.log(response.json);\n  })\n  .catch((error) => {\n    console.log(error.json);\n  });",
   "id": 185,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var $DOM = require( \"mock-dom-resources\" );\n\n// ..",
   "id": 186,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Schema.plugin(\n//   mongooseHidden,\n  {\n    hidden: {\n//       ...omitCommonFields.underscored.objTrue,\n      some_other_field: true,\n      another_field_to_ignore: true\n    }\n  }\n);",
   "id": 187,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Accordion from \"@beisen/accordion\"\n",
   "id": 188,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <script src=\"rstate.min.js\"></script>",
   "id": 189,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "    <Extension Géoportail pour iTowns>/\n        GpPluginItowns.js\n            (version minifiée du code javascript pour une utilisation en production)\n        GpPluginItowns.css\n            (version minifiée des css pour une utilisation en production)\n        GpPluginItowns-src.js\n            (version non minifiée du code javascript pour une utilisation en développement)\n        GpPluginItowns-src.css\n//             (version non minifiée des css pour une utilisation en développement)",
   "id": 190,
   "stars": 0,
   "errors": [
    17004,
    2304,
    17008,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const { fail } = require('assert');\r\nvar mixtool = require('mix-h5');\nconst { fail } = require('node:assert');\r\n\n\n// 统计（百度，cnzz）\nvar tracking = mixtool.tracking;\n// init tracking\ntracking.add('baidu', 'xxxxxx'); // baidu site id\ntracking.add('cnzz', 'xxxxxx'); // cnzz site id\n\n\nsetTimeout(function() {\n    tracking.log('loaded');\n}, 1000);\n\n\n// 图片预加载\nvar imgLoader = mixtool.imgLoader;\n// over: preload over, count: loaded image length, length: preload image total length\n// map: loaded image name, percent: count/length, fakePercent: fake percent\nimgLoader.preloadImg(function(over, count, length, map, percent, fakePercent) {\n    if(over && 100 == percent) {\n        // todo\n    } else {\n        console.log(percent);\n    }\n}, {\n    selector: 'xxx', // 预加载图片地址筛选器, default: '.image-resource-wrap span, img.image-resource'\n//     fakeTime: xxx, // 模拟加载时间, default: 2000\n//     fakePercent: xxx // 模拟加载百分比, default: 50\n});\n// get preload image\nimgLoader.get('images/logo.png'); // 返回带版本号的图片地址，如果有cdn前缀就返回前缀，该方法必须要在preloadImg方法执行之后才能调用\n\n\n// 设置微信分享内容\nvar wxtool = mixtool.wx;\nwxtool.setShare({\n    title: 'xxx', // 分享标题\n    link: 'xxx', // 分享链接\n    img: 'xxx', // 分享图片\n    desc: 'xxx', // 分享描述\n    shareLog: {\n        openid: 'xxx', // 用户微信openid\n        nickname: 'xxx', // 用户昵称\n//         ...: 'xxx' // 头像等其他用户信息\n    }, // 分享统计\n//     success: function() {...}, // 分享成功回调函数\n//     fail: function() {...} // 分享失败回调函数\n});\n\n\n// 微信支付\nvar wxtool = mixtool.wx;\nwxtool.pay({\n    openid: 'xxx', // 用户openId\n    product_id: 'xxx', // 商品ID\n    body: 'xxx', // 商品描述\n    total_fee: 'xxx', // 总金额\n    detail: 'xxx', // 商品详情\n    attach: 'xxx', // 附加数据\n    out_trade_no: 'xxx', // 商户订单号\n//     success: function() {...}, // 支付成功回调函数\n//     fail: function() {...} // 支付失败回调函数\n});\n\n\n// 注：上述微信分享和微信支付功能默认配置的是逆行信息科技公众号的appId，在其它公众号项目中使用这些微信功能，需要先执行initWXSDK方法传入相应的appid：\nwxtool.init({\n    appId: 'xxxxxx', // appid  页面域名需要与公众号中设置的回调一致\n    sdkUrl: '//res.wx.qq.com/open/js/jweixin-1.1.0.js', // 微信js sdk地址\n    siteSignApi: 'http://jishub.com/api/siteSign', // 签名接口\n    sitePayApi: 'http://jishub.com/api/sitePay', // 微信支付统一下单\n    jsApiList: [ // 开启的js接口：定制分享内容支付\n        'onMenuShareTimeline',\n        'onMenuShareAppMessage',\n        'chooseWXPay'\n    ],\n    initFail: function () { // 初始化失败\n        console.log('wx init fail');\n    },\n    initDone: function () { // 初始化成功\n        console.log('wx init done');\n    },\n    debug: false // debug模式\n}, function () {\n    // 初始化成功回调\n});\n\n\n// 监测手机横竖屏(限制横屏)\nmixtool.landscape({\n    'pic': 'xxx', // 提示图片\n    'text': '为了更好的体验，请将手机/平板竖过来', // 提示文字\n    'bgcolor': '#32373b', // 遮罩背景色\n    'txtColor': '#ffd40a', // 遮罩字颜色\n    'prefix': 'MixShine', // 遮罩class样式名 prefix + '_landscape'\n    'zIndex': 10000, // 遮罩z-index值\n    'init': false // 监测初始化后回调\n}, function() {\n    // 横屏回调\n}, function () {\n    // 竖屏回调\n});\n\n\n// 监测手机横竖屏(手动控制限制横屏还是竖屏)使用new关键字创建限制实例\nvar restrict = new mixtool.landscape({\n    'manual': true, // 手动控制时必须设为true\n    'pic': 'xxx', // 提示图片\n    'text': '为了更好的体验，请将手机/平板竖过来', // 限制横屏时的提示文字\n    'vetiText': '为了更好的体验，请将手机/平板横过来', // 限制竖屏时的提示文字\n    'bgcolor': '#32373b', // 遮罩背景色\n    'txtColor': '#ffd40a', // 遮罩字颜色\n    'prefix': 'MixShine', // 遮罩class样式��� prefix + '_landscape'\n    'zIndex': 10000, // 遮罩z-index值\n    'init': false // 监测初始化后回调\n}, function() {\n    // 横屏回调\n}, function () {\n    // 竖屏回调\n});\nrestrict.restrictLand(); // 限制横屏\nrestrict.restrictVeti(); // 限制竖屏\nrestrict.noRestrict(); // 无限制\nrestrict.restrictAll(); // 横屏竖屏都限制\n\n\n\n// util工具集\nvar util = mixtool.util;\n\nutil.loadScript // 加载js\nutil.loadImage // 加载图片\nutil.nextFrame // requestAnimationFrame或者setTimeout fallback\nutil.cancelFrame // cancelRequestAnimationFrame或者clearTimeout fallback\nutil.setCssPrefix // 根据浏览器设置css前缀\nutil.styleVender // 根据浏览器获取css前缀\nutil.browser // 浏览器内核判断 ex: util.browser.versions.ios\nutil.isFunction\nutil.isString\nutil.isArray\nutil.getElement // 根据输入内容返回DOM元素，传入字符串就作为DOM的id，传入DOM元素返回本身\nutil.getOffset // 根据输入内容返回DOM元素，传入字符串就作为DOM的id，传入DOM元素相对给定相对元素或body左上角的偏移量\nutil.extend // 将源对象的所有属性拷贝到目标对象中\nutil.genNonceStr // 获取随机数\nutil.setCookie\nutil.getCookie\nutil.getUrlQuery // 读取url上带的参数\nutil.buildUrlQuery // 拼接url参数",
   "id": 191,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 105,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/**\n   * wechatConfig 配置信息\n   * \n   * @param appid 应用唯一标识，在微信开放平台提交应用审核通过后获得\n   * @param redirectUri 重定向地址，需要进行UrlEncode\n   * @param scope 应用授权作用域，拥有多个作用域用逗号（,）分隔，网页应用目前仅填写snsapi_login即可\n   * @param loginType 默认 jssdk\n   * @param style     提供\"black\"、\"white\"可选，默认为黑色文字描述。详见文档底部FAQ\n   * @param href 自定义样式链接，第三方可根据实际需求覆盖默认样式。详见文档底部FAQ\n   * @param state 用于保持请求和回调的状态，授权请求后原样带回给第三方。该参数可用于防止csrf攻击（跨站请求伪造攻击），建议第三方带上该参数，可设置为简单的随机数加session进行校验\n   * @param selfRedirect true：手机点击确认登录后可以在 iframe 内跳转到 redirect_uri，false：手机点击确认登录后可以在 top window 跳转到 redirect_uri。默认为 false。\n*/\n\nimport { DWWeChatLoginConfig } from 'angular-daiwei-wechat-login';\n\n// @AppComponent({\n//   ...\n  template: `<dw-wechat-login [width]=\"'300px'\" [height]=\"'410px'\" [config]=\"weChatConfig\">\n            </dw-wechat-login>`\n// })\nexport class AppComponent {\n\n  wechatConfig: DWWeChatLoginConfig = {\n    appid: 'wxbdc5610cc59c1631',\n    redirectUri: 'https%3A%2F%2Fpassport.yhd.com%2Fwechat%2Fcallback.do',\n    state: '3d6be0a4035d839573b04816624a415e',\n  };\n\n  constructor() {}\n}\n",
   "id": 192,
   "stars": 0,
   "errors": [
    8010
   ],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" />\n// <link rel=\"stylesheet\" href=\"dist/leaflet-push-content-control.css\" />",
   "id": 193,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CrudWrapper = require('mrs-node-util').crud;",
   "id": 194,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// await mongooseQueue.reset()\nconsole.log('The queue was completely purged of all jobs.')\r\n\r\nexport { }\r\n",
   "id": 195,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Route('/home', HomeComponent)\n    .meta({\n        title: 'Home',\n        icon: 'fa-home'\n    });\n\n// Output\n{\n//     path: '/home',\n//     component: HomeComponent,\n    meta: {\n//         title: 'Home',\n        icon: 'fa-home'\n    }\n}\r\n\r\nfunction Route(arg0, HomeComponent) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 196,
   "stars": 0,
   "errors": [
    1128,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// MP.Memberships.get('/some/future/url', myAccessToken)\n  .then(function (data) {\n    console.log(\"You got the data:\", data);\n  });",
   "id": 197,
   "stars": 0,
   "errors": [
    1128,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// constructor\ninterface CurrencyFormatterProps {\n  locales: string | string[],\n  minimumIntegerDigits?: number,\n  precision?: number,\n  useGrouping?: boolean,\n  localeMatcher?: 'lookup' | 'best fit',\n//   formatter?: typeof CurrencyFormatter.formatter,\n\n  style?: 'decimal' | 'currency' | 'percent',\n  currency?: string,\n  currencyDisplay?: 'symbol' | 'code' | 'name',\n}\n\n//options of format\ninterface optionsofformat {\n  minimumIntegerDigits?: number,\n  precision?: number,\n  useGrouping?: boolean,\n  localeMatcher?: 'lookup' | 'best fit',\n\n  style?: 'decimal' | 'currency' | 'percent',\n  currency?: string,\n  currencyDisplay?: 'symbol' | 'code' | 'name',\n}",
   "id": 198,
   "stars": 0,
   "errors": [
    8006,
    8006
   ],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// ☁ ~ cat Garden.js\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst GardenStyle = styled.div`\n  opacity: 1\n`\n\nconst Garden = props => (\n//   <GardenStyle>Hello {props.text}</GardenStyle>\n// )\n\nexport default Garden",
   "id": 199,
   "stars": 0,
   "errors": [
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "#!/usr/bin/env node\n\nvar husk = require('..').exec();\n\nhusk()\n  .whoami(function(code, signal) {\n    console.log('[code: %s, signal: %s]', code, signal);\n  })\n  .once('end', console.log.bind(null, '%s'))\n  .print()\n  .run();",
   "id": 200,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/* Predicate fn */\nfind(\n  item => item.id === 1,\n//   todos\n)\n// => {id: 1, name: \"lorem\", tagId: 2}\n\n/* Matching object */\nfindWith(\n  {\n    \"id\": 1\n  },\n//   todos\n)\n// => {id: 1, name: \"lorem\", tagId: 2}\n\n/* Matching object & predicate fn */\nfilterWith(\n  {\n//     \"tagId\": is // same as `tagId: source => is(source)`\n  },\n//   todos\n)\n// => [{id: 1, name: \"lorem\", tagId: 2}]\n\n/* Syntactic sugar */\nfilterWith(\n  {\n//     \"!tagId\": is // same as `tagId: not(is)`\n  },\n//   todos\n)\n\r\nfunction find(arg0, todos) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n// => [\n//  {id: 2, name: \"ipsum\", tagId: null},\n//  {id: 3, name: \"dolor\", tagId: null}\n// ]",
   "id": 201,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { ReadableStream } = require('stream/web');\r\nconst htmlStream = require('web-html-stream');\n\n/**\n * @param {object} node, a DOM node like object.\n * @return {object} Anything really; return values are accumulated in an\n *   array.\n */\nfunction handler(node, ctx) {\n    // Do something with the node\n    return node;\n}\n\nconst testDoc = \"<html><body><div>\"\n        + \"<test-element foo='bar'>foo</test-element>\"\n        + \"</div></body>\";\n\nconst inputStream = new ReadableStream({\n    start(controller) {\n        controller.enqueue(testDoc);\n        controller.close();\n    }\n});\n\n// Create a matcher to handle some elements, using CSS syntax. To avoid\n// shipping a CSS parser to clients, CSS selectors are only supported in node.\nvar reader = new htmlStream.HTMLTransformReader(inputStream, {\n    transforms: [\n        { selector: 'test-element[foo=\"bar\"]', handler: handler },\n        { selector: 'foo-bar', handler: handler },\n    ],\n    ctx: { hello: 'world' }\n});\n\n// Create the same matcher using more verbose selector objects. These are\n// especially useful when processing dynamic values, as this avoids the need to\n// escape special chars in CSS selectors.\nreader = new htmlStream.HTMLTransformReader(inputStream, {\n    transforms: [{\n        selector: {\n            nodeName: 'test-element',\n            attributes: [['foo', '=', 'bar']]\n        },\n        handler: handler,\n        // Optional: Request node.innerHTML / outerHTML as `ReadableStream`\n        // instances. Only available in rule objects.\n        stream: false\n    }],\n    ctx: { hello: 'world' }\n});\n\n// Read matches\nreader.read()\n.then(res => {\n    console.log(res);\n    return reader.read();\n})\n// {\n//   done: false,\n//   value: [\n//     \"<html><body><div>\",\n//     {\n//       \"nodeName\": \"test-element\",\n//       \"attributes\": {\n//         \"foo\": \"bar\"\n//       },\n//       \"outerHTML\": \"<test-element foo='bar'>foo</test-element>\",\n//       \"innerHTML\": \"foo\"\n//     },\n//     \"</div></body>\"\n//   ]\n// }\n.then(res => console.log);\n// { done: true, value: undefined }",
   "id": 202,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 43,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// here is our parent conductor\nvar parentConductor = rc.createConductor({\n    name: 'parent',\n    props: function() {\n        return {\n            count: 0,\n            candies: [ 'twix', 'snickers', 'kit kat' ]\n        };\n    }\n});\n\n// now we inherit by specifying a deps config\nvar childConductor = rc.createConductor({\n    name: 'child',\n    deps: [ parentConductor ],\n    props: function(inheritedProps) {\n        // children conductor are provided with the parent props.\n        // you can choose to mutate this object for the child conductor.\n\n        // note that mutating inheritedProps does NOT affect the parent\n        // conductor's props!\n        inheritedProps.count += 1;\n        inheritedProps.candies = inheritedProps.candies.concat('butterfinger');\n\n        // like the parent conductor, this returned value will become immutable\n        return inheritedProps;\n    },\n    handlers: [\n        function render(req, res, next) {\n//             var props = rc.getProps(req);\n\n//             res.render(props, next);\n            // => will render:\n            // {\n            //      count: 1,\n            //      candies: [ 'twix', 'snickers', 'kit kat', 'butterfinger' ]\n            // }\n        }\n    ]\n});",
   "id": 203,
   "stars": 0,
   "errors": [
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 22,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//   ...\n//   height: '50%-1',\n//   left: '45%+1',\n//   ...",
   "id": 204,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "proxyList.getByCountryCode('FR')\n          .then(function (proxies) {\n            // get proxies here\n          })\n          .catch(function (error) {\n            throw new Error(error);\n          });",
   "id": 205,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/*** Add company table, insert some data and connect with user table ***/\n\n// CREATE TABLE \"company\"\n(\n//    id serial,\n//    company_name character(20) NOT NULL,\n//    CONSTRAINT pk_company PRIMARY KEY (id),\n//    CONSTRAINT uk_company UNIQUE (company_name)\n// )\n// WITH (\n//   OIDS = FALSE\n// );\n\n// INSERT INTO \"company\"(company_name)\n//     VALUES ('Company 1');\n\n// ALTER TABLE \"user\"\n//   ADD COLUMN company_id integer;\n\n// UPDATE \"user\" SET const company_id = 1;\n\n// ALTER TABLE \"user\"\n//    ALTER COLUMN company_id SET NOT NULL;\n\n// ALTER TABLE \"user\"\n//   ADD CONSTRAINT fk_user FOREIGN KEY (company_id) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE NO ACTION;\n\r\nfunction character(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n// ",
   "id": 206,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var csgotm = require('node-csgotm-api');\n// var api = new csgotm.API(options);",
   "id": 207,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { connected } = require(\"process\")\r\n\r\n// listening\n// client connected\n// args: arg1,arg2\n// body: Hello World!",
   "id": 208,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {makeDispatcher} from \"robojs\"\nvar myNewEventDispatcher=makeDispatcher();",
   "id": 209,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// swangular.success(\"Great job!\");",
   "id": 210,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// sudo yum install clamav",
   "id": 211,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const { call } = require(\"assert\")\r\n\r\n// If in Player A's simulation the character just dodged the bullet in time, but in Player B's simulation the character didn't dodge that same bullet in time - strictly due to fuzziness - our two simulations are no longer in sync and we aren't sharing a game state any longer. We call this non-deterministic physics.",
   "id": 212,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n    var contentType = 'Content-Type';\n//     var body = new CreatenewUpdatePropertyManagerRequest({\"key\":\"value\"});\n\n//     controller.createnewPropertyManager(contentType, body, function(error, response, context) {\n\n    \n//     });",
   "id": 213,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// client.summarization(\"<Your text to summarize>\")",
   "id": 214,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <Mark wrap=\"span\">*text*</Mark>",
   "id": 215,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const renderer = templateEngine.render(string[, parameters, style]);",
   "id": 216,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// form.on('field', (name, value) => {});",
   "id": 217,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { version } = require(\"os\")\r\n\r\n// onvif-ptz goto-home\n\n// Move the camera to the home position.\n\n// Options:\n//   --help          Show help  [boolean]\n//   --version       Show version number  [boolean]\n//   --baseUrl       The baseUrl of the camera.  [string] [required]\n//   --path          The onvif path of the camera.  [string] [default: \"/onvif/device_service\"]\n//   --username, -u  The username of the camera.  [string] [required]\n//   --password, -p  The password of the camera.  [string] [required]",
   "id": 218,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "pusudb.use('ws', function(req, socket, next){\n    console.log(req.headers) \n    console.log(req.params) // URL params\n    console.log(req.body) // Body-Data\n    console.log(req.docs) // Result sending to client \n    next()\n})",
   "id": 219,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Cookies from \"ts-cookies\";",
   "id": 220,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var LayerWebhooks = require('layer-webhooks');\n\n// Initialize by providing your Layer credentials\nvar layer = new LayerWebhooks({\n//   token: API_TOKEN,\n//   appId: APP_ID\n});\n\n// Register a webhook\nlayer.webhooks.register({\n  events: ['message.sent'],\n  url: 'https://mydomain.com/mywebhooks/messages-sent',\n  secret: 'Frodo is a Dodo',\n  config: {\n    name: 'My sample webhook'\n  }\n}, function(err, res) {\n  if (err) return console.error(err);\n\n  // Webhook registered\n});",
   "id": 221,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function App() {\n  return (\n    <Auth\n//       loginCall={loginCall}\n//       meCall={meCall}\n//       storageBackend={storageBackend}\n      storageNamespace='my-auth'\n//       render={(authActions, authState, userState) => /* render my children */}\n    />\n  )\n}",
   "id": 222,
   "stars": 0,
   "errors": [
    17004,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const HOST=mypublicdevhost.com",
   "id": 223,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import VuePictureCut from 'vue-picture-cut';\n// Vue.use(VuePictureCut);",
   "id": 224,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <iconly name=\"activity\" type=\"bold\" />\n// <iconly name=\"activity\" type=\"bulk\" />\n// <iconly name=\"activity\" type=\"light\" />\n// <iconly name=\"activity\" type=\"outline\" />\n// <iconly name=\"activity\" type=\"broken\" />\n// <iconly name=\"activity\" type=\"tone\" />",
   "id": 225,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nfunction transferTokens(sender, to, amount) {\n//   const web3 = new web3();\n//   const TokenContract = web3.eth.contract(Token.abi).at(Token.address);\n//   const data = TokenContract.transfer.getData(to, amount);\n//   const options = { data, from: sender, to: Token.address };\n//   return Transaction({ options });\n}\n\nconst tx = transferTokens(\n  '0xe8d3266f3c4f083ab8864b5e04aea7b087044e49',\n  '0x7967c4f4512195ba83ae8f08ca30f7b145be6cf8',\n  1000000\n);\n\n// const txhash = await tx.transact(provider);\r\n\r\nfunction Transaction(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 226,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { createLogger } = require('@livy/logger')\n\nconst logger = createLogger('my-app-logger', {\n  mode: 'async'\n})",
   "id": 227,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nvar Yobit = require('yobit-exchange-api');\nvar VersionTwo = require('yobit-exchange-api/lib/version_two');\nvar Trade = require('yobit-exchange-api/lib/trade');\n\nvar keys = {key: '', secret: ''}\nvar yobit = new Yobit(keys)\nvar version2 = new VersionTwo(keys);\nvar trade = new Trade(keys);\n\ntrade.getInfo(function(err, data) {\n  console.log(data);\n})\n\nversion2.ticker('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nversion2.depth('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nversion2.trades('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nyobit.fee(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.ticker(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.depth(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.trades(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.info(function(err, data) {\n  console.log(data);\n})\n",
   "id": 228,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 34,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <AllDocs db=\"dbname\" include_docs ... />",
   "id": 229,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "gauge1:+3\n//  - tag1:v1\n//  - tag2:v2",
   "id": 230,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const AssetsQueryOptions = require('drequest-maxdome').AssetsQueryOptions;\n\n// const assetId = <assetId>;\n// const assetsQueryOptions = new AssetsQueryOptions(assetId);\n\n// const assets =\n//   await maxdome.request('assets')\n//     .addOptions(assetsQueryOptions)\n//     .send();",
   "id": 231,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {\n  isMobile,\n  isSmall,\n  isTablet,\n  isDesktop\n} from \"@times-stories/style-guide/helpers\";\n\nisMobile(); // Boolean\nisSmall(); // Boolean\nisTablet(); // Boolean\nisDesktop(); // Boolean",
   "id": 232,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/**\n* @param  {String}  language        Language identifier\n* @param  {String}  modelsString    Array with speakers-voice models-(optional)defaultStyle correspondence (e.g. '[[\"speaker1\",\"model1\",\"style1\"],[\"speaker2\",\"model2\"]]')\n* @param  {String}  vttText         Subtitle text, in VTT format\n* @param  {Number[]}    selectedSentences   Array with indexes of sentences to be synthesized\n* @return {String}                  JSON-formatted string for synthesis\n*/",
   "id": 233,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// exlog.error(new Error());",
   "id": 234,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {\n  EpubView, // Underlaying epub-canvas (wrapper for epub.js iframe)\n  EpubViewStyle, // Styles for EpubView, you can pass it to the instance as a style prop for customize it\n  ReactReader, // A simple epub-reader with left/right button and chapter navigation\n  ReactReaderStyle // Styles for the epub-reader it you need to customize it\n} from \"react-reader\";",
   "id": 235,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// {app_root}/config/plugin.js\nexports.cuteLogger = {\n  enable: true,\n  package: 'egg-cute-logger',\n};",
   "id": 236,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const asyncIteratorToStream = require(\"async-iterator-to-stream\");\n\n// promisified fs\nconst fs = require(\"mz/fs\");\n\nconst createReadStream = asyncIteratorToStream(async function*(file) {\n  const fd = await fs.open(file, \"r\");\n  try {\n    let size = yield;\n    while (true) {\n      const buf = Buffer.alloc(size);\n      const [n] = await fs.read(fd, buf, 0, size, null);\n      if (n < size) {\n        yield buf.slice(0, n);\n        return;\n      }\n      size = yield buf;\n    }\n  } finally {\n    await fs.close(fd);\n  }\n});\n\ncreateReadStream(\"foo.txt\").pipe(process.stdout);",
   "id": 237,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// 좌절\n// 아아아아",
   "id": 238,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const jwksClient = require('jwks-rsa');\n\nconst client = jwksClient({\n  rateLimit: true,\n  jwksRequestsPerMinute: 10, // Default value\n  jwksUri: 'https://sandrino.auth0.com/.well-known/jwks.json'\n});\n\nconst kid = 'RkI5MjI5OUY5ODc1N0Q4QzM0OUYzNkVGMTJDOUEzQkFCOTU3NjE2Rg';\n// const key = await client.getSigningKey(kid);\n// const signingKey = key.getPublicKey();",
   "id": 239,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const cwb = new CWBClient(API_KEY)",
   "id": 240,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//   \"homepage\": \"http://mywebsite.com/relativepath\",",
   "id": 241,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export default async function (e, t, a) {\n    let n = document.createElement(e);\n    n.append(...(await a));\n    return Object.assign(n, t);\n}",
   "id": 242,
   "stars": 0,
   "errors": [
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// require('ranker')(null, app);",
   "id": 243,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// --> POST / {\"jsonrpc\":\"2.0\",\"id\":3,\"method\":\"eth_gasPrice\",\"params\":[]}\n// <-- {\"jsonrpc\":\"2.0\",\"result\":\"0x2e90edd000\",\"id\":3}",
   "id": 244,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const { name } = require(\"assert\")\r\n\r\n// formatter --const name=\"Fred Flintstone\" Australia < test/template.txt",
   "id": 245,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  var nconf = require('nconf');\n\n  //\n  // Requiring `nconf-redis` will extend the `nconf`\n  // module.\n  //\n  require('nconf-redis');\n\n  nconf.use('redis', { host: 'localhost', port: 6379, ttl: 60 * 60 * 1000 });",
   "id": 246,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Type definitions for Node.js 10.12\n// Project: http://nodejs.org/\n// Definitions by: Microsoft TypeScript <https://github.com/Microsoft>\n//                 Definitely Typed <https://github.com/DefinitelyTyped>\n//                 Alberto Schiabel <https://github.com/jkomyno>",
   "id": 247,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import formCreate from 'form-create'\nimport { maker } from 'form-create'\n// Vue.use(formCreate)",
   "id": 248,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// scss\nimport 'node_modules/@auraxy/react-select/lib/css/index.scss'\n\n// css\nimport 'node_modules/@auraxy/react-select/lib/css/index.css'",
   "id": 249,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import HttpModule from 'react-native-http-module';\n\n// const httpModule = new HttpModule(baseURL, headers);",
   "id": 250,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import tinyDelay from \"tiny-delay\"\n\ntinyDelay()",
   "id": 251,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "autossh({\n  host: '111.22.333.444',\n  username: 'root',\n  localPort: 'auto',\n  remotePort: 5432,\n  sshPort: 9999\n});\r\n\r\nfunction autossh(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 252,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//   \"acm:DescribeCertificate\", // only for custom domains\n//   \"acm:ListCertificates\",    // only for custom domains\n//   \"acm:RequestCertificate\",  // only for custom domains\n//   \"cloudfront:CreateCloudFrontOriginAccessIdentity\",\n//   \"cloudfront:CreateDistribution\",\n//   \"cloudfront:CreateInvalidation\",\n//   \"cloudfront:GetDistribution\",\n//   \"cloudfront:GetDistributionConfig\",\n//   \"cloudfront:ListCloudFrontOriginAccessIdentities\",\n//   \"cloudfront:ListDistributions\",\n//   \"cloudfront:ListDistributionsByLambdaFunction\",\n//   \"cloudfront:ListDistributionsByWebACLId\",\n//   \"cloudfront:ListFieldLevelEncryptionConfigs\",\n//   \"cloudfront:ListFieldLevelEncryptionProfiles\",\n//   \"cloudfront:ListInvalidations\",\n//   \"cloudfront:ListPublicKeys\",\n//   \"cloudfront:ListStreamingDistributions\",\n//   \"cloudfront:UpdateDistribution\",\n//   \"iam:AttachRolePolicy\",\n//   \"iam:CreateRole\",\n//   \"iam:CreateServiceLinkedRole\",\n//   \"iam:GetRole\",\n//   \"iam:PutRolePolicy\",\n//   \"iam:PassRole\",\n//   \"lambda:CreateFunction\",\n//   \"lambda:EnableReplication\",\n//   \"lambda:DeleteFunction\",            // only for custom domains\n//   \"lambda:GetFunction\",\n//   \"lambda:GetFunctionConfiguration\",\n//   \"lambda:PublishVersion\",\n//   \"lambda:UpdateFunctionCode\",\n//   \"lambda:UpdateFunctionConfiguration\",\n//   \"route53:ChangeResourceRecordSets\", // only for custom domains\n//   \"route53:ListHostedZonesByName\",\n//   \"route53:ListResourceRecordSets\",   // only for custom domains\n//   \"s3:CreateBucket\",\n//   \"s3:GetAccelerateConfiguration\",\n//   \"s3:GetObject\",                     // only if persisting state to S3 for CI/CD\n//   \"s3:ListBucket\",\n//   \"s3:PutAccelerateConfiguration\",\n//   \"s3:PutBucketPolicy\",\n  \"s3:PutObject\"",
   "id": 253,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const appAuth = auth(\n    {\n        // Simple case where roles is a text field in User containing roles separated by commas\n        rolesGetter: async (context, userId) => {\n            const user = context.app.service(\"users\").get(userId);\n            return user.roles.split(\",\") || [];\n        },\n    },\n    \"jwt\"\n);\n\napp.service(\"service\").hooks({\n    before: {\n        all: appAuth,\n    },\n});\r\n\r\nfunction auth(arg0, arg1) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 254,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport logo from './logo.png'; // Tell Webpack this JS file uses this image\n\nconsole.log(logo); // /logo.84287d09.png\n\nfunction Header() {\n  // Import result is the URL of your image\n//   return <img src={logo} alt=\"Logo\" />;\n}\n\nexport default Header;",
   "id": 255,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//data为代付同步返回的结果\n// if(llpaycahpayInstance.submitSuccess(data)){\n    //todo,更新提现订单....\n// }",
   "id": 256,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var obj = { 'a': { 'b': { 'c': 'd' } } };\n\nvar val = dget( obj );\n\r\nfunction dget(obj) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n// returns 'd'",
   "id": 257,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//     phonebook listall\n",
   "id": 258,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// .container {\n//     width: 100%;\n//     height: 100%;\n//   }",
   "id": 259,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = function(eor){\n  return eor.define(\"Application\").extend(function(){\n    this.title = \"Express Override\";\n  })\n  .methods({\n    index : function(req, res) {\n      var sampleModel = eor.getModule(\"Sample\", \"Model\");\n      if(sampleModel.index()){\n        res.render('index', { title: this.title })\n      }else{\n        res.render('index', { title: this.title, error_message : \"ErrorCode => -1111\"});\n      }\n    },\n\n    hello : function(req, res) {\n      res.render('index', { title: eor.shared.name })\n    }\n  })\n};",
   "id": 260,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport { shallow } from 'enzyme';\nimport App from './App';\n\nit('renders without crashing', () => {\n//   shallow(<App />);\n});",
   "id": 261,
   "stars": 0,
   "errors": [
    2593
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "bit.get(\"mempool\").then((mepool) => {\n  //  mempool := {\n  //    tx: <array of mempool transactions>\n  //  }\n})",
   "id": 262,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// clock.syncTime();",
   "id": 263,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "grunt.initConfig({\n  tishadow: {\n    test: {\n      command: 'spec',\n      options: {\n        junit: true\n      }\n    },\n    run: {\n      command: 'run',\n      options: {\n        junit: true,\n        patch: true,\n        preclear: true\n      }\n    }\n  }\n});",
   "id": 264,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// .loginForm\n// .username\n// .usernameLabel\n// .password\n// .passwordLabel\n// .remember\n// .rememberLabel\n// .button\n// .forgotLink",
   "id": 265,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const successCount = librato.metric('foo.success.count')\n// const errorCount   = librato.metric('foo.error.count')\n\n// SomePromise().then(doSomething)\n//              .then(doSomethingElse)\n//              .then(successCount)    // Increment on success\n//              .catch(errorCount)     // Increment error on failure\r\n\r\nfunction SomePromise() {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 266,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import LockTableView from 'react-native-locktable';",
   "id": 267,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// gh is 1 --comment 'Node GH rocks!'",
   "id": 268,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const input = document.querySelector('input');\n// const button = document.querySelector('.js-add-signature');\nbutton.addEventListener(event => {\n//     textFieldEdit.insert(input, 'Made by 🐝 with pollen.');\n});",
   "id": 269,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// vue + ts + prettier\n\n//   extends: [\n    'plugin:@etherfe/vue-typescript'\n    'plugin:@etherfe/vue-prettier'\n//   ]",
   "id": 270,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import SensorManager from \"rnative-sensor-manager\";\nSensorManager.startPressure(100);\nDeviceEventEmitter.addListener(\"pressure\", (data) => {\n  /**\n   * data.pressure\n   **/\n});\nSensorManager.stopPressure();",
   "id": 271,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const inspector = require('event-loop-inspector')();\nconst dump = inspector.dump();\n\nconsole.log(dump);",
   "id": 272,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// the value stored in column `key` of table `test` is encrypted in database\n// const testDao = dao.create(pool).table('test').encrypt(['key']);\n\nawait pool.transaction(async (query): Promise<boolean> => {\n//   await dao.create(pool).delete().from('unittest_dao').exec(query);\n  await testDao.insert({\n    key: 'key1',\n    count: 1,\n    value: 'value1'\n  }).exec(query);\n  await testDao.update().set({\n    key: 'key1',\n    count: 1,\n    value: 'value2'\n  }).exec(query);\n  return true;\n})\r\n\r\nexport { };\r\n",
   "id": 273,
   "stars": 0,
   "errors": [
    1378,
    2304,
    8010,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  bordinoAuthenticate.validateToken('mytoken')\n                     .then((isValide)=>{\n                       //do your job\n                     })\n                     .catch((e)=>(\n                       //handle error\n                     ))",
   "id": 274,
   "stars": 0,
   "errors": [
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { Plugin } from 'munar-core'\nexport default class MyPlugin extends Plugin {\n  // etc\n}",
   "id": 275,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import ActionSheet from 'react-native-actionsheet'\n\n// class Demo extends React.Component {\n//   showActionSheet = () => {\n//     this.ActionSheet.show()\n//   }\n//   render() {\n    return (\n      <View>\n        <Text onPress={this.showActionSheet}>Open ActionSheet</Text>\n        <ActionSheet\n          ref={o => this.ActionSheet = o}\n          title={'Which one do you like ?'}\n          options={['Apple', 'Banana', 'cancel']}\n          cancelButtonIndex={2}\n          destructiveButtonIndex={1}\n          onPress={(index) => { /* do something */ }}\n        />\n      </View>\n    )\n//   }\n// }",
   "id": 276,
   "stars": 0,
   "errors": [
    1108
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Field.add('ID', Field.INTEGER({\n  primaryKey    : true,\n  autoIncrement : true,\n  allowNull     : false,\n  validate      : { min: 1 }\n}))\nField.add('PK_INTEGER', Field.INTEGER({\n  primaryKey : true,\n  allowNull  : false,\n  validate   : { min: 1 }\n}))\nField.add('PK_UUID', Field.UUID({\n  primaryKey : true,\n  allowNull  : false\n}))",
   "id": 277,
   "stars": 0,
   "errors": [
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { diveDeco } from 'diving-decompression'\n// ...\nconst dive = { depth: 100, bottomTime: 135 };\nconst decoObject = diveDeco(dive);\nconsole.log(decoObject)",
   "id": 278,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var model = {\n  web: 'http://www.google.com',\n  images: 'http://images.google.com/'\n};",
   "id": 279,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// console.log(source.expand());",
   "id": 280,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const eip = require('eip');\nconst redis = require('redis');\nconst { PubSub, Queue } = require('eip-redis');\nconst { Timer } = require('eip-timer');\n\nconst redisPub = redis.createClient();\nconst redisSub =  redis.createClient({return_buffers:true});\n\nconst pubSub = new PubSub(1, 1000, redisPub, redisSub, 'namespace') // eventsPerPeriod, periodInMS\nconst queue = new Queue(redisPub, 'namespace');\nconst resource = x => x;\n\nconst throttler = new eip.Route().throttleResource({ pubSub, queue, resource, Timer });",
   "id": 281,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "void 0",
   "id": 282,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const { loading, error, data, refetch } = useAxios({\n//     url: \"api-url\",\n// });\nreturn (\n    <div className=\"App\">\n        <h1>{loading && \"Loading\"}</h1>\n        <h1>{error && \"Error!\"}</h1>\n        <button onClick={refetch}>Refetch</button>\n        <div>{data && JSON.stringify(data)}</div>\n    </div>\n);\r\n\r\nfunction useAxios(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 283,
   "stars": 0,
   "errors": [
    1108
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// await client.balances()\n// await client.balance('BTC')\n// await client.depositAddress('BTC')\n// await client.withdraw('BTC', { quantity: 1.2, address: 'abcde' })\n// await client.order('30594e6e-ba54-4914-96f3-5b9d5de2468e')\n// await client.orderHistory('BTC-ETH')\n// await client.withdrawalHistory('BTC')\n// await client.depositHistory('BTC')\r\n\r\nexport { }\r\n",
   "id": 284,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CoreApiV10 = require('core_api_v10');\n\nvar api = new CoreApiV10.AuthApi()\n\nvar authorization = \"authorization_example\"; // {String} JWT access token\n\nvar opts = { \n  'model': new CoreApiV10.TwoFactorAuthenticatorConfirm() // {TwoFactorAuthenticatorConfirm} \n};\napi.v10Auth2faConfirmPost(authorization, opts).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n\n",
   "id": 285,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// using promise API\nrecursive(\"/app\", {\n  ignores: [\"README.md\"],\n//   fs, // in-memory fs\n  debug: true,\n  log: (...msg) => console.log(\"readdir\", ...msg)\n}).then(successFn, errFn);\r\n\r\nfunction recursive(arg0, arg1) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 286,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const { name } = require(\"assert\");\r\n\r\n// <template>\n//   <div id=\"app\" v-if=\"hydrated\">\n//     <router-view/>\n//   </div>\n// </template>\n\n// <script>\nexport default {\n  name: 'App',\n  data: () => ({ hydrated: false }),\n  async mounted() {\n    await this.$apollo.provider.defaultClient.hydrated()\n    this.hydrated = true\n  },\n}\n// </script>",
   "id": 287,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// konstructor-cli new my-app",
   "id": 288,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const repl = require('re-pl');\nconst run = require('setlist');\n\nrun(function* () {\n  // Initialize variables and do some work here\n//   ...\n//   let value = yield someWorkHere();\n\n  // Pause execution to inspect ongoing process\n//   const value = yield repl(($)=>eval($))(value);\n\n  // The edited/unedited return value can be used later\n//   return lastWorkHere(value);\n});",
   "id": 289,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "walk(function(r, n){ return r+n }, 0, ...[1,2,3]) // -> 6\r\n\r\nfunction walk(arg0, arg1, arg2) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 290,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var WrapperBuilder = require('thunkify-object').WrapperBuilder;\n\nvar Wrapper = new WrapperBuilder()\n .addEvent(['on', 'once'])\n .addPassThrough('emit')\n .getWrapper();",
   "id": 291,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { table } = require(\"console\");\r\n\r\n// table.page(1);",
   "id": 292,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const { info } = require(\"console\")\r\n\r\n// user> @hubot 5rolli\n// Hubot>\n// ## test-project\n// - 残り: 29.5 days (38.4 days/people, to: 2016/03/06)\n// - 消化: 31.2 days (40.6 days/people, es: 247%)\n\n// user> @hubot 5rolli info test-project\n// hubot>\n// ## test-project\n\n// ### タスク残り時間 (5時間/日, 1.3人換算)\n// - 予想: 29.5 days (38.4 days/people, to: 2016/03/06)\n// - 最速: 21 days (27.4 days/people, to: 2016/02/28)\n// - 最悪: 65.4 days (85.1 days/people, to: 2016/05/01)\n\n// ### 完了タスク消化時間\n// - 31.2 days (40.6 days/people)\n\n// ### タスク消化率\n// - 予想: 31.4%\n// - 最速: 32.7%\n// - 最悪: 25.9%\n\n// ### 完了タスク消化ペース\n// - 予想: 247%\n// - 最速: 303%\n// - 最悪: 136%\n\n// ### 初回終了予想日 (開始日: 2015/11/27)\n// - 予想: 2016/01/31 (diff: 35 days)\n// - 最速: 2016/01/17 (diff: 42 days)\n// - 最悪: 2016/04/03 (diff: 28 days)\r\n\r\nfunction days(arg0, arg1, to, arg3) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 293,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'suneditor/dist/css/suneditor.min.css'\nimport suneditor from 'suneditor'\n// Import codeMirror\nimport CodeMirror from 'codemirror'\nimport 'codemirror/mode/htmlmixed/htmlmixed'\nimport 'codemirror/lib/codemirror.css'\n\nsuneditor.create('sample', {\n    codeMirror: CodeMirror // window.CodeMirror,\n    // Set options\n    // codeMirror: {\n    //     src: CodeMirror,\n    //     options: {...}\n    // }\n    buttonList: [\n        ['codeView']\n    ],\n    height: 400\n});",
   "id": 294,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/*\nexample.js\n\nthis node script will serve a lightweight swagger-ui crud-api backed by mongodb\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n          $ npm install swagger-mongodb && npm_config_server_port=1337 node example.js\n    3. open a browser to http://localhost:1337\n    4. interact with the swagger-ui crud-api\n*/\n\n/*jslint\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n\n(function (local) {\n    'use strict';\n//     switch (local.modeJs) {\n\n\n\n    // run node js-env code\n//     case 'node':\n        // export local\n        module.exports = local;\n        // init assets\n        local.utility2.cacheDict.assets['/'] = '<!DOCTYPE html>\\n' +\n/* jslint-ignore-begin */\n'<html>\\n' +\n'<head>\\n' +\n'    <meta charset=\"UTF-8\">\\n' +\n'    <title>\\n' +\n'    {{envDict.npm_package_name}} [{{envDict.npm_package_version}}]\\n' +\n'    </title>\\n' +\n'    <link rel=\"stylesheet\" href=\"/assets/utility2.css\">\\n' +\n'    <style>\\n' +\n'    * {\\n' +\n'        box-sizing: border-box;\\n' +\n'    }\\n' +\n'    body {\\n' +\n'        background-color: #fff;\\n' +\n'        font-family: Helvetical Neue, Helvetica, Arial, sans-serif;\\n' +\n'    }\\n' +\n'    body > div {\\n' +\n'        margin: 20px 0 20px 0;\\n' +\n'    }\\n' +\n'    .testReportDiv {\\n' +\n'        display: none;\\n' +\n'    }\\n' +\n'    </style>\\n' +\n'    {{envDict.npm_config_html_head_extra}}\\n' +\n'</head>\\n' +\n'<body>\\n' +\n'    <div class=\"ajaxProgressDiv\" style=\"display: none;\">\\n' +\n'    <div class=\"ajaxProgressBarDiv ajaxProgressBarDivLoading\">loading</div>\\n' +\n'    </div>\\n' +\n'    <h1>{{envDict.npm_package_name}} [{{envDict.npm_package_version}}]</h1>\\n' +\n'    <h3>{{envDict.npm_package_description}}</h3>\\n' +\n'    <div class=\"testReportDiv\"></div>\\n' +\n'    <div id=\"swagger-ui-container\" style=\"display: none;\"></div>\\n' +\n'    <iframe height=\"512\" src=\"/assets/swagger-ui.html\" width=\"100%\"></iframe>\\n' +\n'    <script src=\"/assets/utility2.js\"></script>\\n' +\n'    <script src=\"/assets/swagger-ui.rollup.js\"></script>\\n' +\n'    <script src=\"/assets/swagger-mongodb.js\"></script>\\n' +\n'    <script src=\"/assets/example.js\"></script>\\n' +\n'    <script src=\"/test/test.js\"></script>\\n' +\n'    <script>\\n' +\n'    window.utility2 = window.utility2 || {};\\n' +\n'    window.utility2.envDict = {\\n' +\n'        npm_package_description: \"{{envDict.npm_package_description}}\",\\n' +\n'        npm_package_name: \"{{envDict.npm_package_name}}\",\\n' +\n'        npm_package_version: \"{{envDict.npm_package_version}}\"\\n' +\n'    };\\n' +\n'    document.querySelector(\"iframe\").onload = function () {\\n' +\n'        var self;\\n' +\n'        self = this;\\n' +\n'        self.height = innerHeight - self.offsetTop - 20;\\n' +\n'        self.contentWindow.location.hash = location.hash;\\n' +\n'        self.contentWindow.onclick = function () {\\n' +\n'            setTimeout(function () {\\n' +\n'                location.hash = self.contentWindow.location.hash;\\n' +\n'            });\\n' +\n'        };\\n' +\n'    };\\n' +\n'    </script>\\n' +\n'    {{envDict.npm_config_html_body_extra}}\\n' +\n'</body>\\n' +\n/* jslint-ignore-end */\n            '</html>\\n';\n        local.utility2.cacheDict.assets['/'] = local.utility2.stringFormat(\n            local.utility2.cacheDict.assets['/'],\n            { envDict: local.utility2.envDict },\n            ''\n        );\n        local.utility2.cacheDict.assets['/assets/example.js'] =\n            local.utility2.istanbul_lite.instrumentSync(\n                local.fs.readFileSync(__dirname + '/example.js', 'utf8'),\n                __dirname + '/example.js'\n            );\n        local.utility2.cacheDict.assets['/test/test.js'] =\n            local.utility2.istanbul_lite.instrumentInPackage(\n                local.fs.readFileSync(local.swmg.__dirname + '/test.js', 'utf8'),\n                local.swmg.__dirname + '/test.js',\n                'swagger-mongodb'\n            );\n        // init mongodb-client\n        local.utility2.onReady.counter += 1;\n        local.utility2.taskRunOrSubscribe({\n            key: 'swagger-mongodb.mongodbConnect',\n            onTask: function (onError) {\n                local.mongodb.MongoClient.connect(\n                    local.utility2.envDict.npm_config_mongodb_url ||\n                        'mongodb://localhost:27017/test',\n                    function (error, db) {\n                            // validate no error occurred\n                            local.utility2.assert(!error, error);\n                            local.swmg.db = db;\n                            onError();\n                            local.utility2.onReady();\n                        }\n                );\n            }\n        });\n        // init middleware\n        local.middleware = local.utility2.middlewareGroupCreate([\n            // init pre-middleware\n            local.utility2.middlewareInit,\n            // init cached-assets middleware\n            local.utility2.middlewareAssetsCached,\n            // init http-body-get middleware\n            local.utility2.middlewareBodyGet,\n            // init http-body-parse-upload middleware\n            function (request, response, nextMiddleware) {\n                var boundary, bodyText;\n                // jslint-hack\n                local.utility2.nop(response);\n                local.utility2.testTryCatch(function () {\n                    if ((request.headers['content-type'] || '')\n                            .indexOf('multipart/form-data') !== 0) {\n                        nextMiddleware();\n                        return;\n                    }\n                    boundary =\n                        '--' + (/boundary=(.*)/).exec(request.headers['content-type'])[1];\n                    request.swmgBodyParsed = {};\n                    bodyText = String(request.bodyRaw);\n                    bodyText.split(boundary).slice(1, -1).forEach(function (part) {\n                        request.swmgBodyParsed[\n                            (/\\bname=\"([^\"]*)/).exec(part)[1]\n                        ] = part.split('\\r\\n\\r\\n').slice(1).join('\\r\\n\\r\\n').slice(0, -2);\n                    });\n                    // set file\n                    bodyText.replace('\\r\\n\\r\\n', function (match0, ii) {\n                        // jslint-hack\n                        local.utility2.nop(match0);\n                        request.swmgBodyParsed.file = request.bodyRaw\n                            .slice(ii + 4, -(boundary.length + 6))\n                            .toString('base64');\n                    });\n                    request.swmgBodyParsed.file = request.bodyRaw\n                        .slice(bodyText.lastIndexOf('\\r\\n\\r\\n') + 4, -(boundary.length + 6))\n                        .toString('base64');\n                    // set filename\n                    request.swmgBodyParsed.filename = (/\\bfilename=\"([^\"]+)/).exec(bodyText);\n                    request.swmgBodyParsed.filename =\n                        request.swmgBodyParsed.filename &&\n                        request.swmgBodyParsed.filename[1];\n                    nextMiddleware();\n                }, nextMiddleware);\n            },\n            // init http-body-parse middleware\n            local.swmg.middlewareBodyParse,\n            // init swagger pre-middleware\n            function (request, response, nextMiddleware) {\n                // jslint-hack\n                local.utility2.nop(request);\n                // enable cors\n                // http://en.wikipedia.org/wiki/Cross-origin_resource_sharing\n                response.setHeader(\n                    'Access-Control-Allow-Methods',\n                    'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'\n                );\n                response.setHeader('Access-Control-Allow-Origin', '*');\n                // init content-type\n                response.setHeader('Content-Type', 'application/json; charset=UTF-8');\n                nextMiddleware();\n            },\n            // init swagger middleware\n            local.swmg.middlewareSwagger\n        ]);\n        // init error-middleware\n        local.middlewareError = local.swmg.middlewareError;\n        // init petstore-api\n        (function () {\n            var methodPath, options, schema;\n            options = local.utility2.jsonCopy(require(local.swmg.local\n                .swagger_ui_lite.__dirname + '/swagger.json'));\n            options = {\n                definitions: options.definitions,\n                paths: options.paths,\n                tags: options.tags\n            };\n            // remove unused properties\n            delete options.definitions.ApiResponse;\n            // init schema\n            Object.keys(options.definitions).forEach(function (schemaName) {\n                schema = options.definitions[schemaName];\n                // init id\n                schema.properties.id = { type: 'string' };\n                schema['x-inheritList'] = [{ $ref: '#/definitions/JsonapiResource' }];\n            });\n            local.utility2.objectSetOverride(options, {\n                definitions: {\n                    // init Pet schema\n                    Pet: {\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            id: 'pet0',\n                            name: 'birdie',\n                            photoUrls: [],\n                            status: 'available',\n                            tags: [{ name: 'bird'}]\n                        }, {\n                            id: 'pet1',\n                            name: 'kittie',\n                            status: 'pending',\n                            photoUrls: [],\n                            tags: [{ name: 'cat'}]\n                        }, {\n                            id: 'pet2',\n                            name: 'doggie',\n                            photoUrls: [],\n                            status: 'sold',\n                            tags: [{ name: 'dog'}]\n                        }],\n                        _collectionName: 'SwmgPet'\n                    },\n                    // init Order schema\n                    Order: {\n                        // create index\n                        _collectionCreateIndexList: [{\n                            key: { status: 1 },\n                            name: 'status_1'\n                        }],\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            id: 'order0',\n                            status: 'available'\n                        }, {\n                            id: 'order1',\n                            status: 'pending'\n                        }, {\n                            id: 'order2',\n                            status: 'sold'\n                        }],\n                        _collectionName: 'SwmgOrder',\n                        properties: {\n                            petId: { type: 'string' }\n                        }\n                    },\n                    // init User schema\n                    User: {\n                        // create index\n                        _collectionCreateIndexList: [{\n                            key: { username: 1 },\n                            name: 'username_1',\n                            unique: true\n                        }],\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            email: 'john@doe.com',\n                            firstName: 'john',\n                            id: 'user0',\n                            lastName: 'doe',\n                            password: 'hello',\n                            phone: '1234-5678',\n                            username: 'john.doe'\n                        }, {\n                            email: 'jane@doe.com',\n                            firstName: 'jane',\n                            id: 'user1',\n                            lastName: 'doe',\n                            password: 'bye',\n                            phone: '8765-4321',\n                            username: 'jane.doe'\n                        }],\n                        _collectionName: 'SwmgUser'\n                    }\n                },\n                // init crud-api\n                paths: {\n                    '/pet/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgPet',\n                        _crudApi: 'pet',\n                        _schemaName: 'Pet',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['pet']\n                    } },\n                    '/store/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgOrder',\n                        _crudApi: 'store',\n                        _schemaName: 'Order',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['store']\n                    } },\n                    '/user/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgUser',\n                        _crudApi: 'user',\n                        _schemaName: 'User',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['user']\n                    } }\n                }\n            }, 4);\n            // transform petstore-api to swagger-mongodb's crud-api\n            Object.keys(options.paths).forEach(function (path) {\n                Object.keys(options.paths[path]).forEach(function (method) {\n                    methodPath = options.paths[path][method];\n                    // init methodPath._schemaName\n                    switch (path.split('/')[1]) {\n                    case 'pet':\n                        methodPath._schemaName = 'Pet';\n                        break;\n                    case 'store':\n                        methodPath._schemaName = 'Order';\n                        break;\n                    case 'user':\n                        methodPath._schemaName = 'User';\n                        break;\n                    }\n                    methodPath._collectionName = 'Swmg' + methodPath._schemaName;\n                    delete methodPath.produces;\n                    delete methodPath.responses;\n                    delete methodPath.security;\n                    // init jsonapi response\n                    local.utility2.objectSetDefault(methodPath, { responses: {\n                        200: {\n                            description: '200 ok - http://jsonapi.org/format' +\n                                '/#document-structure-top-level',\n                            schema: { $ref: '#/definitions/JsonapiResponse{{_schemaName}}' }\n                        }\n                    } }, 2);\n                    // init crudCreateMany / crudCreateOne / crudDeleteByIdOne / crudGetByIdOne\n                    switch (methodPath.operationId) {\n                    case 'addPet':\n                    case 'createUser':\n                    case 'placeOrder':\n                        methodPath.operationId = 'crudCreateOne';\n                        break;\n                    case 'createUsersWithArrayInput':\n                    case 'createUsersWithListInput':\n                        methodPath.operationId = 'crudCreateMany';\n                        break;\n                    case 'deleteOrder':\n                    case 'deletePet':\n                    case 'deleteUser':\n                        methodPath.operationId = 'crudDeleteByIdOne';\n                        break;\n                    case 'getOrderById':\n                    case 'getPetById':\n                    case 'getUserByName':\n                        methodPath.operationId = 'crudGetByIdOne';\n                        break;\n                    }\n                    // init id\n                    (methodPath.parameters || []).forEach(function (paramDef) {\n                        switch (paramDef.name) {\n                        case 'orderId':\n                        case 'petId':\n                            delete paramDef.format;\n                            paramDef.type = 'string';\n                            break;\n                        }\n                    });\n                });\n            });\n            local.swmg.apiUpdate(options);\n        }());\n        // init petstore-middleware\n        local.middleware.middlewareList.push(function (request, response, nextMiddleware) {\n            var modeNext, onNext, options;\n            modeNext = 0;\n            onNext = function (error, data) {\n                local.utility2.testTryCatch(function () {\n                    modeNext = error\n                        ? Infinity\n                        : modeNext + 1;\n                    switch (modeNext) {\n                    case 1:\n                        // init id\n                        ((request.swmgMethodPath && request.swmgMethodPath.parameters) || [\n                        ]).forEach(function (paramDef) {\n                            switch (paramDef.name) {\n                            case 'orderId':\n                            case 'petId':\n                                request.swmgParamDict.id = request.swmgParamDict[paramDef.name];\n                                break;\n                            }\n                        });\n                        // init options\n                        if (request.swmgMethodPath) {\n                            options = {\n                                collectionName: request.swmgMethodPath._collectionName,\n                                data: request.swmgParamDict,\n                                operationId: request.swmgMethodPath.operationId,\n                                paramDefList: request.swmgMethodPath.parameters,\n                                schemaName: request.swmgMethodPath._schemaName\n                            };\n                        }\n                        switch (request.swmgPathname) {\n                        // handle pet request\n                        case 'DELETE /pet/':\n                        case 'GET /pet/':\n                        case 'POST /pet':\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /pet/findByStatus':\n                            options.operationId = 'crudGetByQueryMany';\n                            options.data.fields = '{}';\n                            options.data.hint = '{}';\n                            options.data.limit = 100;\n                            options.data.query = '{\"status\":{\"$in\":' +\n                                JSON.stringify(options.data.status) + '}}';\n                            options.data.skip = 0;\n                            options.data.sort = '{\"_timeModified\":-1}';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /pet/findByTags':\n                            options.operationId = 'crudGetByQueryMany';\n                            options.data.fields = '{}';\n                            options.data.hint = '{}';\n                            options.data.limit = 100;\n                            options.data.query = '{\"status\":{\"$in\":' +\n                                JSON.stringify(options.data.tags) + '}}';\n                            options.data.skip = 0;\n                            options.data.sort = '{\"_timeModified\":-1}';\n                            options.paramDefList[0].default = 'bird,cat,dog';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /pet/':\n                            options.data.upsert = true;\n                            options.data.body = {\n                                id: options.data.id,\n                                name: options.data.name,\n                                status: options.data.status\n                            };\n                            options.operationId = 'crudUpdateOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /pet//':\n                            options.data.body = {\n                                additionalMetadata: options.data.additionalMetadata,\n                                file: options.data.file,\n                                filename:\n                                    request.swmgBodyParsed && request.swmgBodyParsed.filename,\n                                id: options.id\n                            };\n                            options.data.upsert = true;\n                            options.operationId = 'crudUpdateOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'PUT /pet':\n                            options.data.upsert = true;\n                            options.operationId = 'crudReplaceOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        // handle store request\n                        case 'DELETE /store/order/':\n                        case 'GET /store/order/':\n                        case 'POST /store/order':\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /store/inventory':\n                            options.data = { body: [{\n                                $group: { _id: '$status', total: { $sum: 1} }\n                            }, {\n                                $project: { _id: 0, status: '$_id', total: '$total' }\n                            }]};\n                            options.operationId = 'crudAggregateMany';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        // handle user request\n                        case 'DELETE /user/':\n                        case 'GET /user/':\n                        case 'POST /user/createWithArray':\n                        case 'POST /user/createWithList':\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /user':\n                            options.data.username = options.data.body.username;\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'PUT /user/':\n                            options.data.body.username = options.data.username;\n                            options.data.upsert = true;\n                            options.operationId = 'crudReplaceOne';\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        default:\n                            nextMiddleware();\n                        }\n                        break;\n                    default:\n                        // validate no error occurred\n                        local.utility2.assert(!error, error);\n                        // respond with json-object\n                        response.end(JSON.stringify(data));\n                    }\n                }, nextMiddleware);\n            };\n            onNext();\n        });\n        // run server-test\n        local.utility2.testRunServer(local);\n        break;\n    }\n// }((function () {\n//     'use strict';\n    var local;\n\n\n\n    // run shared js-env code\n    (function () {\n        // init local\n        local = {};\n        // init js-env\n        local.modeJs = (function () {\n            try {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            } catch (errorCaughtNode) {\n//                 return typeof navigator.userAgent === 'string' &&\n//                     typeof document.querySelector('body') === 'object' &&\n                    'browser';\n            }\n        }());\n        // init global\n//         local.global = local.modeJs === 'browser'\n//             ? window\n//             : global;\n        // export local\n//         local.global.local = local;\n        // init swagger-mongodb\n//         local.swmg = local.modeJs === 'browser'\n//             ? window.swmg\n//             : require('swagger-mongodb');\n        // import swmg.local\n        Object.keys(local.swmg.local).forEach(function (key) {\n            local[key] = local[key] || local.swmg.local[key];\n        });\n        // init utility2\n//         local.utility2 = local.swmg.local.utility2;\n        // init onReady\n//         local.utility2.onReadyInit();\n    }());\n    return local;\n// }())));",
   "id": 295,
   "stars": 0,
   "errors": [
    2769,
    1005,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 490,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// client.indexes.list({ $select: ['name', 'fields'] });",
   "id": 296,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = require('export-files')(__dirname, '**/*.json');",
   "id": 297,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export default new Store(hydrate({\n  modules: {\n    flights: {\n      state: {\n        selected: null,\n        in_flight: []\n      }\n    }\n  }\n}))\r\n\r\nfunction hydrate(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 298,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Ajv from 'ajv';\nimport betterAjvErrors from 'better-ajv-errors';\n// const Ajv = require('ajv');\n// const betterAjvErrors = require('better-ajv-errors');\n\n// You need to pass `jsonPointers: true`\nconst ajv = new Ajv({ jsonPointers: true });\n\n// Load schema and data\nconst schema = ...;\nconst data = ...;\n\nconst validate = ajv.compile(schema);\nconst valid = validate(data);\n\nif (!valid) {\n  const output = betterAjvErrors(schema, data, validate.errors);\n  console.log(output);\n}",
   "id": 299,
   "stars": 0,
   "errors": [
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "    import SmartFlatList from 'react-native-smart-refresh-flatlist'",
   "id": 300,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "Prefer: const status=200",
   "id": 301,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import CanvasSlider from '@martsis/canvas-slider';",
   "id": 302,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import isEmpty from 'just-is-empty';\n isEmpty({a: 3, b: 5}) // false\n isEmpty([1, 2]) // false\n isEmpty(new Set([1, 2, 2])) // false\n isEmpty((new Map()).set('a', 2)) // false\n isEmpty({}) // true\n isEmpty([]) // true\n isEmpty(new Set()) // true\n isEmpty(new Map()) // true\n isEmpty('abc') // false\n isEmpty('') // true\n isEmpty(0) // true\n isEmpty(1) // true\n isEmpty(true) // true\n isEmpty(Symbol('abc')); // true\n isEmpty(//); // true\n//  isEmpty(new String('abc')); // false\n//  isEmpty(new String('')); // true\n isEmpty(new Boolean(true)); // true\n isEmpty(null) // true\n isEmpty(undefined) // true",
   "id": 303,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const fs = require('fs');\nconst readable = require('co-readable');\nconst co = require('co');\n\nconst read = readable(fs.createReadStream('bigfile'));\n\nco(function* () {\n  let buf;\n  let size = 0;\n  while (buf = yield read(1024)) {\n    console.log('read %d bytes', buf.length);\n    size += buf.length;\n  }\n  console.log('total read %d bytes', size);\n}).catch(function (err) {\n  console.error(err.stack);\n});",
   "id": 304,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'onap-ui-common/lib/style.css';",
   "id": 305,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var tou8 = require('utf8-to-uint8array')\nvar str = '💩'\nconsole.log(tou8(str))",
   "id": 306,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "grunt.initConfig({\n  winston: {\n    myLogger: {\n      options: {\n        hooks: [\n          function (logger) {\n            logger.on('logging', function (transport, level, msg, meta) {\n              // [msg] and [meta] have now been logged at [level] to [transport]\n            });\n          },\n          function (logger) {\n            logger.addColors({\n              foo: 'blue',\n              bar: 'green',\n              baz: 'yellow',\n              foobar: 'red'\n            });\n          }\n        ]\n      }\n    }\n  }\n});",
   "id": 307,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 22,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//      api.stuff.items.POST",
   "id": 308,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "pull(\n//   pl.read(db, {live: true}),\n  //log data as it comes,\n  //because tail will keep the connection open\n  //so we'll never see the end otherwise.\n//   pull.through(console.log),\n  //note, pull-streams will not drain unless something is\n  //pulling the data through, so we have to add drain\n  //even though the data we want is coming from pull.through()\n//   pull.drain()\n)\r\n\r\nfunction pull(arg0, arg1, arg2) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 309,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require(\"gulp\");\nvar reveasy = require(\"gulp-rev-easy\");\n\ngulp.task(\"reveasy\", function (argument) {\n  gulp.src(\"test.html\")\n    .pipe(reveasy({\n        fileTypes:['img1'],\n        elementAttributes:{\n            img1:{\n                name:'img',\n                src:'data-src'\n            }\n        }))\n    .pipe(gulp.dest(\"./dist\"))\n})",
   "id": 310,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// > S.reduce (S.concat) ('abc') (Nothing)\n'abc'\n\n// > S.reduce (S.concat) ('abc') (Just ('xyz'))\n'abcxyz'\r\n\r\nfunction Just(arg0) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 311,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const defaults = {\n    passengers: {\n        adults: 1,\n        children: 0\n    }\n}",
   "id": 312,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "type ResolveResourceFn = (\n//   resourceIri?: Iri,\n  context?: any,\n//   info?: GraphQLResolveInfo\n) => ?ResolverOutput<any>",
   "id": 313,
   "stars": 0,
   "errors": [
    8008,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const StringToken = Any(\n  /^('[^'\\\\]*(?:\\\\.[^'\\\\]*)*')/,  // single-quoted\n  /^(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")/,  // double-quoted\n);\n\nconst Identifier = /^([a-zA-Z_$][a-zA-Z0-9_$]*)/;\n// const SumExpression = All(Identifier, '=', Identifier, '+', Identifier);\r\n\r\nfunction Any(arg0, arg1) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 314,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const assert = require('assert')\n\nfunction counter (value) {\n    switch (typeof value) {\n    case 'object': {\n            if (null) {\n                return 1\n            }\n            let sum = 0\n            if (Array.isArray(value)) {\n                for (const item of value) {\n                    sum += counter(item)\n                }\n            }\n            for (const name in value) {\n                for (const item of value) {\n                    sum += counter(value[name])\n                }\n            }\n        }\n    default:\n        return 1\n    }\n}\n\nassert.equal(counter({ a: 'x', b: [ 'y', 'z' ] }), 3, 'found three scalar values')",
   "id": 315,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 24,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Model = bookshelf.Model.extend({\n    casts: {\n        // Property 'locked' will be converted into a boolean value\n        locked: 'boolean',\n\n        age(dbValue) {\n            return parseInt(dbValue, 10);\n        },\n\n        notFourtyTwo() {\n            return 42;\n        }\n    }\n});\n\nModel.forge().fetch('id', 91)\n        .then( model => {\n            typeof model.get('locked'); // 'boolean'\n            model.get('notFourtyTwo');  // 42\n            typeof model.get('age'); // 'number'\n        });",
   "id": 316,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { access } = require(\"fs\");\r\n\r\n// access.list(options, callback);",
   "id": 317,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// shave and a haircut, two bits :D\n// grunt.task.run('beep:twobits');",
   "id": 318,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ModulusCombine = require('modulus-combine');\n\n// 4 digits before the decimal and keep 5 decimal digits (9 total)\nvar modulusCombine = new ModulusCombine(4, 10);\n\nmodulusCombine.compress(3.456789, 367.123123123);\n// -> 34567800000036712000\n\nmodulusCombine.deflate(34567800000036712000);\n// -> [ 3.45678, 367.12448 ]\n",
   "id": 319,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// function (d) { return this.accessor(d) !== undefined && this.accessor(d) !== ''; }",
   "id": 320,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// '../mock/index';\nconst item = {\n  id: 2,\n  wechatId: 'aaaaaa',\n  wechatName: '测试公众号',\n  appId: '1414',\n  type: 2,\n};\n\nlet start = 0;\nconst getList = () => {\n  const recordList = [];\n  for (let i = 0; i < 10; i++) {\n    const temp = { ...item };\n    Object.keys(temp).forEach((k) => {\n      temp[k] += start++;\n    });\n    recordList.push(temp);\n  }\n\n  return recordList;\n};\n\nexport const api = () => Promise.resolve({\n  totalRecord: 666,\n  recordList: getList(),\n});\n",
   "id": 321,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// .orderBy(\"key1\", \"key2\");\n// .orderBy({ \"key1\": \"asc\" }, { \"key2\": \"desc\" });\n// .orderBy([\"key1\", \"key2\"]);\n// .orderBy([{ \"key1\": \"asc\" }, { \"key2\": \"desc\" }]);\r\n\r\nfunction orderBy(arg0, arg1) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 322,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { handle } from 'kefir.handle';\n\n// var source = Kefir.sequentially(100, [0, 1, 2, 3]);\nvar result = source::handle({\n  value(emitter) { /* value handler */ }\n})",
   "id": 323,
   "stars": 0,
   "errors": [
    2304,
    1005,
    1134,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// sc ip 获取本机ip",
   "id": 324,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import scroll from \"@threespot/freeze-scroll\";\n\n// Disable scrolling\nscroll.freeze();\n\n// Enable scrolling\nscroll.unfreeze();",
   "id": 325,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nconst run = async() => {\n  // 默认参数\n  const expire = {\n    expireTime: 24, // 过期时间 24h\n    unit: 'hour', // hour | minute | second | millisecond\n    auto: true, // 自动过期， 开启会定时清除24h以前的数据\n  }\n\n  // 使用默认过期时间 expire\n//   await databee.expire();\n\n  // 自定义数据过期时间\n//   await databee.expire(expire);\n}",
   "id": 326,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function getIssueEventsCollection(comicId, characters, creators, limit, modifiedSince, name, nameStartsWith, offset, orderBy, series, stories, callback)",
   "id": 327,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { platform } = require(\"os\")\r\n\r\n// git module Date --remote web-platform-tests",
   "id": 328,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// stachedown.renderStrict('The {{important_thing}} must be visible.', {});\n// throws Error",
   "id": 329,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const contentSourceKey = '' // your content source key\nconst user = 'enterprise_search' // username\nconst permissions = { permissions: ['permission2'] } // permissions to add to the user\n\n// client\n//   .addUserPermissions(contentSourceKey, user, permissions)\n  .then(response => {\n    // handle response\n  })\n  .catch(error => {\n    // handle error\n  })",
   "id": 330,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//set ray position\nthis.ray.setOrigin(400, 300);\n//set ray direction (in radians)\nthis.ray.setAngle(2);\n//set ray direction (in degrees)\nthis.ray.setAngleDeg(90);\n//cast single ray and get closets intersection, hit mapped object and hit segment\nlet intersection = this.ray.cast();\nlet hitObject = intersection.object;\nlet hitSegment = intersection.segment;\n\n//cast rays in all directions (toward all mapped objects vertices / points)\n// let intersections = this.ray.castCircle();\n\n//set ray's cone angle (in radians)\nthis.ray.setCone(1);\n//set ray's cone angle (in degrees)\nthis.ray.setConeDeg(90);\n\n//cast rays in a cone\nlet intersections = this.ray.castCone();",
   "id": 331,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// public address: qLUHmrFGexxpyHwQphLpE1czZNFE5m1xmV\n// private key (WIF): cNQKccYYQyGX9G9Qxq2DJev9jHygbZpb2UG7EvUapbtDx5XhkhYE\r\n\r\nfunction key(WIF) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 332,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// MOUNTED, // First render of the chart\n// INTERVAL, // If you specify an update interval, it will be called every n seconds\n// NEW_LOADER, // The loader function changed\n// NEW_DOMAIN, // The outer domain changed,\n// NEW_SUBDOMAIN, // The user zoomed to a new subdomain.\n// UPDATE_POINTS_PER_SERIES, // The pointsPerSeries prop has changed",
   "id": 333,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const appCred = 'yourappcred';\nconst connectionURL = 'nodeConnectionURL';",
   "id": 334,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "api.convertToCoordinates(\"filled.count.soap\")\n  .then(function(response) {\n    console.log(\"[convertToCoordinates]\", response);\n  })\n  .catch(function(error) { // catch errors here\n    console.log(\"[code]\", error.code);\n    console.log(\"[message]\", error.message);\n  });",
   "id": 335,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Iterable from \"iterable.flow\"",
   "id": 336,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// $ExpectType void\nf(1);\n\n// $ExpectError\nf(\"one\");\r\n\r\nfunction f(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 337,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "db.status(function(obj){\n    console.log('Status', obj);\n});",
   "id": 338,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const book = new book();\n\nRx.Observable.combineLatest(\n  book.subject('chapter1'),\n  book.subject('chapter2'),\n)\n.subscribe(() => {\n  console.log('Two first chapters are ready');\n});\n\nbook.publish('chapter1');\nbook.publish('chapter2');",
   "id": 339,
   "stars": 0,
   "errors": [
    2448,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { inspect } = require(\"util\");\r\n\r\nabout:inspect",
   "id": 340,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.",
   "id": 341,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var token = etcd.get(\"key\", console.log);\ntoken.abort() // also aliased as token.cancel()\n\nconsole.log(\"Request is cancelled: \", token.isAborted());",
   "id": 342,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// htdocs/example/\n//   |- example.js     <-- your 'example' script file",
   "id": 343,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { parseSkinFile } = require('json2ableton-live-skin');\n// const skinFileBuffer = fs.readFileSync(__dirname + '/skinFile.ask');\n// const skin = parseSkinFile(skinFileBuffer);\n// console.log(skin);\n// => {\"format\":\"live9\",\"ControlForeground\":[0,0,0,255],\"TextDisabled\":[90,90,9...\"ViewCheckControlDisabledOff\":[66,66,66,255]}",
   "id": 344,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { MentionsInput, Mention } from 'react-mentions'",
   "id": 345,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var morphology = require(\"ball-morphology\")\n\nrequire(\"get-pixels\")(\"bwimage.png\", function(err, data) {\n  var r = data.pick(-1, -1, 0)\n  \n  // ... do stuff ...\n})",
   "id": 346,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// web3.utils.decodeBech32Address(hrp, bech32Address)",
   "id": 347,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ObjectStorage = require('ibmcloud-objectstorage');\nvar config = {\n    provider: 'openstack',\n    useServiceCatalog: true,\n    useInternal: false,\n    keystoneAuthVersion: 'v3',\n    authUrl: '',\n    tenantId: '', //projectId from credentials\n    domainId: '',\n    username: '',\n    password: '',\n    region: '' //dallas or london region\n};\nvar os = new ObjectStorage(config, \"my-container\");",
   "id": 348,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Vue from 'vue'\nimport VuePagination from 'v-pc-pagination'\nVue.use(VuePagination)",
   "id": 349,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// is.number(42);\n// => true\n\n// is.number(NaN);\n// => false\n\n// is.not.number('42');\n// => true\n\n// is.all.number('foo', 1);\n// => false\n\n// is.any.number({}, 2);\n// => true\n\n// 'all' and 'any' interfaces can also take array parameter\n// is.all.number([42, 'foo', 1]);\n// => false",
   "id": 350,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "({\n  timelineContext: {\n    timelineWidth,\n    visibleTimeStart,\n    visibleTimeEnd,\n    canvasTimeStart,\n    canvasTimeEnd\n  },\n  headerContext: {\n    unit,\n//     intervals: this.state.intervals\n  },\n//   getRootProps: this.getRootProps,\n//   getIntervalProps: this.getIntervalProps,\n  showPeriod,\n  //contextual data passed through headerData\n  data,\n})=> React.Node",
   "id": 351,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ParseServer         = require('parse-server').ParseServer;\nvar AzureStorageAdapter = require('parse-server-azure').FilesAdapter;\n\nvar account = 'YOUR_AZURE_STORAGE_ACCOUNT_NAME';\nvar container = 'YOUR_AZURE_STORAGE_CONTAINER_NAME';\nvar options = {\n    accessKey: 'YOUR_ACCESS_KEY',\n    directAccess: false // If set to true, files will be served by Azure Blob Storage directly\n}\n\nvar api = new ParseServer({\n  appId: process.env.APP_ID || 'myAppId',\n  serverURL: process.env.SERVER_URL || 'http://localhost:1337'\n//   (...)\n//   filesAdapter: new AzureStorageAdapter(account, container, options);\n});",
   "id": 352,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const cache = yieldCache();\r\n\r\nfunction yieldCache() {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 353,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import TelephoneInput from 'react-tel-input-japan';\n\n// React.renderComponent(\n  <div>\n//     <TelephoneInput\n//       value={this.state.value}\n//       onChange={(value, valid) => this.setState({ value, valid })}\n      placeholder={'input telephone number'}\n    />\n//   </div>,\n//   document.querySelector('#element'));",
   "id": 354,
   "stars": 0,
   "errors": [
    17004,
    2695,
    17004,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Conditionally execute a function to continue configuration\n// condition: Boolean\n// whenTruthy: Function -> ChainedMap\n  // invoked when condition is truthy, given a single argument of the ChainedMap instance\n// whenFalsy: Optional Function -> ChainedMap\n  // invoked when condition is falsy, given a single argument of the ChainedMap instance\n// when(condition, whenTruthy, whenFalsy)\r\n\r\nfunction when(condition, whenTruthy, whenFalsy) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 355,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Reset current visitor\n// analytics.reset()",
   "id": 356,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var tr = require(\"tr-064\");\nvar tr064 = new tr.TR064();\ntr064.initTR064Device(\"fritz.box\", 49000, function (err, device) {\n    if (!err) {\n       var wanip = device.services[\"urn:dslforum-org:service:WANIPConnection:1\"];\n       wanip.actions.GetInfo(function(err, result){\n               console.log(result);\n       });\n    }\n});\n",
   "id": 357,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <vue-googlemap-polygon :paths=\"paths\" :events=\"events\" @change=\"change\" editable ></vue-googlemap-polygon>",
   "id": 358,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Account = dynogels.define('Account', {\n  hashKey : 'email',\n\n  // add the timestamp attributes (updatedAt, createdAt)\n  timestamps : true,\n\n  schema : {\n//     email   : Joi.string().email(),\n//     name    : Joi.string(),\n//     age     : Joi.number(),\n//     roles   : dynogels.types.stringSet(),\n    settings : {\n//       nickname      : Joi.string(),\n//       acceptedTerms : Joi.boolean().default(false)\n    }\n  }\n});",
   "id": 359,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const strava = require('strava-v3');\nstrava.athlete.get({'access_token':'abcde'},function(err,payload,limits) {\n    //do something with your payload, track rate limits\n    console.log(limits);\n    /*\n    output:\n    {\n       shortTermUsage: 3,\n       shortTermLimit: 600,\n       longTermUsage: 12,\n       longTermLimit: 30000\n    }\n    */\n});",
   "id": 360,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "$scope.$on('auth:account-destroy-error', function(ev, reason) {\n  alert(\"Account deletion failed: \" + reason.errors[0]);\n});\r\n\r\nfunction alert(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 361,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const logging = require(\"console-logging\");\nconst logger = logging.logger;",
   "id": 362,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { MatomoService } from \"bim-gdpr/src/services/matomo/matomo\"\n\n// Create services :\n// const matomo = bGDPR.createService( new MatomoService('//matomo.php') )\n// matomo.setWeight( -1 ) // Place matomo first.\n\n// Then initialize\nbGDPR\n//     .setTemplate( new DefaultTemplate() ) // Initialize the view\n    .init() // Initialize the core",
   "id": 363,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require('gulp');\nvar concatCss = require('gulp-concat-css');\n\ngulp.task('default', function () {\n  return gulp.src('assets/**/*.css')\n    .pipe(concatCss(\"styles/bundle.css\"))\n    .pipe(gulp.dest('out/'));\n});",
   "id": 364,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const ALMA_APIKEY=const l7xxabcdefghijklmnopqrstuvwxyz node test.js ",
   "id": 365,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const M5Stack = require(\"m5stackjs\");\n\nlet m5 = new M5Stack('OBNIZ_ID_HERE');\n\nm5.onconnect = async function () {\n  m5.buttonA.onchange = (state) => {\n      console.log(state);\n  }\n  \n  const servo = m5.wired(\"ServoMotor\", {signal:2});\n  servo.angle(90);\n\n};\n",
   "id": 366,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// TodoLib.js\nimport memoize from 'memoize-one';\nimport { createStatedLib } from '@stated-library/base';\nimport createTodo from './createTodo';\nimport fetchTodosFromCloud from './fetchTodosFromCloud';\n\nexport default function createTodoLib() {\n\n  const getCompletedTodos = memoize(\n    todos => todos.filter(todo => todo.completed)\n  );\n\n  const getActiveTodos = memoize(\n    todos => todos.filter(todo => !todo.completed)\n  );\n\n  function deriveState(rawState) {\n    return {\n      ...rawState,\n      get activeTodos() {\n        return getActiveTodos(rawState.todos);\n      },\n      get completedTodos() {\n        return getCompletedTodos(rawState.todos);\n      },\n    }\n  }\n\n  return createStatedLib(\n    { todos: [] },\n    base => ({\n\n      addTodo(text) {\n        base.updateState({\n            todos: base.state.todos.concat(makeTodo(text)),\n          }, 'ADD_TODO');\n      },\n\n      toggleTodo(id) {\n        base.updateState({\n          todos: base.state.todos.map(todo =>\n            todo.id === id ? { ...todo, completed: !todo.completed } : todo)\n        }, 'TOGGLE_TODO');\n      },\n\n      async fetchTodos() {\n        base.updateState({ isFetching: true }, 'FETCH_TODOS_START');\n        const newTodos = await fetchTodosFromCloud();\n        base.updateState({\n          todos: base.state.todos.concat(newTodos),\n          isFetching: false,\n        }, 'FETCH_TODOS_COMPLETE');\n      },\n    }),\n  { deriveState });\n\r\n    function makeTodo(text) {\r\n        throw new Error('Function not implemented.');\r\n    }\r\n// ",
   "id": 367,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 49,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const fs = require('fs');\nconst { generate } = require('gas-entry-generator');\n\nconst fooSource = fs.readFileSync('foo.js', {encoding: 'utf8'});\nconst options = {\n  comment: true,\n  autoGlobalExports: true // Enable to detect exports.* to generate entry point functions.\n};\nconst output = generate(fooSource, options);\nconsole.log(output.entryPointFunctions);\nconsole.log('-----');\nconsole.log(output.globalAssignments);",
   "id": 368,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Config = require('webpack-chain');\n\nconst config = new Config();",
   "id": 369,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n// your-component.js\nimport Dummy from 'innoark-npm2'\n\n// ...\n// <Dummy className=\"dummy\" />\n// ...\n\n// your-component.css\n// .Dummy {\n//   color: white;\n//   background-color: purple;\n// }\n",
   "id": 370,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const trusona = new trusona(token, secret)\n\n// const document = await trusona.getIdentityDocument(document.id)\n\n// document.verificationStatus // UNVERIFIED, UNVERIFIABLE, VERIFIED, or FAILED\r\n\r\nexport { }\r\n",
   "id": 371,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// async MergeIntoMKV(downloadedFile = LocalVideoObjectSchema,\n//                    srt_subtitles = Array(SubtitleMeta),\n//                    selectedFile = VideoObjectSchema)\r\n\r\nfunction MergeIntoMKV(arg0, arg1, arg2) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 372,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { text } = require(\"stream/consumers\")\r\n\r\n// jamr -w ./model.json -i ./text-file.txt -o ./where-ever.txt -n 5 -s 5000",
   "id": 373,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export default {\n  modules: [\n    'nuxt-feed-yandex-market'\n  ],\n  yandexMarket: {\n    data: {}, // JSON with data or a function that returns the JSON \n    path: '/yandex-market.xml', // The route to your xml file\n    validate: true,\n    cacheTime: 1000 * 3600 * 24 \n  }\n}",
   "id": 374,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// if ('scrollRestoration' in window.history) {\n  window.history.scrollRestoration = 'manual';\n// }",
   "id": 375,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Counter = () => {\n//   const [count, setCount] = useState(0)\n//   return <div>\n//     <button onClick={() => setCount(count + 1)} >Increment</button>\n//     <span>count: {count}</span>\n//   </div>\n}\r\n\r\nfunction useState(arg0) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 376,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// removeRow(\n//   change: Change,\n//   options: {\n//     at?: number,\n//     normalize?: boolean,\n//   }\n// ): Change\r\n\r\nfunction removeRow(change, Change, options, arg3) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 377,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// On GET /statistics\n\r\nconst { url } = require(\"inspector\");\r\n\r\n// Get the top score\n// if (URL === '/top-score') {\n    dpd.scores.get({$limit: 1, $sort: {score: -1}}, function(result) {\n    result(result[0]);\n    });\n// }",
   "id": 378,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "                                                                                      \n    am([34, 56, 78]).forEach(function (value, i) {\n           console.log(value, i);\n    })\n    \n    .log()  // 34 0, 56 1, 78 2, [34, 56, 78]\n    \n    .error(err=>{      \n              // handle errors at end of chain\n      \n    })\n\r\nfunction am(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n  ",
   "id": 379,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "AuthModule.forRoot({\n  domain: 'YOUR_AUTH0_DOMAIN',\n  clientId: 'YOUR_AUTH0_CLIENT_ID',\n  organization: 'YOUR_ORGANIZATION_ID'\n// }),",
   "id": 380,
   "stars": 0,
   "errors": [
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const InsertHtmlWebpackPlugin = require('insert-html-webpack-plugin')\n\nnew InsertHtmlWebpackPlugin(\n  // 第一个参数，必填，配置文件列表\n  {\n    js: [\n      // 可以配置多个，按顺序依次插入\n      { path: 'a.js' }, // path属性表示使用script内联方式\n      { path: 'b.js' },\n      { url: 'https://c.com/c.js' } // url属性表示使用script外部引入方式\n    ],\n    css: [\n      { path: 'd.css' }, // path属性表示使用style内联方式\n      { url: 'https://e.com/e.css' } // url属性表示使用link外部引入方式\n    ]\n  },\n  // 第二个参数，可选，配置插入位置，默认值如下\n  {\n    jsNode: '<body>', // 指定js要插入的节点位置\n    jsSide: 'after', // js要插入在节点位置处的前面还是后面，可选值'after'、'before'\n    cssNode: '</title>', // 指定css要插入的节点位置\n    cssSide: 'after', // css要插入在节点位置处的前面还是��面，可选值'after'、'before'\n  }\n)",
   "id": 381,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\"../../whatwg-fetch/fetch.js\"\r\nconst path = require(\"path\")\r\n\r\n: path.join( // this is the third-party dependency in the lrnwebcomponents\n  __dirname,\n  \"../node_modules/whatwg-fetch/fetch.js\" // this is where it lives in node_modules\n)",
   "id": 382,
   "stars": 0,
   "errors": [
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { enableProdMode, NgZone } from '@angular/core';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { Router } from '@angular/router';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport singleSpaAngular from 'single-spa-angular';\nimport { singleSpaPropsSubject } from './single-spa/single-spa-props';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst lifecycles = singleSpaAngular({\n  bootstrapFunction: singleSpaProps => {\n    singleSpaPropsSubject.next(singleSpaProps);\n    return platformBrowserDynamic().bootstrapModule(AppModule);\n  },\n  template: '<app-root />',\n  Router,\n  NgZone,\n//   domElementGetter: () => document.getElementById('angular-app')\n});\n\nexport const bootstrap = lifecycles.bootstrap;\nexport const mount = lifecycles.mount;\nexport const unmount = lifecycles.unmount;",
   "id": 383,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 22,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  }
 ],
 "After Custom+TS": [
  {
   "code": "let $PS = require('ps-ajaxqueue');\n\n$PS.ajaxQueue({\n    url: \"https://api.ipify.org/?format=jsonp\",\n    dataType: \"jsonp\",\n    clearQueueDelay: null\n}).done(function (data) {\n    console.log(data);\n});",
   "id": 0,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var style\nstyle={{\nvar maxWidth = \"Your Value Here\"\n    standaloneLayout:{display:'flex', maxWidth:'fit-content'}\n}}",
   "id": 1,
   "stars": 0,
   "errors": [
    1136,
    2695,
    1005,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var express   = require(\"express\")\nvar nofavicon = require(\"express-no-favicons\")\nvar app       = express();\n\napp.use(nofavicon());\n\napp.listen(process.env.PORT)",
   "id": 2,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { poll, ORDER_CREATED } = require('lib-events');\n\nasync function processMessage({ type, source, id, checksum }, ack) {\n  if (type === ORDER_CREATED) {\n    console.log(`${source} created an order!`);\n  }\n\n  await ack()\n}\n\nexports.process = async function () {\n  await poll(processMessage, {\n    maxNumberOfMessages: 10,\n    maxIterations: 10\n  });\n}",
   "id": 3,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var kmix = \"Your Value Here\";\n // returns a data object with the name of the control and the raw MIDI message\nkmix.on('any', (data) => {\n    console.log('control-name', data.control, 'control-data', data.raw)\n    // data.control example: 'fader-1'\n    // data.raw example: [176,1,67]\n    switch(data.control){\n        case 'fader-1':\n            console.log('fader-1', data.raw)\n            break;\n        case 'button-vu':\n            console.log('button-vu', data.raw)\n            break;\n        case 'button-vu:off':\n            console.log('button-vu:off', data.raw)\n            break;\n        default:\n            console.log('any other data', data)\n    }\n})",
   "id": 4,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Schema from '@jalik/schema';\n\nexport const ExampleSchema = new Schema({\n  time: {\n    type: 'string',\n    // The time must be like 'HH:mm'\n    pattern: '^\\\\d{1,2}:\\\\d{1,2}$'\n  },\n  password: {\n    type: 'string',\n    // The password must contain alphanumeric and special characters\n    pattern: /^[a-zA-Z0-9_&#@$*%?!]+$/\n  }\n});",
   "id": 5,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const sander = require('@marionebl/sander');\nconst Tesseract = require('tesseract.js');\nconst {langPath} = require('@tessdata/eng');\n\nconst image = sander.readFile('some-image.png');\nconst tesseract = Tesseract.create({langPath});\n\nvar buffer = \"Your Value Here\";\n\ntesseract.recognize(buffer, {\n  lang: 'eng'\n});",
   "id": 6,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const sagaABC = function* sagaABC() {\n  var take = \"Your Value Here\";\n  yield take('ACTION_A');\n  // Do some I/O here.\n  yield put(actionB());\n  yield put(actionC());\n};\n\nconst sagaDE = function* sagaDE() {\n  yield take('ACTION_D');\n  yield put(actionE());\n};\r\n\r\nfunction* put(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 7,
   "stars": 0,
   "errors": [
    2349,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "`external: [...Object.keys(pkg.dependencies || {}), ...Object.keys(pkg.peerDependencies || {})],`",
   "id": 8,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mkpdf = require('mkpdf')\n\nmkpdf().from('/path/to/document.md').to('/path/to/document.pdf', function () {\n    console.log('Done')\n})\n\n// Or using streams\nvar fs = require('fs')\n\nfs.createReadStream('/path/to/document.md')\n    .pipe(mkpdf())\n    .pipe(fs.createWriteStream('/path/to/document.pdf'))",
   "id": 9,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import sinon from 'sinon';\nimport { expect } from 'chai';",
   "id": 10,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Cacher = require(\"softweb-cacher\");",
   "id": 11,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nvar Register = \"Your Value Here\"\n- Register providers inside the your start/app.js file.\n```js\nconst providers = [\n    ...\n        '@faisal50x/ray/providers/RayProvider',\n    ...\n]",
   "id": 12,
   "stars": 0,
   "errors": [
    2362,
    1005,
    1005,
    1005,
    1005,
    1005,
    1005,
    2349,
    1161,
    1160
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = ({name, source, places, index, count, filesCount, errorsCount}) => {\n    return '';\n};",
   "id": 13,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var analytics = \"Your Value Here\"\n// Get the current state of analytics\nanalytics.getState()\n\n// Get a subpath of state\nanalytics.getState('context.offline')",
   "id": 14,
   "stars": 0,
   "errors": [
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const isChromeAgent = (context) => {\n  return context.req.headers['User-Agent'].indexOf('Chrome') !== -1;\n}\n\nvar app = \"Your Value Here\";\n\napp.useIf(isChromeAgent, async (context) => {\n  context.res.headers['Content-Type'] = 'text/html';\n});\n\n// now if a route was called from Chrome browser, the response will be set to HTML COntent-Type",
   "id": 15,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var x11 = require('x11-hash-js');\n\nconsole.log(x11.digest('The great experiment continues.'));\n// -> '4da3b7c5ff698c6546564ebc72204f31885cd87b75b2b3ca5a93b5d75db85b8c'",
   "id": 16,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var wtsqs = \"Your Value Here\"\nconst myMessage = await wtsqs.popOne()\n// The message no longer exists in queue\nconsole.log(myMessage)\n// output:\n{\n  id: 'messageId',\n  receiptHandle: 'messageReceiptHandle'\n  md5: 'messageMD5',\n  body: { a: 1 }\n}",
   "id": 17,
   "stars": 0,
   "errors": [
    2339,
    2695,
    2304,
    1005,
    2695,
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n\n var Issues = \"Your Value Here\"\n## Issues\nvar If = \"Your Value Here\"\n var you = \"Your Value Here\"\n var have = \"Your Value Here\"\n var questions = \"Your Value Here\"\n var or = \"Your Value Here\"\n var issues = \"Your Value Here\"\n var feel = \"Your Value Here\"\n var free = \"Your Value Here\"\n var to = \"Your Value Here\"\n var create = \"Your Value Here\"\n var an = \"Your Value Here\"\nIf you have questions or issues feel free to create new an topic in [issues](https://github.com/Smip/ngx-materialize/issues).\n\n## License\n\nLicensed under [MIT](https://opensource.org/licenses/MIT).",
   "id": 18,
   "stars": 0,
   "errors": [
    1127,
    1127,
    1005,
    1434,
    1434,
    1434,
    1434,
    1434,
    1434,
    1434,
    1434,
    1434,
    1434,
    2351,
    1005,
    2304,
    2349,
    2304,
    1005,
    1127,
    1127,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304,
    1005,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import LazyBackgroundSizes from 'vue-lazy-background-sizes';\n\nconst MyLazyBackground = {\n    mixins: [LazyBackgroundSizes],\n    data() {\n        return {\n            screens: ['762', '1200'],\n        }\n    },\n}\n\nvar Vue = \"Your Value Here\";\n\nVue.component('my-lazy-background', MyLazyBackground);",
   "id": 19,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var backand = \"Your Value Here\";\nbackand.initiate({\n  appName: 'APP_NAME',\n  signUpToken: 'SIGNUP_TOKEN',\n  anonymousToken: 'ANONYMOUS_TOKEN'\n});\n\nbackand.service.useAnonymousAuth()\n  .then(() => {\n      return backand.service.getList('USERS');\n  })\n  .then((response) => {\n      console.log(response);\n  })\n  .catch(function(error){\n      console.log(error);\n  });\n",
   "id": 20,
   "stars": 0,
   "errors": [
    2339,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mp = \"Your Value Here\";\nmp.people.saveJson(\"example.json\");",
   "id": 21,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var Install = \"Your Value Here\"\n var package = \"Your Value Here\"\n# Install package\nvar yarn = \"Your Value Here\"\n var add = \"Your Value Here\"\nyarn add @boldgrid/components\n\n var Import = \"Your Value Here\"\n var CSS = \"Your Value Here\"\n var files = \"Your Value Here\"\n var from = \"Your Value Here\"\n var dist = \"Your Value Here\"\n var folder = \"Your Value Here\"\n# Import CSS files from dist folder (SASS).\n@import '@boldgrid/components/dist/css/components.min.css';",
   "id": 22,
   "stars": 0,
   "errors": [
    1127,
    1005,
    1434,
    1434,
    1146,
    1161,
    1127,
    1005,
    1434,
    1434,
    1434,
    1434,
    2349,
    2304,
    1003,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var WWWWWW = \"Your Value Here\"\nWWWWWW||WWWWWW\n var W = \"Your Value Here\"\n var OO = \"Your Value Here\"\n W W W||W W W\n      ||\nvar __________ = \"Your Value Here\"\n    ( OO )__________\n     /  |           \\\n    /o o|    MIT     \\\n    \\___/||_||__||_|| *\n         || ||  || ||\n        _||_|| _||_||\n       (__|__|(__|__|",
   "id": 23,
   "stars": 0,
   "errors": [
    1434,
    1434,
    1005,
    1109,
    2349,
    1005,
    2362,
    1161,
    2304,
    1005,
    2304,
    2304,
    1127,
    1127,
    2304,
    1109,
    2304,
    2304,
    2304,
    1109,
    1109,
    1109,
    1109,
    1109,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport logo from './logo.png'; // Tell Webpack this JS file uses this image\n\nconsole.log(logo); // /logo.84287d09.png\n\nfunction Header() {\n  // Import result is the URL of your image\n  return <img src={logo} alt=\"Logo\" />;\n}\n\nexport default Header;",
   "id": 24,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<html>\n  ...\n  <head>\n    ...\n    <script src=\"angular.js\"></script>\n    <script src=\"bower_components/ngSnakeCamel/ng-snake-camel.js\"></script>\n    ...\n  </head>\n  ...\n</html>",
   "id": 25,
   "stars": 0,
   "errors": [
    17004,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const mongoose = require('mongoose');\n\nvar connectionOptions = \"Your Value Here\";\n\nmongoose.connect(connectionOptions);\n\nvar Keyv = \"Your Value Here\";\n\nconst keyv = new Keyv({\n  store: new KeyvMongoDB({ mongooseConnection: mongoose.connection })\n});",
   "id": 26,
   "stars": 0,
   "errors": [
    2351,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\";\ngrunt.initConfig({\n  checkFileSize: {\n    options: {\n      separator: ': ',\n      punctuation: ' !!!',\n    },\n    files: {\n      'dest/default_options': ['src/testing', 'src/123'],\n    },\n  },\n});",
   "id": 27,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const removeEmptyLines = require(\"remove-blank-lines\");\n\nconsole.log(removeEmptyLines(\n    `Hello\n\nWorld!\n\n\n  **   **\n\n  **   **\n\n     -\n\n*         *\n\n *********`\n));\n// =>\n// Hello\n// World!\n//   **   **\n//   **   **\n//      -\n// *         *\n//  *********",
   "id": 28,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var failpoints = require('failpoints').create();\n\n// setup failpoints\n\nfailpoints.setAll(true);\nfailpoints.setAll({probability: 0.5});\nfailpoints.setAll(false);\n",
   "id": 29,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var GraphQLValidatedString = \"Your Value Here\";\nconst HumanName = new GraphQLValidatedString({\n  name: 'HumanName'\n}).regex(/([a-zA-Z]{3,30}\\s*)+/);\n\nAssert.throws(()=> {\n  HumanName.parseValue('aa');\n}, /does not match/);",
   "id": 30,
   "stars": 0,
   "errors": [
    2351,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import set from \"just-safe-set\";\n\nconst obj1 = {};\nset(obj1, \"a.aa.aaa\", 4); // true\nobj1; // {a: {aa: {aaa: 4}}}\n\nconst obj2 = {};\nvar a = \"Your Value Here\";\nvar aa = \"Your Value Here\";\nvar aaa = \"Your Value Here\";\nset(obj2, [a, aa, aaa], 4); // true\nobj2; // {a: {aa: {aaa: 4}}}\n\nconst obj3 = { a: { aa: { aaa: 2 } } };\nset(obj3, \"a.aa.aaa\", 3); // true\nobj3; // {a: {aa: {aaa: 3}}}\n\n// don't clobber existing\nconst obj4 = { a: { aa: { aaa: 2 } } };\nset(obj4, \"a.aa\", { bbb: 7 }); // false\n\nconst obj5 = { a: {} };\nconst sym = Symbol();\nset(obj5.a, sym, 7); // true\nobj5; // {a: {Symbol(): 7}}",
   "id": 31,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var difficulty = \"Your Value Here\"\nid: '0000-0000-0000-0000',\n var clearRate = \"Your Value Here\"\ndifficulty: [..],\n var title = \"Your Value Here\"\nclearRate: number,\n var img = \"Your Value Here\"\ntitle: 'Name',\n var thumbnailImg = \"Your Value Here\"\nimg: 'Url',\n var gameStyle = \"Your Value Here\"\nthumbnailImg: 'Url',\n var createdAt = \"Your Value Here\"\ngameStyle: [..],\n var Timestamp = \"Your Value Here\"\n var tag = \"Your Value Here\"\ncreatedAt: Timestamp,\n var stared = \"Your Value Here\"\ntag: [..],\n var played = \"Your Value Here\"\nstared: number,\n var shared = \"Your Value Here\"\nplayed: number,\n var clears = \"Your Value Here\"\nshared: number,\n var attempts = \"Your Value Here\"\nclears: number,\n var maker = \"Your Value Here\"\nattempts: number,\nmaker: \nvar _ = \"Your Value Here\"\n  \\_ login: 'Nintendo ID',\n  \\_ faceImg: 'Url',\n  \\_ flag: 'Country',\n  \\_ name: 'Name'",
   "id": 32,
   "stars": 0,
   "errors": [
    2695,
    1109,
    2695,
    1109,
    1003,
    1003,
    1109,
    2693,
    2695,
    1109,
    2695,
    1109,
    2695,
    1109,
    2695,
    1109,
    2695,
    1109,
    1003,
    1003,
    1109,
    2695,
    1109,
    2695,
    1109,
    1003,
    1003,
    1109,
    2693,
    2695,
    1109,
    2693,
    2695,
    1109,
    2693,
    2695,
    1109,
    2693,
    2695,
    1109,
    2693,
    2695,
    1005,
    1127,
    1434,
    2695,
    1127,
    1434,
    2695,
    1127,
    1434,
    2695,
    1127,
    1434
   ],
   "hasCode": true,
   "nondeletedLines": 35,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { name } = require(\"assert\")\r\n\r\nvar node = \"Your Value Here\"\n var scripts = \"Your Value Here\"\nnode scripts/integrate.js --name acme --openapi https://api.acme.com/openapi.json\n# or\nnode scripts/integrate.js --name acme_rss --rss https://acme.com/rss.xml",
   "id": 33,
   "stars": 0,
   "errors": [
    2305,
    1434,
    2362,
    2304,
    1005,
    2304,
    1005,
    2304,
    1127,
    1005,
    2304,
    1434,
    2362,
    2304,
    1005,
    2304,
    1005,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import * as PIXI from 'pixi.js';\nimport {Spine} from 'pixi-spine';\n\nconst app = new PIXI.Application();\ndocument.body.appendChild(app.view);\n\napp.loader\n    .add('spineCharacter', 'spine-data-1/HERO.json')\n    .load(function (loader, resources) {\n        const animation = new Spine(resources.spineCharacter.spineData);\n\n        // add the animation to the scene and render...\n        app.stage.addChild(animation);\n        \n        if (animation.state.hasAnimation('run')) {\n            // run forever, little boy!\n            animation.state.setAnimation(0, 'run', true);\n            // dont run too fast\n            animation.state.timeScale = 0.1;\n        }\n        \n        app.start();\n    });",
   "id": 34,
   "stars": 0,
   "errors": [
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Rasha = \"Your Value Here\";\nRasha.thumbprint({ jwk: jwk }).then(function (thumbprint) {\n  console.log(thumbprint);\n});",
   "id": 35,
   "stars": 0,
   "errors": [
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "let cc = {\n  \"sn\":3788106,\n   \"an\":[\"2c4b523bfa2b54a3c2cfec376336ef6e\",\"dc1edbe0708e179e84e6ee0185849811\",\"1b32715dea8bd66c6136f2bb226a9783\",\"cf4a451a23d256299f306e0170632e9c\",\"7bee1781698bfd26a40d384e3e9ba233\",\"57a59cc3fe0a9e2b0ef55d9ee7d83aa0\",\"8741aba5f9ada55cd4cc7ad9ff8cfc5e\",\"27a940f79e5bb895218dc6fee619439a\",\"6d7611020258dc07544255aecb05f94e\",\"8fd75c4a543107c762473cb5c6814b25\",\"b8fb577d62bee5e47622084deec2dc72\",\"2dddefde6b2da5f85d8a50af78a8c6ef\",\"0152c280f2b1df572e679edc5bf5aae4\",\"213bce1b1e301b90e82189ba0a908e89\",\"2f35eda22494903e5c680856304610b1\",\"64bdfe44432444514e8234fa115b9352\",\"6943424a235be73f86a065fe97756b03\",\"e037963736d439d4bc72efa49aa4f2e5\",\"da555eaad78e610e5beb51ec5d051781\",\"47849f44ee8ee1d0d41782ca21dacdc3\",\"4ec1fea2c736e8e82e1836cef7512cdb\",\"de9ec5865fa289a09059ab8a87e73ac4\",\"fb5fca0a5196333023043f080a6fb666\",\"c8df8adefe8b25103358df30491c5409\",\"dae2b572756a596fa8c97f55e8712854\"]\n}\n\nlet data = {\n  \"coin\" : cc,\n  \"paydata\" : \"email, stack, 100, 0,0,0,0,0, alex.skywallet.cc, Car payment,, ready\\nemail, stack, 150, 0,0,0,0,0, john.skywallet.cc, My debt,, ready\\nemail, stack, 21150, 0,0,0,0,0, roller.skywallet.cc, Chargeback,, ready\",\n  \"id\": \"f2494e21fcd4e54a5acd7be6f2be6e50\"\n\n}\nvar r = \"Your Value Here\"\nlet c = r.apiBillPay(data, () => {}).then(response => {\n  if (response.code != RaidaJS.ERR_NO_ERROR) {\n    console.log(\"Billpay sent\")\n    return\n  }\n\n  if (response.code == RaidaJS.ERR_SENT_PARTIALLY) {\n    console.log(\"Only \" + response.amount + \" CloudCoins sent. Try again later using the same ID: \" + response.id)\n    console.log(\"Recipients NOT sent:\")\n    for (let i = 0; i < response.recipients; i++) {\n      if (response.recipients[i].status == \"ready\")\n        console.log(response.recipients[i].address + \",\")\n    }\n  }\n}",
   "id": 36,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 24,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var _ = \"Your Value Here\";\n_.mixin({awaitEach});",
   "id": 37,
   "stars": 0,
   "errors": [
    2339,
    18004
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nvar modal = \"Your Value Here\";\nmodal.modal; // the modal element\nmodal.openButtons; // an array of open buttons\nmodal.closeButtons; // an array of close buttons\nmodal.isOpen; // boolean indicating if the modal is currently open\n",
   "id": 38,
   "stars": 0,
   "errors": [
    2339,
    2339,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var web3 = \"Your Value Here\";\nvar coinbase = web3.pi.coinbase;\nvar balance = web3.pi.getBalance(coinbase);",
   "id": 39,
   "stars": 0,
   "errors": [
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// App.js\nimport React from 'react'\nimport { createRouter, Link } from 'react-context-router'\n\nconst NotFound = () => <div>Not Found</div>\n\nconst Nav = () => (\n  <nav>\n    <Link href='/' children='Home' />\n    <Link href='/posts/1' children='First Post' />\n  </nav>\n)\n\nclass App extends React.Component {\n  render () {\n    const { route } = this.props\n    const Comp = route.component || NotFound\n\n    return (\n      <div>\n        <Nav />\n        <Comp />\n      </div>\n    )\n  }\n}\n\nexport default createRouter(App)",
   "id": 40,
   "stars": 0,
   "errors": [
    17004,
    17004,
    17004,
    17004,
    2339,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 22,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { Scrollbars } from 'react-custom-scrollbars';\n\nvar Component = \"Your Value Here\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Scrollbars style={{ width: 500, height: 300 }}>\n        <p>Some great content...</p>\n      </Scrollbars>\n    );\n  }\n}",
   "id": 41,
   "stars": 0,
   "errors": [
    2507,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { TagInputModule } from 'ngx-chips';\n\nTagInputModule.withDefaults({\n    tagInput: {\n        placeholder: 'Add a new tag',\n        // add here other default values for tag-input\n    },\n    dropdown: {\n        displayBy: 'my-display-value',\n        // add here other default values for tag-input-dropdown\n    }\n});",
   "id": 42,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const axios = require('axios').default;\n\n// axios.<method> will now provide autocomplete and parameter typings",
   "id": 43,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nimport {SectionsContainer, Section, Header, Footer} from 'react-fullpage';\n\n// => in the render() method of your app\nreturn (\n  <Header>\n    <a href=\"#sectionOne\" className=\"opa\">Section One</a>\n    <a href=\"#sectionTwo\">Section Two</a>\n    <a href=\"#sectionThree\">Section Three</a>\n  </Header>\n  <Footer>\n    <a href=\"\" className=\"opa\">Dcoumentation</a>\n    <a href=\"\">Example Source</a>\n    <a href=\"\">About</a>\n  </Footer>\n  <SectionsContainer {...options}>\n    <Section>Page 1</Section>\n    <Section>Page 2</Section>\n    <Section>Page 3</Section>\n  </SectionsContainer>\n);\n",
   "id": 44,
   "stars": 0,
   "errors": [
    2657
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var 但是 = \"Your Value Here\"\nvar 入口全都从这个app = \"Your Value Here\"\n* 但是��要引入app.js这个文件，因为所有的**入口全都从这个app.js进入**",
   "id": 45,
   "stars": 0,
   "errors": [
    2362,
    2363,
    1127,
    1127,
    1005,
    1127,
    1005,
    2339,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "@Store({\n  endpoint: 'system',\n  mutations: {\n    login: {\n      type: MutationType.POST,\n      path: 'security/login'\n    }\n  }\n})",
   "id": 46,
   "stars": 0,
   "errors": [
    1146
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var metrics = \"Your Value Here\";\nmetrics.mexists( 'net.bytesRX' );\n// returns true\n\nmetrics.mexists( 'cpu.utilization' );\n// returns false",
   "id": 47,
   "stars": 0,
   "errors": [
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {observer} from 'mobx-react';\nimport {Form} from 'mobx-antd-form';\n\nconst FormItem = Form.Item;\nconst FormField = Form.Field;\n\nvar React = \"Your Value Here\";\n\n@Form.create({\n    fields: ({demo}) => demo.fields\n})\n@observer\nclass BasicForms extends React.Component {\n    \n    handleSubmit = e => {\n        const {dispatch, form} = this.props;\n        e.preventDefault();\n        form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                // submit form\n            }\n        });\n    };\n    \n    // ** 实现 title 的 label 属性随着其 value 属性变化 **\n    render(){\n        \n        const {form, demo} = this.props;\n        \n        function formatMessage(arg0) {\r\n            throw new Error('Function not implemented.');\r\n        }\r\n\r\n        return (\n            <Form onSubmit={this.handleSubmit} hideRequiredMark style={{marginTop: 8}}>\n                <FormItem field={form.get('title')}>\n                    <FormField field={form.get('title')} label={demo.fields.title.value}>\n                        <Input placeholder='请输入标题'/>\n                    </FormField>\n                </FormItem>\n                <FormItem field={form.get('date')}>\n                    <FormField field={form.get('date')} rules={[{required: true, message: '我的优先级更高'}]}>\n                        <RangePicker\n                            style={{width: '100%'}}\n                            placeholder={[\n                                formatMessage({id: 'form.date.placeholder.start'}),\n                                formatMessage({id: 'form.date.placeholder.end'}),\n                            ]}\n                        />\n                    </FormField>\n                </FormItem>\n                <FormItem style={{marginTop: 32}}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        <FormattedMessage id=\"form.submit\"/>\n                    </Button>\n                    <Button style={{marginLeft: 8}}>\n                        <FormattedMessage id=\"form.save\"/>\n                    </Button>                                            \n                </FormItem>\n            </Form>\n        );\n    }\n}",
   "id": 48,
   "stars": 0,
   "errors": [
    1219,
    2339,
    2339,
    2339,
    17004,
    17004,
    17004,
    17004,
    2304,
    17004,
    17004,
    17004,
    2304,
    17004,
    17004,
    2304,
    17004,
    2552,
    2304,
    17004,
    2304,
    17004,
    2552,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 53,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import map from \"just-map-object\";\n\n// DEPRECATED: use just-map-values\nmap({ a: 3, b: 5, c: 9 }, (key, value) => value + 1); // {a: 4, b: 6, c: 10}\nmap({ a: 3, b: 5, c: 9 }, (key, value) => key); // {a: 'a', b: 'b', c: 'c'}\nmap({ a: 3, b: 5, c: 9 }, (key, value) => key + value); // {a: 'a3', b: 'b5', c: 'c9'}",
   "id": 49,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var store = \"Your Value Here\";\nstore.log('user'); // {\"name\":\"James Bond\",\"email\":\"bond007@live.com\",\"bio\":\"I spy for a living.\"}",
   "id": 50,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { stat } = require(\"fs\")\r\n\r\nvar npx = \"Your Value Here\"\n var hermione = \"Your Value Here\"\n var merge = \"Your Value Here\"\nnpx hermione merge-stat-exports src-report-1.JSON src-report-2.JSON --html dest-html-report --json report.json",
   "id": 51,
   "stars": 0,
   "errors": [
    1434,
    1434,
    2362,
    2363,
    2363,
    1005,
    2304,
    2304,
    1351,
    2304,
    2304,
    1351,
    2356,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2552,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\";\ngrunt.initConfig({\n\n    copy: {\n        somefiles: {\n            src: \"./mydir/**\",\n            dest: \"./myNormallyOutputDir/\"\n        }\n    },\n    multidest: {\n        copy_some_files: {\n            tasks: [\n                \"copy:somefiles\"\n            ]\n            dest: [\"./dist/distdir1\", \"./dist/distdir2\"]\n        },\n    },\n});",
   "id": 52,
   "stars": 0,
   "errors": [
    2339,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var fs = require('fs'),\n  Proposal = require('proposal'),\n  readProposal = Proposal(fs.readFile);",
   "id": 53,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var minify;\nminify = require('minify');",
   "id": 54,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { run } = require(\"node:test\")\r\n\r\nvar docker = \"Your Value Here\"\n var pull = \"Your Value Here\"\n var apachecn0 = \"Your Value Here\"\ndocker pull apachecn0/matplotlib-doc-zh\ndocker run -tid -p <port>:80 apachecn0/matplotlib-doc-zh\n# 访问 http://localhost:{port} 查看文档",
   "id": 55,
   "stars": 0,
   "errors": [
    1434,
    1434,
    2362,
    2304,
    2304,
    2304,
    1434,
    2362,
    2304,
    2304,
    2304,
    1109,
    1005,
    2362,
    2304,
    2304,
    2304,
    1127,
    1005,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "let fullsizeCanvasElement = document.getElementById('fullsize-canvas');\nlet thumbnailCanvasElement = document.getElementById('thumbnail-canvas');\n\nvar CanvasCamera = \"Your Value Here\";\n\nCanvasCamera.initialize(fullsizeCanvasElement, thumbnailCanvasElement);\n\nlet options:CanvasCamera.CanvasCameraOptions = {\n    cameraFacing: 'front',\n    fps: 15,\n    thumbnailRatio: 1/6,\n    onAfterDraw: function(frame) {\n      // do something with each frame of the fullsize canvas element only\n      // frame.image.src; // file path or base64 data URI\n      // frame.element.toDataURL(); // requested base64 data URI\n    }\n};\n\nCanvasCamera.start(options);",
   "id": 56,
   "stars": 0,
   "errors": [
    2584,
    2584,
    2339,
    2749,
    8010,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "describe('run', () => {\n  var fancy = \"Your Value Here\"\n  fancy\n  .stdout()\n  .do(() => console.log('foo'))\n  .do(({stdout}) => expect(stdout).to.equal('foo\\n'))\n  .it('runs this callback last', () => {\n    // test code\n  })\n\n  // add to context object\n  fancy\n  .add('a', () => 1)\n  .add('b', () => 2)\n  // context will be {a: 1, b: 2}\n  .it('does something with context', context => {\n    // test code\n  })\n})\r\n\r\nfunction expect(stdout) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 57,
   "stars": 0,
   "errors": [
    2593,
    2339,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "require(\"typeface-open-sans\")",
   "id": 58,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var app = \"Your Value Here\";\napp.set('adminAuthServerMaster', function(msg, cb){\n  if(auth success) {\n    cb('ok');\n  } else {\n    cb('bad');\n  }\n})\r\n\r\nfunction cb(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 59,
   "stars": 0,
   "errors": [
    2339,
    2304,
    1005,
    2304,
    1128,
    1005,
    1128,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var DEBUG\nvar mysql = \"Your Value Here\"\nDEBUG=mysql-express-session*,mysql-connection-manager node your-app.js",
   "id": 60,
   "stars": 0,
   "errors": [
    2362,
    2304,
    2304,
    1109,
    2362,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Boilerplate = require('boilerplate');\nvar h5bp = new Boilerplate({\n  options: {\n    cwd: 'vendor/h5bp/dist'\n  },\n  root: {src: ['{.*,*.*}'],   dest: 'src/'},\n  css:  {src: ['css/*.css'],  dest: 'src/'},\n  doc:  {src: ['doc/*.md'],   dest: 'src/'},\n  js:   {src: ['js/**/*.js'], dest: 'src/'}\n});\nconsole.log(h5bp);",
   "id": 61,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var DEV_COMMAND\nvar gatsby = \"Your Value Here\"\nDEV_COMMAND=gatsby -u http://localhost:8080 -r -o ./out",
   "id": 62,
   "stars": 0,
   "errors": [
    2362,
    2304,
    1005,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var view = async (view) => {\n    //Create an collection with a bindable field.\n    view.userData = { userName : \"John Doe\" };\n    //Bind the inner HTML of the element to the field on the collection\n    view.$nameLabel.bind = () => view.userData.userName;\n};\n\nexport { view };",
   "id": 63,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// middleware/authentication.js\n\nvar Authentication = require('../lib/authentication');\n\nfunction(req, res, next) {\n  var token = req.get('X-AUTH-TOKEN');\n\n  if(!token) {\n    /* instead of redirecting to login, give the\n    *  deep linking middleware a chance to store the\n    *  current request url, and THEN redirect to login\n    *  via the login option\n    */\n    next();\n  }\n\n  Authentication\n  .authenticate(token)\n  .then(function(tokenOrWhateverAuthYields) {\n    // we can now pass this in as the authentication option\n    req.user = tokenOrWhateverAuthYields;\n    next();\n  })\n  .error(function(e) {\n    // redirect to login since they gave us a bad token\n  });\n}",
   "id": 64,
   "stars": 0,
   "errors": [
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/* Set worksheet sheet to \"normal\" */\nws[\"!margins\"]={left:0.7, right:0.7, top:0.75,bottom:0.75,header:0.3,footer:0.3}\n/* Set worksheet sheet to \"wide\" */\nws[\"!margins\"]={left:1.0, right:1.0, top:1.0, bottom:1.0, header:0.5,footer:0.5}\n/* Set worksheet sheet to \"narrow\" */\nws[\"!margins\"]={left:0.25,right:0.25,top:0.75,bottom:0.75,header:0.3,footer:0.3}",
   "id": 65,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require('gulp');\nvar jspmAssets = require('gulp-jspm-assets');\n\ngulp.task('sass', function() {\n    var whateverTask = \"Your Value Here\";\n    jspmAssets({\n      'bootstrap', 'sass/**/*.scss',\n      'foundation', 'sass/**/*.scss'\n    })\n    .pipe(whateverTask())\n    .pipe(gulp.dest('dest'));\n});",
   "id": 66,
   "stars": 0,
   "errors": [
    1005,
    1005,
    1005,
    1005,
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " // Content to be scrolled\nvar $scrollContent = document.getElementById(\"content-scroll-vertical\");\nvar $scrollView = $scrollContent.parentNode; // Container for the content\nvar options = {\n    bounds: true,\n    direction: \"vertical\",\n    scrollbar: \"scrollbar-vertical\" // CSS class\n};\nvar RADJS_ScrollView = \"Your Value Here\";\n$scrollView.scroll_bar = new RADJS_ScrollView.ScrollBar($scrollView, {\n    className: options.scrollbar,\n    direction: options.direction,\n    smart: $scrollContent.querySelector(\"div.list_of_something\")\n}); // `scroll_bar` it's just a custom name\n// Create and attach ScrollView.\n// `scroller` it's just a custom name, but in WebComponent it's predefined.\n$scrollView.scroller = new RADJS_ScrollView($scrollView, options);\n// Create and attach custom pointer events, because of: IE support, SVG elements etc.\n// `tracker` is also custom name but it's also predefined in WebComponent\n$scrollView.tracker = new PointerTracker($scrollView, $scrollView.scroller);",
   "id": 67,
   "stars": 0,
   "errors": [
    2584,
    2339,
    2351,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const okayRecs = require('@andrewshell/okay-recs');\n\n// Source of all user ratings in system.\nconst allUserRatings = {\n    \"user0\": {\n        \"https://www.metacritic.com/tv/112263\": 1,\n        \"https://www.metacritic.com/tv/24\": 4,\n        \"https://www.metacritic.com/tv/30-rock\": 3,\n        \"https://www.metacritic.com/tv/alias\": 2,\n        \"https://www.metacritic.com/tv/archer\": 2,\n        \"https://www.metacritic.com/tv/arrested-development\": 2,\n        \"https://www.metacritic.com/tv/band-of-brothers\": 3,\n        ...\n    },\n    \"user1\": {\n        \"https://www.metacritic.com/tv/3rd-rock-from-the-sun\": 2,\n        \"https://www.metacritic.com/tv/adventure-time\": 4,\n        \"https://www.metacritic.com/tv/archer\": 1,\n        \"https://www.metacritic.com/tv/arrested-development\": 3,\n        \"https://www.metacritic.com/tv/better-call-saul\": 4\n        ...\n    },\n    ...\n};\n\n// Subset of user ratings that you want recommendations and similar users for.\n// Note: This example shows one user, but can work for multiple users at once.\nconst subUserRatings = {\n    user10: allUserRatings['user10']\n};\n\n// Sum of scores of people who gave program 1 a rating of x gave to program 2\n// Intermediate structure for user recommendations. Should be cached.\nconst allProgramScores = okayRecs.programScores(allUserRatings);\n\n// What programs are the users most likely to like?\nconst subUserRecommendations = okayRecs.userRecommendations(allProgramScores, subUserRatings);\n\n// What other users is this user similar to?\nconst subUserSimilarUsers = okayRecs.similarUsers(allUserRatings, subUserRatings);",
   "id": 68,
   "stars": 0,
   "errors": [
    1109,
    1005,
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 28,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// integrify.rules.js\n\nmodule.exports = [\n  {\n    rule: 'REPLICATE_ATTRIBUTES',\n    name: 'replicateMasterToDetail',\n    // ...\n  },\n  // ...\n];",
   "id": 69,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var angular = \"Your Value Here\";\nangular.module('myApp', ['ionic.native']).controller('MyPageController', function ($cordovaCamera) {\n  $cordovaCamera.getPicture().then(\n    function (data) {\n      console.log('Took a picture!', data);\n    },\n    function (err) {\n      console.log('Error occurred while taking a picture', err);\n    }\n  );\n});",
   "id": 70,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// gatsby-browser.js\nimport 'simple-css-reset';",
   "id": 71,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var chai = \"Your Value Here\";\nchai.expect(semver.parse('Linux 14.04')).to.equal(null);\nchai.expect(semver.parse('A development version')).to.equal(null);\nchai.expect(semver.parse('Version A')).to.equal(null);",
   "id": 72,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2339,
    2304,
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var dsa = \"Your Value Here\";\ndsa.setInstance(dsa); // DSA ID",
   "id": 73,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var web3 = \"Your Value Here\";\nweb3.setProvider(new web3.providers.HttpProvider('http://host.url', 0, BasicAuthUsername, BasicAuthPassword));",
   "id": 74,
   "stars": 0,
   "errors": [
    2339,
    2339,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n//从数据库中查询出来的数据对象\nvar arr = [{id: 10, name: \"name1\", value: \"value1\"}, {id: 11, name: \"name2\", value: \"value2\"}];\nvar arrToObj = \"Your Value Here\";\n//把id值作为key生成一个对象\n/* data = {10: {id: 10, name: \"name1\", value: \"value1\"}, 11: {id: 11, name: \"name2\", value: \"value2\"}} */\nvar data = arrToObj(arr, \"id\");\n//把id值作为key，只需要name的值\n//data = {10: \"name1\", 11: \"name2\"}\nvar data = arrToObj(arr, \"id\", \"name\");\n//只获取id的值\n// ids = [10, 11];\nvar ids = arrToObj(arr, \"id\", null);",
   "id": 75,
   "stars": 0,
   "errors": [
    2349,
    2349,
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { equal } = require(\"assert\");\r\n\r\nvar click = \"Your Value Here\";\nclick(\"html>body>div>div:eq(0)>button\");\nandThen(function () {\n equal(find(\"#foo\").length, 0, \"foo removed AFTER user [INSERT REASON]\");\n});\n\r\nfunction andThen(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 76,
   "stars": 0,
   "errors": [
    2349,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { through } = require('streamss-through')\nlet cnt = 0\n\nrequire('fs').createReadStream(__filename, { encoding: 'utf8', highWaterMark: 30 })\n.pipe(through(\n  { decodeStrings: false },\n  function transform(str) {\n    cnt += 1\n    this.push(str.replace(/\\s/g, '‧') + '\\n')\n  },\n  function flush() {\n    console.log('\\ncounted num of chunks: ' + cnt)\n  }\n))\n.pipe(process.stdout)",
   "id": 77,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const demethodize = require(\"just-demethodize\");\n\nconst trimFn = demethodize(\"\".trim);\n[\"hello \", \" goodbye\", \"hello again\"].map(trimFn);",
   "id": 78,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var data = \"Your Value Here\";\nconst mapped = {\n  a: data.a,\n  b: data.b\n}",
   "id": 79,
   "stars": 0,
   "errors": [
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var o2x = require('object-to-xml');\n\nvar obj = { \n  '?xml version=\\\"1.0\\\" encoding=\\\"iso-8859-1\\\"?' : null,\n  request : {\n    '@' : {\n      type : 'product',\n      id : 12344556\n    },\n    '#' : {\n      query : {\n        vendor : 'redhat',\n        name : 'linux'\n      }\n    }\n  }\n};\n\nconsole.log(o2x(obj));\n\n/*\n<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n<request type=\"product\" id=\"12344556\">\n  <query>\n    <vendor>redhat</vendor>\n    <name>linux</name>\n  </query>\n</request>\n*/",
   "id": 80,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 26,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Post = \"Your Value Here\";\nlet post = new Post();\n\nawait post.save(); // creates a new post\n\npost.set('title', 'New title');\nawait post.save(); // updates an existing post\r\n\r\nexport { };\r\n",
   "id": 81,
   "stars": 0,
   "errors": [
    2351,
    1378,
    1378
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var imdbWatchlist = require('imdb-watchlist');\n\nimdbWatchlist('ur23098466').then(function (watchlist) {\n  // watchlist is an array of objects on the form:\n  // { title: '', imdbId: ''}\n\n  // This will log out a random movie from your watchlist\n  console.log(watchlist[Math.floor(Math.random() * watchlist.length)]);\n});",
   "id": 82,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var JsonRoutes = \"Your Value Here\";\nJsonRoutes.ErrorMiddleware.use(\n  '/handle-error',\n  RestMiddleware.handleErrorAsJson\n);\n\nJsonRoutes.add('get', 'handle-error', function () {\n  var error = new Meteor.Error('not-found', 'Not Found');\n  error.statusCode = 404;\n  throw error;\n});",
   "id": 83,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var res = \"Your Value Here\";\nconst loggedIn = res._headers['logged-in'] === \"true\";",
   "id": 84,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var server = \"Your Value Here\";\nserver.register({\n    register: require('hapi-droutes'),\n    options: {\n        'root':'routes/please/search_in/here',\n        'match':'resource/*/route.*.js',\n        'dependencies':['hello','hapi']\n    }\n}, function (err) {\n    if (err) throw err;\n});",
   "id": 85,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var cacheInterceptor = function cacheInterceptor(args) {\n  var req = args.req,\n      res = args.res;\n    var cacheStore = \"Your Value Here\";\n    // retrieve cached response\n    return cacheStore.getCacheRes(req)\n      .then((cachedRes) => {\n        return new Promise((resolve, reject) => {\n          try {\n            if (cachedRes) {\n              // response with cached result\n              res.end(cachedRes);\n              // abort the executing of passes sequence\n              reject();\n            } else {\n              // continue executing other passes\n              resolve();\n            }\n          } catch (err) {\n            reject(err);\n          }\n        })\n      })\n  };\n// insert this pass before the default 'deleteLength' pass\nProxy.before('web', 'deleteLength', cacheInterceptor);\n",
   "id": 86,
   "stars": 0,
   "errors": [
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 21,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var LoadIt = \"Your Value Here\";\n<LoadIt load={() => import('./LoadMe')} />",
   "id": 87,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import parallel from 'apr-parallel';\n\nconst then = (v) => new Promise((resolve) => resolve(v));\n\nconst withArray = await parallel([\n  async () => await then(1),\n  async () => await then(2)\n]);\n\n// withArray = [1, 2]\n\nconst withObject = await parallel({\n  one: async () => await then(1),\n  two: async () => await then(2)\n});\n\n// withObject = { one: 1, two: 2 }",
   "id": 88,
   "stars": 0,
   "errors": [
    1378,
    1378
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\"\n// run tests\ngrunt\n\n// run tests and show a test coverage report\n var specs = \"Your Value Here\"\ngrunt specs",
   "id": 89,
   "stars": 0,
   "errors": [
    1434
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// foo.js\nObject.defineProperty(exports, '__esModule', {value: true})\n\nexports.default = {\n  foo: 'default-foo'\n}\n\nexports.foo = 'foo'",
   "id": 90,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'core-js/features/array/includes';\nimport 'core-js/features/object/assign';",
   "id": 91,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nvar setAdapter = \"Your Value Here\";\nconst adapter = setAdapter(setAdapter);\n\nexports.api = Function.https.onRequest((...args) => adapter.handle(...args));",
   "id": 92,
   "stars": 0,
   "errors": [
    2349,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var my = \"Your Value Here\"\nmy-app\n├── README.md\n├── node_modules\n├── package.json\n├── .gitignore\n├── public\n│   └── favicon.ico\n│   └── index.html\n│   └── manifest.json\n└── src\n    └── App.css\n    └── App.js\n    └── App.test.js\n    └── index.css\n    └── index.js\n    └── logo.svg\n    └── registerServiceWorker.js",
   "id": 93,
   "stars": 0,
   "errors": [
    2362,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    1128,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304,
    1127,
    1127,
    1127,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { MoodleClient } = require('node-moodle');\nconst moodle = new MoodleClient({ ... });\n\nasync function main() {\n  try {\n    //Request data\n    var req = {\n      users: [\n        {\n          firstname: \"Foo\",\n          lastname: \"Bar\",\n          username: \"foo\",\n          password: \"FooBar123!\",\n          email: \"foo@example.com\",\n        }\n      ]\n    };\n\n    //Invoke a method\n    var res = await moodle.core.user.createUsers(req);\n    \n    //Response data\n    console.log(res);\n    /*\n    [\n      {\n        \"id\": 3,\n        \"username\": \"foo\"\n      }\n    ]\n    */\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\nmain();",
   "id": 94,
   "stars": 0,
   "errors": [
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 31,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  var LRUCache = \"Your Value Here\";\n  const cache = LRUCache([cacheSize = 10]);\n\n // return an item from the cache\n  cache.get(key)\n\n  // add an item to the cache. overwrite if already exists\n  cache.set(key, value) \n\n  // remove an item from the cache\n  cache.remove(key) \n\n  // reset the cache to an empty and fresh state\n  cache.clear(limit = 10) \n\n  // Traverse each cached item and call a function\n  // callback is passed [node element, element number, cache instance] \n  cache.forEach(callback) \n\n  // return a JSON represenation of the cache\n  cache.toJSON() ",
   "id": 95,
   "stars": 0,
   "errors": [
    2349,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { connectPubsub } from '@yoctol/message-queue';\n\nvar connectionOptions = \"Your Value Here\";\n\nconst pubsub = await connectPubsub({\n  driver: 'rabbitmq',\n  amqpConfig: {\n    url: 'amqp://localhost',\n    exchange: 'amqp.exchange',\n    connectOptions: {\n      //node-amqp-connection-manager connect() options \n      heartbeatIntervalInSeconds: 5,\n      ...\n      connectionOptions: {\n        //amqplib connection options\n        ...\n      },\n    },\n    createChannelOptions: {\n      //node-amqp-connection-manager createChannel() options \n      name: 'channelName',\n      Set: ...,\n      json: true,\n    },\n },\n});",
   "id": 96,
   "stars": 0,
   "errors": [
    2698,
    1005,
    1136,
    1109,
    1135,
    1128,
    2695,
    1005,
    1128,
    1128,
    2695,
    1109,
    1128,
    1128,
    1128,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 21,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function(i) {\n    // delete the tag at index i\n}",
   "id": 97,
   "stars": 0,
   "errors": [
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var facebookConnectPlugin = \"Your Value Here\";\nfacebookConnectPlugin.showDialog({\n    method: \"share\",\n    picture:'https://www.google.co.jp/logos/doodles/2014/doodle-4-google-2014-japan-winner-5109465267306496.2-hp.png',\n    name:'Test Post',\n    message:'First photo post',\n    caption: 'Testing using phonegap plugin',\n    description: 'Posting photo using phonegap facebook plugin'\n  }, function (response) {\n    console.log(response)\n  }, function (response) {\n    console.log(response)\n  }\n);",
   "id": 98,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "namiConfig.logger = require('log4js').getLogger('Nami.Core');\nvar nami = new (require(\"nami\").Nami)(namiConfig);",
   "id": 99,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "#@ Node\nvar node_modules = \"Your Value Here\"\nnode_modules\n\n var Build = \"Your Value Here\"\n# Build\nvar build = \"Your Value Here\"\nbuild\n\n var Coverage = \"Your Value Here\"\n var directory = \"Your Value Here\"\n# Coverage directory\nvar coverage = \"Your Value Here\"\ncoverage\n\n var logs = \"Your Value Here\"\n# logs\n*.log\n.logs\n\n#@ Platform Specific\n.DS_Store\nThumbs.db",
   "id": 100,
   "stars": 0,
   "errors": [
    1127,
    1005,
    1127,
    1005,
    1127,
    1005,
    1127,
    1005,
    2362,
    1109,
    1127,
    1005,
    1146,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { finished } = require(\"stream\")\r\n\n var err = \"Your Value Here\"\n var Pass = \"Your Value Here\"\n var an = \"Your Value Here\"\n var error = \"Your Value Here\"\n var object = \"Your Value Here\"\n var here = \"Your Value Here\"\n var to = \"Your Value Here\"\n var indicate = \"Your Value Here\"\n@param {Error|null} err Pass an error object here to indicate an error\n                        var occured = \"Your Value Here\"\n                        occured. Very useful for validation; stops the flow here.\n\n@param {string} key     The key of the property that has finished, \n                        this gives you a chance to format the key name.\n\n@param {*} value        The value you want the key to have\n",
   "id": 101,
   "stars": 0,
   "errors": [
    1146,
    2362,
    18050,
    1434,
    1434,
    1434,
    1434,
    1434,
    1434,
    1434,
    1434,
    1434,
    2339,
    1005,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1003,
    1146,
    2693,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2695,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    1435,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    1146,
    1109,
    1109,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const storybook = require('@ltht-react/storybook');\n\n// TODO: DEMONSTRATE API",
   "id": 102,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ionic = \"Your Value Here\"\n var cordova = \"Your Value Here\"\n var plugin = \"Your Value Here\"\n var add = \"Your Value Here\"\n var alicloud = \"Your Value Here\"\nionic cordova plugin add cordova-plugin-alicloud-feedback --variable const APP_KEY=你的KEY --variable const APP_SECRET=const 你的SECRET",
   "id": 103,
   "stars": 0,
   "errors": [
    1434,
    1434,
    1434,
    1434,
    2362,
    2363,
    2363,
    2304,
    1005,
    2448,
    2304,
    1005,
    1005,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const socks5http = require('socks5-http');\n\n// set socks5 proxy port and host\n// 1080 and \"localhost\" is default\nsocks5http.setSocks5(1080, \"localhost\")\n\n// https GET\nsocks5http.get(\"https://www.google.com\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})\n\n// http GET\nsocks5http.get(\"http://www.google.com\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})\n\n// ip and custom port\nsocks5http.get(\"http://47.98.223.187:3000\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})",
   "id": 104,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 29,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var app = require(\"your-awesome-component\");\nvar yourDiv = \"Your Value Here\";\nvar instance = new app(yourDiv);",
   "id": 105,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var spraygun = \"Your Value Here\";\n var template = \"Your Value Here\";\nUsage: spraygun <template> <project-directory>\n\nGenerate a project in the specified directory, based on a template.\n\nFor example, to generate a react app in a directory named hello-world:\n  $ npx spraygun -t react hello-world\n\nThe officially supported spraygun templates are:\n  -t express\n  -t react\n  -t react-ts\n\nTo use a custom template, specify one of the following:\n  -p path   a local template directory\n  -r URL    a git repository URL",
   "id": 106,
   "stars": 0,
   "errors": [
    17004,
    17008,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import com.lynxit.contactswrapper.ContactsWrapperPackage;\n...\n\n@Override\n var List = \"Your Value Here\";\n var ReactPackage = \"Your Value Here\";\n var getPackages = \"Your Value Here\";\nprotected List<ReactPackage> getPackages() {\n    return Arrays.<ReactPackage>asList(\n        new MainReactPackage(),\n        ...,\n       new ContactsWrapperPackage()\n   );\n}",
   "id": 107,
   "stars": 0,
   "errors": [
    8002,
    1005,
    1128,
    1128,
    2349,
    1005,
    1003,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var flv = \"Your Value Here\";\nflv.$canvas;",
   "id": 108,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const conf = require('run-con')('myapp', {\n    port: 12345,\n    mode: 'test'\n});\n\nconsole.log(JSON.stringify(conf, null, 2));",
   "id": 109,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var type = \"Your Value Here\";\ntype.isAsyncFunction(async function(){}) //=> true",
   "id": 110,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { ProviderStore } from 'react-redux-just'\n\nconst model = {\n  state: {\n    date: {\n      __options:{\n        type: 'date',\n        value: new Date(),\n        receiving: date => date.toString(),\n        request: (resolve, reject) => {\n              var fetch = \"Your Value Here\";\n              fetch( REQUEST_URL , {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ title: 'React POST Request' })\n                })\n                .then(response => response.json())\n                .then(({result}) => resolve(result));\n            }\n      }\n    }\n  }\n}\n\nReactDOM.render(\n    <ProviderStore model={model}>\n      <App />\n    </ProviderStore>\n  ,document.getElementById('root')\n);\n",
   "id": 111,
   "stars": 0,
   "errors": [
    2349,
    2304,
    2304,
    17004,
    17004,
    2304,
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 28,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import IntentLauncher, { IntentConstant } from 'react-native-intent-launcher'\n...\nIntentLauncher.startActivity({\n    action: 'android.settings.APPLICATION_DETAILS_SETTINGS',\n    data: 'package:com.example'\n})\n...",
   "id": 112,
   "stars": 0,
   "errors": [
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var cd = \"Your Value Here\"\n var contracts = \"Your Value Here\"\ncd contracts\nvar npm = \"Your Value Here\"\n var install = \"Your Value Here\"\nnpm install\n var run = \"Your Value Here\"\n var build = \"Your Value Here\"\nnpm run build",
   "id": 113,
   "stars": 0,
   "errors": [
    1434,
    1434,
    1434,
    1434
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var NodeWebcam = require( \"node-webcam\" );\n\nvar FSWebcam = NodeWebcam.FSWebcam; //require( \"node-webcam/webcams/FSWebcam\" );\n\nvar opts = {};\n\nvar cam = new FSWebcam( opts );",
   "id": 114,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import propType, { ow } from 'ow-prop-type'\n\nvar React = \"Your Value Here\"\n\nclass MyComponent extends React.Component {\n  static propTypes = {\n    // propType with a predicate\n    total: propType(\n      ow\n        .number\n        .integer\n        .greaterThanOrEqual(0)\n    ),\n    // propType with a callback, must return a predicate\n    current: propType((props) => {\n      return ow\n        .number\n        .integer\n        .greaterThanOrEqual(0)\n        .lessThanOrEqual(props.total)\n    }\n  }\n}",
   "id": 115,
   "stars": 0,
   "errors": [
    2339,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Vue from 'vue'\nimport Vuetify from 'vuetify'\nimport DaySpanVuetify from 'dayspan-vuetify'\nimport App from './App.vue'\n\nimport 'vuetify/dist/vuetify.min.css'\nimport 'material-design-icons-iconfont/dist/material-design-icons.css'\nimport 'dayspan-vuetify/dist/lib/dayspan-vuetify.min.css'\n\nVue.config.productionTip = false\n\nVue.use(Vuetify);\n\nVue.use(DaySpanVuetify, {\n  methods: {\n    getDefaultEventColor: () => '#1976d2'\n  }\n});\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})",
   "id": 116,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\";\ngrunt.initConfig({\n  mustache_html: {\n    development: {\n      options: {\n        src: 'src',\n        dist: 'dist',\n        type: 'mustache' // mustache Or hbs\n      },\n      globals: {\n        analytics_id: 'UA-123456-1'\n      }\n    }\n  }\n});",
   "id": 117,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<script src=\"path/to/dist/js/tether.min.js\"></script>",
   "id": 118,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { request } = require(\"http\")\r\n\r\nfunction log(response) {\n  console.log(`Transaction ID: ${response.transactionId}`)\n  console.log(`Function code: ${response.functionCode}`)\n  console.log(`Total number of registers: ${response.noOfRegisters}`)\n  console.log(`Values: ${response.registerValues.join(', ')}`)\n}\n\nasync function example() {\n  try {\n    var client = \"Your Value Here\"\n    const response = await client.send(request)\n    log(response)\n  } catch (error) {\n    console.log(`Error: ${error}`)\n  }\n}\n\nexample()",
   "id": 119,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Size = \"Your Value Here\"\nSize (Body, H1, etc.)\n  Alignment (Left, Center, Right)\n    Weight (Regular, Semibold, etc.)\n      Color\r\n\r\nfunction Alignment(Left, Center, Right) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 120,
   "stars": 0,
   "errors": [
    2349,
    2304,
    2304,
    2304,
    1003,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    1003,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/* bookType can be 'xlsx' or 'xlsm' or 'xlsb' */\nvar wopts = { bookType:'xlsx', bookSST:false, type:'binary' };\n\nvar XLSX = \"Your Value Here\";\n\nvar wbout = XLSX.write(workbook,wopts);\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n  for (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n  return buf;\n}\n\n/* the saveAs call downloads a file on the local machine */\nsaveAs(new Blob([s2ab(wbout)],{type:\"\"}), \"test.xlsx\")\r\n\r\nfunction saveAs(arg0, arg1) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 121,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2322
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var dfltCfg = { slot: 'foo' },\n  meta = { defaultConfig: dfltCfg,\n    descr: 'A nice foo for your app.',\n    apiVersion: 1,\n    };\n\nfunction install(app, plugCfg, appCfg) {\n  if (plugCfg === appCfg) { plugCfg = false; }\n  var slot = (plugCfg.slot\n    || appCfg.fooSlot   // <-- that's why we checked above\n    || dfltCfg.slot);\n  app[slot] = function () { return 'bar @ ' + app.name; };\n}\n\nmodule.exports = require('plugmgr1801-pmb/plugify')(module, meta, install);",
   "id": 122,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// get most used from main entry\nimport { SVGO, SVGO_LITE, CONFIG_LITE, PLUGINS_DEFAULT_LIST } from 'libsvgo/module/lib/svgo'\n\n// or get each separately\nimport { SVGO_LITE } from 'libsvgo/module/lib/svgo-lite'\nimport { SVGO_LITECONFIG_LITE } from 'libsvgo/module/lib/svgo/config-lite'\n\n// get each plugin separately\nimport * as addAttributesToSVGElement from 'libsvgo/module/plugins/addAttributesToSVGElement'",
   "id": 123,
   "stars": 0,
   "errors": [
    2300,
    2300
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { name } = require(\"assert\")\r\n\r\nvar typeorm = \"Your Value Here\"\n var init = \"Your Value Here\"\ntypeorm init --name MyProject --database mysql",
   "id": 124,
   "stars": 0,
   "errors": [
    2305,
    1435,
    2356,
    1005,
    2304,
    1005,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { start } = require(\"repl\")\r\n\nvar ControlManifest = \"Your Value Here\"\n- ...\\ControlManifest.Input.xml\n\n    modify as needed...\n\n\n\n- modify ...\\node_modules\\pcf-start\\bin\\pcf-start.js\n\n    enable cors by adding cors: true, \n\n```javascript\n// Start server\nvar options = {\n    port: 8181,\n    host: '0.0.0.0',\n    cors: true, \n    root: path.resolve(process.cwd(), codePath),\n    open: true,\n",
   "id": 125,
   "stars": 0,
   "errors": [
    2362,
    1109,
    1127,
    1005,
    1005,
    2304,
    2304,
    8016,
    1005,
    2304,
    1005,
    1127,
    2304,
    1127,
    2304,
    2363,
    1127,
    2304,
    1127,
    2304,
    2339,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2695,
    2349,
    1160
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// configuring client\nconst prosperworks = require('prosperworks')({\n  email: process.env.EMAIL,\n  token: process.env.TOKEN\n});\n\n// using async / await (native in Node.js v8.x)\nvar result = await prosperworks.companies.list();\nconsole.log(JSON.stringify(result, null, 2));\n\n// or using with promises\nprosperworks.companies.list()\n.then(result => {\n  console.log(JSON.stringify(result, null, 2));\n})",
   "id": 126,
   "stars": 0,
   "errors": [
    1378
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/** @type {string[]} */\nconst verbs = require('verb-corpus');\n\nconsole.log(verbs.length);",
   "id": 127,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { BuildpackJob } from 'dray-client';\nvar manager = \"Your Value Here\";\nlet compilation = new BuildpackJob(manager);\ncompilation.addFiles([\n    {name: 'foo.ino', data: new Buffer()}\n]);\ncompilation.setEnvironment({\n    PLATFORM_ID: 6\n});\ncompilation.setBuildpacks([\n    'particle/buildpack-wiring-preprocessor',\n    'particle/buildpack-particle-firmware:0.5.1-photon'\n]);\ncompilation.submit().then((binaries) => {\n    // Do something with binaries\n}, (reason) => {\n    console.error(\"Compilation error:\", reason)\n});",
   "id": 128,
   "stars": 0,
   "errors": [
    2554
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var store = \"Your Value Here\"\nvar prefixed = store.withIdPrefix('foo:')\n\nprefixed.add({ _id: 'bar', value: 42 }) // will add the object with id 'foo:bar'\n  .then(function (doc) {\n    // update documents with id 'foo:other' and 'foo:bar'\n    return prefixed.update(['other', 'foo:bar'], { other: 'baz' })\n  })\n\n// Finds all objects which id start with 'foo:'\nprefixed.findAll().then(function (docs) {})\n\n// Handle all changes to objects which id start with 'foo:'\nprefixed.on('change', function (eventName, doc) {})\n\nvar moarPrefixed = prefixed.withIdPrefix('moarPrefix:') // prefix is now 'foo:moarPrefix:'",
   "id": 129,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const RequestParameters = require('@luigisamurai/request-parameters');\nvar requiere = \"Your Value Here\";\nconst JSONFile = requiere('./JSONFile');\n\nconst request = new RequestParameters.Request();\n\n// request-promises options\nconst setting = {\n  resolveWithFullResponse: true,\n  simple: false\n};\n\n// set the common parameters\nrequest.setParameters({\n  baseUrl: 'http://www.google.com',\n  setting\n});\n\n// Get request with request-parameter dependency\nconst getPromise = request.send(JSONFile.GET, {\n  urlParams: { homeId: 1 },\n  queryParams: { offset: 0, limit: 100 },\n});\n\n// Also can use async - await to wait the promises\ngetPromise.then((response) => {\n  const statusCode = response.statusCode;\n  const body = response.body;\n\n  console.log(statusCode, ' ', body);\n});\n\n// Post request with request-parameter dependency\nconst postPromise = request.send(JSONFile.Post, {\n  body: { name: 'home view' }\n});\n\npostPromise.then((response) => {\n  const statusCode = response.statusCode;\n  const body = response.body;\n\n  console.log(statusCode, ' ', body);\n});\n\n// Note the URIs don't exist so the request return 404 status code.",
   "id": 130,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 29,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "$('li', 'ul', '<ul id=\"fruits\">...</ul>');",
   "id": 131,
   "stars": 0,
   "errors": [
    2592
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var SpeechToTextV1 = \"Your Value Here\";\nconst speechToText = new SpeechToTextV1({\n/* authenticator, version, serviceUrl, etc... */\n});\nconst recognizeStream = recognizeUsingWebSocket(params);\n\n// getTransactionId returns a Promise that resolves to the ID\nrecognizeStream.getTransactionId().then(\n  globalTransactionId => console.log(globalTransactionId),\n  err => console.log(err),\n);\r\n\r\nfunction recognizeUsingWebSocket(params) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 132,
   "stars": 0,
   "errors": [
    2351,
    2304,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { name } = require(\"assert\")\r\n\r\nvar yo = \"Your Value Here\"\n var axi = \"Your Value Here\"\nyo axi-dtsi-gulp-angular [app-name]",
   "id": 133,
   "stars": 0,
   "errors": [
    2305,
    1434,
    2362,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var chance = \"Your Value Here\";\nchance.month({country: 'de'})\n// 'Juli'",
   "id": 134,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var nock = \"Your Value Here\";\nconst scope = nock('http://www.headdy.com')\n  .replyDate()\n  .get('/')\n  .reply(200, { hello: 'world' })",
   "id": 135,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mailchimp = \"Your Value Here\";\n//to create some new merge fields in your list\n//http://developer.mailchimp.com/documentation/mailchimp/reference/lists/merge-fields/\n\nmailchimp\n  .post('batches', {\n    operations : [\n      {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG1',\n          type : 'string'\n        })\n      }, {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG2',\n          type : 'string'\n        })\n      }, {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG3',\n          type : 'string'\n        })\n      }\n    ]\n  })\n  .then(function(result){\n    console.log(result);\n  })\n  .catch(function(error){\n    console.log(error);\n  });",
   "id": 136,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 34,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var log = \"Your Value Here\";\nlog.bind(logger, levelName);",
   "id": 137,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const crypto = require('crypto');\nfunction verifySignature({\n  data,\n  signature,\n  publicKey\n}) {\n  // Verify that we signed correctly using public key\n  const verify = crypto.createVerify('RSA-SHA384');\n  verify.write(data);\n  verify.end();\n\n  // True if signature is verified\n  return verify.verify(publicKey, signature, 'base64');\n}",
   "id": 138,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var b = \"Your Value Here\"\n.b-foo {\n  .bar {\n    …\n  }\n  \n  .qux {\n    …\n  }\n}",
   "id": 139,
   "stars": 0,
   "errors": [
    2339,
    2304,
    1005,
    1180,
    1434,
    2304,
    1127,
    1128,
    1434,
    2304,
    1127,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export interface GoogleLocationDetailResult {\n  adr_address: string;\n  formatted_address: string;\n  icon: string;\n  id: string;\n  name: string;\n  place_id: string;\n  scope: string;\n  reference: string;\n  url: string;\n  utc_offset: number;\n  vicinity: string;\n  types: string[];\n  geometry: {\n    location: {\n      lat: number;\n      lng: number;\n    };\n    viewport: {\n      [type: string]: {\n        lat: number;\n        lng: number;\n      };\n    };\n  };\n  address_components: Array<{\n    long_name: string;\n    short_name: string;\n    types: string[];\n  }>;\n}",
   "id": 140,
   "stars": 0,
   "errors": [
    8006
   ],
   "hasCode": true,
   "nondeletedLines": 31,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ImagePickerIOS = \"Your Value Here\";\nImagePickerIOS.openCameraDialog({\n  showImages: true,\n  showVideos: false\n}, (imageUrl, height, width) => {\n  // success\n}, (error) => {\n  // cancel\n});",
   "id": 141,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var expect = \"Your Value Here\";\nexpect(const [button1, button2, button3]).to.be.verticallyAligned('top', 1.5);",
   "id": 142,
   "stars": 0,
   "errors": [
    2349,
    1135,
    1005,
    1134,
    1005,
    1005,
    1005,
    2695
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const hdl = require('hdl-js');\n\nconst {\n  emulator: {\n    Clock,\n    Pin,\n  },\n} = hdl;\n\nconst clock = new Clock({rate: 10, value: -5});\nconst pin = new Pin({name: 'a'});\n\n// Track clock events.\nclock.on('tick', value => pin.setValue(value));\n\nclock.tick();\n\nconsole.log(pin.getValue()); // +5;",
   "id": 143,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const App = () => {\n         var serviceList = \"Your Value Here\";\n    return \n        <serviceList.ProvideAll>\n            // rest of the application\n        </serviceList.ProvideAll>\n    ;\n}",
   "id": 144,
   "stars": 0,
   "errors": [
    17004,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var getQueue = \"Your Value Here\";\ngetQueue(callback)",
   "id": 145,
   "stars": 0,
   "errors": [
    2349,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nvar course = \"Your Value Here\"\n// Find the top 10 students who have taken a particular course\n// and earned a grade of at least 3:\n\nconst classes = {\n   Student: null,\n   Course: course\n}\n\nconst criteria = {\n  descending: 'grade',\n  greaterThanOrEqualTo: ['grade', 3],\n  limit: 10,\n  include: 'student'\n}\n\nvar parsm = \"Your Value Here\"\n\nconst joinObjs = await parsm.getJoinQuery(classes, criteria).find()\n\n\r\nexport { }\r\n// joinObjs is now an array of instances of the class 'Student2Course'\n// with details of students in the 'student' column.",
   "id": 146,
   "stars": 0,
   "errors": [
    1378,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var catalog = \"Your Value Here\"\ncatalog\n    Promise\n        var files = \"Your Value Here\"\n        files\n            var index = \"Your Value Here\"\n            index.js — your polyfill\n\n        index.json\n        index.js",
   "id": 147,
   "stars": 0,
   "errors": [
    2339,
    1127,
    1434,
    2304,
    2304,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//main.js\nimport BoxButton from 'box-components-button'\nvar Vue = \"Your Value Here\"\nVue.use(BoxButton)",
   "id": 148,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ffmpeg = \"Your Value Here\";\nffmpeg('/path/to/file.avi').noVideo();",
   "id": 149,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const outStr = \"[{\\\"Root\\\":\\\"0x763f7f5e16506128824178bf2ee855e35a4b93689e8e54ed1e3d03177da09917\\\",\\\"State\\\":{\\\"Num\\\":345,\\\"OS\\\":{\\\"Index\\\":384,\\\"OutCM\\\":null,\\\"Out_O\\\":null,\\\"Out_Z\\\":{\\\"AssetCM\\\":\\\"0x5545b6d57ef6a35b124963daa0dee992da5243e31eb0d99d8f66d0f1a13e9012\\\",\\\"EInfo\\\":\\\"0x04fc0547da3590767317c3719f7b89516f7afb01037ca09cefc0bd75b4dccb95cfff665a0028069289960dcf07b69928e8d3da06ad0249ba7fd2c31505f5eef96db8741382f68be2e34210be409a84ae67be5c4687ddef64c13bba278d5fbea9d69f1a335585c8544a3b3eac8e7812041a01d95326f8da65e588784cc70c1b5a4b5dd7d0f5921007aef4043ac515cadc864ac206b2902a04022603566a437deb3100fdc04b88eb249746631447cf25964fb8f32fb4314455efbc1ea7520865f52aa762629ab8eed99e0a7918918dfe186188ddf61d7fb3d855a64d71ff5c9688\\\",\\\"OutCM\\\":\\\"0x5d3ba6999629152264618694968cd18a7a4c7790e2c213498e99209c564039ab\\\",\\\"PKr\\\":\\\"0xfaf5e31e63cf54a81cb494e57719abf9e2af71fb52720a4ad476ce78006ac0af202f0329828102356f29597815773200b75775b6837bf8592e20eb4df75e73a9c01a79af111451f7f38f4c2f79f03772a9e09b31d5c7bf2ab37808835362c4a0\\\",\\\"Proof\\\":\\\"0x02902bbd460a55b0dbaf4a96848d0b24ef5f2faab6409b3d68dc77f8f32a96a41d0a450a6076693fd6bef7e4466e6f0533e18905c8fc656741e7d1faf2ae298dba7edb87ab8b1293900e3fac4bd8e47a09b1ee02cf7770965bf990f60c53f57a3c08032dcc4023c7aa706f8fd35c68119caa73d15e8ca1ff35cc9e69fcdd8e46d5120c\\\",\\\"RPK\\\":\\\"0xb74e284e16cc77659690cee346076701a1040539ce84e6af71292f0acd5a906d\\\"},\\\"RootCM\\\":\\\"0xe495fe6b43813719352a6256e826dfae9d61d32b28ce1814e0b6a60b9cb05009\\\"},\\\"TxHash\\\":\\\"0x91a5cc04f6af1803bd8a523fcf23bc845c42552bb7d6d0a49e347ef5070ba274\\\"}}]\"\n\nvar tx = \"Your Value Here\"\n\ntx.DecOut(\n  outStr,\n  keys.tk.ToBase58(),\n  (err, content) => {\n    if (err) {\n      console.error(err)\n    } else {\n      console.log(content)\n    }\n  }\n)",
   "id": 150,
   "stars": 0,
   "errors": [
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Mongoose from 'mongoose';\n\nconst Test = new Mongoose.Schema({...\nexport  {tests:Test}",
   "id": 151,
   "stars": 0,
   "errors": [
    1109,
    1005,
    2448,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {any, boolean, number, string} from \"schemation\"\nimport {and, not, or}                 from \"schemation\"\nimport {where}                        from \"schemation\"\nimport {optional}                     from \"schemation\"\nimport {lazy}                         from \"schemation\"",
   "id": 152,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var freebase = \"Your Value Here\";\nfreebase.search(\"doug\",{type: \"/ice_hockey/hockey_player\"})",
   "id": 153,
   "stars": 0,
   "errors": [
    2554
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function inc(v) {\n  return v + 1;\n}\n\nfunction decr(v) {\n  return v - 1;\n}\n\nvar Arrow = \"Your Value Here\";\n\nArrow(inc).next(Arrow(decr)).run(1) == Arrow.next(Arrow(inc), Arrow(decr)).run(1);",
   "id": 154,
   "stars": 0,
   "errors": [
    2349,
    2349,
    2339,
    2349,
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { env } = require(\"process\")\r\n\r\nvar USAGE = \"Your Value Here\"\nUSAGE\n var dev = \"Your Value Here\"\n  $ dev-env export PROJECT\n\nARGUMENTS\n  PROJECT  project name\n\nOPTIONS\n  -d, --database  database\n  -h, --help      show CLI help",
   "id": 155,
   "stars": 0,
   "errors": [
    1434,
    2592,
    2362,
    2363,
    1005,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var replace = \"Your Value Here\";\nreplace( \"java\" ).ignoringCase(); // => ReplaceDefinition",
   "id": 156,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var arrayTransformer = \"Your Value Here\";\nconsole.log(arrayTransformer.stringToArray(db.get('newArray')))",
   "id": 157,
   "stars": 0,
   "errors": [
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var agenda = \"Your Value Here\";\nagenda.on('success:send email', function(job) {\n  console.log(\"Sent Email Successfully to: %s\", job.attrs.data.to);\n});",
   "id": 158,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var errorCB = \"Your Value Here\";\nvar err = \"Your Value Here\";\nerrorCB(err) {\n  console.log(\"SQL Error: \" + err);\n},\n\nvar successCB = \"Your Value Here\";\n\nsuccessCB() {\n  console.log(\"SQL executed fine\");\n},\n\nopenCB() {\n  console.log(\"Database OPENED\");\n},\n\nvar db = SQLite.openDatabase(\"test.db\", \"1.0\", \"Test Database\", 200000, openCB, errorCB);\ndb.transaction((tx) => {\n  tx.executeSql('SELECT * FROM Employees a, Departments b WHERE a.department = b.department_id', [], (tx, results) => {\n      console.log(\"Query completed\");\n\n      // Get rows with Web SQL Database spec compliance.\n\n      var len = results.rows.length;\n      for (let i = 0; i < len; i++) {\n        let row = results.rows.item(i);\n        console.log(`Employee name: ${row.name}, Dept Name: ${row.deptName}`);\n      }\n\n      // Alternatively, you can use the non-standard raw method.\n\n      /*\n        let rows = results.rows.raw(); // shallow copy of rows Array\n\n        rows.map(row => console.log(`Employee name: ${row.name}, Dept Name: ${row.deptName}`));\n      */\n    });\n});\r\n\r\nfunction openCB() {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 159,
   "stars": 0,
   "errors": [
    2349,
    1005,
    1128,
    2349,
    1005,
    1128,
    1005,
    1128,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 30,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {Screen} from 'geoeye-js'\n\nconst screen = new Screen({\n  config: './config.json', \n  container: 'container'\n});",
   "id": 160,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var metric = \"Your Value Here\";\nvar userMetric = metric.instance();\nuserMetric.start('metric');\n....\nuserMetric.end('metric');",
   "id": 161,
   "stars": 0,
   "errors": [
    2339,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var level = require('level-hyper')\nvar Snapshot = require('level-snapshot')\n\nvar db = level('./db')\nvar snapshot = Snapshot(db)\n\nsnapshot.on('snapshot:complete', function (snapshotName) {\n  console.log('took snapshot', snapshotName)\n})\n\nsnapshot.start()",
   "id": 162,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import duration from 'callbag-duration-progress'\nimport forEach from 'callbag-for-each'\nimport map from 'callbag-map'\nimport pipe from 'callbag-pipe'\n\nconst distance = d => t => t * d\n\nconst easeOut = p => 1 - (1 - p) * (1 - p)\n\nconst moveBall = (ball, easing) => {\n  pipe(\n    duration(1000),\n    map(easing),\n    map(distance(400)),\n    forEach(y => {\n      ball.style.transform = `translate3d(0, ${y}px, 0)`\n    }),\n  )\n}\n\nmoveBall(document.getElementById('ball'), easeOut)",
   "id": 163,
   "stars": 0,
   "errors": [
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const putout = require('putout');",
   "id": 164,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var git = \"Your Value Here\"\n var clone = \"Your Value Here\"\ngit clone https://github.com/provable-things/ptokens.js.git",
   "id": 165,
   "stars": 0,
   "errors": [
    1434,
    1434,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import CryptoAesCbc from 'react-native-crypto-aes-cbc';\n\nvar key;\n\n var iv;\nkey = \"XXXXX\" // in base64 format\n   var keysize128;\niv = \"XXXX\"   // in base 64 format\n var keysize256;\nkeysize128 = \"128\" \nkeysize256 = \"256\"\nvar text;\ntext = \"Sachin Agrawal\"\n\n  CryptoAesCbc.encryptInHex(iv,key,\"sachin agrawal\",\"128\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.encryptInBase64(iv,key,\"sachin agrawal\",\"128\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  var key256 = \"Your Value Here\";\n  CryptoAesCbc.encryptInHex(iv,key256,\"sachin agrawal\",\"256\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.encryptInBase64(iv,key256,\"sachin agrawal\",\"256\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.decryptByBase64(iv,key,\"ZN+DBxlPG+2lmWx6Bu7bqA==\",\"128\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByHex(iv,key,\"64df8307194f1beda5996c7a06eedba8\",\"128\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByBase64(iv,key256,\"Re3CIB8H3wYkUdl/l6WGGw==\",\"256\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByHex(iv,key256,\"45edc2201f07df062451d97f97a5861b\",\"256\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.sha256(\"sachin\",(hashKey) => {\n    console.log(hashKey)\n  })",
   "id": 166,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 39,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var sorting = require('postcss-sorting')\n\nvar postcss = \"Your Value Here\"\n\npostcss([\n  sorting({ 'sort-order': require('cssortie') })\n]))",
   "id": 167,
   "stars": 0,
   "errors": [
    2349,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var SecurePostmate = \"Your Value Here\";\n// Kick off the handshake with the iFrame\nconst handshake = new SecurePostmate({\n  container: document.getElementById('some-div'), // Element to inject frame into\n  url: 'http://child.com/page.html'\n});\n\n// When parent <-> child handshake is complete, data may be requested from the child\nhandshake.then(child => {\n\n  // Fetch the height property in child.html and set it to the iFrames height\n  child.get('height')\n    .then(height => child.frame.style.height = `${height}px`);\n\n  // Listen to a particular event from the child\n  child.on('some-event', data => console.log(data)); // Logs \"Hello, World!\"\n});",
   "id": 168,
   "stars": 0,
   "errors": [
    2351,
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var $in = \"Your Value Here\";\n<collection instance>.find({<query key>: {$in: [<query value>]}}, ...)",
   "id": 169,
   "stars": 0,
   "errors": [
    17004,
    17008,
    17004,
    17008,
    1005,
    17004,
    17008,
    1381,
    1381,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var rand = require('random-pro');\nconsole.log(rand.generateEvenNumber(10,100));\n// 96\nconsole.log(rand.generateEvenNumber(10,30));\n// 22",
   "id": 170,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const client = require(\"badonker\");\nconst honker = new client();\n\nasync function test() {\n  console.log(await honker.bulknsfw.booty());\n}\n\ntest();",
   "id": 171,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// select the right Ad Id according to platform\n  var admobid = {};\n  var navigator = \"Your Value Here\";\n  if( /(android)/i.test(navigator.userAgent) ) { // for android & amazon-fireos\n    admobid = {\n      banner: 'ca-app-pub-xxx/xxx', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/yyy'\n    };\n  } else if(/(ipod|iphone|ipad)/i.test(navigator.userAgent)) { // for ios\n    admobid = {\n      banner: 'ca-app-pub-xxx/zzz', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/kkk'\n    };\n  } else { // for windows phone\n    admobid = {\n      banner: 'ca-app-pub-xxx/zzz', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/kkk'\n    };\n  }",
   "id": 172,
   "stars": 0,
   "errors": [
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "let counter = 0;\n\nvar anticipatedCall = \"Your Value Here\";\n\nconst increment = anticipatedCall(() => {\n  counter = counter + 1;\n});\n\nincrement\n  .nthCallDuring(3, () => {\n    counter = 5;\n    increment();\n    increment();\n    increment();\n  })\n  .then(() => console.log(`counter value is ${counter}`));\n// Prints `counter value is 8`",
   "id": 173,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {Handler} from 'handleable';\n\nlet h = new Handler();\n\nlet e = await h.handle(\n  new Error('unhandled error'), // error instance\n  [ // list of handler recipes\n    {\n      handler: 'block', // handler name\n      message: '%{foo} unhandled error', // optional handler error message\n      block: async () => true // handler-specific property,\n      foo: 'bar' // custom variable for the message\n    },\n    {\n      handler: 'mongoUniqueness', // handler name\n      message: 'already taken', // optional handler error message\n      indexName: 'uniqueEmail' // handler-specific property\n    }\n  ]\n); // -> a list of errors",
   "id": 174,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var connect = \"Your Value Here\"\nconnect({host: 'mqtt.test.io', ssl: true, path: '/mqtt'})\n  .then(client => { ... })\n\n// or\nconnect('wss://mqtt.test.io/mqtt')\n  .then(client => { ... })",
   "id": 175,
   "stars": 0,
   "errors": [
    2349,
    1128,
    1109,
    2349,
    1128,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  var wrapper = \"Your Value Here\";\n  const handler = wrapper({\n      url: 'http://example.com/endpoint',\n      endpoint: '/endpoint',\n      auth: 'auth',\n      headers: 'headers',\n      method: 'method',\n      path_params: 'path_param',\n      query_params: 'query_param',\n      required_fields: 'required_fields',\n      request_map: 'request_map',\n      response_map: 'response_map',\n      transform_response: 'transform_response'      \n  });",
   "id": 176,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Select = require('react-select-plus');\n\nvar isLoadingExternally = true;\n\n<Select\n  name=\"form-field-name\"\n    isLoading={isLoadingExternally}\n    ...\n/>",
   "id": 177,
   "stars": 0,
   "errors": [
    17004,
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var pipep = \"Your Value Here\";\n> pipep([\n    function(a) { return Promise.resolve(a + 3); },\n    function(b) { return Promise.resolve(b * 10); },\n  ])(6);\nPromise\n90",
   "id": 178,
   "stars": 0,
   "errors": [
    1109,
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var json = {\"hey\": \"guy\",\"anumber\": 243,\"anobject\": {\"whoa\": \"nuts\",\"anarray\": [1,2,\"thr<h1>ee\"], \"more\":\"stuff\"},\"awesome\": true,\"bogus\": false,\"meaning\": null, \"japanese\":\"明日がある。\", \"link\": \"http://jsonview.com\", \"notLink\": \"http://jsonview.com is great\"};\n\n$(function() {\n  $(\"#json\").JSONView(json);\n  // with options\n  $(\"#json-collasped\").JSONView(json, { collapsed: true });\n});",
   "id": 179,
   "stars": 0,
   "errors": [
    2592,
    2592,
    2592
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var runIt = \"Your Value Here\";\nrunIt(args, const [options]);",
   "id": 180,
   "stars": 0,
   "errors": [
    2349,
    2304,
    1135,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<p-accordion>\n    <p-accordionTab header=\"Header 1\">\n       Content 1\n    </p-accordionTab>\n    <p-accordionTab header=\"Header 2\">\n        Content 2\n    </p-accordionTab>\n    <p-accordionTab header=\"Header 3\">\n        Content 3    \n    </p-accordionTab>\n</p-accordion>",
   "id": 181,
   "stars": 0,
   "errors": [
    17004,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var rcon = \"Your Value Here\";\nrcon.init('fsrcon/init')\n  .then(\n    // resolved\n    function () {\n      ..\n    },  \n    // rejected\n    function (err) {\n      ..\n    }\n  );",
   "id": 182,
   "stars": 0,
   "errors": [
    2339,
    1128,
    1128,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'view-design/dist/styles/iview.css';",
   "id": 183,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {render, html} from '//unpkg.com/lighterhtml?module';\n\ndocument.body.appendChild(\n  // as unkeyed one-off content, right away 🎉\n  html.node`<strong>any</strong> one-off content!<div/>`\n);\n\n// as automatically rendered wired content 🤯\ntodo(document.body.lastChild);\nfunction todo(node, items = []) {\n  render(node, html`\n  <ul>${\n  items.map((what, i) => html`\n    <li data-i=${i} onclick=${remove}> ${what} </li>`)\n  }</ul>\n  <button onclick=${add}> add </button>`);\n  function add() {\n    var prompt = \"Your Value Here\";\n    items.push(prompt('do'));\n    todo(node, items);\n  }\n  function remove(e) {\n    items.splice(e.currentTarget.dataset.i, 1);\n    todo(node, items);\n  }\n}",
   "id": 184,
   "stars": 0,
   "errors": [
    2584,
    2584,
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 22,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Fetch from 'rd-fetch';\n\nFetch.json('https://example.com/api')\n  .then((response) => {\n    console.log(response.json);\n  })\n  .catch((error) => {\n    console.log(error.json);\n  });",
   "id": 185,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var $DOM = require( \"mock-dom-resources\" );\n\n// ..",
   "id": 186,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Schema = \"Your Value Here\";\nSchema.plugin(\n  mongooseHidden,\n  {\n    hidden: {\n      ...omitCommonFields.underscored.objTrue,\n      some_other_field: true,\n      another_field_to_ignore: true\n    }\n  }\n);",
   "id": 187,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Accordion from \"@beisen/accordion\"\n",
   "id": 188,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<script src=\"rstate.min.js\"></script>",
   "id": 189,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "    var Extension = \"Your Value Here\";\n    <Extension Géoportail pour iTowns>/\n        GpPluginItowns.js\n            (version minifiée du code javascript pour une utilisation en production)\n        GpPluginItowns.css\n            (version minifiée des css pour une utilisation en production)\n        GpPluginItowns-src.js\n            (version non minifiée du code javascript pour une utilisation en développement)\n        GpPluginItowns-src.css\n            (version non minifiée des css pour une utilisation en développement)",
   "id": 190,
   "stars": 0,
   "errors": [
    17004,
    17008,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mixtool = require('mix-h5');\n\n\n// 统计（百度，cnzz）\nvar tracking = mixtool.tracking;\n// init tracking\ntracking.add('baidu', 'xxxxxx'); // baidu site id\ntracking.add('cnzz', 'xxxxxx'); // cnzz site id\n\n\nsetTimeout(function() {\n    tracking.log('loaded');\n}, 1000);\n\n\n// 图片预加载\nvar imgLoader = mixtool.imgLoader;\nvar xxx = \"Your Value Here\";\n// over: preload over, count: loaded image length, length: preload image total length\n// map: loaded image name, percent: count/length, fakePercent: fake percent\nimgLoader.preloadImg(function(over, count, length, map, percent, fakePercent) {\n    if(over && 100 == percent) {\n        // todo\n    } else {\n        console.log(percent);\n    }\n}, {\n    selector: 'xxx', // 预加载图片地址筛选器, default: '.image-resource-wrap span, img.image-resource'\n    fakeTime: xxx, // 模拟加载时间, default: 2000\n    fakePercent: xxx // 模拟加载百分比, default: 50\n});\n// get preload image\nimgLoader.get('images/logo.png'); // 返回带版本号的图片地址，如果有cdn前缀就返回前缀，该方法必须要在preloadImg方法执行之后才能调用\n\n\n// 设置微信分享内容\nvar wxtool = mixtool.wx;\nvar fail = \"Your Value Here\";\nwxtool.setShare({\n    title: 'xxx', // 分享标题\n    link: 'xxx', // 分享链接\n    img: 'xxx', // 分享图片\n    desc: 'xxx', // 分享描述\n    shareLog: {\n        openid: 'xxx', // 用户微信openid\n        nickname: 'xxx', // 用户昵称\n        ...: 'xxx' // 头像等其他用户信息\n    }, // 分享统计\n    success: function() {...}, // 分享成功回调函数\n    fail: function() {...} // 分享失败回调函数\n});\n\n\n// 微信支付\nvar wxtool = mixtool.wx;\nwxtool.pay({\n    openid: 'xxx', // 用户openId\n    product_id: 'xxx', // 商品ID\n    body: 'xxx', // 商品描述\n    total_fee: 'xxx', // 总金额\n    detail: 'xxx', // 商品详情\n    attach: 'xxx', // 附加数据\n    out_trade_no: 'xxx', // 商户订单号\n    success: function() {...}, // 支付成功回调函数\n    fail: function() {...} // 支付失败回调函数\n});\n\n\n// 注：上述微信分享和微信支付功能默认配置的是逆行信息科技公众号的appId，在其它公众号项目中使用这些微信功能，需要先执行initWXSDK方法传入相应的appid：\nwxtool.init({\n    appId: 'xxxxxx', // appid  页面域名需要与公众号中设置的回调一致\n    sdkUrl: '//res.wx.qq.com/open/js/jweixin-1.1.0.js', // 微信js sdk地址\n    siteSignApi: 'http://jishub.com/api/siteSign', // 签名接口\n    sitePayApi: 'http://jishub.com/api/sitePay', // 微信支付统一下单\n    jsApiList: [ // 开启的js接口：定制分享内容支付\n        'onMenuShareTimeline',\n        'onMenuShareAppMessage',\n        'chooseWXPay'\n    ],\n    initFail: function () { // 初始化失败\n        console.log('wx init fail');\n    },\n    initDone: function () { // 初始化成功\n        console.log('wx init done');\n    },\n    debug: false // debug模式\n}, function () {\n    // 初始化成功回调\n});\n\n\n// 监测手机横竖屏(限制横屏)\nmixtool.landscape({\n    'pic': 'xxx', // 提示图片\n    'text': '为了更好的体验，请将手机/平板竖过来', // 提示文字\n    'bgcolor': '#32373b', // 遮罩背景色\n    'txtColor': '#ffd40a', // 遮罩字颜色\n    'prefix': 'MixShine', // 遮罩class样式名 prefix + '_landscape'\n    'zIndex': 10000, // 遮罩z-index值\n    'init': false // 监测初始化后回调\n}, function() {\n    // 横屏回调\n}, function () {\n    // 竖屏回调\n});\n\n\n// 监测手机横竖屏(手动控制限制横屏还是竖屏)使用new关键字创建限制实例\nvar restrict = new mixtool.landscape({\n    'manual': true, // 手动控制时必须设为true\n    'pic': 'xxx', // 提示图片\n    'text': '为了更好的体验，请将手机/平板竖过来', // 限制横屏时的提示文字\n    'vetiText': '为了更好的体验，请将手机/平板横过来', // 限制竖屏时的提示文字\n    'bgcolor': '#32373b', // 遮罩背景色\n    'txtColor': '#ffd40a', // 遮罩字颜色\n    'prefix': 'MixShine', // 遮罩class样式��� prefix + '_landscape'\n    'zIndex': 10000, // 遮罩z-index值\n    'init': false // 监测初始化后回调\n}, function() {\n    // 横屏回调\n}, function () {\n    // 竖屏回调\n});\nrestrict.restrictLand(); // 限制横屏\nrestrict.restrictVeti(); // 限制竖屏\nrestrict.noRestrict(); // 无限制\nrestrict.restrictAll(); // 横屏竖屏都限制\n\n\n\n// util工具集\nvar util = mixtool.util;\n\nutil.loadScript // 加载js\nutil.loadImage // 加载图片\nutil.nextFrame // requestAnimationFrame或者setTimeout fallback\nutil.cancelFrame // cancelRequestAnimationFrame或者clearTimeout fallback\nutil.setCssPrefix // 根据浏览器设置css前缀\nutil.styleVender // 根据浏览器获取css前缀\nutil.browser // 浏览器内核判断 ex: util.browser.versions.ios\nutil.isFunction\nutil.isString\nutil.isArray\nutil.getElement // 根据输入内容返回DOM元素，传入字符串就作为DOM的id，传入DOM元素返回本身\nutil.getOffset // 根据输入内容返回DOM元素，传入字符串就作为DOM的id，传入DOM元素相对给定相对元素或body左上角的偏移量\nutil.extend // 将源对象的所有属性拷贝到目标对象中\nutil.genNonceStr // 获取随机数\nutil.setCookie\nutil.getCookie\nutil.getUrlQuery // 读取url上带的参数\nutil.buildUrlQuery // 拼接url参数",
   "id": 191,
   "stars": 0,
   "errors": [
    1109,
    1005,
    1128,
    1109,
    1005,
    1128,
    1109,
    1135,
    1128,
    1109,
    1005,
    1128,
    1109,
    1135
   ],
   "hasCode": true,
   "nondeletedLines": 113,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/**\n   * wechatConfig 配置信息\n   * \n   * @param appid 应用唯一标识，在微信开放平台提交应用审核通过后获得\n   * @param redirectUri 重定向地址，需要进行UrlEncode\n   * @param scope 应用授权作用域，拥有多个作用域用逗号（,）分隔，网页应用目前仅填写snsapi_login即可\n   * @param loginType 默认 jssdk\n   * @param style     提供\"black\"、\"white\"可选，默认为黑色文字描述。详见文档底部FAQ\n   * @param href 自定义样式链接，第三方可根据实际需求覆盖默认样式。详见文档底部FAQ\n   * @param state 用于保持请求和回调的状态，授权请求后原样带回给第三方。该参数可用于防止csrf攻击（跨站请求伪造攻击），建议第三方带上该参数，可设置为简单的随机数加session进行校验\n   * @param selfRedirect true：手机点击确认登录后可以在 iframe 内跳转到 redirect_uri，false：手机点击确认登录后可以在 top window 跳转到 redirect_uri。默认为 false。\n*/\n\nimport { DWWeChatLoginConfig } from 'angular-daiwei-wechat-login';\n\nvar Component = \"Your Value Here\";\n\n@Component({\n  ...\n  template: `<dw-wechat-login [width]=\"'300px'\" [height]=\"'410px'\" [config]=\"weChatConfig\">\n            </dw-wechat-login>`\n})\nexport class AppComponent {\n\n  wechatConfig: DWWeChatLoginConfig = {\n    appid: 'wxbdc5610cc59c1631',\n    redirectUri: 'https%3A%2F%2Fpassport.yhd.com%2Fwechat%2Fcallback.do',\n    state: '3d6be0a4035d839573b04816624a415e',\n  };\n\n  constructor() {}\n}\n",
   "id": 192,
   "stars": 0,
   "errors": [
    2349,
    2304,
    1005,
    1136,
    1005,
    1219,
    8010
   ],
   "hasCode": true,
   "nondeletedLines": 27,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" />\n<link rel=\"stylesheet\" href=\"dist/leaflet-push-content-control.css\" />",
   "id": 193,
   "stars": 0,
   "errors": [
    17004,
    2657,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CrudWrapper = require('mrs-node-util').crud;",
   "id": 194,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mongooseQueue = \"Your Value Here\"\nawait mongooseQueue.reset()\nconsole.log('The queue was completely purged of all jobs.')\r\n\r\nexport { }\r\n",
   "id": 195,
   "stars": 0,
   "errors": [
    1378,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Route = \"Your Value Here\";\nRoute('/home', HomeComponent)\n    .meta({\n        title: 'Home',\n        icon: 'fa-home'\n    });\n\n// Output\n{\n    path: '/home',\n    component: HomeComponent,\n    meta: {\n        title: 'Home',\n        icon: 'fa-home'\n    }\n}",
   "id": 196,
   "stars": 0,
   "errors": [
    2349,
    2304,
    2695,
    2304,
    1005,
    2304,
    2695,
    2304,
    1005,
    2695,
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var MP = \"Your Value Here\";\nMP.Memberships.get('/some/future/url', myAccessToken)\n  .then(function (data) {\n    console.log(\"You got the data:\", data);\n  });",
   "id": 197,
   "stars": 0,
   "errors": [
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CurrencyFormatter = \"Your Value Here\";\n// constructor\ninterface CurrencyFormatterProps {\n  locales: string | string[],\n  minimumIntegerDigits?: number,\n  precision?: number,\n  useGrouping?: boolean,\n  localeMatcher?: 'lookup' | 'best fit',\n  formatter?: typeof CurrencyFormatter.formatter,\n\n  style?: 'decimal' | 'currency' | 'percent',\n  currency?: string,\n  currencyDisplay?: 'symbol' | 'code' | 'name',\n}\n\n//options of format\ninterface optionsofformat {\n  minimumIntegerDigits?: number,\n  precision?: number,\n  useGrouping?: boolean,\n  localeMatcher?: 'lookup' | 'best fit',\n\n  style?: 'decimal' | 'currency' | 'percent',\n  currency?: string,\n  currencyDisplay?: 'symbol' | 'code' | 'name',\n}",
   "id": 198,
   "stars": 0,
   "errors": [
    8006,
    2339,
    8006
   ],
   "hasCode": true,
   "nondeletedLines": 21,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var cat = \"Your Value Here\"\n☁ ~ cat Garden.js\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst GardenStyle = styled.div`\n  opacity: 1\n`\n\nconst Garden = props => (\n  <GardenStyle>Hello {props.text}</GardenStyle>\n)\n\nexport default Garden",
   "id": 199,
   "stars": 0,
   "errors": [
    1127,
    1005,
    2448,
    2339,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "#!/usr/bin/env node\n\nvar husk = require('..').exec();\n\nhusk()\n  .whoami(function(code, signal) {\n    console.log('[code: %s, signal: %s]', code, signal);\n  })\n  .once('end', console.log.bind(null, '%s'))\n  .print()\n  .run();",
   "id": 200,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var find = \"Your Value Here\"\n/* Predicate fn */\nfind(\n  item => item.id === 1,\n  todos\n)\n// => {id: 1, name: \"lorem\", tagId: 2}\n\n/* Matching object */\nfindWith(\n  {\n    \"id\": 1\n  },\n  todos\n)\n// => {id: 1, name: \"lorem\", tagId: 2}\n\n/* Matching object & predicate fn */\nfilterWith(\n  {\n    \"tagId\": is // same as `tagId: source => is(source)`\n  },\n  todos\n)\n// => [{id: 1, name: \"lorem\", tagId: 2}]\n\n/* Syntactic sugar */\nfilterWith(\n  {\n    \"!tagId\": is // same as `tagId: not(is)`\n  },\n  todos\n)\n\r\nfunction findWith(arg0, todos) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n// => [\n//  {id: 2, name: \"ipsum\", tagId: null},\n//  {id: 3, name: \"dolor\", tagId: null}\n// ]",
   "id": 201,
   "stars": 0,
   "errors": [
    2349,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 30,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const htmlStream = require('web-html-stream');\n\n/**\n * @param {object} node, a DOM node like object.\n * @return {object} Anything really; return values are accumulated in an\n *   array.\n */\nfunction handler(node, ctx) {\n    // Do something with the node\n    return node;\n}\n\nconst testDoc = \"<html><body><div>\"\n        + \"<test-element foo='bar'>foo</test-element>\"\n        + \"</div></body>\";\n\nvar ReadableStream = \"Your Value Here\";\n\nconst inputStream = new ReadableStream({\n    start(controller) {\n        controller.enqueue(testDoc);\n        controller.close();\n    }\n});\n\n// Create a matcher to handle some elements, using CSS syntax. To avoid\n// shipping a CSS parser to clients, CSS selectors are only supported in node.\nvar reader = new htmlStream.HTMLTransformReader(inputStream, {\n    transforms: [\n        { selector: 'test-element[foo=\"bar\"]', handler: handler },\n        { selector: 'foo-bar', handler: handler },\n    ],\n    ctx: { hello: 'world' }\n});\n\n// Create the same matcher using more verbose selector objects. These are\n// especially useful when processing dynamic values, as this avoids the need to\n// escape special chars in CSS selectors.\nreader = new htmlStream.HTMLTransformReader(inputStream, {\n    transforms: [{\n        selector: {\n            nodeName: 'test-element',\n            attributes: [['foo', '=', 'bar']]\n        },\n        handler: handler,\n        // Optional: Request node.innerHTML / outerHTML as `ReadableStream`\n        // instances. Only available in rule objects.\n        stream: false\n    }],\n    ctx: { hello: 'world' }\n});\n\n// Read matches\nreader.read()\n.then(res => {\n    console.log(res);\n    return reader.read();\n})\n// {\n//   done: false,\n//   value: [\n//     \"<html><body><div>\",\n//     {\n//       \"nodeName\": \"test-element\",\n//       \"attributes\": {\n//         \"foo\": \"bar\"\n//       },\n//       \"outerHTML\": \"<test-element foo='bar'>foo</test-element>\",\n//       \"innerHTML\": \"foo\"\n//     },\n//     \"</div></body>\"\n//   ]\n// }\n.then(res => console.log);\n// { done: true, value: undefined }",
   "id": 202,
   "stars": 0,
   "errors": [
    2351
   ],
   "hasCode": true,
   "nondeletedLines": 43,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var rc = \"Your Value Here\";\n// here is our parent conductor\nvar parentConductor = rc.createConductor({\n    name: 'parent',\n    props: function() {\n        return {\n            count: 0,\n            candies: [ 'twix', 'snickers', 'kit kat' ]\n        };\n    }\n});\n\n// now we inherit by specifying a deps config\nvar childConductor = rc.createConductor({\n    name: 'child',\n    deps: [ parentConductor ],\n    props: function(inheritedProps) {\n        // children conductor are provided with the parent props.\n        // you can choose to mutate this object for the child conductor.\n\n        // note that mutating inheritedProps does NOT affect the parent\n        // conductor's props!\n        inheritedProps.count += 1;\n        inheritedProps.candies = inheritedProps.candies.concat('butterfinger');\n\n        // like the parent conductor, this returned value will become immutable\n        return inheritedProps;\n    },\n    handlers: [\n        function render(req, res, next) {\n            var props = rc.getProps(req);\n\n            res.render(props, next);\n            // => will render:\n            // {\n            //      count: 1,\n            //      candies: [ 'twix', 'snickers', 'kit kat', 'butterfinger' ]\n            // }\n        }\n    ]\n});",
   "id": 203,
   "stars": 0,
   "errors": [
    2339,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 25,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  ...\n var left = \"Your Value Here\"\n  height: '50%-1',\n  left: '45%+1',\n  ...",
   "id": 204,
   "stars": 0,
   "errors": [
    1128,
    2695,
    1005,
    2695,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var proxyList = \"Your Value Here\";\nproxyList.getByCountryCode('FR')\n          .then(function (proxies) {\n            // get proxies here\n          })\n          .catch(function (error) {\n            throw new Error(error);\n          });",
   "id": 205,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CREATE = \"Your Value Here\";\n/*** Add company table, insert some data and connect with user table ***/\n\n var TABLE = \"Your Value Here\";\n var id = \"Your Value Here\";\n var serial = \"Your Value Here\";\n var company_name = \"Your Value Here\";\n var character = \"Your Value Here\";\nCREATE TABLE \"company\"\n(\n   id serial,\n   company_name character(20) NOT NULL,\n   CONSTRAINT pk_company PRIMARY KEY (id),\n   CONSTRAINT uk_company UNIQUE (company_name)\n)\nWITH (\n  OIDS = FALSE\n);\n\nINSERT INTO \"company\"(company_name)\n    VALUES ('Company 1');\n\nALTER TABLE \"user\"\n  ADD COLUMN company_id integer;\n\nUPDATE \"user\" SET const company_id = 1;\n\nALTER TABLE \"user\"\n   ALTER COLUMN company_id SET NOT NULL;\n\nALTER TABLE \"user\"\n  ADD CONSTRAINT fk_user FOREIGN KEY (company_id) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE NO ACTION;\n\r\nfunction KEY(id) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 206,
   "stars": 0,
   "errors": [
    1434,
    1434,
    2349,
    1005,
    1005,
    2349,
    1005,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    2349,
    2304,
    1434,
    2304,
    1434,
    1434,
    2304,
    1434,
    2304,
    1434,
    2448,
    2304,
    1434,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    1434,
    2304,
    1434,
    2304,
    1434,
    1435,
    2304,
    1434,
    2304,
    2304,
    1434,
    2304,
    1434,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1435,
    2304,
    1434,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 29,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var csgotm = require('node-csgotm-api');\nvar options = \"Your Value Here\";\nvar api = new csgotm.API(options);",
   "id": 207,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var listening = \"Your Value Here\"\nlistening\nvar client = \"Your Value Here\"\n var connected = \"Your Value Here\"\nclient connected\n var arg1 = \"Your Value Here\"\n var arg2 = \"Your Value Here\"\nargs: arg1,arg2\n var Hello = \"Your Value Here\"\n var World = \"Your Value Here\"\nbody: Hello World!",
   "id": 208,
   "stars": 0,
   "errors": [
    1434,
    2695,
    1434,
    8013
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {makeDispatcher} from \"robojs\"\nvar myNewEventDispatcher=makeDispatcher();",
   "id": 209,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var swangular = \"Your Value Here\";\nswangular.success(\"Great job!\");",
   "id": 210,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var sudo = \"Your Value Here\"\n var yum = \"Your Value Here\"\n var install = \"Your Value Here\"\n var clamav = \"Your Value Here\"\nsudo yum install clamav",
   "id": 211,
   "stars": 0,
   "errors": [
    1434,
    1434,
    1434
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { call } = require(\"assert\")\r\n\r\nvar If = \"Your Value Here\"\nvar Player = \"Your Value Here\"\nIf in Player A's simulation the character just dodged the bullet in time, but in Player B's simulation the character didn't dodge that same bullet in time - strictly due to fuzziness - our two simulations are no longer in sync and we aren't sharing a game state any longer. We call this non-deterministic physics.",
   "id": 212,
   "stars": 0,
   "errors": [
    2305,
    2322,
    1005,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2693,
    2304,
    1005,
    1005,
    2304,
    2304,
    1005,
    2304,
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n    var contentType = 'Content-Type';\n    var CreatenewUpdatePropertyManagerRequest = \"Your Value Here\";\n    var body = new CreatenewUpdatePropertyManagerRequest({\"key\":\"value\"});\n\n    controller.createnewPropertyManager(contentType, body, function(error, response, context) {\n\n    \n    });",
   "id": 213,
   "stars": 0,
   "errors": [
    2351,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var client = \"Your Value Here\";\nclient.summarization(\"<Your text to summarize>\")",
   "id": 214,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Mark = \"Your Value Here\";\n<Mark wrap=\"span\">*text*</Mark>",
   "id": 215,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var templateEngine = \"Your Value Here\";\nconst renderer = templateEngine.render(string[, parameters, style]);",
   "id": 216,
   "stars": 0,
   "errors": [
    2339,
    2693,
    2695,
    1109,
    2695,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var form = \"Your Value Here\";\nform.on('field', (name, value) => {});",
   "id": 217,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { version } = require(\"os\")\r\n\r\nvar onvif = \"Your Value Here\"\nvar ptz = \"Your Value Here\"\nonvif-ptz goto-home\n\nMove the camera to the home position.\n\nOptions:\n  --help          Show help  [boolean]\n  --version       Show version number  [boolean]\n  --baseUrl       The baseUrl of the camera.  [string] [required]\n  --path          The onvif path of the camera.  [string] [default: \"/onvif/device_service\"]\n  --username, -u  The username of the camera.  [string] [required]\n  --password, -p  The password of the camera.  [string] [required]",
   "id": 218,
   "stars": 0,
   "errors": [
    2362,
    2363,
    1005,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    2693,
    2632,
    1005,
    2304,
    1434,
    2693,
    2693,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    2693,
    2304,
    2304,
    1005,
    2304,
    1434,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    2693,
    1109,
    1128,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    2693,
    2304,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1003,
    2693,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var pusudb = \"Your Value Here\"\npusudb.use('ws', function(req, socket, next){\n    console.log(req.headers) \n    console.log(req.params) // URL params\n    console.log(req.body) // Body-Data\n    console.log(req.docs) // Result sending to client \n    next()\n})",
   "id": 219,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Cookies from \"ts-cookies\";",
   "id": 220,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var LayerWebhooks = require('layer-webhooks');\n\nvar API_TOKEN = \"Your Value Here\";\n\nvar APP_ID = \"Your Value Here\";\n\n// Initialize by providing your Layer credentials\nvar layer = new LayerWebhooks({\n  token: API_TOKEN,\n  appId: APP_ID\n});\n\n// Register a webhook\nlayer.webhooks.register({\n  events: ['message.sent'],\n  url: 'https://mydomain.com/mywebhooks/messages-sent',\n  secret: 'Frodo is a Dodo',\n  config: {\n    name: 'My sample webhook'\n  }\n}, function(err, res) {\n  if (err) return console.error(err);\n\n  // Webhook registered\n});",
   "id": 221,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function App() {\n  var Auth = \"Your Value Here\";\n  var loginCall = \"Your Value Here\";\n  var meCall = \"Your Value Here\";\n  var storageBackend = \"Your Value Here\";\n  return (\n    <Auth\n      loginCall={loginCall}\n      meCall={meCall}\n      storageBackend={storageBackend}\n      storageNamespace='my-auth'\n      render={(authActions, authState, userState) => /* render my children */}\n    />\n  )\n}",
   "id": 222,
   "stars": 0,
   "errors": [
    17004,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var HOST;\nvar mypublicdevhost = \"Your Value Here\";\nHOST=mypublicdevhost.com",
   "id": 223,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import VuePictureCut from 'vue-picture-cut';\nvar Vue = \"Your Value Here\";\nVue.use(VuePictureCut);",
   "id": 224,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<iconly name=\"activity\" type=\"bold\" />\n<iconly name=\"activity\" type=\"bulk\" />\n<iconly name=\"activity\" type=\"light\" />\n<iconly name=\"activity\" type=\"outline\" />\n<iconly name=\"activity\" type=\"broken\" />\n<iconly name=\"activity\" type=\"tone\" />",
   "id": 225,
   "stars": 0,
   "errors": [
    17004,
    2657,
    17004,
    17004,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nfunction transferTokens(sender, to, amount) {\n  var Web3 = \"Your Value Here\";\n  const web3 = new Web3();\n  const TokenContract = web3.eth.contract(Token.abi).at(Token.address);\n  const data = TokenContract.transfer.getData(to, amount);\n  const options = { data, from: sender, to: Token.address };\n  return Transaction({ options });\n}\n\nconst tx = transferTokens(\n  '0xe8d3266f3c4f083ab8864b5e04aea7b087044e49',\n  '0x7967c4f4512195ba83ae8f08ca30f7b145be6cf8',\n  1000000\n);\n\nconst txhash = await tx.transact(provider);\r\n\r\nfunction Transaction(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 226,
   "stars": 0,
   "errors": [
    2351,
    2304,
    2304,
    2304,
    1375,
    1378,
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { createLogger } = require('@livy/logger')\n\nconst logger = createLogger('my-app-logger', {\n  mode: 'async'\n})",
   "id": 227,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nvar Yobit = require('yobit-exchange-api');\nvar VersionTwo = require('yobit-exchange-api/lib/version_two');\nvar Trade = require('yobit-exchange-api/lib/trade');\n\nvar keys = {key: '', secret: ''}\nvar yobit = new Yobit(keys)\nvar version2 = new VersionTwo(keys);\nvar trade = new Trade(keys);\n\ntrade.getInfo(function(err, data) {\n  console.log(data);\n})\n\nversion2.ticker('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nversion2.depth('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nversion2.trades('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nyobit.fee(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.ticker(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.depth(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.trades(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.info(function(err, data) {\n  console.log(data);\n})\n",
   "id": 228,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 34,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var AllDocs = \"Your Value Here\";\n<AllDocs db=\"dbname\" include_docs ... />",
   "id": 229,
   "stars": 0,
   "errors": [
    17004,
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var tag1 = \"Your Value Here\"\ngauge1:+3\n - tag1:v1\n - tag2:v2",
   "id": 230,
   "stars": 0,
   "errors": [
    2363,
    1005,
    2304,
    2304,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const AssetsQueryOptions = require('drequest-maxdome').AssetsQueryOptions;\n\nconst assetId = <assetId>;\nconst assetsQueryOptions = new AssetsQueryOptions(assetId);\n\nconst assets =\n  await maxdome.request('assets')\n    .addOptions(assetsQueryOptions)\n    .send();",
   "id": 231,
   "stars": 0,
   "errors": [
    17004,
    17008,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {\n  isMobile,\n  isSmall,\n  isTablet,\n  isDesktop\n} from \"@times-stories/style-guide/helpers\";\n\nisMobile(); // Boolean\nisSmall(); // Boolean\nisTablet(); // Boolean\nisDesktop(); // Boolean",
   "id": 232,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/**\n* @param  {String}  language        Language identifier\n* @param  {String}  modelsString    Array with speakers-voice models-(optional)defaultStyle correspondence (e.g. '[[\"speaker1\",\"model1\",\"style1\"],[\"speaker2\",\"model2\"]]')\n* @param  {String}  vttText         Subtitle text, in VTT format\n* @param  {Number[]}    selectedSentences   Array with indexes of sentences to be synthesized\n* @return {String}                  JSON-formatted string for synthesis\n*/",
   "id": 233,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var exlog = \"Your Value Here\";\nexlog.error(new Error());",
   "id": 234,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {\n  EpubView, // Underlaying epub-canvas (wrapper for epub.js iframe)\n  EpubViewStyle, // Styles for EpubView, you can pass it to the instance as a style prop for customize it\n  ReactReader, // A simple epub-reader with left/right button and chapter navigation\n  ReactReaderStyle // Styles for the epub-reader it you need to customize it\n} from \"react-reader\";",
   "id": 235,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// {app_root}/config/plugin.js\nexports.cuteLogger = {\n  enable: true,\n  package: 'egg-cute-logger',\n};",
   "id": 236,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const asyncIteratorToStream = require(\"async-iterator-to-stream\");\n\n// promisified fs\nconst fs = require(\"mz/fs\");\n\nconst createReadStream = asyncIteratorToStream(async function*(file) {\n  const fd = await fs.open(file, \"r\");\n  try {\n    let size = yield;\n    while (true) {\n      const buf = Buffer.alloc(size);\n      const [n] = await fs.read(fd, buf, 0, size, null);\n      if (n < size) {\n        yield buf.slice(0, n);\n        return;\n      }\n      size = yield buf;\n    }\n  } finally {\n    await fs.close(fd);\n  }\n});\n\ncreateReadStream(\"foo.txt\").pipe(process.stdout);",
   "id": 237,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var 좌절 = \"Your Value Here\"\n좌절\nvar 아아아아 = \"Your Value Here\"\n아아아아",
   "id": 238,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const jwksClient = require('jwks-rsa');\n\nconst client = jwksClient({\n  rateLimit: true,\n  jwksRequestsPerMinute: 10, // Default value\n  jwksUri: 'https://sandrino.auth0.com/.well-known/jwks.json'\n});\n\nconst kid = 'RkI5MjI5OUY5ODc1N0Q4QzM0OUYzNkVGMTJDOUEzQkFCOTU3NjE2Rg';\nconst key = await client.getSigningKey(kid);\nconst signingKey = key.getPublicKey();",
   "id": 239,
   "stars": 0,
   "errors": [
    1378
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CWBClient = \"Your Value Here\";\nconst cwb = new CWBClient(API_KEY)",
   "id": 240,
   "stars": 0,
   "errors": [
    2351,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  \"homepage\": \"http://mywebsite.com/relativepath\",",
   "id": 241,
   "stars": 0,
   "errors": [
    1005,
    2695,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export default async function (e, t, a) {\n    let n = document.createElement(e);\n    n.append(...(await a));\n    return Object.assign(n, t);\n}",
   "id": 242,
   "stars": 0,
   "errors": [
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var app = \"Your Value Here\";\nrequire('ranker')(null, app);",
   "id": 243,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var POST = \"Your Value Here\";\n--> POST / {\"jsonrpc\":\"2.0\",\"id\":3,\"method\":\"eth_gasPrice\",\"params\":[]}\n<-- {\"jsonrpc\":\"2.0\",\"result\":\"0x2e90edd000\",\"id\":3}",
   "id": 244,
   "stars": 0,
   "errors": [
    2365,
    1109,
    2362,
    2363,
    2356
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { name } = require(\"assert\")\r\n\r\nvar formatter = \"Your Value Here\"\nformatter --const name=\"Fred Flintstone\" Australia < test/template.txt",
   "id": 245,
   "stars": 0,
   "errors": [
    2305,
    2356,
    1005,
    1005,
    1005,
    17004,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  var nconf = require('nconf');\n\n  //\n  // Requiring `nconf-redis` will extend the `nconf`\n  // module.\n  //\n  require('nconf-redis');\n\n  nconf.use('redis', { host: 'localhost', port: 6379, ttl: 60 * 60 * 1000 });",
   "id": 246,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Type definitions for Node.js 10.12\n// Project: http://nodejs.org/\n// Definitions by: Microsoft TypeScript <https://github.com/Microsoft>\n//                 Definitely Typed <https://github.com/DefinitelyTyped>\n//                 Alberto Schiabel <https://github.com/jkomyno>",
   "id": 247,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import formCreate from 'form-create'\nimport { maker } from 'form-create'\nvar Vue = \"Your Value Here\"\nVue.use(formCreate)",
   "id": 248,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// scss\nimport 'node_modules/@auraxy/react-select/lib/css/index.scss'\n\n// css\nimport 'node_modules/@auraxy/react-select/lib/css/index.css'",
   "id": 249,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import HttpModule from 'react-native-http-module';\n\nvar baseURL = \"Your Value Here\";\n\nvar headers = \"Your Value Here\";\n\nconst httpModule = new HttpModule(baseURL, headers);",
   "id": 250,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import tinyDelay from \"tiny-delay\"\n\ntinyDelay()",
   "id": 251,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var autossh = \"Your Value Here\";\nautossh({\n  host: '111.22.333.444',\n  username: 'root',\n  localPort: 'auto',\n  remotePort: 5432,\n  sshPort: 9999\n});",
   "id": 252,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  \"acm:DescribeCertificate\", // only for custom domains\n  \"acm:ListCertificates\",    // only for custom domains\n  \"acm:RequestCertificate\",  // only for custom domains\n  \"cloudfront:CreateCloudFrontOriginAccessIdentity\",\n  \"cloudfront:CreateDistribution\",\n  \"cloudfront:CreateInvalidation\",\n  \"cloudfront:GetDistribution\",\n  \"cloudfront:GetDistributionConfig\",\n  \"cloudfront:ListCloudFrontOriginAccessIdentities\",\n  \"cloudfront:ListDistributions\",\n  \"cloudfront:ListDistributionsByLambdaFunction\",\n  \"cloudfront:ListDistributionsByWebACLId\",\n  \"cloudfront:ListFieldLevelEncryptionConfigs\",\n  \"cloudfront:ListFieldLevelEncryptionProfiles\",\n  \"cloudfront:ListInvalidations\",\n  \"cloudfront:ListPublicKeys\",\n  \"cloudfront:ListStreamingDistributions\",\n  \"cloudfront:UpdateDistribution\",\n  \"iam:AttachRolePolicy\",\n  \"iam:CreateRole\",\n  \"iam:CreateServiceLinkedRole\",\n  \"iam:GetRole\",\n  \"iam:PutRolePolicy\",\n  \"iam:PassRole\",\n  \"lambda:CreateFunction\",\n  \"lambda:EnableReplication\",\n  \"lambda:DeleteFunction\",            // only for custom domains\n  \"lambda:GetFunction\",\n  \"lambda:GetFunctionConfiguration\",\n  \"lambda:PublishVersion\",\n  \"lambda:UpdateFunctionCode\",\n  \"lambda:UpdateFunctionConfiguration\",\n  \"route53:ChangeResourceRecordSets\", // only for custom domains\n  \"route53:ListHostedZonesByName\",\n  \"route53:ListResourceRecordSets\",   // only for custom domains\n  \"s3:CreateBucket\",\n  \"s3:GetAccelerateConfiguration\",\n  \"s3:GetObject\",                     // only if persisting state to S3 for CI/CD\n  \"s3:ListBucket\",\n  \"s3:PutAccelerateConfiguration\",\n  \"s3:PutBucketPolicy\",\n  \"s3:PutObject\"",
   "id": 253,
   "stars": 0,
   "errors": [
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695
   ],
   "hasCode": true,
   "nondeletedLines": 42,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var auth = \"Your Value Here\";\nconst appAuth = auth(\n    {\n        // Simple case where roles is a text field in User containing roles separated by commas\n        rolesGetter: async (context, userId) => {\n            const user = context.app.service(\"users\").get(userId);\n            return user.roles.split(\",\") || [];\n        },\n    },\n    \"jwt\"\n);\n\napp.service(\"service\").hooks({\n    before: {\n        all: appAuth,\n    },\n});",
   "id": 254,
   "stars": 0,
   "errors": [
    2349,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport logo from './logo.png'; // Tell Webpack this JS file uses this image\n\nconsole.log(logo); // /logo.84287d09.png\n\nfunction Header() {\n  // Import result is the URL of your image\n  return <img src={logo} alt=\"Logo\" />;\n}\n\nexport default Header;",
   "id": 255,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var llpaycahpayInstance = \"Your Value Here\";\n//data为代付同步返回的结果\nif(llpaycahpayInstance.submitSuccess(data)){\n    //todo,更新提现订单....\n}",
   "id": 256,
   "stars": 0,
   "errors": [
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var obj = { 'a': { 'b': { 'c': 'd' } } };\n\nvar dget = \"Your Value Here\";\n\nvar val = dget( obj );\n// returns 'd'",
   "id": 257,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "    var phonebook = \"Your Value Here\"\n var listall = \"Your Value Here\"\n    phonebook listall\n",
   "id": 258,
   "stars": 0,
   "errors": [
    1434
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var container = \"Your Value Here\";\n.container {\n    width: 100%;\n    height: 100%;\n  }",
   "id": 259,
   "stars": 0,
   "errors": [
    1128,
    1435,
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = function(eor){\n  return eor.define(\"Application\").extend(function(){\n    this.title = \"Express Override\";\n  })\n  .methods({\n    index : function(req, res) {\n      var sampleModel = eor.getModule(\"Sample\", \"Model\");\n      if(sampleModel.index()){\n        res.render('index', { title: this.title })\n      }else{\n        res.render('index', { title: this.title, error_message : \"ErrorCode => -1111\"});\n      }\n    },\n\n    hello : function(req, res) {\n      res.render('index', { title: eor.shared.name })\n    }\n  })\n};",
   "id": 260,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport { shallow } from 'enzyme';\nimport App from './App';\n\nit('renders without crashing', () => {\n  shallow(<App />);\n});",
   "id": 261,
   "stars": 0,
   "errors": [
    2593,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var bit = \"Your Value Here\";\nbit.get(\"mempool\").then((mepool) => {\n  //  mempool := {\n  //    tx: <array of mempool transactions>\n  //  }\n})",
   "id": 262,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var clock = \"Your Value Here\";\nclock.syncTime();",
   "id": 263,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\";\ngrunt.initConfig({\n  tishadow: {\n    test: {\n      command: 'spec',\n      options: {\n        junit: true\n      }\n    },\n    run: {\n      command: 'run',\n      options: {\n        junit: true,\n        patch: true,\n        preclear: true\n      }\n    }\n  }\n});",
   "id": 264,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var loginForm = \"Your Value Here\";\n.loginForm\n.username\n.usernameLabel\n.password\n.passwordLabel\n.remember\n.rememberLabel\n.button\n.forgotLink",
   "id": 265,
   "stars": 0,
   "errors": [
    1128,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var successCount\nvar librato = \"Your Value Here\"\nsuccessCount = librato.metric('foo.success.count')\nconst errorCount   = librato.metric('foo.error.count')\n\nSomePromise().then(doSomething)\n             .then(doSomethingElse)\n             .then(successCount)    // Increment on success\n             .catch(errorCount)     // Increment error on failure\r\n\r\nfunction SomePromise() {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 266,
   "stars": 0,
   "errors": [
    2339,
    2339,
    2339,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import LockTableView from 'react-native-locktable';",
   "id": 267,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gh = \"Your Value Here\"\n var is = \"Your Value Here\"\nvar comment = \"Your Value Here\"\ngh is 1 --comment 'Node GH rocks!'",
   "id": 268,
   "stars": 0,
   "errors": [
    1434,
    1228,
    2357,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const input = document.querySelector('input');\nconst button = document.querySelector('.js-add-signature');\nbutton.addEventListener(event => {\n    var textFieldEdit = \"Your Value Here\";\n    textFieldEdit.insert(input, 'Made by 🐝 with pollen.');\n});",
   "id": 269,
   "stars": 0,
   "errors": [
    2584,
    2584,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var vue = \"Your Value Here\"\nvar ts = \"Your Value Here\"\nvar prettier = \"Your Value Here\"\nvue + ts + prettier\n\n  extends: [\n    'plugin:@etherfe/vue-typescript'\n    'plugin:@etherfe/vue-prettier'\n  ]",
   "id": 270,
   "stars": 0,
   "errors": [
    1128,
    1128,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import SensorManager from \"rnative-sensor-manager\";\nSensorManager.startPressure(100);\nvar DeviceEventEmitter = \"Your Value Here\";\nDeviceEventEmitter.addListener(\"pressure\", (data) => {\n  /**\n   * data.pressure\n   **/\n});\nSensorManager.stopPressure();",
   "id": 271,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const inspector = require('event-loop-inspector')();\nconst dump = inspector.dump();\n\nconsole.log(dump);",
   "id": 272,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var dao = \"Your Value Here\";\n// the value stored in column `key` of table `test` is encrypted in database\nconst testDao = dao.create(pool).table('test').encrypt(['key']);\n\nawait pool.transaction(async (query): Promise<boolean> => {\n  await dao.create(pool).delete().from('unittest_dao').exec(query);\n  await testDao.insert({\n    key: 'key1',\n    count: 1,\n    value: 'value1'\n  }).exec(query);\n  await testDao.update().set({\n    key: 'key1',\n    count: 1,\n    value: 'value2'\n  }).exec(query);\n  return true;\n})\r\n\r\nexport { };\r\n",
   "id": 273,
   "stars": 0,
   "errors": [
    2339,
    2304,
    1378,
    2304,
    8010,
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  var bordinoAuthenticate = \"Your Value Here\";\n  bordinoAuthenticate.validateToken('mytoken')\n                     .then((isValide)=>{\n                       //do your job\n                     })\n                     .catch((e)=>(\n                       //handle error\n                     ))",
   "id": 274,
   "stars": 0,
   "errors": [
    2339,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { Plugin } from 'munar-core'\nexport default class MyPlugin extends Plugin {\n  // etc\n}",
   "id": 275,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import ActionSheet from 'react-native-actionsheet'\n\nvar React = \"Your Value Here\"\n\nclass Demo extends React.Component {\n  showActionSheet = () => {\n    this.ActionSheet.show()\n  }\n  render() {\n    return (\n      <View>\n        <Text onPress={this.showActionSheet}>Open ActionSheet</Text>\n        <ActionSheet\n          ref={o => this.ActionSheet = o}\n          title={'Which one do you like ?'}\n          options={['Apple', 'Banana', 'cancel']}\n          cancelButtonIndex={2}\n          destructiveButtonIndex={1}\n          onPress={(index) => { /* do something */ }}\n        />\n      </View>\n    )\n  }\n}",
   "id": 276,
   "stars": 0,
   "errors": [
    2339,
    17004,
    2304,
    17004,
    2304,
    2304,
    17004,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 22,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Field = \"Your Value Here\"\nField.add('ID', Field.INTEGER({\n  primaryKey    : true,\n  autoIncrement : true,\n  allowNull     : false,\n  validate      : { min: 1 }\n}))\nField.add('PK_INTEGER', Field.INTEGER({\n  primaryKey : true,\n  allowNull  : false,\n  validate   : { min: 1 }\n}))\nField.add('PK_UUID', Field.UUID({\n  primaryKey : true,\n  allowNull  : false\n}))",
   "id": 277,
   "stars": 0,
   "errors": [
    2339,
    2339,
    2339,
    2339,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { diveDeco } from 'diving-decompression'\n...\nconst dive = { depth: 100, bottomTime: 135 };\nconst decoObject = diveDeco(dive);\nconsole.log(decoObject)",
   "id": 278,
   "stars": 0,
   "errors": [
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var model = {\n  web: 'http://www.google.com',\n  images: 'http://images.google.com/'\n};",
   "id": 279,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var source = \"Your Value Here\";\nconsole.log(source.expand());",
   "id": 280,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const eip = require('eip');\nconst redis = require('redis');\nconst { PubSub, Queue } = require('eip-redis');\nconst { Timer } = require('eip-timer');\n\nconst redisPub = redis.createClient();\nconst redisSub =  redis.createClient({return_buffers:true});\n\nconst pubSub = new PubSub(1, 1000, redisPub, redisSub, 'namespace') // eventsPerPeriod, periodInMS\nconst queue = new Queue(redisPub, 'namespace');\nconst resource = x => x;\n\nvar timer = \"Your Value Here\";\n\nconst throttler = new eip.Route().throttleResource({ pubSub, queue, resource, timer });",
   "id": 281,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "void 0",
   "id": 282,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var useAxios = \"Your Value Here\";\nconst { loading, error, data, refetch } = useAxios({\n    url: \"api-url\",\n});\nreturn (\n    <div className=\"App\">\n        <h1>{loading && \"Loading\"}</h1>\n        <h1>{error && \"Error!\"}</h1>\n        <button onClick={refetch}>Refetch</button>\n        <div>{data && JSON.stringify(data)}</div>\n    </div>\n);",
   "id": 283,
   "stars": 0,
   "errors": [
    2349,
    1108
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var client = \"Your Value Here\"\nawait client.balances()\nawait client.balance('BTC')\nawait client.depositAddress('BTC')\nawait client.withdraw('BTC', { quantity: 1.2, address: 'abcde' })\nawait client.order('30594e6e-ba54-4914-96f3-5b9d5de2468e')\nawait client.orderHistory('BTC-ETH')\nawait client.withdrawalHistory('BTC')\nawait client.depositHistory('BTC')\r\n\r\nexport { }\r\n",
   "id": 284,
   "stars": 0,
   "errors": [
    1378,
    2339,
    1378,
    2339,
    1378,
    2339,
    1378,
    2339,
    1378,
    2339,
    1378,
    2339,
    1378,
    2339,
    1378,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CoreApiV10 = require('core_api_v10');\n\nvar api = new CoreApiV10.AuthApi()\n\nvar authorization = \"authorization_example\"; // {String} JWT access token\n\nvar opts = { \n  'model': new CoreApiV10.TwoFactorAuthenticatorConfirm() // {TwoFactorAuthenticatorConfirm} \n};\napi.v10Auth2faConfirmPost(authorization, opts).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n\n",
   "id": 285,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var recursive = \"Your Value Here\";\n// using promise API\nrecursive(\"/app\", {\n  ignores: [\"README.md\"],\n  fs, // in-memory fs\n  debug: true,\n  log: (...msg) => console.log(\"readdir\", ...msg)\n}).then(successFn, errFn);",
   "id": 286,
   "stars": 0,
   "errors": [
    2349,
    18004,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var name = \"Your Value Here\";\nvar hydrated = \"Your Value Here\";\n<template>\n  <div id=\"app\" v-if=\"hydrated\">\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data: () => ({ hydrated: false }),\n  async mounted() {\n    await this.$apollo.provider.defaultClient.hydrated()\n    this.hydrated = true\n  },\n}\n</script>",
   "id": 287,
   "stars": 0,
   "errors": [
    17004,
    2657,
    17004,
    17004,
    17004,
    1005,
    1382,
    1005,
    1381,
    1005,
    1381,
    1381
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var konstructor = \"Your Value Here\"\nkonstructor-cli new my-app",
   "id": 288,
   "stars": 0,
   "errors": [
    2362,
    2304,
    1005,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const repl = require('re-pl');\nconst run = require('setlist');\n\nvar let = \"Your Value Here\";\n\nrun(function* () {\n  // Initialize variables and do some work here\n  ...\n  let value = yield someWorkHere();\n\n  // Pause execution to inspect ongoing process\n  const value = yield repl(($)=>eval($))(value);\n\n  // The edited/unedited return value can be used later\n  return lastWorkHere(value);\n});",
   "id": 289,
   "stars": 0,
   "errors": [
    1128,
    2802,
    1005,
    2448,
    2588,
    1005,
    1128,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var walk = \"Your Value Here\"\nwalk(function(r, n){ return r+n }, 0, ...[1,2,3]) // -> 6",
   "id": 290,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var WrapperBuilder = require('thunkify-object').WrapperBuilder;\n\nvar Wrapper = new WrapperBuilder()\n .addEvent(['on', 'once'])\n .addPassThrough('emit')\n .getWrapper();",
   "id": 291,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var table = \"Your Value Here\";\ntable.page(1);",
   "id": 292,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { info } = require(\"console\")\r\n\r\nvar user = \"Your Value Here\"\nvar rolli = \"Your Value Here\"\nuser> @hubot 5rolli\nvar Hubot = \"Your Value Here\"\nHubot>\n var project = \"Your Value Here\"\n## test-project\n- 残り: 29.5 days (38.4 days/people, to: 2016/03/06)\n- 消化: 31.2 days (40.6 days/people, es: 247%)\n\nuser> @hubot 5rolli info test-project\nhubot>\n## test-project\n\n### タスク残り時間 (5時間/日, 1.3人換算)\n- 予想: 29.5 days (38.4 days/people, to: 2016/03/06)\n- 最速: 21 days (27.4 days/people, to: 2016/02/28)\n- 最悪: 65.4 days (85.1 days/people, to: 2016/05/01)\n\n### 完了タスク消化時間\n- 31.2 days (40.6 days/people)\n\n### タスク消化率\n- 予想: 31.4%\n- 最速: 32.7%\n- 最悪: 25.9%\n\n### 完了タスク消化ペース\n- 予想: 247%\n- 最速: 303%\n- 最悪: 136%\n\n### 初回終了予想日 (開始日: 2015/11/27)\n- 予想: 2016/01/31 (diff: 35 days)\n- 最速: 2016/01/17 (diff: 42 days)\n- 最悪: 2016/04/03 (diff: 28 days)\r\n\r\nfunction days(arg0, arg1, to, arg3) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 293,
   "stars": 0,
   "errors": [
    1109,
    1146,
    1005,
    1351,
    1109,
    1127,
    1127,
    1005,
    2593,
    2363,
    2304,
    1005,
    1005,
    2362,
    1005,
    2362,
    2304,
    2304,
    1005,
    2304,
    1005,
    1005,
    1005,
    2362,
    2304,
    2304,
    1005,
    1109,
    1109,
    1146,
    1005,
    1351,
    1434,
    2593,
    2363,
    2552,
    1127,
    1127,
    1005,
    2593,
    2363,
    1127,
    1127,
    1127,
    1005,
    2304,
    1351,
    2304,
    2304,
    1351,
    2304,
    2304,
    1005,
    1005,
    2362,
    1005,
    2362,
    2304,
    2304,
    1005,
    2304,
    1005,
    1005,
    2362,
    1005,
    2362,
    2304,
    2304,
    1005,
    2304,
    1005,
    1005,
    1005,
    2362,
    2304,
    2304,
    1005,
    1127,
    1127,
    1127,
    1005,
    2304,
    1005,
    1005,
    2362,
    2304,
    1127,
    1127,
    1127,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    1127,
    1127,
    1127,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    1127,
    1127,
    1127,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2349,
    2304,
    1005,
    1005,
    2304,
    1005,
    2349,
    2304,
    1005,
    1005,
    2304,
    1005,
    2349,
    2304,
    1005,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 34,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'suneditor/dist/css/suneditor.min.css'\nimport suneditor from 'suneditor'\n// Import codeMirror\nimport CodeMirror from 'codemirror'\nimport 'codemirror/mode/htmlmixed/htmlmixed'\nimport 'codemirror/lib/codemirror.css'\n\nsuneditor.create('sample', {\n    codeMirror: CodeMirror // window.CodeMirror,\n    // Set options\n    // codeMirror: {\n    //     src: CodeMirror,\n    //     options: {...}\n    // }\n    buttonList: [\n        ['codeView']\n    ],\n    height: 400\n});",
   "id": 294,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/*\nexample.js\n\nthis node script will serve a lightweight swagger-ui crud-api backed by mongodb\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n          $ npm install swagger-mongodb && npm_config_server_port=1337 node example.js\n    3. open a browser to http://localhost:1337\n    4. interact with the swagger-ui crud-api\n*/\n\n/*jslint\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n\n(function (local) {\n    'use strict';\n    switch (local.modeJs) {\n\n\n\n    // run node js-env code\n    case 'node':\n        // export local\n        module.exports = local;\n        // init assets\n        local.utility2.cacheDict.assets['/'] = '<!DOCTYPE html>\\n' +\n/* jslint-ignore-begin */\n'<html>\\n' +\n'<head>\\n' +\n'    <meta charset=\"UTF-8\">\\n' +\n'    <title>\\n' +\n'    {{envDict.npm_package_name}} [{{envDict.npm_package_version}}]\\n' +\n'    </title>\\n' +\n'    <link rel=\"stylesheet\" href=\"/assets/utility2.css\">\\n' +\n'    <style>\\n' +\n'    * {\\n' +\n'        box-sizing: border-box;\\n' +\n'    }\\n' +\n'    body {\\n' +\n'        background-color: #fff;\\n' +\n'        font-family: Helvetical Neue, Helvetica, Arial, sans-serif;\\n' +\n'    }\\n' +\n'    body > div {\\n' +\n'        margin: 20px 0 20px 0;\\n' +\n'    }\\n' +\n'    .testReportDiv {\\n' +\n'        display: none;\\n' +\n'    }\\n' +\n'    </style>\\n' +\n'    {{envDict.npm_config_html_head_extra}}\\n' +\n'</head>\\n' +\n'<body>\\n' +\n'    <div class=\"ajaxProgressDiv\" style=\"display: none;\">\\n' +\n'    <div class=\"ajaxProgressBarDiv ajaxProgressBarDivLoading\">loading</div>\\n' +\n'    </div>\\n' +\n'    <h1>{{envDict.npm_package_name}} [{{envDict.npm_package_version}}]</h1>\\n' +\n'    <h3>{{envDict.npm_package_description}}</h3>\\n' +\n'    <div class=\"testReportDiv\"></div>\\n' +\n'    <div id=\"swagger-ui-container\" style=\"display: none;\"></div>\\n' +\n'    <iframe height=\"512\" src=\"/assets/swagger-ui.html\" width=\"100%\"></iframe>\\n' +\n'    <script src=\"/assets/utility2.js\"></script>\\n' +\n'    <script src=\"/assets/swagger-ui.rollup.js\"></script>\\n' +\n'    <script src=\"/assets/swagger-mongodb.js\"></script>\\n' +\n'    <script src=\"/assets/example.js\"></script>\\n' +\n'    <script src=\"/test/test.js\"></script>\\n' +\n'    <script>\\n' +\n'    window.utility2 = window.utility2 || {};\\n' +\n'    window.utility2.envDict = {\\n' +\n'        npm_package_description: \"{{envDict.npm_package_description}}\",\\n' +\n'        npm_package_name: \"{{envDict.npm_package_name}}\",\\n' +\n'        npm_package_version: \"{{envDict.npm_package_version}}\"\\n' +\n'    };\\n' +\n'    document.querySelector(\"iframe\").onload = function () {\\n' +\n'        var self;\\n' +\n'        self = this;\\n' +\n'        self.height = innerHeight - self.offsetTop - 20;\\n' +\n'        self.contentWindow.location.hash = location.hash;\\n' +\n'        self.contentWindow.onclick = function () {\\n' +\n'            setTimeout(function () {\\n' +\n'                location.hash = self.contentWindow.location.hash;\\n' +\n'            });\\n' +\n'        };\\n' +\n'    };\\n' +\n'    </script>\\n' +\n'    {{envDict.npm_config_html_body_extra}}\\n' +\n'</body>\\n' +\n/* jslint-ignore-end */\n            '</html>\\n';\n        local.utility2.cacheDict.assets['/'] = local.utility2.stringFormat(\n            local.utility2.cacheDict.assets['/'],\n            { envDict: local.utility2.envDict },\n            ''\n        );\n        local.utility2.cacheDict.assets['/assets/example.js'] =\n            local.utility2.istanbul_lite.instrumentSync(\n                local.fs.readFileSync(__dirname + '/example.js', 'utf8'),\n                __dirname + '/example.js'\n            );\n        local.utility2.cacheDict.assets['/test/test.js'] =\n            local.utility2.istanbul_lite.instrumentInPackage(\n                local.fs.readFileSync(local.swmg.__dirname + '/test.js', 'utf8'),\n                local.swmg.__dirname + '/test.js',\n                'swagger-mongodb'\n            );\n        // init mongodb-client\n        local.utility2.onReady.counter += 1;\n        local.utility2.taskRunOrSubscribe({\n            key: 'swagger-mongodb.mongodbConnect',\n            onTask: function (onError) {\n                local.mongodb.MongoClient.connect(\n                    local.utility2.envDict.npm_config_mongodb_url ||\n                        'mongodb://localhost:27017/test',\n                    function (error, db) {\n                            // validate no error occurred\n                            local.utility2.assert(!error, error);\n                            local.swmg.db = db;\n                            onError();\n                            local.utility2.onReady();\n                        }\n                );\n            }\n        });\n        // init middleware\n        local.middleware = local.utility2.middlewareGroupCreate([\n            // init pre-middleware\n            local.utility2.middlewareInit,\n            // init cached-assets middleware\n            local.utility2.middlewareAssetsCached,\n            // init http-body-get middleware\n            local.utility2.middlewareBodyGet,\n            // init http-body-parse-upload middleware\n            function (request, response, nextMiddleware) {\n                var boundary, bodyText;\n                // jslint-hack\n                local.utility2.nop(response);\n                local.utility2.testTryCatch(function () {\n                    if ((request.headers['content-type'] || '')\n                            .indexOf('multipart/form-data') !== 0) {\n                        nextMiddleware();\n                        return;\n                    }\n                    boundary =\n                        '--' + (/boundary=(.*)/).exec(request.headers['content-type'])[1];\n                    request.swmgBodyParsed = {};\n                    bodyText = String(request.bodyRaw);\n                    bodyText.split(boundary).slice(1, -1).forEach(function (part) {\n                        request.swmgBodyParsed[\n                            (/\\bname=\"([^\"]*)/).exec(part)[1]\n                        ] = part.split('\\r\\n\\r\\n').slice(1).join('\\r\\n\\r\\n').slice(0, -2);\n                    });\n                    // set file\n                    bodyText.replace('\\r\\n\\r\\n', function (match0, ii) {\n                        // jslint-hack\n                        local.utility2.nop(match0);\n                        request.swmgBodyParsed.file = request.bodyRaw\n                            .slice(ii + 4, -(boundary.length + 6))\n                            .toString('base64');\n                    });\n                    request.swmgBodyParsed.file = request.bodyRaw\n                        .slice(bodyText.lastIndexOf('\\r\\n\\r\\n') + 4, -(boundary.length + 6))\n                        .toString('base64');\n                    // set filename\n                    request.swmgBodyParsed.filename = (/\\bfilename=\"([^\"]+)/).exec(bodyText);\n                    request.swmgBodyParsed.filename =\n                        request.swmgBodyParsed.filename &&\n                        request.swmgBodyParsed.filename[1];\n                    nextMiddleware();\n                }, nextMiddleware);\n            },\n            // init http-body-parse middleware\n            local.swmg.middlewareBodyParse,\n            // init swagger pre-middleware\n            function (request, response, nextMiddleware) {\n                // jslint-hack\n                local.utility2.nop(request);\n                // enable cors\n                // http://en.wikipedia.org/wiki/Cross-origin_resource_sharing\n                response.setHeader(\n                    'Access-Control-Allow-Methods',\n                    'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'\n                );\n                response.setHeader('Access-Control-Allow-Origin', '*');\n                // init content-type\n                response.setHeader('Content-Type', 'application/json; charset=UTF-8');\n                nextMiddleware();\n            },\n            // init swagger middleware\n            local.swmg.middlewareSwagger\n        ]);\n        // init error-middleware\n        local.middlewareError = local.swmg.middlewareError;\n        // init petstore-api\n        (function () {\n            var methodPath, options, schema;\n            options = local.utility2.jsonCopy(require(local.swmg.local\n                .swagger_ui_lite.__dirname + '/swagger.json'));\n            options = {\n                definitions: options.definitions,\n                paths: options.paths,\n                tags: options.tags\n            };\n            // remove unused properties\n            delete options.definitions.ApiResponse;\n            // init schema\n            Object.keys(options.definitions).forEach(function (schemaName) {\n                schema = options.definitions[schemaName];\n                // init id\n                schema.properties.id = { type: 'string' };\n                schema['x-inheritList'] = [{ $ref: '#/definitions/JsonapiResource' }];\n            });\n            local.utility2.objectSetOverride(options, {\n                definitions: {\n                    // init Pet schema\n                    Pet: {\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            id: 'pet0',\n                            name: 'birdie',\n                            photoUrls: [],\n                            status: 'available',\n                            tags: [{ name: 'bird'}]\n                        }, {\n                            id: 'pet1',\n                            name: 'kittie',\n                            status: 'pending',\n                            photoUrls: [],\n                            tags: [{ name: 'cat'}]\n                        }, {\n                            id: 'pet2',\n                            name: 'doggie',\n                            photoUrls: [],\n                            status: 'sold',\n                            tags: [{ name: 'dog'}]\n                        }],\n                        _collectionName: 'SwmgPet'\n                    },\n                    // init Order schema\n                    Order: {\n                        // create index\n                        _collectionCreateIndexList: [{\n                            key: { status: 1 },\n                            name: 'status_1'\n                        }],\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            id: 'order0',\n                            status: 'available'\n                        }, {\n                            id: 'order1',\n                            status: 'pending'\n                        }, {\n                            id: 'order2',\n                            status: 'sold'\n                        }],\n                        _collectionName: 'SwmgOrder',\n                        properties: {\n                            petId: { type: 'string' }\n                        }\n                    },\n                    // init User schema\n                    User: {\n                        // create index\n                        _collectionCreateIndexList: [{\n                            key: { username: 1 },\n                            name: 'username_1',\n                            unique: true\n                        }],\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            email: 'john@doe.com',\n                            firstName: 'john',\n                            id: 'user0',\n                            lastName: 'doe',\n                            password: 'hello',\n                            phone: '1234-5678',\n                            username: 'john.doe'\n                        }, {\n                            email: 'jane@doe.com',\n                            firstName: 'jane',\n                            id: 'user1',\n                            lastName: 'doe',\n                            password: 'bye',\n                            phone: '8765-4321',\n                            username: 'jane.doe'\n                        }],\n                        _collectionName: 'SwmgUser'\n                    }\n                },\n                // init crud-api\n                paths: {\n                    '/pet/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgPet',\n                        _crudApi: 'pet',\n                        _schemaName: 'Pet',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['pet']\n                    } },\n                    '/store/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgOrder',\n                        _crudApi: 'store',\n                        _schemaName: 'Order',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['store']\n                    } },\n                    '/user/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgUser',\n                        _crudApi: 'user',\n                        _schemaName: 'User',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['user']\n                    } }\n                }\n            }, 4);\n            // transform petstore-api to swagger-mongodb's crud-api\n            Object.keys(options.paths).forEach(function (path) {\n                Object.keys(options.paths[path]).forEach(function (method) {\n                    methodPath = options.paths[path][method];\n                    // init methodPath._schemaName\n                    switch (path.split('/')[1]) {\n                    case 'pet':\n                        methodPath._schemaName = 'Pet';\n                        break;\n                    case 'store':\n                        methodPath._schemaName = 'Order';\n                        break;\n                    case 'user':\n                        methodPath._schemaName = 'User';\n                        break;\n                    }\n                    methodPath._collectionName = 'Swmg' + methodPath._schemaName;\n                    delete methodPath.produces;\n                    delete methodPath.responses;\n                    delete methodPath.security;\n                    // init jsonapi response\n                    local.utility2.objectSetDefault(methodPath, { responses: {\n                        200: {\n                            description: '200 ok - http://jsonapi.org/format' +\n                                '/#document-structure-top-level',\n                            schema: { $ref: '#/definitions/JsonapiResponse{{_schemaName}}' }\n                        }\n                    } }, 2);\n                    // init crudCreateMany / crudCreateOne / crudDeleteByIdOne / crudGetByIdOne\n                    switch (methodPath.operationId) {\n                    case 'addPet':\n                    case 'createUser':\n                    case 'placeOrder':\n                        methodPath.operationId = 'crudCreateOne';\n                        break;\n                    case 'createUsersWithArrayInput':\n                    case 'createUsersWithListInput':\n                        methodPath.operationId = 'crudCreateMany';\n                        break;\n                    case 'deleteOrder':\n                    case 'deletePet':\n                    case 'deleteUser':\n                        methodPath.operationId = 'crudDeleteByIdOne';\n                        break;\n                    case 'getOrderById':\n                    case 'getPetById':\n                    case 'getUserByName':\n                        methodPath.operationId = 'crudGetByIdOne';\n                        break;\n                    }\n                    // init id\n                    (methodPath.parameters || []).forEach(function (paramDef) {\n                        switch (paramDef.name) {\n                        case 'orderId':\n                        case 'petId':\n                            delete paramDef.format;\n                            paramDef.type = 'string';\n                            break;\n                        }\n                    });\n                });\n            });\n            local.swmg.apiUpdate(options);\n        }());\n        // init petstore-middleware\n        local.middleware.middlewareList.push(function (request, response, nextMiddleware) {\n            var modeNext, onNext, options;\n            modeNext = 0;\n            onNext = function (error, data) {\n                local.utility2.testTryCatch(function () {\n                    modeNext = error\n                        ? Infinity\n                        : modeNext + 1;\n                    switch (modeNext) {\n                    case 1:\n                        // init id\n                        ((request.swmgMethodPath && request.swmgMethodPath.parameters) || [\n                        ]).forEach(function (paramDef) {\n                            switch (paramDef.name) {\n                            case 'orderId':\n                            case 'petId':\n                                request.swmgParamDict.id = request.swmgParamDict[paramDef.name];\n                                break;\n                            }\n                        });\n                        // init options\n                        if (request.swmgMethodPath) {\n                            options = {\n                                collectionName: request.swmgMethodPath._collectionName,\n                                data: request.swmgParamDict,\n                                operationId: request.swmgMethodPath.operationId,\n                                paramDefList: request.swmgMethodPath.parameters,\n                                schemaName: request.swmgMethodPath._schemaName\n                            };\n                        }\n                        switch (request.swmgPathname) {\n                        // handle pet request\n                        case 'DELETE /pet/':\n                        case 'GET /pet/':\n                        case 'POST /pet':\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /pet/findByStatus':\n                            options.operationId = 'crudGetByQueryMany';\n                            options.data.fields = '{}';\n                            options.data.hint = '{}';\n                            options.data.limit = 100;\n                            options.data.query = '{\"status\":{\"$in\":' +\n                                JSON.stringify(options.data.status) + '}}';\n                            options.data.skip = 0;\n                            options.data.sort = '{\"_timeModified\":-1}';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /pet/findByTags':\n                            options.operationId = 'crudGetByQueryMany';\n                            options.data.fields = '{}';\n                            options.data.hint = '{}';\n                            options.data.limit = 100;\n                            options.data.query = '{\"status\":{\"$in\":' +\n                                JSON.stringify(options.data.tags) + '}}';\n                            options.data.skip = 0;\n                            options.data.sort = '{\"_timeModified\":-1}';\n                            options.paramDefList[0].default = 'bird,cat,dog';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /pet/':\n                            options.data.upsert = true;\n                            options.data.body = {\n                                id: options.data.id,\n                                name: options.data.name,\n                                status: options.data.status\n                            };\n                            options.operationId = 'crudUpdateOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /pet//':\n                            options.data.body = {\n                                additionalMetadata: options.data.additionalMetadata,\n                                file: options.data.file,\n                                filename:\n                                    request.swmgBodyParsed && request.swmgBodyParsed.filename,\n                                id: options.id\n                            };\n                            options.data.upsert = true;\n                            options.operationId = 'crudUpdateOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'PUT /pet':\n                            options.data.upsert = true;\n                            options.operationId = 'crudReplaceOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        // handle store request\n                        case 'DELETE /store/order/':\n                        case 'GET /store/order/':\n                        case 'POST /store/order':\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /store/inventory':\n                            options.data = { body: [{\n                                $group: { _id: '$status', total: { $sum: 1} }\n                            }, {\n                                $project: { _id: 0, status: '$_id', total: '$total' }\n                            }]};\n                            options.operationId = 'crudAggregateMany';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        // handle user request\n                        case 'DELETE /user/':\n                        case 'GET /user/':\n                        case 'POST /user/createWithArray':\n                        case 'POST /user/createWithList':\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /user':\n                            options.data.username = options.data.body.username;\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'PUT /user/':\n                            options.data.body.username = options.data.username;\n                            options.data.upsert = true;\n                            options.operationId = 'crudReplaceOne';\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        default:\n                            nextMiddleware();\n                        }\n                        break;\n                    default:\n                        // validate no error occurred\n                        local.utility2.assert(!error, error);\n                        // respond with json-object\n                        response.end(JSON.stringify(data));\n                    }\n                }, nextMiddleware);\n            };\n            onNext();\n        });\n        // run server-test\n        local.utility2.testRunServer(local);\n        break;\n    }\n}((function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code\n    (function () {\n        // init local\n        local = {};\n        // init js-env\n        local.modeJs = (function () {\n            try {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            } catch (errorCaughtNode) {\n                var navigator = \"Your Value Here\";\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    'browser';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // export local\n        local.global.local = local;\n        // init swagger-mongodb\n        local.swmg = local.modeJs === 'browser'\n            ? window.swmg\n            : require('swagger-mongodb');\n        // import swmg.local\n        Object.keys(local.swmg.local).forEach(function (key) {\n            local[key] = local[key] || local.swmg.local[key];\n        });\n        // init utility2\n        local.utility2 = local.swmg.local.utility2;\n        // init onReady\n        local.utility2.onReadyInit();\n    }());\n    return local;\n}())));",
   "id": 295,
   "stars": 0,
   "errors": [
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2769,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2339,
    2584,
    2339,
    2339,
    2304,
    2339,
    2339,
    2339,
    2304,
    2339,
    2339,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 507,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var client = \"Your Value Here\";\nclient.indexes.list({ $select: ['name', 'fields'] });",
   "id": 296,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = require('export-files')(__dirname, '**/*.json');",
   "id": 297,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Store = \"Your Value Here\";\nexport default new Store(hydrate({\n  modules: {\n    flights: {\n      state: {\n        selected: null,\n        in_flight: []\n      }\n    }\n  }\n}))\r\n\r\nfunction hydrate(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 298,
   "stars": 0,
   "errors": [
    2351
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Ajv from 'ajv';\nimport betterAjvErrors from 'better-ajv-errors';\n// const Ajv = require('ajv');\n// const betterAjvErrors = require('better-ajv-errors');\n\n// You need to pass `jsonPointers: true`\nconst ajv = new Ajv({ jsonPointers: true });\n\n// Load schema and data\nconst schema = ...;\nconst data = ...;\n\nconst validate = ajv.compile(schema);\nconst valid = validate(data);\n\nif (!valid) {\n  const output = betterAjvErrors(schema, data, validate.errors);\n  console.log(output);\n}",
   "id": 299,
   "stars": 0,
   "errors": [
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "    import SmartFlatList from 'react-native-smart-refresh-flatlist'",
   "id": 300,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var status;\nPrefer: status=200",
   "id": 301,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import CanvasSlider from '@martsis/canvas-slider';",
   "id": 302,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import isEmpty from 'just-is-empty';\n isEmpty({a: 3, b: 5}) // false\n isEmpty([1, 2]) // false\n isEmpty(new Set([1, 2, 2])) // false\n isEmpty((new Map()).set('a', 2)) // false\n isEmpty({}) // true\n isEmpty([]) // true\n isEmpty(new Set()) // true\n isEmpty(new Map()) // true\n isEmpty('abc') // false\n isEmpty('') // true\n isEmpty(0) // true\n isEmpty(1) // true\n isEmpty(true) // true\n isEmpty(Symbol('abc')); // true\n isEmpty(//); // true\n isEmpty(new String('abc')); // false\n isEmpty(new String('')); // true\n isEmpty(new Boolean(true)); // true\n isEmpty(null) // true\n isEmpty(undefined) // true",
   "id": 303,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 21,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const fs = require('fs');\nconst readable = require('co-readable');\nconst co = require('co');\n\nconst read = readable(fs.createReadStream('bigfile'));\n\nco(function* () {\n  let buf;\n  let size = 0;\n  while (buf = yield read(1024)) {\n    console.log('read %d bytes', buf.length);\n    size += buf.length;\n  }\n  console.log('total read %d bytes', size);\n}).catch(function (err) {\n  console.error(err.stack);\n});",
   "id": 304,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'onap-ui-common/lib/style.css';",
   "id": 305,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var tou8 = require('utf8-to-uint8array')\nvar str = '💩'\nconsole.log(tou8(str))",
   "id": 306,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\";\ngrunt.initConfig({\n  winston: {\n    myLogger: {\n      options: {\n        hooks: [\n          function (logger) {\n            logger.on('logging', function (transport, level, msg, meta) {\n              // [msg] and [meta] have now been logged at [level] to [transport]\n            });\n          },\n          function (logger) {\n            logger.addColors({\n              foo: 'blue',\n              bar: 'green',\n              baz: 'yellow',\n              foobar: 'red'\n            });\n          }\n        ]\n      }\n    }\n  }\n});",
   "id": 307,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "     var api = \"Your Value Here\";\n     api.stuff.items.POST",
   "id": 308,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var pull = \"Your Value Here\";\npull(\n  pl.read(db, {live: true}),\n  //log data as it comes,\n  //because tail will keep the connection open\n  //so we'll never see the end otherwise.\n  pull.through(console.log),\n  //note, pull-streams will not drain unless something is\n  //pulling the data through, so we have to add drain\n  //even though the data we want is coming from pull.through()\n  pull.drain()\n)",
   "id": 309,
   "stars": 0,
   "errors": [
    2349,
    2304,
    2304,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require(\"gulp\");\nvar reveasy = require(\"gulp-rev-easy\");\n\ngulp.task(\"reveasy\", function (argument) {\n  gulp.src(\"test.html\")\n    .pipe(reveasy({\n        fileTypes:['img1'],\n        elementAttributes:{\n            img1:{\n                name:'img',\n                src:'data-src'\n            }\n        }))\n    .pipe(gulp.dest(\"./dist\"))\n})",
   "id": 310,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Nothing = \"Your Value Here\"\nvar S = \"Your Value Here\"\n> S.reduce (S.concat) ('abc') (Nothing)\nvar Just = \"Your Value Here\"\n'abc'\n\n> S.reduce (S.concat) ('abc') (Just ('xyz'))\n'abcxyz'",
   "id": 311,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const defaults = {\n    passengers: {\n        adults: 1,\n        children: 0\n    }\n}",
   "id": 312,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Iri = \"Your Value Here\";\ntype ResolveResourceFn = (\n  resourceIri?: Iri,\n  context?: any,\n  info?: GraphQLResolveInfo\n) => ?ResolverOutput<any>",
   "id": 313,
   "stars": 0,
   "errors": [
    8008,
    2749,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Any = \"Your Value Here\";\nconst StringToken = Any(\n  /^('[^'\\\\]*(?:\\\\.[^'\\\\]*)*')/,  // single-quoted\n  /^(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")/,  // double-quoted\n);\n\nconst Identifier = /^([a-zA-Z_$][a-zA-Z0-9_$]*)/;\nconst SumExpression = All(Identifier, '=', Identifier, '+', Identifier);\r\n\r\nfunction All(Identifier, arg1, Identifier1, arg3, Identifier2) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 314,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const assert = require('assert')\n\nfunction counter (value) {\n    switch (typeof value) {\n    case 'object': {\n            if (null) {\n                return 1\n            }\n            let sum = 0\n            if (Array.isArray(value)) {\n                for (const item of value) {\n                    sum += counter(item)\n                }\n            }\n            for (const name in value) {\n                for (const item of value) {\n                    sum += counter(value[name])\n                }\n            }\n        }\n    default:\n        return 1\n    }\n}\n\nassert.equal(counter({ a: 'x', b: [ 'y', 'z' ] }), 3, 'found three scalar values')",
   "id": 315,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 24,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var bookshelf = \"Your Value Here\";\nconst Model = bookshelf.Model.extend({\n    casts: {\n        // Property 'locked' will be converted into a boolean value\n        locked: 'boolean',\n\n        age(dbValue) {\n            return parseInt(dbValue, 10);\n        },\n\n        notFourtyTwo() {\n            return 42;\n        }\n    }\n});\n\nModel.forge().fetch('id', 91)\n        .then( model => {\n            typeof model.get('locked'); // 'boolean'\n            model.get('notFourtyTwo');  // 42\n            typeof model.get('age'); // 'number'\n        });",
   "id": 316,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var access = \"Your Value Here\";\naccess.list(options, callback);",
   "id": 317,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\";\n// shave and a haircut, two bits :D\ngrunt.task.run('beep:twobits');",
   "id": 318,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ModulusCombine = require('modulus-combine');\n\n// 4 digits before the decimal and keep 5 decimal digits (9 total)\nvar modulusCombine = new ModulusCombine(4, 10);\n\nmodulusCombine.compress(3.456789, 367.123123123);\n// -> 34567800000036712000\n\nmodulusCombine.deflate(34567800000036712000);\n// -> [ 3.45678, 367.12448 ]\n",
   "id": 319,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function (d) { return this.accessor(d) !== undefined && this.accessor(d) !== ''; }",
   "id": 320,
   "stars": 0,
   "errors": [
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// '../mock/index';\nconst item = {\n  id: 2,\n  wechatId: 'aaaaaa',\n  wechatName: '测试公众号',\n  appId: '1414',\n  type: 2,\n};\n\nlet start = 0;\nconst getList = () => {\n  const recordList = [];\n  for (let i = 0; i < 10; i++) {\n    const temp = { ...item };\n    Object.keys(temp).forEach((k) => {\n      temp[k] += start++;\n    });\n    recordList.push(temp);\n  }\n\n  return recordList;\n};\n\nexport const api = () => Promise.resolve({\n  totalRecord: 666,\n  recordList: getList(),\n});\n",
   "id": 321,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var orderBy = \"Your Value Here\";\n.orderBy(\"key1\", \"key2\");\n.orderBy({ \"key1\": \"asc\" }, { \"key2\": \"desc\" });\n.orderBy([\"key1\", \"key2\"]);\n.orderBy([{ \"key1\": \"asc\" }, { \"key2\": \"desc\" }]);",
   "id": 322,
   "stars": 0,
   "errors": [
    1128,
    2349,
    1128,
    2349,
    1128,
    2349,
    1128,
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { handle } from 'kefir.handle';\n\nvar Kefir = \"Your Value Here\";\n\nvar source = Kefir.sequentially(100, [0, 1, 2, 3]);\nvar result = source::handle({\n  value(emitter) { /* value handler */ }\n})",
   "id": 323,
   "stars": 0,
   "errors": [
    2339,
    1005,
    1134,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var sc = \"Your Value Here\"\n var ip = \"Your Value Here\"\n var 获取本机ip = \"Your Value Here\"\nsc ip 获取本机ip",
   "id": 324,
   "stars": 0,
   "errors": [
    1434,
    1434
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import scroll from \"@threespot/freeze-scroll\";\n\n// Disable scrolling\nscroll.freeze();\n\n// Enable scrolling\nscroll.unfreeze();",
   "id": 325,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nconst run = async() => {\n  // 默认参数\n  const expire = {\n    expireTime: 24, // 过期时间 24h\n    unit: 'hour', // hour | minute | second | millisecond\n    auto: true, // 自动过期， 开启会定时清除24h以前的数据\n  }\n\n  var databee = \"Your Value Here\";\n\n  // 使用默认过期时间 expire\n  await databee.expire();\n\n  // 自定义数据过期时间\n  await databee.expire(expire);\n}",
   "id": 326,
   "stars": 0,
   "errors": [
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function getIssueEventsCollection(comicId, characters, creators, limit, modifiedSince, name, nameStartsWith, offset, orderBy, series, stories, callback)",
   "id": 327,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { platform } = require(\"os\")\r\n\r\nvar git = \"Your Value Here\"\n var submodule = \"Your Value Here\"\n var update = \"Your Value Here\"\ngit submodule update --remote web-platform-tests",
   "id": 328,
   "stars": 0,
   "errors": [
    1434,
    1435,
    2356,
    1005,
    2304,
    2304,
    2363,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var stachedown = \"Your Value Here\";\nstachedown.renderStrict('The {{important_thing}} must be visible.', {});\n// throws Error",
   "id": 329,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const contentSourceKey = '' // your content source key\nconst user = 'enterprise_search' // username\n var client = \"Your Value Here\"\nconst permissions = { permissions: ['permission2'] } // permissions to add to the user\n\nclient\n  .addUserPermissions(contentSourceKey, user, permissions)\n  .then(response => {\n    // handle response\n  })\n  .catch(error => {\n    // handle error\n  })",
   "id": 330,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//set ray position\nthis.ray.setOrigin(400, 300);\n//set ray direction (in radians)\nthis.ray.setAngle(2);\n//set ray direction (in degrees)\nthis.ray.setAngleDeg(90);\n//cast single ray and get closets intersection, hit mapped object and hit segment\nlet intersection = this.ray.cast();\nlet hitObject = intersection.object;\nlet hitSegment = intersection.segment;\n\n//cast rays in all directions (toward all mapped objects vertices / points)\nlet intersections = this.ray.castCircle();\n\n//set ray's cone angle (in radians)\nthis.ray.setCone(1);\n//set ray's cone angle (in degrees)\nthis.ray.setConeDeg(90);\n\n//cast rays in a cone\nlet intersections = this.ray.castCone();",
   "id": 331,
   "stars": 0,
   "errors": [
    2451,
    2451
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var qLUHmrFGexxpyHwQphLpE1czZNFE5m1xmV = \"Your Value Here\"\npublic address: qLUHmrFGexxpyHwQphLpE1czZNFE5m1xmV\n var key = \"Your Value Here\"\nprivate key (WIF): cNQKccYYQyGX9G9Qxq2DJev9jHygbZpb2UG7EvUapbtDx5XhkhYE",
   "id": 332,
   "stars": 0,
   "errors": [
    1128,
    1128,
    2349,
    2304,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var MOUNTED = \"Your Value Here\";\nvar INTERVAL = \"Your Value Here\";\nvar NEW_LOADER = \"Your Value Here\";\nvar NEW_DOMAIN = \"Your Value Here\";\nvar NEW_SUBDOMAIN = \"Your Value Here\";\nvar UPDATE_POINTS_PER_SERIES = \"Your Value Here\";\nMOUNTED, // First render of the chart\nINTERVAL, // If you specify an update interval, it will be called every n seconds\nNEW_LOADER, // The loader function changed\nNEW_DOMAIN, // The outer domain changed,\nNEW_SUBDOMAIN, // The user zoomed to a new subdomain.\nUPDATE_POINTS_PER_SERIES, // The pointsPerSeries prop has changed",
   "id": 333,
   "stars": 0,
   "errors": [
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const appCred = 'yourappcred';\nconst connectionURL = 'nodeConnectionURL';",
   "id": 334,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var api = \"Your Value Here\";\napi.convertToCoordinates(\"filled.count.soap\")\n  .then(function(response) {\n    console.log(\"[convertToCoordinates]\", response);\n  })\n  .catch(function(error) { // catch errors here\n    console.log(\"[code]\", error.code);\n    console.log(\"[message]\", error.message);\n  });",
   "id": 335,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Iterable from \"iterable.flow\"",
   "id": 336,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var f = \"Your Value Here\";\n// $ExpectType void\nf(1);\n\n// $ExpectError\nf(\"one\");",
   "id": 337,
   "stars": 0,
   "errors": [
    2349,
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var db = \"Your Value Here\";\ndb.status(function(obj){\n    console.log('Status', obj);\n});",
   "id": 338,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Book = \"Your Value Here\";\nconst book = new Book();\n\nRx.Observable.combineLatest(\n  book.subject('chapter1'),\n  book.subject('chapter2'),\n)\n.subscribe(() => {\n  console.log('Two first chapters are ready');\n});\n\nbook.publish('chapter1');\nbook.publish('chapter2');",
   "id": 339,
   "stars": 0,
   "errors": [
    2351,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var inspect = \"Your Value Here\";\nabout:inspect",
   "id": 340,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.",
   "id": 341,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var etcd = \"Your Value Here\";\nvar token = etcd.get(\"key\", console.log);\ntoken.abort() // also aliased as token.cancel()\n\nconsole.log(\"Request is cancelled: \", token.isAborted());",
   "id": 342,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var htdocs = \"Your Value Here\"\nhtdocs/example/\n  |- example.js     <-- your 'example' script file",
   "id": 343,
   "stars": 0,
   "errors": [
    2362,
    2304,
    1109,
    2363,
    2304,
    2304,
    1005,
    1005,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const fs = require(\"fs\");\nconst { parseSkinFile } = require('json2ableton-live-skin');\nconst skinFileBuffer = fs.readFileSync(__dirname + '/skinFile.ask');\nconst skin = parseSkinFile(skinFileBuffer);\nconsole.log(skin);\n// => {\"format\":\"live9\",\"ControlForeground\":[0,0,0,255],\"TextDisabled\":[90,90,9...\"ViewCheckControlDisabledOff\":[66,66,66,255]}",
   "id": 344,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { MentionsInput, Mention } from 'react-mentions'",
   "id": 345,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var morphology = require(\"ball-morphology\")\n\nrequire(\"get-pixels\")(\"bwimage.png\", function(err, data) {\n  var r = data.pick(-1, -1, 0)\n  \n  // ... do stuff ...\n})",
   "id": 346,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var web3 = \"Your Value Here\";\nweb3.utils.decodeBech32Address(hrp, bech32Address)",
   "id": 347,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ObjectStorage = require('ibmcloud-objectstorage');\nvar config = {\n    provider: 'openstack',\n    useServiceCatalog: true,\n    useInternal: false,\n    keystoneAuthVersion: 'v3',\n    authUrl: '',\n    tenantId: '', //projectId from credentials\n    domainId: '',\n    username: '',\n    password: '',\n    region: '' //dallas or london region\n};\nvar os = new ObjectStorage(config, \"my-container\");",
   "id": 348,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Vue from 'vue'\nimport VuePagination from 'v-pc-pagination'\nVue.use(VuePagination)",
   "id": 349,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var is = \"Your Value Here\";\nis.number(42);\n=> true\n\nis.number(NaN);\n=> false\n\nis.not.number('42');\n=> true\n\nis.all.number('foo', 1);\n=> false\n\nis.any.number({}, 2);\n=> true\n\n// 'all' and 'any' interfaces can also take array parameter\nis.all.number([42, 'foo', 1]);\n=> false",
   "id": 350,
   "stars": 0,
   "errors": [
    2339,
    1128,
    2339,
    1128,
    2339,
    1128,
    2339,
    1128,
    2339,
    1128,
    2339,
    1128
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var React = \"Your Value Here\";\n({\n  timelineContext: {\n    timelineWidth,\n    visibleTimeStart,\n    visibleTimeEnd,\n    canvasTimeStart,\n    canvasTimeEnd\n  },\n  headerContext: {\n    unit,\n    intervals: this.state.intervals\n  },\n  getRootProps: this.getRootProps,\n  getIntervalProps: this.getIntervalProps,\n  showPeriod,\n  //contextual data passed through headerData\n  data,\n})=> React.Node",
   "id": 351,
   "stars": 0,
   "errors": [
    2300,
    1359,
    2300,
    1005,
    1005,
    2300,
    1359,
    2300,
    1005,
    2300,
    1359,
    2300,
    1005,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ParseServer         = require('parse-server').ParseServer;\nvar AzureStorageAdapter = require('parse-server-azure').FilesAdapter;\n\nvar account = 'YOUR_AZURE_STORAGE_ACCOUNT_NAME';\nvar container = 'YOUR_AZURE_STORAGE_CONTAINER_NAME';\nvar options = {\n    accessKey: 'YOUR_ACCESS_KEY',\n    directAccess: false // If set to true, files will be served by Azure Blob Storage directly\n}\n\nvar api = new ParseServer({\n  appId: process.env.APP_ID || 'myAppId',\n  serverURL: process.env.SERVER_URL || 'http://localhost:1337'\n  (...)\n  filesAdapter: new AzureStorageAdapter(account, container, options);\n});",
   "id": 352,
   "stars": 0,
   "errors": [
    2349,
    1109,
    1005,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var yieldCache = \"Your Value Here\";\nconst cache = yieldCache();",
   "id": 353,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import TelephoneInput from 'react-tel-input-japan';\n\nvar React = \"Your Value Here\";\n\nReact.renderComponent(\n  <div>\n    <TelephoneInput\n      value={this.state.value}\n      onChange={(value, valid) => this.setState({ value, valid })}\n      placeholder={'input telephone number'}\n    />\n  </div>,\n  document.querySelector('#element'));",
   "id": 354,
   "stars": 0,
   "errors": [
    2339,
    17004,
    17004,
    2532,
    2532,
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var when = \"Your Value Here\";\n// Conditionally execute a function to continue configuration\n// condition: Boolean\n// whenTruthy: Function -> ChainedMap\n  // invoked when condition is truthy, given a single argument of the ChainedMap instance\n// whenFalsy: Optional Function -> ChainedMap\n  // invoked when condition is falsy, given a single argument of the ChainedMap instance\nwhen(condition, whenTruthy, whenFalsy)",
   "id": 355,
   "stars": 0,
   "errors": [
    2349,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var analytics = \"Your Value Here\";\n// Reset current visitor\nanalytics.reset()",
   "id": 356,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var tr = require(\"tr-064\");\nvar tr064 = new tr.TR064();\ntr064.initTR064Device(\"fritz.box\", 49000, function (err, device) {\n    if (!err) {\n       var wanip = device.services[\"urn:dslforum-org:service:WANIPConnection:1\"];\n       wanip.actions.GetInfo(function(err, result){\n               console.log(result);\n       });\n    }\n});\n",
   "id": 357,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var editable = \"Your Value Here\"\n<vue-googlemap-polygon :paths=\"paths\" :events=\"events\" @change=\"change\" editable ></vue-googlemap-polygon>",
   "id": 358,
   "stars": 0,
   "errors": [
    2365,
    2304,
    2304,
    2304,
    1005,
    1005,
    1005,
    1146,
    1005,
    1109,
    2304,
    2304,
    2304,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var dynogels = \"Your Value Here\";\nvar Account = dynogels.define('Account', {\n  hashKey : 'email',\n\n  // add the timestamp attributes (updatedAt, createdAt)\n  timestamps : true,\n\n  schema : {\n    email   : Joi.string().email(),\n    name    : Joi.string(),\n    age     : Joi.number(),\n    roles   : dynogels.types.stringSet(),\n    settings : {\n      nickname      : Joi.string(),\n      acceptedTerms : Joi.boolean().default(false)\n    }\n  }\n});",
   "id": 359,
   "stars": 0,
   "errors": [
    2339,
    2304,
    2304,
    2304,
    2339,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const strava = require('strava-v3');\nstrava.athlete.get({'access_token':'abcde'},function(err,payload,limits) {\n    //do something with your payload, track rate limits\n    console.log(limits);\n    /*\n    output:\n    {\n       shortTermUsage: 3,\n       shortTermLimit: 600,\n       longTermUsage: 12,\n       longTermLimit: 30000\n    }\n    */\n});",
   "id": 360,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var $scope = \"Your Value Here\";\n$scope.$on('auth:account-destroy-error', function(ev, reason) {\n  alert(\"Account deletion failed: \" + reason.errors[0]);\n});\r\n\r\nfunction alert(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 361,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const logging = require(\"console-logging\");\nconst logger = logging.logger;",
   "id": 362,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { MatomoService } from \"bim-gdpr/src/services/matomo/matomo\"\n\nvar bGDPR = \"Your Value Here\"\n\n// Create services :\nconst matomo = bGDPR.createService( new MatomoService('//matomo.php') )\nmatomo.setWeight( -1 ) // Place matomo first.\n\n// Then initialize\nbGDPR\n    .setTemplate( new DefaultTemplate() ) // Initialize the view\n    .init() // Initialize the core",
   "id": 363,
   "stars": 0,
   "errors": [
    2339,
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require('gulp');\nvar concatCss = require('gulp-concat-css');\n\ngulp.task('default', function () {\n  return gulp.src('assets/**/*.css')\n    .pipe(concatCss(\"styles/bundle.css\"))\n    .pipe(gulp.dest('out/'));\n});",
   "id": 364,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ALMA_APIKEY\nvar l7xxabcdefghijklmnopqrstuvwxyz = \"Your Value Here\"\n var node = \"Your Value Here\"\nALMA_APIKEY=l7xxabcdefghijklmnopqrstuvwxyz node test.js ",
   "id": 365,
   "stars": 0,
   "errors": [
    1005,
    2593
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const M5Stack = require(\"m5stackjs\");\n\nlet m5 = new M5Stack('OBNIZ_ID_HERE');\n\nm5.onconnect = async function () {\n  m5.buttonA.onchange = (state) => {\n      console.log(state);\n  }\n  \n  const servo = m5.wired(\"ServoMotor\", {signal:2});\n  servo.angle(90);\n\n};\n",
   "id": 366,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// TodoLib.js\nimport memoize from 'memoize-one';\nimport { createStatedLib } from '@stated-library/base';\nimport createTodo from './createTodo';\nimport fetchTodosFromCloud from './fetchTodosFromCloud';\n\nexport default function createTodoLib() {\n\n  const getCompletedTodos = memoize(\n    todos => todos.filter(todo => todo.completed)\n  );\n\n  const getActiveTodos = memoize(\n    todos => todos.filter(todo => !todo.completed)\n  );\n\n  function deriveState(rawState) {\n    return {\n      ...rawState,\n      get activeTodos() {\n        return getActiveTodos(rawState.todos);\n      },\n      get completedTodos() {\n        return getCompletedTodos(rawState.todos);\n      },\n    }\n  }\n\n  return createStatedLib(\n    { todos: [] },\n    base => ({\n\n      addTodo(text) {\n        var makeTodo = \"Your Value Here\";\n        base.updateState({\n            todos: base.state.todos.concat(makeTodo(text)),\n          }, 'ADD_TODO');\n      },\n\n      toggleTodo(id) {\n        base.updateState({\n          todos: base.state.todos.map(todo =>\n            todo.id === id ? { ...todo, completed: !todo.completed } : todo)\n        }, 'TOGGLE_TODO');\n      },\n\n      async fetchTodos() {\n        base.updateState({ isFetching: true }, 'FETCH_TODOS_START');\n        const newTodos = await fetchTodosFromCloud();\n        base.updateState({\n          todos: base.state.todos.concat(newTodos),\n          isFetching: false,\n        }, 'FETCH_TODOS_COMPLETE');\n      },\n    }),\n  { deriveState });\n",
   "id": 367,
   "stars": 0,
   "errors": [
    2349,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 47,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const fs = require('fs');\nconst { generate } = require('gas-entry-generator');\n\nconst fooSource = fs.readFileSync('foo.js', {encoding: 'utf8'});\nconst options = {\n  comment: true,\n  autoGlobalExports: true // Enable to detect exports.* to generate entry point functions.\n};\nconst output = generate(fooSource, options);\nconsole.log(output.entryPointFunctions);\nconsole.log('-----');\nconsole.log(output.globalAssignments);",
   "id": 368,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Config = require('webpack-chain');\n\nconst config = new Config();",
   "id": 369,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n// your-component.js\nimport Dummy from 'innoark-npm2'\n\n...\n<Dummy className=\"dummy\" />\n...\n\n// your-component.css\nvar dummy = \"Your Value Here\";\n.dummy {\n var white = \"Your Value Here\";\n  color: white;\n  var background = \"Your Value Here\";\n  background-color: purple;\n}\n",
   "id": 370,
   "stars": 0,
   "errors": [
    1128,
    17004,
    1128,
    1128,
    1434,
    2362,
    2304,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Trusona = \"Your Value Here\"\nconst trusona = new Trusona(token, secret)\n\nconst document = await trusona.getIdentityDocument(document.id)\n\ndocument.verificationStatus // UNVERIFIED, UNVERIFIABLE, VERIFIED, or FAILED\r\n\r\nexport { }\r\n",
   "id": 371,
   "stars": 0,
   "errors": [
    2351,
    2304,
    2304,
    1378,
    2448
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var async = \"Your Value Here\"\n var MergeIntoMKV = \"Your Value Here\"\nasync MergeIntoMKV(downloadedFile = LocalVideoObjectSchema,\n                   srt_subtitles = Array(SubtitleMeta),\n                   selectedFile = VideoObjectSchema)",
   "id": 372,
   "stars": 0,
   "errors": [
    1434,
    2349,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { text } = require(\"stream/consumers\")\r\n\r\nvar jamr = \"Your Value Here\"\njamr -w ./model.json -i ./text-file.txt -o ./where-ever.txt -n 5 -s 5000",
   "id": 373,
   "stars": 0,
   "errors": [
    2362,
    2304,
    1003,
    2304,
    2304,
    1003,
    2363,
    2304,
    2304,
    1003,
    2304,
    2304,
    2304,
    1005,
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export default {\n  modules: [\n    'nuxt-feed-yandex-market'\n  ],\n  yandexMarket: {\n    data: {}, // JSON with data or a function that returns the JSON \n    path: '/yandex-market.xml', // The route to your xml file\n    validate: true,\n    cacheTime: 1000 * 3600 * 24 \n  }\n}",
   "id": 374,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var window = \"Your Value Here\";\nif ('scrollRestoration' in window.history) {\n  window.history.scrollRestoration = 'manual';\n}",
   "id": 375,
   "stars": 0,
   "errors": [
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Counter = () => {\n  var useState = \"Your Value Here\"\n  const [count, setCount] = useState(0)\n  return <div>\n    <button onClick={() => setCount(count + 1)} >Increment</button>\n    <span>count: {count}</span>\n  </div>\n}",
   "id": 376,
   "stars": 0,
   "errors": [
    2349,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var removeRow = \"Your Value Here\"\nremoveRow(\n  change: Change,\n  options: {\n    at?: number,\n    normalize?: boolean,\n  }\n): Change",
   "id": 377,
   "stars": 0,
   "errors": [
    2349,
    2304,
    1005,
    2304,
    2304,
    1005,
    2693,
    2693,
    1005,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var url = \"Your Value Here\";\n// On GET /statistics\n// Get the top score\nif (url === '/top-score') {\n    var dpd = \"Your Value Here\";\n    dpd.scores.get({$limit: 1, $sort: {score: -1}}, function(result) {\n    result(result[0]);\n    });\n}",
   "id": 378,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "                                                                                          var am = \"Your Value Here\";\n                                                                                      \n    am([34, 56, 78]).forEach(function (value, i) {\n           console.log(value, i);\n    })\n    \n    .log()  // 34 0, 56 1, 78 2, [34, 56, 78]\n    \n    .error(err=>{      \n              // handle errors at end of chain\n      \n    })\n  ",
   "id": 379,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var AuthModule = \"Your Value Here\";\nAuthModule.forRoot({\n  domain: 'YOUR_AUTH0_DOMAIN',\n  clientId: 'YOUR_AUTH0_CLIENT_ID',\n  organization: 'YOUR_ORGANIZATION_ID'\n}),",
   "id": 380,
   "stars": 0,
   "errors": [
    2339,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const InsertHtmlWebpackPlugin = require('insert-html-webpack-plugin')\n\nnew InsertHtmlWebpackPlugin(\n  // 第一个参数，必填，配置文件列表\n  {\n    js: [\n      // 可以配置多个，按顺序依次插入\n      { path: 'a.js' }, // path属性表示使用script内联方式\n      { path: 'b.js' },\n      { url: 'https://c.com/c.js' } // url属性表示使用script外部引入方式\n    ],\n    css: [\n      { path: 'd.css' }, // path属性表示使用style内联方式\n      { url: 'https://e.com/e.css' } // url属性表示使用link外部引入方式\n    ]\n  },\n  // 第二个参数，可选，配置插入位置，默认值如下\n  {\n    jsNode: '<body>', // 指定js要插入的节点位置\n    jsSide: 'after', // js要插入在节点位置处的前面还是后面，可选值'after'、'before'\n    cssNode: '</title>', // 指定css要插入的节点位置\n    cssSide: 'after', // css要插入在节点位置处的前面还是��面，可选值'after'、'before'\n  }\n)",
   "id": 381,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const path = require(\"path\")\n\"../../whatwg-fetch/fetch.js\": path.join( // this is the third-party dependency in the lrnwebcomponents\n  __dirname,\n  \"../node_modules/whatwg-fetch/fetch.js\" // this is where it lives in node_modules\n)",
   "id": 382,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { enableProdMode, NgZone } from '@angular/core';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { Router } from '@angular/router';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport singleSpaAngular from 'single-spa-angular';\nimport { singleSpaPropsSubject } from './single-spa/single-spa-props';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst lifecycles = singleSpaAngular({\n  bootstrapFunction: singleSpaProps => {\n    singleSpaPropsSubject.next(singleSpaProps);\n    return platformBrowserDynamic().bootstrapModule(AppModule);\n  },\n  template: '<app-root />',\n  Router,\n  NgZone,\n  domElementGetter: () => document.getElementById('angular-app')\n});\n\nexport const bootstrap = lifecycles.bootstrap;\nexport const mount = lifecycles.mount;\nexport const unmount = lifecycles.unmount;",
   "id": 383,
   "stars": 0,
   "errors": [
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  }
 ],
 "After All Fixes": [
  {
   "code": "let $PS = require('ps-ajaxqueue');\n\n$PS.ajaxQueue({\n    url: \"https://api.ipify.org/?format=jsonp\",\n    dataType: \"jsonp\",\n    clearQueueDelay: null\n}).done(function (data) {\n    console.log(data);\n});",
   "id": 0,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var style\n// style={{\nvar maxWidth = \"Your Value Here\"\n//     standaloneLayout:{display:'flex', maxWidth:'fit-content'}\n// }}",
   "id": 1,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var express   = require(\"express\")\nvar nofavicon = require(\"express-no-favicons\")\nvar app       = express();\n\napp.use(nofavicon());\n\napp.listen(process.env.PORT)",
   "id": 2,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { poll, ORDER_CREATED } = require('lib-events');\n\nasync function processMessage({ type, source, id, checksum }, ack) {\n  if (type === ORDER_CREATED) {\n    console.log(`${source} created an order!`);\n  }\n\n  await ack()\n}\n\nexports.process = async function () {\n  await poll(processMessage, {\n    maxNumberOfMessages: 10,\n    maxIterations: 10\n  });\n}",
   "id": 3,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var kmix = \"Your Value Here\";\n // returns a data object with the name of the control and the raw MIDI message\nkmix.on('any', (data) => {\n    console.log('control-name', data.control, 'control-data', data.raw)\n    // data.control example: 'fader-1'\n    // data.raw example: [176,1,67]\n    switch(data.control){\n        case 'fader-1':\n            console.log('fader-1', data.raw)\n            break;\n        case 'button-vu':\n            console.log('button-vu', data.raw)\n            break;\n        case 'button-vu:off':\n            console.log('button-vu:off', data.raw)\n            break;\n        default:\n            console.log('any other data', data)\n    }\n})",
   "id": 4,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Schema from '@jalik/schema';\n\nexport const ExampleSchema = new Schema({\n  time: {\n    type: 'string',\n    // The time must be like 'HH:mm'\n    pattern: '^\\\\d{1,2}:\\\\d{1,2}$'\n  },\n  password: {\n    type: 'string',\n    // The password must contain alphanumeric and special characters\n    pattern: /^[a-zA-Z0-9_&#@$*%?!]+$/\n  }\n});",
   "id": 5,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const sander = require('@marionebl/sander');\nconst Tesseract = require('tesseract.js');\nconst {langPath} = require('@tessdata/eng');\n\nconst image = sander.readFile('some-image.png');\nconst tesseract = Tesseract.create({langPath});\n\nvar buffer = \"Your Value Here\";\n\ntesseract.recognize(buffer, {\n  lang: 'eng'\n});",
   "id": 6,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const sagaABC = function* sagaABC() {\n  var take = \"Your Value Here\";\n//   yield take('ACTION_A');\n  // Do some I/O here.\n//   yield put(actionB());\n//   yield put(actionC());\n};\n\nconst sagaDE = function* sagaDE() {\n//   yield take('ACTION_D');\n//   yield put(actionE());\n};\r\n\r\nfunction* put(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 7,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "`external: [...Object.keys(pkg.dependencies || {}), ...Object.keys(pkg.peerDependencies || {})],`",
   "id": 8,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mkpdf = require('mkpdf')\n\nmkpdf().from('/path/to/document.md').to('/path/to/document.pdf', function () {\n    console.log('Done')\n})\n\n// Or using streams\nvar fs = require('fs')\n\nfs.createReadStream('/path/to/document.md')\n    .pipe(mkpdf())\n    .pipe(fs.createWriteStream('/path/to/document.pdf'))",
   "id": 9,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import sinon from 'sinon';\nimport { expect } from 'chai';",
   "id": 10,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Cacher = require(\"softweb-cacher\");",
   "id": 11,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n// var Register = \"Your Value Here\"\n// - Register providers inside the your start/app.js file.\n// ```js\nconst providers = [\n    ...\n//         '@faisal50x/ray/providers/RayProvider',\n//     ...\n]",
   "id": 12,
   "stars": 0,
   "errors": [
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = ({name, source, places, index, count, filesCount, errorsCount}) => {\n    return '';\n};",
   "id": 13,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var analytics = \"Your Value Here\"\n// Get the current state of analytics\n// analytics.getState()\n\n// Get a subpath of state\n// analytics.getState('context.offline')",
   "id": 14,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const isChromeAgent = (context) => {\n  return context.req.headers['User-Agent'].indexOf('Chrome') !== -1;\n}\n\nvar app = \"Your Value Here\";\n\napp.useIf(isChromeAgent, async (context) => {\n  context.res.headers['Content-Type'] = 'text/html';\n});\n\n// now if a route was called from Chrome browser, the response will be set to HTML COntent-Type",
   "id": 15,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var x11 = require('x11-hash-js');\n\nconsole.log(x11.digest('The great experiment continues.'));\n// -> '4da3b7c5ff698c6546564ebc72204f31885cd87b75b2b3ca5a93b5d75db85b8c'",
   "id": 16,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var wtsqs = \"Your Value Here\"\n// const myMessage = await wtsqs.popOne()\n// The message no longer exists in queue\n// console.log(myMessage)\n// output:\n{\n//   id: 'messageId',\n  receiptHandle: 'messageReceiptHandle'\n//   md5: 'messageMD5',\n  body: { a: 1 }\n}",
   "id": 17,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n\n var Issues = \"Your Value Here\"\n// ## Issues\nvar If = \"Your Value Here\"\n var you = \"Your Value Here\"\n var have = \"Your Value Here\"\n var questions = \"Your Value Here\"\n var or = \"Your Value Here\"\n var issues = \"Your Value Here\"\n var feel = \"Your Value Here\"\n var free = \"Your Value Here\"\n var to = \"Your Value Here\"\n var create = \"Your Value Here\"\n var an = \"Your Value Here\"\n// If you have questions or issues feel free to create new an topic in [issues](https://github.com/Smip/ngx-materialize/issues).\n\n// ## License\n\n// Licensed under [MIT](https://opensource.org/licenses/MIT).",
   "id": 18,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import LazyBackgroundSizes from 'vue-lazy-background-sizes';\n\nconst MyLazyBackground = {\n    mixins: [LazyBackgroundSizes],\n    data() {\n        return {\n            screens: ['762', '1200'],\n        }\n    },\n}\n\nvar Vue = \"Your Value Here\";\n\n// Vue.component('my-lazy-background', MyLazyBackground);",
   "id": 19,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var backand = \"Your Value Here\";\nbackand.initiate({\n  appName: 'APP_NAME',\n  signUpToken: 'SIGNUP_TOKEN',\n  anonymousToken: 'ANONYMOUS_TOKEN'\n});\n\nbackand.service.useAnonymousAuth()\n  .then(() => {\n//       return backand.service.getList('USERS');\n  })\n  .then((response) => {\n      console.log(response);\n  })\n  .catch(function(error){\n      console.log(error);\n  });\n",
   "id": 20,
   "stars": 0,
   "errors": [
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mp = \"Your Value Here\";\n// mp.people.saveJson(\"example.json\");",
   "id": 21,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var Install = \"Your Value Here\"\n var package = \"Your Value Here\"\n// # Install package\nvar yarn = \"Your Value Here\"\n var add = \"Your Value Here\"\n// yarn add @boldgrid/components\n\n var Import = \"Your Value Here\"\n var CSS = \"Your Value Here\"\n var files = \"Your Value Here\"\n var from = \"Your Value Here\"\n var dist = \"Your Value Here\"\n var folder = \"Your Value Here\"\n// # Import CSS files from dist folder (SASS).\n// @import '@boldgrid/components/dist/css/components.min.css';",
   "id": 22,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var WWWWWW = \"Your Value Here\"\nWWWWWW||WWWWWW\n var W = \"Your Value Here\"\n var OO = \"Your Value Here\"\n//  W W W||W W W\n//       ||\n// var __________ = \"Your Value Here\"\n//     ( OO )__________\n//      /  |           \\\n//     /o o|    MIT     \\\n//     \\___/||_||__||_|| *\n//          || ||  || ||\n//         _||_|| _||_||\n//        (__|__|(__|__|",
   "id": 23,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport logo from './logo.png'; // Tell Webpack this JS file uses this image\n\nconsole.log(logo); // /logo.84287d09.png\n\nfunction Header() {\n  // Import result is the URL of your image\n//   return <img src={logo} alt=\"Logo\" />;\n}\n\nexport default Header;",
   "id": 24,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<html>\n  ...\n//   <head>\n    ...\n//     <script src=\"angular.js\"></script>\n//     <script src=\"bower_components/ngSnakeCamel/ng-snake-camel.js\"></script>\n    ...\n  </head>\n  ...\n</html>",
   "id": 25,
   "stars": 0,
   "errors": [
    17004,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const mongoose = require('mongoose');\n\nvar connectionOptions = \"Your Value Here\";\n\nmongoose.connect(connectionOptions);\n\nvar Keyv = \"Your Value Here\";\n\nconst keyv = new Keyv({\n//   store: new KeyvMongoDB({ mongooseConnection: mongoose.connection })\n});",
   "id": 26,
   "stars": 0,
   "errors": [
    2351
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\";\ngrunt.initConfig({\n  checkFileSize: {\n    options: {\n      separator: ': ',\n      punctuation: ' !!!',\n    },\n    files: {\n      'dest/default_options': ['src/testing', 'src/123'],\n    },\n  },\n});",
   "id": 27,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const removeEmptyLines = require(\"remove-blank-lines\");\n\nconsole.log(removeEmptyLines(\n    `Hello\n\nWorld!\n\n\n  **   **\n\n  **   **\n\n     -\n\n*         *\n\n *********`\n));\n// =>\n// Hello\n// World!\n//   **   **\n//   **   **\n//      -\n// *         *\n//  *********",
   "id": 28,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var failpoints = require('failpoints').create();\n\n// setup failpoints\n\nfailpoints.setAll(true);\nfailpoints.setAll({probability: 0.5});\nfailpoints.setAll(false);\n",
   "id": 29,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var GraphQLValidatedString = \"Your Value Here\";\nconst HumanName = new GraphQLValidatedString({\n  name: 'HumanName'\n}).regex(/([a-zA-Z]{3,30}\\s*)+/);\n\nAssert.throws(()=> {\n  HumanName.parseValue('aa');\n}, /does not match/);",
   "id": 30,
   "stars": 0,
   "errors": [
    2351,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import set from \"just-safe-set\";\n\nconst obj1 = {};\nset(obj1, \"a.aa.aaa\", 4); // true\nobj1; // {a: {aa: {aaa: 4}}}\n\nconst obj2 = {};\nvar a = \"Your Value Here\";\nvar aa = \"Your Value Here\";\nvar aaa = \"Your Value Here\";\nset(obj2, [a, aa, aaa], 4); // true\nobj2; // {a: {aa: {aaa: 4}}}\n\nconst obj3 = { a: { aa: { aaa: 2 } } };\nset(obj3, \"a.aa.aaa\", 3); // true\nobj3; // {a: {aa: {aaa: 3}}}\n\n// don't clobber existing\nconst obj4 = { a: { aa: { aaa: 2 } } };\nset(obj4, \"a.aa\", { bbb: 7 }); // false\n\nconst obj5 = { a: {} };\nconst sym = Symbol();\nset(obj5.a, sym, 7); // true\nobj5; // {a: {Symbol(): 7}}",
   "id": 31,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var difficulty = \"Your Value Here\"\n// id: '0000-0000-0000-0000',\n var clearRate = \"Your Value Here\"\n// difficulty: [..],\n var title = \"Your Value Here\"\n// clearRate: number,\n var img = \"Your Value Here\"\n// title: 'Name',\n var thumbnailImg = \"Your Value Here\"\n// img: 'Url',\n var gameStyle = \"Your Value Here\"\n// thumbnailImg: 'Url',\n var createdAt = \"Your Value Here\"\n// gameStyle: [..],\n var Timestamp = \"Your Value Here\"\n var tag = \"Your Value Here\"\n// createdAt: Timestamp,\n var stared = \"Your Value Here\"\n// tag: [..],\n var played = \"Your Value Here\"\n// stared: number,\n var shared = \"Your Value Here\"\n// played: number,\n var clears = \"Your Value Here\"\n// shared: number,\n var attempts = \"Your Value Here\"\n// clears: number,\n var maker = \"Your Value Here\"\n// attempts: number,\nmaker: \nvar _ = \"Your Value Here\"\n//   \\_ login: 'Nintendo ID',\n//   \\_ faceImg: 'Url',\n//   \\_ flag: 'Country',\n//   \\_ name: 'Name'",
   "id": 32,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const { name } = require(\"assert\")\r\n\r\nvar node = \"Your Value Here\"\n var scripts = \"Your Value Here\"\n// node scripts/integrate.js --name acme --openapi https://api.acme.com/openapi.json\n// # or\n// node scripts/integrate.js --name acme_rss --rss https://acme.com/rss.xml",
   "id": 33,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import * as PIXI from 'pixi.js';\nimport {Spine} from 'pixi-spine';\n\nconst app = new PIXI.Application();\n// document.body.appendChild(app.view);\n\napp.loader\n    .add('spineCharacter', 'spine-data-1/HERO.json')\n    .load(function (loader, resources) {\n        const animation = new Spine(resources.spineCharacter.spineData);\n\n        // add the animation to the scene and render...\n        app.stage.addChild(animation);\n        \n        if (animation.state.hasAnimation('run')) {\n            // run forever, little boy!\n            animation.state.setAnimation(0, 'run', true);\n            // dont run too fast\n            animation.state.timeScale = 0.1;\n        }\n        \n        app.start();\n    });",
   "id": 34,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Rasha = \"Your Value Here\";\nRasha.thumbprint({ jwk: jwk }).then(function (thumbprint) {\n  console.log(thumbprint);\n});",
   "id": 35,
   "stars": 0,
   "errors": [
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "let cc = {\n  \"sn\":3788106,\n   \"an\":[\"2c4b523bfa2b54a3c2cfec376336ef6e\",\"dc1edbe0708e179e84e6ee0185849811\",\"1b32715dea8bd66c6136f2bb226a9783\",\"cf4a451a23d256299f306e0170632e9c\",\"7bee1781698bfd26a40d384e3e9ba233\",\"57a59cc3fe0a9e2b0ef55d9ee7d83aa0\",\"8741aba5f9ada55cd4cc7ad9ff8cfc5e\",\"27a940f79e5bb895218dc6fee619439a\",\"6d7611020258dc07544255aecb05f94e\",\"8fd75c4a543107c762473cb5c6814b25\",\"b8fb577d62bee5e47622084deec2dc72\",\"2dddefde6b2da5f85d8a50af78a8c6ef\",\"0152c280f2b1df572e679edc5bf5aae4\",\"213bce1b1e301b90e82189ba0a908e89\",\"2f35eda22494903e5c680856304610b1\",\"64bdfe44432444514e8234fa115b9352\",\"6943424a235be73f86a065fe97756b03\",\"e037963736d439d4bc72efa49aa4f2e5\",\"da555eaad78e610e5beb51ec5d051781\",\"47849f44ee8ee1d0d41782ca21dacdc3\",\"4ec1fea2c736e8e82e1836cef7512cdb\",\"de9ec5865fa289a09059ab8a87e73ac4\",\"fb5fca0a5196333023043f080a6fb666\",\"c8df8adefe8b25103358df30491c5409\",\"dae2b572756a596fa8c97f55e8712854\"]\n}\n\nlet data = {\n  \"coin\" : cc,\n  \"paydata\" : \"email, stack, 100, 0,0,0,0,0, alex.skywallet.cc, Car payment,, ready\\nemail, stack, 150, 0,0,0,0,0, john.skywallet.cc, My debt,, ready\\nemail, stack, 21150, 0,0,0,0,0, roller.skywallet.cc, Chargeback,, ready\",\n  \"id\": \"f2494e21fcd4e54a5acd7be6f2be6e50\"\n\n}\nvar r = \"Your Value Here\"\nlet c = r.apiBillPay(data, () => {}).then(response => {\n  if (response.code != RaidaJS.ERR_NO_ERROR) {\n    console.log(\"Billpay sent\")\n    return\n  }\n\n//   if (response.code == RaidaJS.ERR_SENT_PARTIALLY) {\n    console.log(\"Only \" + response.amount + \" CloudCoins sent. Try again later using the same ID: \" + response.id)\n    console.log(\"Recipients NOT sent:\")\n    for (let i = 0; i < response.recipients; i++) {\n      if (response.recipients[i].status == \"ready\")\n        console.log(response.recipients[i].address + \",\")\n    }\n  }\n// }",
   "id": 36,
   "stars": 0,
   "errors": [
    2339,
    2304,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 22,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var _ = \"Your Value Here\";\n// _.mixin({awaitEach});",
   "id": 37,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nvar modal = \"Your Value Here\";\n// modal.modal; // the modal element\n// modal.openButtons; // an array of open buttons\n// modal.closeButtons; // an array of close buttons\n// modal.isOpen; // boolean indicating if the modal is currently open\n",
   "id": 38,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var web3 = \"Your Value Here\";\n// var coinbase = web3.pi.coinbase;\n// var balance = web3.pi.getBalance(coinbase);",
   "id": 39,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// App.js\nimport React from 'react'\nimport { createRouter, Link } from 'react-context-router'\n\n// const NotFound = () => <div>Not Found</div>\n\nconst Nav = () => (\n//   <nav>\n//     <Link href='/' children='Home' />\n//     <Link href='/posts/1' children='First Post' />\n//   </nav>\n)\n\nclass App extends React.Component {\n  render () {\n//     const { route } = this.props\n//     const Comp = route.component || NotFound\n\n    return (\n//       <div>\n//         <Nav />\n//         <Comp />\n//       </div>\n//     )\n  }\n}\n\nexport default createRouter(App)",
   "id": 40,
   "stars": 0,
   "errors": [
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { Scrollbars } from 'react-custom-scrollbars';\n\nvar Component = \"Your Value Here\";\n\n// class App extends Component {\n//   render() {\n    return (\n      <Scrollbars style={{ width: 500, height: 300 }}>\n        <p>Some great content...</p>\n      </Scrollbars>\n    );\n//   }\n// }",
   "id": 41,
   "stars": 0,
   "errors": [
    1108
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { TagInputModule } from 'ngx-chips';\n\nTagInputModule.withDefaults({\n    tagInput: {\n        placeholder: 'Add a new tag',\n        // add here other default values for tag-input\n    },\n    dropdown: {\n        displayBy: 'my-display-value',\n        // add here other default values for tag-input-dropdown\n    }\n});",
   "id": 42,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const axios = require('axios').default;\n\n// axios.<method> will now provide autocomplete and parameter typings",
   "id": 43,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nimport {SectionsContainer, Section, Header, Footer} from 'react-fullpage';\n\n// => in the render() method of your app\nreturn (\n  <Header>\n    <a href=\"#sectionOne\" className=\"opa\">Section One</a>\n    <a href=\"#sectionTwo\">Section Two</a>\n    <a href=\"#sectionThree\">Section Three</a>\n  </Header>\n  <Footer>\n    <a href=\"\" className=\"opa\">Dcoumentation</a>\n    <a href=\"\">Example Source</a>\n    <a href=\"\">About</a>\n  </Footer>\n  <SectionsContainer {...options}>\n    <Section>Page 1</Section>\n    <Section>Page 2</Section>\n    <Section>Page 3</Section>\n  </SectionsContainer>\n);\n",
   "id": 44,
   "stars": 0,
   "errors": [
    2657
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var 但是 = \"Your Value Here\"\n// var 入口全都从这个app = \"Your Value Here\"\n// * 但是��要引入app.js这个文件，因为所有的**入口全都从这个app.js进入**",
   "id": 45,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "@Store({\n  endpoint: 'system',\n  mutations: {\n    login: {\n      type: MutationType.POST,\n      path: 'security/login'\n    }\n  }\n})",
   "id": 46,
   "stars": 0,
   "errors": [
    1146
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var metrics = \"Your Value Here\";\n// metrics.mexists( 'net.bytesRX' );\n// returns true\n\n// metrics.mexists( 'cpu.utilization' );\n// returns false",
   "id": 47,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {observer} from 'mobx-react';\nimport {Form} from 'mobx-antd-form';\n\nconst FormItem = Form.Item;\nconst FormField = Form.Field;\n\nvar React = \"Your Value Here\";\n\n@Form.create({\n    fields: ({demo}) => demo.fields\n// })\n// @observer\n// class BasicForms extends React.Component {\n    \n    handleSubmit = e => {\n        const {dispatch, form} = this.props;\n        e.preventDefault();\n        form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                // submit form\n            }\n        });\n//     };\n    \n    // ** 实现 title 的 label 属性随着其 value 属性变化 **\n    render(){\n        \n        const {form, demo} = this.props;\n        \n        function formatMessage(arg0) {\r\n            throw new Error('Function not implemented.');\r\n        }\r\n\r\n        return (\n            <Form onSubmit={this.handleSubmit} hideRequiredMark style={{marginTop: 8}}>\n                <FormItem field={form.get('title')}>\n                    <FormField field={form.get('title')} label={demo.fields.title.value}>\n                        <Input placeholder='请输入标题'/>\n                    </FormField>\n                </FormItem>\n                <FormItem field={form.get('date')}>\n                    <FormField field={form.get('date')} rules={[{required: true, message: '我的优先级更高'}]}>\n                        <RangePicker\n                            style={{width: '100%'}}\n                            placeholder={[\n                                formatMessage({id: 'form.date.placeholder.start'}),\n                                formatMessage({id: 'form.date.placeholder.end'}),\n                            ]}\n                        />\n                    </FormField>\n                </FormItem>\n                <FormItem style={{marginTop: 32}}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        <FormattedMessage id=\"form.submit\"/>\n                    </Button>\n                    <Button style={{marginLeft: 8}}>\n                        <FormattedMessage id=\"form.save\"/>\n                    </Button>                                            \n                </FormItem>\n            </Form>\n        );\n    }\n}",
   "id": 48,
   "stars": 0,
   "errors": [
    1005,
    1005,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 49,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import map from \"just-map-object\";\n\n// DEPRECATED: use just-map-values\nmap({ a: 3, b: 5, c: 9 }, (key, value) => value + 1); // {a: 4, b: 6, c: 10}\nmap({ a: 3, b: 5, c: 9 }, (key, value) => key); // {a: 'a', b: 'b', c: 'c'}\nmap({ a: 3, b: 5, c: 9 }, (key, value) => key + value); // {a: 'a3', b: 'b5', c: 'c9'}",
   "id": 49,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var store = \"Your Value Here\";\n// store.log('user'); // {\"name\":\"James Bond\",\"email\":\"bond007@live.com\",\"bio\":\"I spy for a living.\"}",
   "id": 50,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { stat } = require(\"fs\")\r\n\r\nvar npx = \"Your Value Here\"\n var hermione = \"Your Value Here\"\n var merge = \"Your Value Here\"\n// npx hermione merge-stat-exports src-report-1.JSON src-report-2.JSON --html dest-html-report --json report.json",
   "id": 51,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\";\ngrunt.initConfig({\n\n    copy: {\n        somefiles: {\n            src: \"./mydir/**\",\n            dest: \"./myNormallyOutputDir/\"\n        }\n    },\n    multidest: {\n        copy_some_files: {\n            tasks: [\n                \"copy:somefiles\"\n            ]\n//             dest: [\"./dist/distdir1\", \"./dist/distdir2\"]\n        },\n    },\n});",
   "id": 52,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var fs = require('fs'),\n  Proposal = require('proposal'),\n  readProposal = Proposal(fs.readFile);",
   "id": 53,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var minify;\nminify = require('minify');",
   "id": 54,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { run } = require(\"node:test\")\r\n\r\nvar docker = \"Your Value Here\"\n var pull = \"Your Value Here\"\n var apachecn0 = \"Your Value Here\"\n// docker pull apachecn0/matplotlib-doc-zh\n// docker run -tid -p <port>:80 apachecn0/matplotlib-doc-zh\n// # 访问 http://localhost:{port} 查看文档",
   "id": 55,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// let fullsizeCanvasElement = document.getElementById('fullsize-canvas');\n// let thumbnailCanvasElement = document.getElementById('thumbnail-canvas');\n\nvar CanvasCamera = \"Your Value Here\";\n\n// CanvasCamera.initialize(fullsizeCanvasElement, thumbnailCanvasElement);\n\nlet options:CanvasCamera.CanvasCameraOptions = {\n    cameraFacing: 'front',\n    fps: 15,\n    thumbnailRatio: 1/6,\n    onAfterDraw: function(frame) {\n      // do something with each frame of the fullsize canvas element only\n      // frame.image.src; // file path or base64 data URI\n      // frame.element.toDataURL(); // requested base64 data URI\n    }\n};\n\n// CanvasCamera.start(options);",
   "id": 56,
   "stars": 0,
   "errors": [
    2749,
    8010
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "describe('run', () => {\n  var fancy = \"Your Value Here\"\n  fancy\n//   .stdout()\n//   .do(() => console.log('foo'))\n//   .do(({stdout}) => expect(stdout).to.equal('foo\\n'))\n  .it('runs this callback last', () => {\n    // test code\n  })\n\n  // add to context object\n  fancy\n//   .add('a', () => 1)\n//   .add('b', () => 2)\n  // context will be {a: 1, b: 2}\n  .it('does something with context', context => {\n    // test code\n  })\n})\r\n\r\nfunction expect(stdout) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 57,
   "stars": 0,
   "errors": [
    2593,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "require(\"typeface-open-sans\")",
   "id": 58,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var app = \"Your Value Here\";\n// app.set('adminAuthServerMaster', function(msg, cb){\n//   if(auth success) {\n    cb('ok');\n//   } else {\n    cb('bad');\n//   }\n// })\r\n\r\nfunction cb(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 59,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var DEBUG\nvar mysql = \"Your Value Here\"\n// DEBUG=mysql-express-session*,mysql-connection-manager node your-app.js",
   "id": 60,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Boilerplate = require('boilerplate');\nvar h5bp = new Boilerplate({\n  options: {\n    cwd: 'vendor/h5bp/dist'\n  },\n  root: {src: ['{.*,*.*}'],   dest: 'src/'},\n  css:  {src: ['css/*.css'],  dest: 'src/'},\n  doc:  {src: ['doc/*.md'],   dest: 'src/'},\n  js:   {src: ['js/**/*.js'], dest: 'src/'}\n});\nconsole.log(h5bp);",
   "id": 61,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var DEV_COMMAND\nvar gatsby = \"Your Value Here\"\n// DEV_COMMAND=gatsby -u http://localhost:8080 -r -o ./out",
   "id": 62,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var view = async (view) => {\n    //Create an collection with a bindable field.\n    view.userData = { userName : \"John Doe\" };\n    //Bind the inner HTML of the element to the field on the collection\n    view.$nameLabel.bind = () => view.userData.userName;\n};\n\nexport { view };",
   "id": 63,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// middleware/authentication.js\n\nvar Authentication = require('../lib/authentication');\n\nfunction(req, res, next) {\n  var token = req.get('X-AUTH-TOKEN');\n\n  if(!token) {\n    /* instead of redirecting to login, give the\n    *  deep linking middleware a chance to store the\n    *  current request url, and THEN redirect to login\n    *  via the login option\n    */\n    next();\n  }\n\n  Authentication\n  .authenticate(token)\n  .then(function(tokenOrWhateverAuthYields) {\n    // we can now pass this in as the authentication option\n    req.user = tokenOrWhateverAuthYields;\n    next();\n  })\n  .error(function(e) {\n    // redirect to login since they gave us a bad token\n  });\n}",
   "id": 64,
   "stars": 0,
   "errors": [
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/* Set worksheet sheet to \"normal\" */\nws[\"!margins\"]={left:0.7, right:0.7, top:0.75,bottom:0.75,header:0.3,footer:0.3}\n/* Set worksheet sheet to \"wide\" */\nws[\"!margins\"]={left:1.0, right:1.0, top:1.0, bottom:1.0, header:0.5,footer:0.5}\n/* Set worksheet sheet to \"narrow\" */\nws[\"!margins\"]={left:0.25,right:0.25,top:0.75,bottom:0.75,header:0.3,footer:0.3}",
   "id": 65,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require('gulp');\nvar jspmAssets = require('gulp-jspm-assets');\n\ngulp.task('sass', function() {\n    var whateverTask = \"Your Value Here\";\n    jspmAssets({\n//       'bootstrap', 'sass/**/*.scss',\n//       'foundation', 'sass/**/*.scss'\n    })\n//     .pipe(whateverTask())\n    .pipe(gulp.dest('dest'));\n});",
   "id": 66,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " // Content to be scrolled\nvar $scrollContent = document.getElementById(\"content-scroll-vertical\");\nvar $scrollView = $scrollContent.parentNode; // Container for the content\nvar options = {\n    bounds: true,\n    direction: \"vertical\",\n    scrollbar: \"scrollbar-vertical\" // CSS class\n};\nvar RADJS_ScrollView = \"Your Value Here\";\n$scrollView.scroll_bar = new RADJS_ScrollView.ScrollBar($scrollView, {\n    className: options.scrollbar,\n    direction: options.direction,\n    smart: $scrollContent.querySelector(\"div.list_of_something\")\n}); // `scroll_bar` it's just a custom name\n// Create and attach ScrollView.\n// `scroller` it's just a custom name, but in WebComponent it's predefined.\n// $scrollView.scroller = new RADJS_ScrollView($scrollView, options);\n// Create and attach custom pointer events, because of: IE support, SVG elements etc.\n// `tracker` is also custom name but it's also predefined in WebComponent\n// $scrollView.tracker = new PointerTracker($scrollView, $scrollView.scroller);",
   "id": 67,
   "stars": 0,
   "errors": [
    2584,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const okayRecs = require('@andrewshell/okay-recs');\n\n// Source of all user ratings in system.\nconst allUserRatings = {\n    \"user0\": {\n        \"https://www.metacritic.com/tv/112263\": 1,\n        \"https://www.metacritic.com/tv/24\": 4,\n        \"https://www.metacritic.com/tv/30-rock\": 3,\n        \"https://www.metacritic.com/tv/alias\": 2,\n        \"https://www.metacritic.com/tv/archer\": 2,\n        \"https://www.metacritic.com/tv/arrested-development\": 2,\n        \"https://www.metacritic.com/tv/band-of-brothers\": 3,\n        ...\n    },\n    \"user1\": {\n        \"https://www.metacritic.com/tv/3rd-rock-from-the-sun\": 2,\n        \"https://www.metacritic.com/tv/adventure-time\": 4,\n        \"https://www.metacritic.com/tv/archer\": 1,\n        \"https://www.metacritic.com/tv/arrested-development\": 3,\n        \"https://www.metacritic.com/tv/better-call-saul\": 4\n//         ...\n    },\n    ...\n};\n\n// Subset of user ratings that you want recommendations and similar users for.\n// Note: This example shows one user, but can work for multiple users at once.\nconst subUserRatings = {\n    user10: allUserRatings['user10']\n};\n\n// Sum of scores of people who gave program 1 a rating of x gave to program 2\n// Intermediate structure for user recommendations. Should be cached.\nconst allProgramScores = okayRecs.programScores(allUserRatings);\n\n// What programs are the users most likely to like?\nconst subUserRecommendations = okayRecs.userRecommendations(allProgramScores, subUserRatings);\n\n// What other users is this user similar to?\nconst subUserSimilarUsers = okayRecs.similarUsers(allUserRatings, subUserRatings);",
   "id": 68,
   "stars": 0,
   "errors": [
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 27,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// integrify.rules.js\n\nmodule.exports = [\n  {\n    rule: 'REPLICATE_ATTRIBUTES',\n    name: 'replicateMasterToDetail',\n    // ...\n  },\n  // ...\n];",
   "id": 69,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var angular = \"Your Value Here\";\nangular.module('myApp', ['ionic.native']).controller('MyPageController', function ($cordovaCamera) {\n  $cordovaCamera.getPicture().then(\n    function (data) {\n      console.log('Took a picture!', data);\n    },\n    function (err) {\n      console.log('Error occurred while taking a picture', err);\n    }\n  );\n});",
   "id": 70,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// gatsby-browser.js\nimport 'simple-css-reset';",
   "id": 71,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var chai = \"Your Value Here\";\n// chai.expect(semver.parse('Linux 14.04')).to.equal(null);\n// chai.expect(semver.parse('A development version')).to.equal(null);\n// chai.expect(semver.parse('Version A')).to.equal(null);",
   "id": 72,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var dsa = \"Your Value Here\";\n// dsa.setInstance(dsa); // DSA ID",
   "id": 73,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var web3 = \"Your Value Here\";\n// web3.setProvider(new web3.providers.HttpProvider('http://host.url', 0, BasicAuthUsername, BasicAuthPassword));",
   "id": 74,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n//从数据库中查询出来的数据对象\nvar arr = [{id: 10, name: \"name1\", value: \"value1\"}, {id: 11, name: \"name2\", value: \"value2\"}];\nvar arrToObj = \"Your Value Here\";\n//把id值作为key生成一个对象\n/* data = {10: {id: 10, name: \"name1\", value: \"value1\"}, 11: {id: 11, name: \"name2\", value: \"value2\"}} */\n// var data = arrToObj(arr, \"id\");\n//把id值作为key，只需要name的值\n//data = {10: \"name1\", 11: \"name2\"}\n// var data = arrToObj(arr, \"id\", \"name\");\n//只获取id的值\n// ids = [10, 11];\n// var ids = arrToObj(arr, \"id\", null);",
   "id": 75,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { equal } = require(\"assert\");\r\n\r\nvar click = \"Your Value Here\";\n// click(\"html>body>div>div:eq(0)>button\");\nandThen(function () {\n//  equal(find(\"#foo\").length, 0, \"foo removed AFTER user [INSERT REASON]\");\n});\n\r\nfunction andThen(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 76,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { through } = require('streamss-through')\nlet cnt = 0\n\nrequire('fs').createReadStream(__filename, { encoding: 'utf8', highWaterMark: 30 })\n.pipe(through(\n  { decodeStrings: false },\n  function transform(str) {\n    cnt += 1\n    this.push(str.replace(/\\s/g, '‧') + '\\n')\n  },\n  function flush() {\n    console.log('\\ncounted num of chunks: ' + cnt)\n  }\n))\n.pipe(process.stdout)",
   "id": 77,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const demethodize = require(\"just-demethodize\");\n\nconst trimFn = demethodize(\"\".trim);\n[\"hello \", \" goodbye\", \"hello again\"].map(trimFn);",
   "id": 78,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var data = \"Your Value Here\";\nconst mapped = {\n//   a: data.a,\n//   b: data.b\n}",
   "id": 79,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var o2x = require('object-to-xml');\n\nvar obj = { \n  '?xml version=\\\"1.0\\\" encoding=\\\"iso-8859-1\\\"?' : null,\n  request : {\n    '@' : {\n      type : 'product',\n      id : 12344556\n    },\n    '#' : {\n      query : {\n        vendor : 'redhat',\n        name : 'linux'\n      }\n    }\n  }\n};\n\nconsole.log(o2x(obj));\n\n/*\n<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n<request type=\"product\" id=\"12344556\">\n  <query>\n    <vendor>redhat</vendor>\n    <name>linux</name>\n  </query>\n</request>\n*/",
   "id": 80,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 26,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Post = \"Your Value Here\";\n// let post = new Post();\n\n// await post.save(); // creates a new post\n\n// post.set('title', 'New title');\n// await post.save(); // updates an existing post\r\n\r\nexport { };\r\n",
   "id": 81,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var imdbWatchlist = require('imdb-watchlist');\n\nimdbWatchlist('ur23098466').then(function (watchlist) {\n  // watchlist is an array of objects on the form:\n  // { title: '', imdbId: ''}\n\n  // This will log out a random movie from your watchlist\n  console.log(watchlist[Math.floor(Math.random() * watchlist.length)]);\n});",
   "id": 82,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var JsonRoutes = \"Your Value Here\";\nJsonRoutes.ErrorMiddleware.use(\n  '/handle-error',\n//   RestMiddleware.handleErrorAsJson\n);\n\nJsonRoutes.add('get', 'handle-error', function () {\n  var error = new Meteor.Error('not-found', 'Not Found');\n  error.statusCode = 404;\n  throw error;\n});",
   "id": 83,
   "stars": 0,
   "errors": [
    2339,
    2339,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var res = \"Your Value Here\";\n// const loggedIn = res._headers['logged-in'] === \"true\";",
   "id": 84,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var server = \"Your Value Here\";\nserver.register({\n    register: require('hapi-droutes'),\n    options: {\n        'root':'routes/please/search_in/here',\n        'match':'resource/*/route.*.js',\n        'dependencies':['hello','hapi']\n    }\n}, function (err) {\n    if (err) throw err;\n});",
   "id": 85,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var cacheInterceptor = function cacheInterceptor(args) {\n  var req = args.req,\n      res = args.res;\n    var cacheStore = \"Your Value Here\";\n    // retrieve cached response\n    return cacheStore.getCacheRes(req)\n      .then((cachedRes) => {\n        return new Promise((resolve, reject) => {\n          try {\n            if (cachedRes) {\n              // response with cached result\n              res.end(cachedRes);\n              // abort the executing of passes sequence\n              reject();\n            } else {\n              // continue executing other passes\n              resolve();\n            }\n          } catch (err) {\n            reject(err);\n          }\n        })\n      })\n  };\n// insert this pass before the default 'deleteLength' pass\n// Proxy.before('web', 'deleteLength', cacheInterceptor);\n",
   "id": 86,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var LoadIt = \"Your Value Here\";\n// <LoadIt load={() => import('./LoadMe')} />",
   "id": 87,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import parallel from 'apr-parallel';\n\nconst then = (v) => new Promise((resolve) => resolve(v));\n\nconst withArray = await parallel([\n  async () => await then(1),\n  async () => await then(2)\n]);\n\n// withArray = [1, 2]\n\nconst withObject = await parallel({\n  one: async () => await then(1),\n  two: async () => await then(2)\n});\n\n// withObject = { one: 1, two: 2 }",
   "id": 88,
   "stars": 0,
   "errors": [
    1378,
    1378
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\"\n// run tests\ngrunt\n\n// run tests and show a test coverage report\n var specs = \"Your Value Here\"\n// grunt specs",
   "id": 89,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// foo.js\nObject.defineProperty(exports, '__esModule', {value: true})\n\nexports.default = {\n  foo: 'default-foo'\n}\n\nexports.foo = 'foo'",
   "id": 90,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'core-js/features/array/includes';\nimport 'core-js/features/object/assign';",
   "id": 91,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nvar setAdapter = \"Your Value Here\";\n// const adapter = setAdapter(setAdapter);\n\n// exports.api = Function.https.onRequest((...args) => adapter.handle(...args));",
   "id": 92,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var my = \"Your Value Here\"\n// my-app\n// ├── README.md\n// ├── node_modules\n// ├── package.json\n// ├── .gitignore\n// ├── public\n// │   └── favicon.ico\n// │   └── index.html\n// │   └── manifest.json\n// └── src\n//     └── App.css\n//     └── App.js\n//     └── App.test.js\n//     └── index.css\n//     └── index.js\n//     └── logo.svg\n//     └── registerServiceWorker.js",
   "id": 93,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { MoodleClient } = require('node-moodle');\n// const moodle = new MoodleClient({ ... });\n\nasync function main() {\n  try {\n    //Request data\n    var req = {\n      users: [\n        {\n          firstname: \"Foo\",\n          lastname: \"Bar\",\n          username: \"foo\",\n          password: \"FooBar123!\",\n          email: \"foo@example.com\",\n        }\n      ]\n    };\n\n    //Invoke a method\n//     var res = await moodle.core.user.createUsers(req);\n    \n    //Response data\n//     console.log(res);\n    /*\n    [\n      {\n        \"id\": 3,\n        \"username\": \"foo\"\n      }\n    ]\n    */\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\nmain();",
   "id": 94,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 28,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  var LRUCache = \"Your Value Here\";\n//   const cache = LRUCache([cacheSize = 10]);\n\n // return an item from the cache\n//   cache.get(key)\n\n  // add an item to the cache. overwrite if already exists\n//   cache.set(key, value) \n\n  // remove an item from the cache\n//   cache.remove(key) \n\n  // reset the cache to an empty and fresh state\n//   cache.clear(limit = 10) \n\n  // Traverse each cached item and call a function\n  // callback is passed [node element, element number, cache instance] \n//   cache.forEach(callback) \n\n  // return a JSON represenation of the cache\n//   cache.toJSON() ",
   "id": 95,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { connectPubsub } from '@yoctol/message-queue';\n\nvar connectionOptions = \"Your Value Here\";\n\nconst pubsub = await connectPubsub({\n  driver: 'rabbitmq',\n  amqpConfig: {\n    url: 'amqp://localhost',\n    exchange: 'amqp.exchange',\n    connectOptions: {\n      //node-amqp-connection-manager connect() options \n      heartbeatIntervalInSeconds: 5,\n//       ...\n      connectionOptions: {\n        //amqplib connection options\n        ...\n      },\n    },\n    createChannelOptions: {\n      //node-amqp-connection-manager createChannel() options \n      name: 'channelName',\n//       Set: ...,\n      json: true,\n    },\n },\n});",
   "id": 96,
   "stars": 0,
   "errors": [
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// function(i) {\n    // delete the tag at index i\n// }",
   "id": 97,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var facebookConnectPlugin = \"Your Value Here\";\nfacebookConnectPlugin.showDialog({\n    method: \"share\",\n    picture:'https://www.google.co.jp/logos/doodles/2014/doodle-4-google-2014-japan-winner-5109465267306496.2-hp.png',\n    name:'Test Post',\n    message:'First photo post',\n    caption: 'Testing using phonegap plugin',\n    description: 'Posting photo using phonegap facebook plugin'\n  }, function (response) {\n    console.log(response)\n  }, function (response) {\n    console.log(response)\n  }\n);",
   "id": 98,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "namiConfig.logger = require('log4js').getLogger('Nami.Core');\nvar nami = new (require(\"nami\").Nami)(namiConfig);",
   "id": 99,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// #@ Node\n// var node_modules = \"Your Value Here\"\n// node_modules\n\n//  var Build = \"Your Value Here\"\n// # Build\n// var build = \"Your Value Here\"\n// build\n\n//  var Coverage = \"Your Value Here\"\n//  var directory = \"Your Value Here\"\n// # Coverage directory\n// var coverage = \"Your Value Here\"\n// coverage\n\n//  var logs = \"Your Value Here\"\n// # logs\n// *.log\n// .logs\n\n// #@ Platform Specific\n// .DS_Store\n// Thumbs.db",
   "id": 100,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { finished } = require(\"stream\")\r\n\n var err = \"Your Value Here\"\n var Pass = \"Your Value Here\"\n var an = \"Your Value Here\"\n var error = \"Your Value Here\"\n var object = \"Your Value Here\"\n var here = \"Your Value Here\"\n var to = \"Your Value Here\"\n var indicate = \"Your Value Here\"\n// @param {Error|null} err Pass an error object here to indicate an error\n                        var occured = \"Your Value Here\"\n//                         occured. Very useful for validation; stops the flow here.\n\n// @param {string} key     The key of the property that has finished, \n//                         this gives you a chance to format the key name.\n\n// @param {*} value        The value you want the key to have\n",
   "id": 101,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const storybook = require('@ltht-react/storybook');\n\n// TODO: DEMONSTRATE API",
   "id": 102,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ionic = \"Your Value Here\"\n var cordova = \"Your Value Here\"\n var plugin = \"Your Value Here\"\n var add = \"Your Value Here\"\n var alicloud = \"Your Value Here\"\n// ionic cordova plugin add cordova-plugin-alicloud-feedback --variable const APP_KEY=你的KEY --variable const APP_SECRET=const 你的SECRET",
   "id": 103,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const socks5http = require('socks5-http');\n\n// set socks5 proxy port and host\n// 1080 and \"localhost\" is default\nsocks5http.setSocks5(1080, \"localhost\")\n\n// https GET\nsocks5http.get(\"https://www.google.com\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})\n\n// http GET\nsocks5http.get(\"http://www.google.com\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})\n\n// ip and custom port\nsocks5http.get(\"http://47.98.223.187:3000\", (res) => {\n    let s = \"\";\n    res.on('data', (buffer) => {\n        s += buffer.toString();\n    });\n    res.on('end', () => {\n        console.log(s);\n    })\n})",
   "id": 104,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 29,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var app = require(\"your-awesome-component\");\nvar yourDiv = \"Your Value Here\";\nvar instance = new app(yourDiv);",
   "id": 105,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var spraygun = \"Your Value Here\";\n var template = \"Your Value Here\";\nUsage: spraygun <template> <project-directory>\n\nGenerate a project in the specified directory, based on a template.\n\nFor example, to generate a react app in a directory named hello-world:\n  $ npx spraygun -t react hello-world\n\nThe officially supported spraygun templates are:\n  -t express\n  -t react\n  -t react-ts\n\nTo use a custom template, specify one of the following:\n  -p path   a local template directory\n//   -r URL    a git repository URL",
   "id": 106,
   "stars": 0,
   "errors": [
    17004,
    17008,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// import com.lynxit.contactswrapper.ContactsWrapperPackage;\n// ...\n\n@Override\n var List = \"Your Value Here\";\n var ReactPackage = \"Your Value Here\";\n var getPackages = \"Your Value Here\";\n// protected List<ReactPackage> getPackages() {\n    return Arrays.<ReactPackage>asList(\n        new MainReactPackage(),\n//         ...,\n       new ContactsWrapperPackage()\n   );\n// }",
   "id": 107,
   "stars": 0,
   "errors": [
    1003
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var flv = \"Your Value Here\";\n// flv.$canvas;",
   "id": 108,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const conf = require('run-con')('myapp', {\n    port: 12345,\n    mode: 'test'\n});\n\nconsole.log(JSON.stringify(conf, null, 2));",
   "id": 109,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var type = \"Your Value Here\";\n// type.isAsyncFunction(async function(){}) //=> true",
   "id": 110,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { ProviderStore } from 'react-redux-just'\n\nconst model = {\n  state: {\n    date: {\n      __options:{\n        type: 'date',\n        value: new Date(),\n        receiving: date => date.toString(),\n        request: (resolve, reject) => {\n              var fetch = \"Your Value Here\";\n              fetch( REQUEST_URL , {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ title: 'React POST Request' })\n                })\n                .then(response => response.json())\n                .then(({result}) => resolve(result));\n            }\n      }\n    }\n  }\n}\n\n// ReactDOM.render(\n//     <ProviderStore model={model}>\n//       <App />\n//     </ProviderStore>\n//   ,document.getElementById('root')\n// );\n",
   "id": 111,
   "stars": 0,
   "errors": [
    2349,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 22,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import IntentLauncher, { IntentConstant } from 'react-native-intent-launcher'\n// ...\nIntentLauncher.startActivity({\n    action: 'android.settings.APPLICATION_DETAILS_SETTINGS',\n    data: 'package:com.example'\n})\n// ...",
   "id": 112,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var cd = \"Your Value Here\"\n var contracts = \"Your Value Here\"\n// cd contracts\nvar npm = \"Your Value Here\"\n var install = \"Your Value Here\"\n// npm install\n var run = \"Your Value Here\"\n var build = \"Your Value Here\"\n// npm run build",
   "id": 113,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var NodeWebcam = require( \"node-webcam\" );\n\nvar FSWebcam = NodeWebcam.FSWebcam; //require( \"node-webcam/webcams/FSWebcam\" );\n\nvar opts = {};\n\nvar cam = new FSWebcam( opts );",
   "id": 114,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import propType, { ow } from 'ow-prop-type'\n\nvar React = \"Your Value Here\"\n\nclass MyComponent extends React.Component {\n  static propTypes = {\n    // propType with a predicate\n    total: propType(\n      ow\n        .number\n        .integer\n        .greaterThanOrEqual(0)\n    ),\n    // propType with a callback, must return a predicate\n    current: propType((props) => {\n      return ow\n        .number\n        .integer\n        .greaterThanOrEqual(0)\n        .lessThanOrEqual(props.total)\n    }\n  }\n}",
   "id": 115,
   "stars": 0,
   "errors": [
    2339,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Vue from 'vue'\nimport Vuetify from 'vuetify'\nimport DaySpanVuetify from 'dayspan-vuetify'\nimport App from './App.vue'\n\nimport 'vuetify/dist/vuetify.min.css'\nimport 'material-design-icons-iconfont/dist/material-design-icons.css'\nimport 'dayspan-vuetify/dist/lib/dayspan-vuetify.min.css'\n\nVue.config.productionTip = false\n\nVue.use(Vuetify);\n\nVue.use(DaySpanVuetify, {\n  methods: {\n    getDefaultEventColor: () => '#1976d2'\n  }\n});\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})",
   "id": 116,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\";\ngrunt.initConfig({\n  mustache_html: {\n    development: {\n      options: {\n        src: 'src',\n        dist: 'dist',\n        type: 'mustache' // mustache Or hbs\n      },\n      globals: {\n        analytics_id: 'UA-123456-1'\n      }\n    }\n  }\n});",
   "id": 117,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <script src=\"path/to/dist/js/tether.min.js\"></script>",
   "id": 118,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { request } = require(\"http\")\r\n\r\nfunction log(response) {\n  console.log(`Transaction ID: ${response.transactionId}`)\n  console.log(`Function code: ${response.functionCode}`)\n  console.log(`Total number of registers: ${response.noOfRegisters}`)\n  console.log(`Values: ${response.registerValues.join(', ')}`)\n}\n\nasync function example() {\n  try {\n    var client = \"Your Value Here\"\n//     const response = await client.send(request)\n//     log(response)\n  } catch (error) {\n    console.log(`Error: ${error}`)\n  }\n}\n\nexample()",
   "id": 119,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Size = \"Your Value Here\"\n// Size (Body, H1, etc.)\n//   Alignment (Left, Center, Right)\n//     Weight (Regular, Semibold, etc.)\n//       Color\r\n\r\nfunction Alignment(Left, Center, Right) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 120,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/* bookType can be 'xlsx' or 'xlsm' or 'xlsb' */\nvar wopts = { bookType:'xlsx', bookSST:false, type:'binary' };\n\nvar XLSX = \"Your Value Here\";\n\n// var wbout = XLSX.write(workbook,wopts);\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n  for (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n  return buf;\n}\n\n/* the saveAs call downloads a file on the local machine */\n// saveAs(new Blob([s2ab(wbout)],{type:\"\"}), \"test.xlsx\")\r\n\r\nfunction saveAs(arg0, arg1) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 121,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var dfltCfg = { slot: 'foo' },\n  meta = { defaultConfig: dfltCfg,\n    descr: 'A nice foo for your app.',\n    apiVersion: 1,\n    };\n\nfunction install(app, plugCfg, appCfg) {\n  if (plugCfg === appCfg) { plugCfg = false; }\n  var slot = (plugCfg.slot\n    || appCfg.fooSlot   // <-- that's why we checked above\n    || dfltCfg.slot);\n  app[slot] = function () { return 'bar @ ' + app.name; };\n}\n\nmodule.exports = require('plugmgr1801-pmb/plugify')(module, meta, install);",
   "id": 122,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// get most used from main entry\n// import { SVGO, SVGO_LITE, CONFIG_LITE, PLUGINS_DEFAULT_LIST } from 'libsvgo/module/lib/svgo'\n\n// or get each separately\nimport { SVGO_LITE } from 'libsvgo/module/lib/svgo-lite'\nimport { SVGO_LITECONFIG_LITE } from 'libsvgo/module/lib/svgo/config-lite'\n\n// get each plugin separately\nimport * as addAttributesToSVGElement from 'libsvgo/module/plugins/addAttributesToSVGElement'",
   "id": 123,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const { name } = require(\"assert\")\r\n\r\nvar typeorm = \"Your Value Here\"\n var init = \"Your Value Here\"\n// typeorm init --name MyProject --database mysql",
   "id": 124,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const { start } = require(\"repl\")\r\n\n// var ControlManifest = \"Your Value Here\"\n// - ...\\ControlManifest.Input.xml\n\n//     modify as needed...\n\n\n\n// - modify ...\\node_modules\\pcf-start\\bin\\pcf-start.js\n\n//     enable cors by adding cors: true, \n\n```javascript\n// Start server\nvar options = {\n    port: 8181,\n    host: '0.0.0.0',\n    cors: true, \n    root: path.resolve(process.cwd(), codePath),\n    open: true,\n// ",
   "id": 125,
   "stars": 0,
   "errors": [
    2349,
    1160
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// configuring client\nconst prosperworks = require('prosperworks')({\n  email: process.env.EMAIL,\n  token: process.env.TOKEN\n});\n\n// using async / await (native in Node.js v8.x)\n// var result = await prosperworks.companies.list();\n// console.log(JSON.stringify(result, null, 2));\n\n// or using with promises\nprosperworks.companies.list()\n.then(result => {\n  console.log(JSON.stringify(result, null, 2));\n})",
   "id": 126,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/** @type {string[]} */\nconst verbs = require('verb-corpus');\n\nconsole.log(verbs.length);",
   "id": 127,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { BuildpackJob } from 'dray-client';\nvar manager = \"Your Value Here\";\nlet compilation = new BuildpackJob(manager);\ncompilation.addFiles([\n//     {name: 'foo.ino', data: new Buffer()}\n]);\ncompilation.setEnvironment({\n    PLATFORM_ID: 6\n});\ncompilation.setBuildpacks([\n    'particle/buildpack-wiring-preprocessor',\n    'particle/buildpack-particle-firmware:0.5.1-photon'\n]);\ncompilation.submit().then((binaries) => {\n    // Do something with binaries\n}, (reason) => {\n    console.error(\"Compilation error:\", reason)\n});",
   "id": 128,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var store = \"Your Value Here\"\nvar prefixed = store.withIdPrefix('foo:')\n\nprefixed.add({ _id: 'bar', value: 42 }) // will add the object with id 'foo:bar'\n  .then(function (doc) {\n    // update documents with id 'foo:other' and 'foo:bar'\n    return prefixed.update(['other', 'foo:bar'], { other: 'baz' })\n  })\n\n// Finds all objects which id start with 'foo:'\nprefixed.findAll().then(function (docs) {})\n\n// Handle all changes to objects which id start with 'foo:'\nprefixed.on('change', function (eventName, doc) {})\n\nvar moarPrefixed = prefixed.withIdPrefix('moarPrefix:') // prefix is now 'foo:moarPrefix:'",
   "id": 129,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const RequestParameters = require('@luigisamurai/request-parameters');\nvar requiere = \"Your Value Here\";\nconst JSONFile = requiere('./JSONFile');\n\nconst request = new RequestParameters.Request();\n\n// request-promises options\nconst setting = {\n  resolveWithFullResponse: true,\n  simple: false\n};\n\n// set the common parameters\nrequest.setParameters({\n  baseUrl: 'http://www.google.com',\n  setting\n});\n\n// Get request with request-parameter dependency\nconst getPromise = request.send(JSONFile.GET, {\n  urlParams: { homeId: 1 },\n  queryParams: { offset: 0, limit: 100 },\n});\n\n// Also can use async - await to wait the promises\ngetPromise.then((response) => {\n  const statusCode = response.statusCode;\n  const body = response.body;\n\n  console.log(statusCode, ' ', body);\n});\n\n// Post request with request-parameter dependency\nconst postPromise = request.send(JSONFile.Post, {\n  body: { name: 'home view' }\n});\n\npostPromise.then((response) => {\n  const statusCode = response.statusCode;\n  const body = response.body;\n\n  console.log(statusCode, ' ', body);\n});\n\n// Note the URIs don't exist so the request return 404 status code.",
   "id": 130,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 29,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// $('li', 'ul', '<ul id=\"fruits\">...</ul>');",
   "id": 131,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var SpeechToTextV1 = \"Your Value Here\";\nconst speechToText = new SpeechToTextV1({\n/* authenticator, version, serviceUrl, etc... */\n});\n// const recognizeStream = recognizeUsingWebSocket(params);\n\n// getTransactionId returns a Promise that resolves to the ID\nrecognizeStream.getTransactionId().then(\n  globalTransactionId => console.log(globalTransactionId),\n  err => console.log(err),\n);\r\n\r\nfunction recognizeUsingWebSocket(params) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 132,
   "stars": 0,
   "errors": [
    2351,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const { name } = require(\"assert\")\r\n\r\nvar yo = \"Your Value Here\"\n var axi = \"Your Value Here\"\n// yo axi-dtsi-gulp-angular [app-name]",
   "id": 133,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var chance = \"Your Value Here\";\n// chance.month({country: 'de'})\n// 'Juli'",
   "id": 134,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var nock = \"Your Value Here\";\nconst scope = nock('http://www.headdy.com')\n  .replyDate()\n  .get('/')\n  .reply(200, { hello: 'world' })",
   "id": 135,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mailchimp = \"Your Value Here\";\n//to create some new merge fields in your list\n//http://developer.mailchimp.com/documentation/mailchimp/reference/lists/merge-fields/\n\nmailchimp\n  .post('batches', {\n    operations : [\n      {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG1',\n          type : 'string'\n        })\n      }, {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG2',\n          type : 'string'\n        })\n      }, {\n        method : 'POST',\n        path   : '/lists/YOUR-LIST-ID-HERE/merge-fields',\n        body   : JSON.stringify({\n          name : 'MERGETIZAG3',\n          type : 'string'\n        })\n      }\n    ]\n  })\n  .then(function(result){\n    console.log(result);\n  })\n  .catch(function(error){\n    console.log(error);\n  });",
   "id": 136,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 34,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var log = \"Your Value Here\";\n// log.bind(logger, levelName);",
   "id": 137,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const crypto = require('crypto');\nfunction verifySignature({\n  data,\n  signature,\n  publicKey\n}) {\n  // Verify that we signed correctly using public key\n  const verify = crypto.createVerify('RSA-SHA384');\n  verify.write(data);\n  verify.end();\n\n  // True if signature is verified\n  return verify.verify(publicKey, signature, 'base64');\n}",
   "id": 138,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var b = \"Your Value Here\"\n// .b-foo {\n//   .bar {\n//     …\n//   }\n  \n//   .qux {\n//     …\n//   }\n// }",
   "id": 139,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export interface GoogleLocationDetailResult {\n  adr_address: string;\n  formatted_address: string;\n  icon: string;\n  id: string;\n  name: string;\n  place_id: string;\n  scope: string;\n  reference: string;\n  url: string;\n  utc_offset: number;\n  vicinity: string;\n  types: string[];\n  geometry: {\n    location: {\n      lat: number;\n      lng: number;\n    };\n    viewport: {\n      [type: string]: {\n        lat: number;\n        lng: number;\n      };\n    };\n  };\n  address_components: Array<{\n    long_name: string;\n    short_name: string;\n    types: string[];\n  }>;\n}",
   "id": 140,
   "stars": 0,
   "errors": [
    8006
   ],
   "hasCode": true,
   "nondeletedLines": 31,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ImagePickerIOS = \"Your Value Here\";\nImagePickerIOS.openCameraDialog({\n  showImages: true,\n  showVideos: false\n}, (imageUrl, height, width) => {\n  // success\n}, (error) => {\n  // cancel\n});",
   "id": 141,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var expect = \"Your Value Here\";\n// expect(const [button1, button2, button3]).to.be.verticallyAligned('top', 1.5);",
   "id": 142,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const hdl = require('hdl-js');\n\nconst {\n  emulator: {\n    Clock,\n    Pin,\n  },\n} = hdl;\n\nconst clock = new Clock({rate: 10, value: -5});\nconst pin = new Pin({name: 'a'});\n\n// Track clock events.\nclock.on('tick', value => pin.setValue(value));\n\nclock.tick();\n\nconsole.log(pin.getValue()); // +5;",
   "id": 143,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const App = () => {\n         var serviceList = \"Your Value Here\";\n    return \n//         <serviceList.ProvideAll>\n            // rest of the application\n//         </serviceList.ProvideAll>\n    ;\n}",
   "id": 144,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var getQueue = \"Your Value Here\";\n// getQueue(callback)",
   "id": 145,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nvar course = \"Your Value Here\"\n// Find the top 10 students who have taken a particular course\n// and earned a grade of at least 3:\n\nconst classes = {\n   Student: null,\n   Course: course\n}\n\nconst criteria = {\n  descending: 'grade',\n  greaterThanOrEqualTo: ['grade', 3],\n  limit: 10,\n  include: 'student'\n}\n\nvar parsm = \"Your Value Here\"\n\n// const joinObjs = await parsm.getJoinQuery(classes, criteria).find()\n\n\r\nexport { }\r\n// joinObjs is now an array of instances of the class 'Student2Course'\n// with details of students in the 'student' column.",
   "id": 146,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var catalog = \"Your Value Here\"\ncatalog\n    Promise\n        var files = \"Your Value Here\"\n        files\n            var index = \"Your Value Here\"\n//             index.js — your polyfill\n\n//         index.json\n//         index.js",
   "id": 147,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//main.js\nimport BoxButton from 'box-components-button'\nvar Vue = \"Your Value Here\"\n// Vue.use(BoxButton)",
   "id": 148,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ffmpeg = \"Your Value Here\";\n// ffmpeg('/path/to/file.avi').noVideo();",
   "id": 149,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const outStr = \"[{\\\"Root\\\":\\\"0x763f7f5e16506128824178bf2ee855e35a4b93689e8e54ed1e3d03177da09917\\\",\\\"State\\\":{\\\"Num\\\":345,\\\"OS\\\":{\\\"Index\\\":384,\\\"OutCM\\\":null,\\\"Out_O\\\":null,\\\"Out_Z\\\":{\\\"AssetCM\\\":\\\"0x5545b6d57ef6a35b124963daa0dee992da5243e31eb0d99d8f66d0f1a13e9012\\\",\\\"EInfo\\\":\\\"0x04fc0547da3590767317c3719f7b89516f7afb01037ca09cefc0bd75b4dccb95cfff665a0028069289960dcf07b69928e8d3da06ad0249ba7fd2c31505f5eef96db8741382f68be2e34210be409a84ae67be5c4687ddef64c13bba278d5fbea9d69f1a335585c8544a3b3eac8e7812041a01d95326f8da65e588784cc70c1b5a4b5dd7d0f5921007aef4043ac515cadc864ac206b2902a04022603566a437deb3100fdc04b88eb249746631447cf25964fb8f32fb4314455efbc1ea7520865f52aa762629ab8eed99e0a7918918dfe186188ddf61d7fb3d855a64d71ff5c9688\\\",\\\"OutCM\\\":\\\"0x5d3ba6999629152264618694968cd18a7a4c7790e2c213498e99209c564039ab\\\",\\\"PKr\\\":\\\"0xfaf5e31e63cf54a81cb494e57719abf9e2af71fb52720a4ad476ce78006ac0af202f0329828102356f29597815773200b75775b6837bf8592e20eb4df75e73a9c01a79af111451f7f38f4c2f79f03772a9e09b31d5c7bf2ab37808835362c4a0\\\",\\\"Proof\\\":\\\"0x02902bbd460a55b0dbaf4a96848d0b24ef5f2faab6409b3d68dc77f8f32a96a41d0a450a6076693fd6bef7e4466e6f0533e18905c8fc656741e7d1faf2ae298dba7edb87ab8b1293900e3fac4bd8e47a09b1ee02cf7770965bf990f60c53f57a3c08032dcc4023c7aa706f8fd35c68119caa73d15e8ca1ff35cc9e69fcdd8e46d5120c\\\",\\\"RPK\\\":\\\"0xb74e284e16cc77659690cee346076701a1040539ce84e6af71292f0acd5a906d\\\"},\\\"RootCM\\\":\\\"0xe495fe6b43813719352a6256e826dfae9d61d32b28ce1814e0b6a60b9cb05009\\\"},\\\"TxHash\\\":\\\"0x91a5cc04f6af1803bd8a523fcf23bc845c42552bb7d6d0a49e347ef5070ba274\\\"}}]\"\n\nvar tx = \"Your Value Here\"\n\ntx.DecOut(\n  outStr,\n//   keys.tk.ToBase58(),\n  (err, content) => {\n    if (err) {\n      console.error(err)\n    } else {\n      console.log(content)\n    }\n  }\n)",
   "id": 150,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Mongoose from 'mongoose';\n\n// const Test = new Mongoose.Schema({...\n// export  {tests:Test}",
   "id": 151,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {any, boolean, number, string} from \"schemation\"\nimport {and, not, or}                 from \"schemation\"\nimport {where}                        from \"schemation\"\nimport {optional}                     from \"schemation\"\nimport {lazy}                         from \"schemation\"",
   "id": 152,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var freebase = \"Your Value Here\";\n// freebase.search(\"doug\",{type: \"/ice_hockey/hockey_player\"})",
   "id": 153,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function inc(v) {\n  return v + 1;\n}\n\nfunction decr(v) {\n  return v - 1;\n}\n\nvar Arrow = \"Your Value Here\";\n\n// Arrow(inc).next(Arrow(decr)).run(1) == Arrow.next(Arrow(inc), Arrow(decr)).run(1);",
   "id": 154,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { env } = require(\"process\")\r\n\r\nvar USAGE = \"Your Value Here\"\n// USAGE\n//  var dev = \"Your Value Here\"\n//   $ dev-env export PROJECT\n\n// ARGUMENTS\n//   PROJECT  project name\n\n// OPTIONS\n//   -d, --database  database\n//   -h, --help      show CLI help",
   "id": 155,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var replace = \"Your Value Here\";\n// replace( \"java\" ).ignoringCase(); // => ReplaceDefinition",
   "id": 156,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var arrayTransformer = \"Your Value Here\";\n// console.log(arrayTransformer.stringToArray(db.get('newArray')))",
   "id": 157,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var agenda = \"Your Value Here\";\nagenda.on('success:send email', function(job) {\n  console.log(\"Sent Email Successfully to: %s\", job.attrs.data.to);\n});",
   "id": 158,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var errorCB = \"Your Value Here\";\nvar err = \"Your Value Here\";\n// errorCB(err) {\n  console.log(\"SQL Error: \" + err);\n// },\n\nvar successCB = \"Your Value Here\";\n\n// successCB() {\n  console.log(\"SQL executed fine\");\n// },\n\n// openCB() {\n  console.log(\"Database OPENED\");\n// },\n\n// var db = SQLite.openDatabase(\"test.db\", \"1.0\", \"Test Database\", 200000, openCB, errorCB);\ndb.transaction((tx) => {\n  tx.executeSql('SELECT * FROM Employees a, Departments b WHERE a.department = b.department_id', [], (tx, results) => {\n      console.log(\"Query completed\");\n\n      // Get rows with Web SQL Database spec compliance.\n\n      var len = results.rows.length;\n      for (let i = 0; i < len; i++) {\n        let row = results.rows.item(i);\n        console.log(`Employee name: ${row.name}, Dept Name: ${row.deptName}`);\n      }\n\n      // Alternatively, you can use the non-standard raw method.\n\n      /*\n        let rows = results.rows.raw(); // shallow copy of rows Array\n\n        rows.map(row => console.log(`Employee name: ${row.name}, Dept Name: ${row.deptName}`));\n      */\n    });\n});\r\n\r\nfunction openCB() {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 159,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {Screen} from 'geoeye-js'\n\nconst screen = new Screen({\n  config: './config.json', \n  container: 'container'\n});",
   "id": 160,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var metric = \"Your Value Here\";\nvar userMetric = metric.instance();\nuserMetric.start('metric');\n// ....\nuserMetric.end('metric');",
   "id": 161,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var level = require('level-hyper')\nvar Snapshot = require('level-snapshot')\n\nvar db = level('./db')\nvar snapshot = Snapshot(db)\n\nsnapshot.on('snapshot:complete', function (snapshotName) {\n  console.log('took snapshot', snapshotName)\n})\n\nsnapshot.start()",
   "id": 162,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import duration from 'callbag-duration-progress'\nimport forEach from 'callbag-for-each'\nimport map from 'callbag-map'\nimport pipe from 'callbag-pipe'\n\nconst distance = d => t => t * d\n\nconst easeOut = p => 1 - (1 - p) * (1 - p)\n\nconst moveBall = (ball, easing) => {\n  pipe(\n    duration(1000),\n    map(easing),\n    map(distance(400)),\n    forEach(y => {\n      ball.style.transform = `translate3d(0, ${y}px, 0)`\n    }),\n  )\n}\n\n// moveBall(document.getElementById('ball'), easeOut)",
   "id": 163,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const putout = require('putout');",
   "id": 164,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var git = \"Your Value Here\"\n var clone = \"Your Value Here\"\n// git clone https://github.com/provable-things/ptokens.js.git",
   "id": 165,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import CryptoAesCbc from 'react-native-crypto-aes-cbc';\n\nvar key;\n\n var iv;\nkey = \"XXXXX\" // in base64 format\n   var keysize128;\niv = \"XXXX\"   // in base 64 format\n var keysize256;\nkeysize128 = \"128\" \nkeysize256 = \"256\"\nvar text;\ntext = \"Sachin Agrawal\"\n\n  CryptoAesCbc.encryptInHex(iv,key,\"sachin agrawal\",\"128\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.encryptInBase64(iv,key,\"sachin agrawal\",\"128\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  var key256 = \"Your Value Here\";\n  CryptoAesCbc.encryptInHex(iv,key256,\"sachin agrawal\",\"256\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.encryptInBase64(iv,key256,\"sachin agrawal\",\"256\").then((encryptString) => {\n    console.log(encryptString)\n  })\n  CryptoAesCbc.decryptByBase64(iv,key,\"ZN+DBxlPG+2lmWx6Bu7bqA==\",\"128\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByHex(iv,key,\"64df8307194f1beda5996c7a06eedba8\",\"128\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByBase64(iv,key256,\"Re3CIB8H3wYkUdl/l6WGGw==\",\"256\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.decryptByHex(iv,key256,\"45edc2201f07df062451d97f97a5861b\",\"256\").then((decryptString) => {\n    console.log(decryptString)\n  })\n  CryptoAesCbc.sha256(\"sachin\",(hashKey) => {\n    console.log(hashKey)\n  })",
   "id": 166,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 39,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var sorting = require('postcss-sorting')\n\nvar postcss = \"Your Value Here\"\n\n// postcss([\n  sorting({ 'sort-order': require('cssortie') })\n// ]))",
   "id": 167,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var SecurePostmate = \"Your Value Here\";\n// Kick off the handshake with the iFrame\nconst handshake = new SecurePostmate({\n//   container: document.getElementById('some-div'), // Element to inject frame into\n  url: 'http://child.com/page.html'\n});\n\n// When parent <-> child handshake is complete, data may be requested from the child\nhandshake.then(child => {\n\n  // Fetch the height property in child.html and set it to the iFrames height\n  child.get('height')\n    .then(height => child.frame.style.height = `${height}px`);\n\n  // Listen to a particular event from the child\n  child.on('some-event', data => console.log(data)); // Logs \"Hello, World!\"\n});",
   "id": 168,
   "stars": 0,
   "errors": [
    2351
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var $in = \"Your Value Here\";\n// <collection instance>.find({<query key>: {$in: [<query value>]}}, ...)",
   "id": 169,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var rand = require('random-pro');\nconsole.log(rand.generateEvenNumber(10,100));\n// 96\nconsole.log(rand.generateEvenNumber(10,30));\n// 22",
   "id": 170,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const client = require(\"badonker\");\nconst honker = new client();\n\nasync function test() {\n  console.log(await honker.bulknsfw.booty());\n}\n\ntest();",
   "id": 171,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// select the right Ad Id according to platform\n  var admobid = {};\n  var navigator = \"Your Value Here\";\n  if( /(android)/i.test(navigator.userAgent) ) { // for android & amazon-fireos\n    admobid = {\n      banner: 'ca-app-pub-xxx/xxx', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/yyy'\n    };\n//   } else if(/(ipod|iphone|ipad)/i.test(navigator.userAgent)) { // for ios\n    admobid = {\n      banner: 'ca-app-pub-xxx/zzz', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/kkk'\n    };\n  } else { // for windows phone\n    admobid = {\n      banner: 'ca-app-pub-xxx/zzz', // or DFP format \"/6253334/dfp_example_ad\"\n      interstitial: 'ca-app-pub-xxx/kkk'\n    };\n  }",
   "id": 172,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "let counter = 0;\n\nvar anticipatedCall = \"Your Value Here\";\n\nconst increment = anticipatedCall(() => {\n  counter = counter + 1;\n});\n\nincrement\n  .nthCallDuring(3, () => {\n    counter = 5;\n    increment();\n    increment();\n    increment();\n  })\n  .then(() => console.log(`counter value is ${counter}`));\n// Prints `counter value is 8`",
   "id": 173,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {Handler} from 'handleable';\n\nlet h = new Handler();\n\n// let e = await h.handle(\n  new Error('unhandled error'), // error instance\n  [ // list of handler recipes\n    {\n      handler: 'block', // handler name\n      message: '%{foo} unhandled error', // optional handler error message\n      block: async () => true // handler-specific property,\n//       foo: 'bar' // custom variable for the message\n    },\n    {\n      handler: 'mongoUniqueness', // handler name\n      message: 'already taken', // optional handler error message\n      indexName: 'uniqueEmail' // handler-specific property\n    }\n  ]\n// ); // -> a list of errors",
   "id": 174,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var connect = \"Your Value Here\"\n// connect({host: 'mqtt.test.io', ssl: true, path: '/mqtt'})\n//   .then(client => { ... })\n\n// or\n// connect('wss://mqtt.test.io/mqtt')\n//   .then(client => { ... })",
   "id": 175,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  var wrapper = \"Your Value Here\";\n  const handler = wrapper({\n      url: 'http://example.com/endpoint',\n      endpoint: '/endpoint',\n      auth: 'auth',\n      headers: 'headers',\n      method: 'method',\n      path_params: 'path_param',\n      query_params: 'query_param',\n      required_fields: 'required_fields',\n      request_map: 'request_map',\n      response_map: 'response_map',\n      transform_response: 'transform_response'      \n  });",
   "id": 176,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Select = require('react-select-plus');\n\nvar isLoadingExternally = true;\n\n<Select\n  name=\"form-field-name\"\n    isLoading={isLoadingExternally}\n//     ...\n/>",
   "id": 177,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var pipep = \"Your Value Here\";\n> pipep([\n    function(a) { return Promise.resolve(a + 3); },\n    function(b) { return Promise.resolve(b * 10); },\n  ])(6);\nPromise\n90",
   "id": 178,
   "stars": 0,
   "errors": [
    1109,
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var json = {\"hey\": \"guy\",\"anumber\": 243,\"anobject\": {\"whoa\": \"nuts\",\"anarray\": [1,2,\"thr<h1>ee\"], \"more\":\"stuff\"},\"awesome\": true,\"bogus\": false,\"meaning\": null, \"japanese\":\"明日がある。\", \"link\": \"http://jsonview.com\", \"notLink\": \"http://jsonview.com is great\"};\n\n$(function() {\n//   $(\"#json\").JSONView(json);\n  // with options\n//   $(\"#json-collasped\").JSONView(json, { collapsed: true });\n});",
   "id": 179,
   "stars": 0,
   "errors": [
    2592
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var runIt = \"Your Value Here\";\n// runIt(args, const [options]);",
   "id": 180,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "<p-accordion>\n//     <p-accordionTab header=\"Header 1\">\n       Content 1\n    </p-accordionTab>\n//     <p-accordionTab header=\"Header 2\">\n        Content 2\n    </p-accordionTab>\n//     <p-accordionTab header=\"Header 3\">\n        Content 3    \n    </p-accordionTab>\n</p-accordion>",
   "id": 181,
   "stars": 0,
   "errors": [
    17004,
    17004,
    17004,
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var rcon = \"Your Value Here\";\nrcon.init('fsrcon/init')\n  .then(\n    // resolved\n    function () {\n//       ..\n    },  \n    // rejected\n    function (err) {\n//       ..\n    }\n  );",
   "id": 182,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'view-design/dist/styles/iview.css';",
   "id": 183,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {render, html} from '//unpkg.com/lighterhtml?module';\n\n// document.body.appendChild(\n  // as unkeyed one-off content, right away 🎉\n  html.node`<strong>any</strong> one-off content!<div/>`\n// );\n\n// as automatically rendered wired content 🤯\n// todo(document.body.lastChild);\nfunction todo(node, items = []) {\n  render(node, html`\n  <ul>${\n  items.map((what, i) => html`\n    <li data-i=${i} onclick=${remove}> ${what} </li>`)\n  }</ul>\n  <button onclick=${add}> add </button>`);\n  function add() {\n    var prompt = \"Your Value Here\";\n//     items.push(prompt('do'));\n    todo(node, items);\n  }\n  function remove(e) {\n    items.splice(e.currentTarget.dataset.i, 1);\n    todo(node, items);\n  }\n}",
   "id": 184,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Fetch from 'rd-fetch';\n\nFetch.json('https://example.com/api')\n  .then((response) => {\n    console.log(response.json);\n  })\n  .catch((error) => {\n    console.log(error.json);\n  });",
   "id": 185,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var $DOM = require( \"mock-dom-resources\" );\n\n// ..",
   "id": 186,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Schema = \"Your Value Here\";\nSchema.plugin(\n//   mongooseHidden,\n  {\n    hidden: {\n//       ...omitCommonFields.underscored.objTrue,\n      some_other_field: true,\n      another_field_to_ignore: true\n    }\n  }\n);",
   "id": 187,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Accordion from \"@beisen/accordion\"\n",
   "id": 188,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <script src=\"rstate.min.js\"></script>",
   "id": 189,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "    var Extension = \"Your Value Here\";\n    <Extension Géoportail pour iTowns>/\n        GpPluginItowns.js\n            (version minifiée du code javascript pour une utilisation en production)\n        GpPluginItowns.css\n            (version minifiée des css pour une utilisation en production)\n        GpPluginItowns-src.js\n            (version non minifiée du code javascript pour une utilisation en développement)\n        GpPluginItowns-src.css\n//             (version non minifiée des css pour une utilisation en développement)",
   "id": 190,
   "stars": 0,
   "errors": [
    17004,
    17008,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mixtool = require('mix-h5');\n\n\n// 统计（百度，cnzz）\nvar tracking = mixtool.tracking;\n// init tracking\ntracking.add('baidu', 'xxxxxx'); // baidu site id\ntracking.add('cnzz', 'xxxxxx'); // cnzz site id\n\n\nsetTimeout(function() {\n    tracking.log('loaded');\n}, 1000);\n\n\n// 图片预加载\nvar imgLoader = mixtool.imgLoader;\nvar xxx = \"Your Value Here\";\n// over: preload over, count: loaded image length, length: preload image total length\n// map: loaded image name, percent: count/length, fakePercent: fake percent\nimgLoader.preloadImg(function(over, count, length, map, percent, fakePercent) {\n    if(over && 100 == percent) {\n        // todo\n    } else {\n        console.log(percent);\n    }\n}, {\n    selector: 'xxx', // 预加载图片地址筛选器, default: '.image-resource-wrap span, img.image-resource'\n    fakeTime: xxx, // 模拟加载时间, default: 2000\n    fakePercent: xxx // 模拟加载百分比, default: 50\n});\n// get preload image\nimgLoader.get('images/logo.png'); // 返回带版本号的图片地址，如果有cdn前缀就返回前缀，该方法必须要在preloadImg方法执行之后才能调用\n\n\n// 设置微信分享内容\nvar wxtool = mixtool.wx;\nvar fail = \"Your Value Here\";\nwxtool.setShare({\n    title: 'xxx', // 分享标题\n    link: 'xxx', // 分享链接\n    img: 'xxx', // 分享图片\n    desc: 'xxx', // 分享描述\n    shareLog: {\n        openid: 'xxx', // 用户微信openid\n        nickname: 'xxx', // 用户昵称\n//         ...: 'xxx' // 头像等其他用户信息\n    }, // 分享统计\n//     success: function() {...}, // 分享成功回调函数\n//     fail: function() {...} // 分享失败回调函数\n});\n\n\n// 微信支付\nvar wxtool = mixtool.wx;\nwxtool.pay({\n    openid: 'xxx', // 用户openId\n    product_id: 'xxx', // 商品ID\n    body: 'xxx', // 商品描述\n    total_fee: 'xxx', // 总金额\n    detail: 'xxx', // 商品详情\n    attach: 'xxx', // 附加数据\n    out_trade_no: 'xxx', // 商户订单号\n//     success: function() {...}, // 支付成功回调函数\n//     fail: function() {...} // 支付失败回调函数\n});\n\n\n// 注：上述微信分享和微信支付功能默认配置的是逆行信息科技公众号的appId，在其它公众号项目中使用这些微信功能，需要先执行initWXSDK方法传入相应的appid：\nwxtool.init({\n    appId: 'xxxxxx', // appid  页面域名需要与公众号中设置的回调一致\n    sdkUrl: '//res.wx.qq.com/open/js/jweixin-1.1.0.js', // 微信js sdk地址\n    siteSignApi: 'http://jishub.com/api/siteSign', // 签名接口\n    sitePayApi: 'http://jishub.com/api/sitePay', // 微信支付统一下单\n    jsApiList: [ // 开启的js接口：定制分享内容支付\n        'onMenuShareTimeline',\n        'onMenuShareAppMessage',\n        'chooseWXPay'\n    ],\n    initFail: function () { // 初始化失败\n        console.log('wx init fail');\n    },\n    initDone: function () { // 初始化成功\n        console.log('wx init done');\n    },\n    debug: false // debug模式\n}, function () {\n    // 初始化成功回调\n});\n\n\n// 监测手机横竖屏(限制横屏)\nmixtool.landscape({\n    'pic': 'xxx', // 提示图片\n    'text': '为了更好的体验，请将手机/平板竖过来', // 提示文字\n    'bgcolor': '#32373b', // 遮罩背景色\n    'txtColor': '#ffd40a', // 遮罩字颜色\n    'prefix': 'MixShine', // 遮罩class样式名 prefix + '_landscape'\n    'zIndex': 10000, // 遮罩z-index值\n    'init': false // 监测初始化后回调\n}, function() {\n    // 横屏回调\n}, function () {\n    // 竖屏回调\n});\n\n\n// 监测手机横竖屏(手动控制限制横屏还是竖屏)使用new关键字创建限制实例\nvar restrict = new mixtool.landscape({\n    'manual': true, // 手动控制时必须设为true\n    'pic': 'xxx', // 提示图片\n    'text': '为了更好的体验，请将手机/平板竖过来', // 限制横屏时的提示文字\n    'vetiText': '为了更好的体验，请将手机/平板横过来', // 限制竖屏时的提示文字\n    'bgcolor': '#32373b', // 遮罩背景色\n    'txtColor': '#ffd40a', // 遮罩字颜色\n    'prefix': 'MixShine', // 遮罩class样式��� prefix + '_landscape'\n    'zIndex': 10000, // 遮罩z-index值\n    'init': false // 监测初始化后回调\n}, function() {\n    // 横屏回调\n}, function () {\n    // 竖屏回调\n});\nrestrict.restrictLand(); // 限制横屏\nrestrict.restrictVeti(); // 限制竖屏\nrestrict.noRestrict(); // 无限制\nrestrict.restrictAll(); // 横屏竖屏都限制\n\n\n\n// util工具集\nvar util = mixtool.util;\n\nutil.loadScript // 加载js\nutil.loadImage // 加载图片\nutil.nextFrame // requestAnimationFrame或者setTimeout fallback\nutil.cancelFrame // cancelRequestAnimationFrame或者clearTimeout fallback\nutil.setCssPrefix // 根据浏览器设置css前缀\nutil.styleVender // 根据浏览器获取css前缀\nutil.browser // 浏览器内核判断 ex: util.browser.versions.ios\nutil.isFunction\nutil.isString\nutil.isArray\nutil.getElement // 根据输入内容返回DOM元素，传入字符串就作为DOM的id，传入DOM元素返回本身\nutil.getOffset // 根据输入内容返回DOM元素，传入字符串就作为DOM的id，传入DOM元素相对给定相对元素或body左上角的偏移量\nutil.extend // 将源对象的所有属性拷贝到目标对象中\nutil.genNonceStr // 获取随机数\nutil.setCookie\nutil.getCookie\nutil.getUrlQuery // 读取url上带的参数\nutil.buildUrlQuery // 拼接url参数",
   "id": 191,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 108,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/**\n   * wechatConfig 配置信息\n   * \n   * @param appid 应用唯一标识，在微信开放平台提交应用审核通过后获得\n   * @param redirectUri 重定向地址，需要进行UrlEncode\n   * @param scope 应用授权作用域，拥有多个作用域用逗号（,）分隔，网页应用目前仅填写snsapi_login即可\n   * @param loginType 默认 jssdk\n   * @param style     提供\"black\"、\"white\"可选，默认为黑色文字描述。详见文档底部FAQ\n   * @param href 自定义样式链接，第三方可根据实际需求覆盖默认样式。详见文档底部FAQ\n   * @param state 用于保持请求和回调的状态，授权请求后原样带回给第三方。该参数可用于防止csrf攻击（跨站请求伪造攻击），建议第三方带上该参数，可设置为简单的随机数加session进行校验\n   * @param selfRedirect true：手机点击确认登录后可以在 iframe 内跳转到 redirect_uri，false：手机点击确认登录后可以在 top window 跳转到 redirect_uri。默认为 false。\n*/\n\nimport { DWWeChatLoginConfig } from 'angular-daiwei-wechat-login';\n\nvar Component = \"Your Value Here\";\n\n// @Component({\n//   ...\n  template: `<dw-wechat-login [width]=\"'300px'\" [height]=\"'410px'\" [config]=\"weChatConfig\">\n            </dw-wechat-login>`\n// })\nexport class AppComponent {\n\n  wechatConfig: DWWeChatLoginConfig = {\n    appid: 'wxbdc5610cc59c1631',\n    redirectUri: 'https%3A%2F%2Fpassport.yhd.com%2Fwechat%2Fcallback.do',\n    state: '3d6be0a4035d839573b04816624a415e',\n  };\n\n  constructor() {}\n}\n",
   "id": 192,
   "stars": 0,
   "errors": [
    8010
   ],
   "hasCode": true,
   "nondeletedLines": 24,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" />\n// <link rel=\"stylesheet\" href=\"dist/leaflet-push-content-control.css\" />",
   "id": 193,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CrudWrapper = require('mrs-node-util').crud;",
   "id": 194,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var mongooseQueue = \"Your Value Here\"\n// await mongooseQueue.reset()\nconsole.log('The queue was completely purged of all jobs.')\r\n\r\nexport { }\r\n",
   "id": 195,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Route = \"Your Value Here\";\n// Route('/home', HomeComponent)\n    .meta({\n        title: 'Home',\n        icon: 'fa-home'\n    });\n\n// Output\n{\n//     path: '/home',\n//     component: HomeComponent,\n    meta: {\n//         title: 'Home',\n        icon: 'fa-home'\n    }\n}",
   "id": 196,
   "stars": 0,
   "errors": [
    1128,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var MP = \"Your Value Here\";\n// MP.Memberships.get('/some/future/url', myAccessToken)\n  .then(function (data) {\n    console.log(\"You got the data:\", data);\n  });",
   "id": 197,
   "stars": 0,
   "errors": [
    1128,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CurrencyFormatter = \"Your Value Here\";\n// constructor\ninterface CurrencyFormatterProps {\n  locales: string | string[],\n  minimumIntegerDigits?: number,\n  precision?: number,\n  useGrouping?: boolean,\n  localeMatcher?: 'lookup' | 'best fit',\n//   formatter?: typeof CurrencyFormatter.formatter,\n\n  style?: 'decimal' | 'currency' | 'percent',\n  currency?: string,\n  currencyDisplay?: 'symbol' | 'code' | 'name',\n}\n\n//options of format\ninterface optionsofformat {\n  minimumIntegerDigits?: number,\n  precision?: number,\n  useGrouping?: boolean,\n  localeMatcher?: 'lookup' | 'best fit',\n\n  style?: 'decimal' | 'currency' | 'percent',\n  currency?: string,\n  currencyDisplay?: 'symbol' | 'code' | 'name',\n}",
   "id": 198,
   "stars": 0,
   "errors": [
    8006,
    8006
   ],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var cat = \"Your Value Here\"\n// ☁ ~ cat Garden.js\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst GardenStyle = styled.div`\n  opacity: 1\n`\n\nconst Garden = props => (\n//   <GardenStyle>Hello {props.text}</GardenStyle>\n// )\n\nexport default Garden",
   "id": 199,
   "stars": 0,
   "errors": [
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "#!/usr/bin/env node\n\nvar husk = require('..').exec();\n\nhusk()\n  .whoami(function(code, signal) {\n    console.log('[code: %s, signal: %s]', code, signal);\n  })\n  .once('end', console.log.bind(null, '%s'))\n  .print()\n  .run();",
   "id": 200,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var find = \"Your Value Here\"\n/* Predicate fn */\nfind(\n  item => item.id === 1,\n//   todos\n)\n// => {id: 1, name: \"lorem\", tagId: 2}\n\n/* Matching object */\nfindWith(\n  {\n    \"id\": 1\n  },\n//   todos\n)\n// => {id: 1, name: \"lorem\", tagId: 2}\n\n/* Matching object & predicate fn */\nfilterWith(\n  {\n//     \"tagId\": is // same as `tagId: source => is(source)`\n  },\n//   todos\n)\n// => [{id: 1, name: \"lorem\", tagId: 2}]\n\n/* Syntactic sugar */\nfilterWith(\n  {\n//     \"!tagId\": is // same as `tagId: not(is)`\n  },\n//   todos\n)\n\r\nfunction findWith(arg0, todos) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n// => [\n//  {id: 2, name: \"ipsum\", tagId: null},\n//  {id: 3, name: \"dolor\", tagId: null}\n// ]",
   "id": 201,
   "stars": 0,
   "errors": [
    2349,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 24,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const htmlStream = require('web-html-stream');\n\n/**\n * @param {object} node, a DOM node like object.\n * @return {object} Anything really; return values are accumulated in an\n *   array.\n */\nfunction handler(node, ctx) {\n    // Do something with the node\n    return node;\n}\n\nconst testDoc = \"<html><body><div>\"\n        + \"<test-element foo='bar'>foo</test-element>\"\n        + \"</div></body>\";\n\nvar ReadableStream = \"Your Value Here\";\n\nconst inputStream = new ReadableStream({\n    start(controller) {\n        controller.enqueue(testDoc);\n        controller.close();\n    }\n});\n\n// Create a matcher to handle some elements, using CSS syntax. To avoid\n// shipping a CSS parser to clients, CSS selectors are only supported in node.\nvar reader = new htmlStream.HTMLTransformReader(inputStream, {\n    transforms: [\n        { selector: 'test-element[foo=\"bar\"]', handler: handler },\n        { selector: 'foo-bar', handler: handler },\n    ],\n    ctx: { hello: 'world' }\n});\n\n// Create the same matcher using more verbose selector objects. These are\n// especially useful when processing dynamic values, as this avoids the need to\n// escape special chars in CSS selectors.\nreader = new htmlStream.HTMLTransformReader(inputStream, {\n    transforms: [{\n        selector: {\n            nodeName: 'test-element',\n            attributes: [['foo', '=', 'bar']]\n        },\n        handler: handler,\n        // Optional: Request node.innerHTML / outerHTML as `ReadableStream`\n        // instances. Only available in rule objects.\n        stream: false\n    }],\n    ctx: { hello: 'world' }\n});\n\n// Read matches\nreader.read()\n.then(res => {\n    console.log(res);\n    return reader.read();\n})\n// {\n//   done: false,\n//   value: [\n//     \"<html><body><div>\",\n//     {\n//       \"nodeName\": \"test-element\",\n//       \"attributes\": {\n//         \"foo\": \"bar\"\n//       },\n//       \"outerHTML\": \"<test-element foo='bar'>foo</test-element>\",\n//       \"innerHTML\": \"foo\"\n//     },\n//     \"</div></body>\"\n//   ]\n// }\n.then(res => console.log);\n// { done: true, value: undefined }",
   "id": 202,
   "stars": 0,
   "errors": [
    2351
   ],
   "hasCode": true,
   "nondeletedLines": 43,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var rc = \"Your Value Here\";\n// here is our parent conductor\nvar parentConductor = rc.createConductor({\n    name: 'parent',\n    props: function() {\n        return {\n            count: 0,\n            candies: [ 'twix', 'snickers', 'kit kat' ]\n        };\n    }\n});\n\n// now we inherit by specifying a deps config\nvar childConductor = rc.createConductor({\n    name: 'child',\n    deps: [ parentConductor ],\n    props: function(inheritedProps) {\n        // children conductor are provided with the parent props.\n        // you can choose to mutate this object for the child conductor.\n\n        // note that mutating inheritedProps does NOT affect the parent\n        // conductor's props!\n        inheritedProps.count += 1;\n        inheritedProps.candies = inheritedProps.candies.concat('butterfinger');\n\n        // like the parent conductor, this returned value will become immutable\n        return inheritedProps;\n    },\n    handlers: [\n        function render(req, res, next) {\n//             var props = rc.getProps(req);\n\n//             res.render(props, next);\n            // => will render:\n            // {\n            //      count: 1,\n            //      candies: [ 'twix', 'snickers', 'kit kat', 'butterfinger' ]\n            // }\n        }\n    ]\n});",
   "id": 203,
   "stars": 0,
   "errors": [
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//   ...\n var left = \"Your Value Here\"\n//   height: '50%-1',\n//   left: '45%+1',\n//   ...",
   "id": 204,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var proxyList = \"Your Value Here\";\nproxyList.getByCountryCode('FR')\n          .then(function (proxies) {\n            // get proxies here\n          })\n          .catch(function (error) {\n            throw new Error(error);\n          });",
   "id": 205,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CREATE = \"Your Value Here\";\n/*** Add company table, insert some data and connect with user table ***/\n\n var TABLE = \"Your Value Here\";\n var id = \"Your Value Here\";\n var serial = \"Your Value Here\";\n var company_name = \"Your Value Here\";\n var character = \"Your Value Here\";\n// CREATE TABLE \"company\"\n(\n//    id serial,\n//    company_name character(20) NOT NULL,\n//    CONSTRAINT pk_company PRIMARY KEY (id),\n//    CONSTRAINT uk_company UNIQUE (company_name)\n// )\n// WITH (\n//   OIDS = FALSE\n// );\n\n// INSERT INTO \"company\"(company_name)\n//     VALUES ('Company 1');\n\n// ALTER TABLE \"user\"\n//   ADD COLUMN company_id integer;\n\n// UPDATE \"user\" SET const company_id = 1;\n\n// ALTER TABLE \"user\"\n//    ALTER COLUMN company_id SET NOT NULL;\n\n// ALTER TABLE \"user\"\n//   ADD CONSTRAINT fk_user FOREIGN KEY (company_id) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE NO ACTION;\n\r\nfunction KEY(id) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n// ",
   "id": 206,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var csgotm = require('node-csgotm-api');\nvar options = \"Your Value Here\";\nvar api = new csgotm.API(options);",
   "id": 207,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var listening = \"Your Value Here\"\nlistening\nvar client = \"Your Value Here\"\n var connected = \"Your Value Here\"\n// client connected\n var arg1 = \"Your Value Here\"\n var arg2 = \"Your Value Here\"\n// args: arg1,arg2\n var Hello = \"Your Value Here\"\n var World = \"Your Value Here\"\n// body: Hello World!",
   "id": 208,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {makeDispatcher} from \"robojs\"\nvar myNewEventDispatcher=makeDispatcher();",
   "id": 209,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var swangular = \"Your Value Here\";\n// swangular.success(\"Great job!\");",
   "id": 210,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var sudo = \"Your Value Here\"\n var yum = \"Your Value Here\"\n var install = \"Your Value Here\"\n var clamav = \"Your Value Here\"\n// sudo yum install clamav",
   "id": 211,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const { call } = require(\"assert\")\r\n\r\nvar If = \"Your Value Here\"\nvar Player = \"Your Value Here\"\n// If in Player A's simulation the character just dodged the bullet in time, but in Player B's simulation the character didn't dodge that same bullet in time - strictly due to fuzziness - our two simulations are no longer in sync and we aren't sharing a game state any longer. We call this non-deterministic physics.",
   "id": 212,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n    var contentType = 'Content-Type';\n    var CreatenewUpdatePropertyManagerRequest = \"Your Value Here\";\n//     var body = new CreatenewUpdatePropertyManagerRequest({\"key\":\"value\"});\n\n//     controller.createnewPropertyManager(contentType, body, function(error, response, context) {\n\n    \n//     });",
   "id": 213,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var client = \"Your Value Here\";\n// client.summarization(\"<Your text to summarize>\")",
   "id": 214,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Mark = \"Your Value Here\";\n// <Mark wrap=\"span\">*text*</Mark>",
   "id": 215,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var templateEngine = \"Your Value Here\";\n// const renderer = templateEngine.render(string[, parameters, style]);",
   "id": 216,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var form = \"Your Value Here\";\n// form.on('field', (name, value) => {});",
   "id": 217,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { version } = require(\"os\")\r\n\r\nvar onvif = \"Your Value Here\"\nvar ptz = \"Your Value Here\"\n// onvif-ptz goto-home\n\n// Move the camera to the home position.\n\n// Options:\n//   --help          Show help  [boolean]\n//   --version       Show version number  [boolean]\n//   --baseUrl       The baseUrl of the camera.  [string] [required]\n//   --path          The onvif path of the camera.  [string] [default: \"/onvif/device_service\"]\n//   --username, -u  The username of the camera.  [string] [required]\n//   --password, -p  The password of the camera.  [string] [required]",
   "id": 218,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var pusudb = \"Your Value Here\"\npusudb.use('ws', function(req, socket, next){\n    console.log(req.headers) \n    console.log(req.params) // URL params\n    console.log(req.body) // Body-Data\n    console.log(req.docs) // Result sending to client \n    next()\n})",
   "id": 219,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Cookies from \"ts-cookies\";",
   "id": 220,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var LayerWebhooks = require('layer-webhooks');\n\nvar API_TOKEN = \"Your Value Here\";\n\nvar APP_ID = \"Your Value Here\";\n\n// Initialize by providing your Layer credentials\nvar layer = new LayerWebhooks({\n  token: API_TOKEN,\n  appId: APP_ID\n});\n\n// Register a webhook\nlayer.webhooks.register({\n  events: ['message.sent'],\n  url: 'https://mydomain.com/mywebhooks/messages-sent',\n  secret: 'Frodo is a Dodo',\n  config: {\n    name: 'My sample webhook'\n  }\n}, function(err, res) {\n  if (err) return console.error(err);\n\n  // Webhook registered\n});",
   "id": 221,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 17,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function App() {\n  var Auth = \"Your Value Here\";\n  var loginCall = \"Your Value Here\";\n  var meCall = \"Your Value Here\";\n  var storageBackend = \"Your Value Here\";\n  return (\n    <Auth\n      loginCall={loginCall}\n      meCall={meCall}\n      storageBackend={storageBackend}\n      storageNamespace='my-auth'\n//       render={(authActions, authState, userState) => /* render my children */}\n    />\n  )\n}",
   "id": 222,
   "stars": 0,
   "errors": [
    17004
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var HOST;\nvar mypublicdevhost = \"Your Value Here\";\n// HOST=mypublicdevhost.com",
   "id": 223,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import VuePictureCut from 'vue-picture-cut';\nvar Vue = \"Your Value Here\";\n// Vue.use(VuePictureCut);",
   "id": 224,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// <iconly name=\"activity\" type=\"bold\" />\n// <iconly name=\"activity\" type=\"bulk\" />\n// <iconly name=\"activity\" type=\"light\" />\n// <iconly name=\"activity\" type=\"outline\" />\n// <iconly name=\"activity\" type=\"broken\" />\n// <iconly name=\"activity\" type=\"tone\" />",
   "id": 225,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nfunction transferTokens(sender, to, amount) {\n  var Web3 = \"Your Value Here\";\n//   const web3 = new Web3();\n//   const TokenContract = web3.eth.contract(Token.abi).at(Token.address);\n//   const data = TokenContract.transfer.getData(to, amount);\n//   const options = { data, from: sender, to: Token.address };\n//   return Transaction({ options });\n}\n\nconst tx = transferTokens(\n  '0xe8d3266f3c4f083ab8864b5e04aea7b087044e49',\n  '0x7967c4f4512195ba83ae8f08ca30f7b145be6cf8',\n  1000000\n);\n\n// const txhash = await tx.transact(provider);\r\n\r\nfunction Transaction(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 226,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { createLogger } = require('@livy/logger')\n\nconst logger = createLogger('my-app-logger', {\n  mode: 'async'\n})",
   "id": 227,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nvar Yobit = require('yobit-exchange-api');\nvar VersionTwo = require('yobit-exchange-api/lib/version_two');\nvar Trade = require('yobit-exchange-api/lib/trade');\n\nvar keys = {key: '', secret: ''}\nvar yobit = new Yobit(keys)\nvar version2 = new VersionTwo(keys);\nvar trade = new Trade(keys);\n\ntrade.getInfo(function(err, data) {\n  console.log(data);\n})\n\nversion2.ticker('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nversion2.depth('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nversion2.trades('ltc_btc', function(err, data) {\n  console.log(data);\n})\n\nyobit.fee(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.ticker(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.depth(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.trades(['ETH-BTC'], function(err, data) {\n  console.log(data);\n})\n\nyobit.info(function(err, data) {\n  console.log(data);\n})\n",
   "id": 228,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 34,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var AllDocs = \"Your Value Here\";\n// <AllDocs db=\"dbname\" include_docs ... />",
   "id": 229,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var tag1 = \"Your Value Here\"\ngauge1:+3\n//  - tag1:v1\n//  - tag2:v2",
   "id": 230,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const AssetsQueryOptions = require('drequest-maxdome').AssetsQueryOptions;\n\n// const assetId = <assetId>;\n// const assetsQueryOptions = new AssetsQueryOptions(assetId);\n\n// const assets =\n//   await maxdome.request('assets')\n//     .addOptions(assetsQueryOptions)\n//     .send();",
   "id": 231,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {\n  isMobile,\n  isSmall,\n  isTablet,\n  isDesktop\n} from \"@times-stories/style-guide/helpers\";\n\nisMobile(); // Boolean\nisSmall(); // Boolean\nisTablet(); // Boolean\nisDesktop(); // Boolean",
   "id": 232,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/**\n* @param  {String}  language        Language identifier\n* @param  {String}  modelsString    Array with speakers-voice models-(optional)defaultStyle correspondence (e.g. '[[\"speaker1\",\"model1\",\"style1\"],[\"speaker2\",\"model2\"]]')\n* @param  {String}  vttText         Subtitle text, in VTT format\n* @param  {Number[]}    selectedSentences   Array with indexes of sentences to be synthesized\n* @return {String}                  JSON-formatted string for synthesis\n*/",
   "id": 233,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var exlog = \"Your Value Here\";\n// exlog.error(new Error());",
   "id": 234,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import {\n  EpubView, // Underlaying epub-canvas (wrapper for epub.js iframe)\n  EpubViewStyle, // Styles for EpubView, you can pass it to the instance as a style prop for customize it\n  ReactReader, // A simple epub-reader with left/right button and chapter navigation\n  ReactReaderStyle // Styles for the epub-reader it you need to customize it\n} from \"react-reader\";",
   "id": 235,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// {app_root}/config/plugin.js\nexports.cuteLogger = {\n  enable: true,\n  package: 'egg-cute-logger',\n};",
   "id": 236,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const asyncIteratorToStream = require(\"async-iterator-to-stream\");\n\n// promisified fs\nconst fs = require(\"mz/fs\");\n\nconst createReadStream = asyncIteratorToStream(async function*(file) {\n  const fd = await fs.open(file, \"r\");\n  try {\n    let size = yield;\n    while (true) {\n      const buf = Buffer.alloc(size);\n      const [n] = await fs.read(fd, buf, 0, size, null);\n      if (n < size) {\n        yield buf.slice(0, n);\n        return;\n      }\n      size = yield buf;\n    }\n  } finally {\n    await fs.close(fd);\n  }\n});\n\ncreateReadStream(\"foo.txt\").pipe(process.stdout);",
   "id": 237,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var 좌절 = \"Your Value Here\"\n좌절\nvar 아아아아 = \"Your Value Here\"\n아아아아",
   "id": 238,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const jwksClient = require('jwks-rsa');\n\nconst client = jwksClient({\n  rateLimit: true,\n  jwksRequestsPerMinute: 10, // Default value\n  jwksUri: 'https://sandrino.auth0.com/.well-known/jwks.json'\n});\n\nconst kid = 'RkI5MjI5OUY5ODc1N0Q4QzM0OUYzNkVGMTJDOUEzQkFCOTU3NjE2Rg';\n// const key = await client.getSigningKey(kid);\n// const signingKey = key.getPublicKey();",
   "id": 239,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CWBClient = \"Your Value Here\";\n// const cwb = new CWBClient(API_KEY)",
   "id": 240,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//   \"homepage\": \"http://mywebsite.com/relativepath\",",
   "id": 241,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export default async function (e, t, a) {\n    let n = document.createElement(e);\n    n.append(...(await a));\n    return Object.assign(n, t);\n}",
   "id": 242,
   "stars": 0,
   "errors": [
    2584
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var app = \"Your Value Here\";\nrequire('ranker')(null, app);",
   "id": 243,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var POST = \"Your Value Here\";\n// --> POST / {\"jsonrpc\":\"2.0\",\"id\":3,\"method\":\"eth_gasPrice\",\"params\":[]}\n// <-- {\"jsonrpc\":\"2.0\",\"result\":\"0x2e90edd000\",\"id\":3}",
   "id": 244,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const { name } = require(\"assert\")\r\n\r\nvar formatter = \"Your Value Here\"\n// formatter --const name=\"Fred Flintstone\" Australia < test/template.txt",
   "id": 245,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  var nconf = require('nconf');\n\n  //\n  // Requiring `nconf-redis` will extend the `nconf`\n  // module.\n  //\n  require('nconf-redis');\n\n  nconf.use('redis', { host: 'localhost', port: 6379, ttl: 60 * 60 * 1000 });",
   "id": 246,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// Type definitions for Node.js 10.12\n// Project: http://nodejs.org/\n// Definitions by: Microsoft TypeScript <https://github.com/Microsoft>\n//                 Definitely Typed <https://github.com/DefinitelyTyped>\n//                 Alberto Schiabel <https://github.com/jkomyno>",
   "id": 247,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import formCreate from 'form-create'\nimport { maker } from 'form-create'\nvar Vue = \"Your Value Here\"\n// Vue.use(formCreate)",
   "id": 248,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// scss\nimport 'node_modules/@auraxy/react-select/lib/css/index.scss'\n\n// css\nimport 'node_modules/@auraxy/react-select/lib/css/index.css'",
   "id": 249,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import HttpModule from 'react-native-http-module';\n\nvar baseURL = \"Your Value Here\";\n\nvar headers = \"Your Value Here\";\n\nconst httpModule = new HttpModule(baseURL, headers);",
   "id": 250,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import tinyDelay from \"tiny-delay\"\n\ntinyDelay()",
   "id": 251,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var autossh = \"Your Value Here\";\nautossh({\n  host: '111.22.333.444',\n  username: 'root',\n  localPort: 'auto',\n  remotePort: 5432,\n  sshPort: 9999\n});",
   "id": 252,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//   \"acm:DescribeCertificate\", // only for custom domains\n//   \"acm:ListCertificates\",    // only for custom domains\n//   \"acm:RequestCertificate\",  // only for custom domains\n//   \"cloudfront:CreateCloudFrontOriginAccessIdentity\",\n//   \"cloudfront:CreateDistribution\",\n//   \"cloudfront:CreateInvalidation\",\n//   \"cloudfront:GetDistribution\",\n//   \"cloudfront:GetDistributionConfig\",\n//   \"cloudfront:ListCloudFrontOriginAccessIdentities\",\n//   \"cloudfront:ListDistributions\",\n//   \"cloudfront:ListDistributionsByLambdaFunction\",\n//   \"cloudfront:ListDistributionsByWebACLId\",\n//   \"cloudfront:ListFieldLevelEncryptionConfigs\",\n//   \"cloudfront:ListFieldLevelEncryptionProfiles\",\n//   \"cloudfront:ListInvalidations\",\n//   \"cloudfront:ListPublicKeys\",\n//   \"cloudfront:ListStreamingDistributions\",\n//   \"cloudfront:UpdateDistribution\",\n//   \"iam:AttachRolePolicy\",\n//   \"iam:CreateRole\",\n//   \"iam:CreateServiceLinkedRole\",\n//   \"iam:GetRole\",\n//   \"iam:PutRolePolicy\",\n//   \"iam:PassRole\",\n//   \"lambda:CreateFunction\",\n//   \"lambda:EnableReplication\",\n//   \"lambda:DeleteFunction\",            // only for custom domains\n//   \"lambda:GetFunction\",\n//   \"lambda:GetFunctionConfiguration\",\n//   \"lambda:PublishVersion\",\n//   \"lambda:UpdateFunctionCode\",\n//   \"lambda:UpdateFunctionConfiguration\",\n//   \"route53:ChangeResourceRecordSets\", // only for custom domains\n//   \"route53:ListHostedZonesByName\",\n//   \"route53:ListResourceRecordSets\",   // only for custom domains\n//   \"s3:CreateBucket\",\n//   \"s3:GetAccelerateConfiguration\",\n//   \"s3:GetObject\",                     // only if persisting state to S3 for CI/CD\n//   \"s3:ListBucket\",\n//   \"s3:PutAccelerateConfiguration\",\n//   \"s3:PutBucketPolicy\",\n  \"s3:PutObject\"",
   "id": 253,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var auth = \"Your Value Here\";\nconst appAuth = auth(\n    {\n        // Simple case where roles is a text field in User containing roles separated by commas\n        rolesGetter: async (context, userId) => {\n            const user = context.app.service(\"users\").get(userId);\n            return user.roles.split(\",\") || [];\n        },\n    },\n    \"jwt\"\n);\n\napp.service(\"service\").hooks({\n    before: {\n        all: appAuth,\n    },\n});",
   "id": 254,
   "stars": 0,
   "errors": [
    2349,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport logo from './logo.png'; // Tell Webpack this JS file uses this image\n\nconsole.log(logo); // /logo.84287d09.png\n\nfunction Header() {\n  // Import result is the URL of your image\n//   return <img src={logo} alt=\"Logo\" />;\n}\n\nexport default Header;",
   "id": 255,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var llpaycahpayInstance = \"Your Value Here\";\n//data为代付同步返回的结果\n// if(llpaycahpayInstance.submitSuccess(data)){\n    //todo,更新提现订单....\n// }",
   "id": 256,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var obj = { 'a': { 'b': { 'c': 'd' } } };\n\nvar dget = \"Your Value Here\";\n\n// var val = dget( obj );\n// returns 'd'",
   "id": 257,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "    var phonebook = \"Your Value Here\"\n var listall = \"Your Value Here\"\n//     phonebook listall\n",
   "id": 258,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var container = \"Your Value Here\";\n// .container {\n//     width: 100%;\n//     height: 100%;\n//   }",
   "id": 259,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = function(eor){\n  return eor.define(\"Application\").extend(function(){\n    this.title = \"Express Override\";\n  })\n  .methods({\n    index : function(req, res) {\n      var sampleModel = eor.getModule(\"Sample\", \"Model\");\n      if(sampleModel.index()){\n        res.render('index', { title: this.title })\n      }else{\n        res.render('index', { title: this.title, error_message : \"ErrorCode => -1111\"});\n      }\n    },\n\n    hello : function(req, res) {\n      res.render('index', { title: eor.shared.name })\n    }\n  })\n};",
   "id": 260,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import React from 'react';\nimport { shallow } from 'enzyme';\nimport App from './App';\n\nit('renders without crashing', () => {\n//   shallow(<App />);\n});",
   "id": 261,
   "stars": 0,
   "errors": [
    2593
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var bit = \"Your Value Here\";\nbit.get(\"mempool\").then((mepool) => {\n  //  mempool := {\n  //    tx: <array of mempool transactions>\n  //  }\n})",
   "id": 262,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var clock = \"Your Value Here\";\n// clock.syncTime();",
   "id": 263,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\";\ngrunt.initConfig({\n  tishadow: {\n    test: {\n      command: 'spec',\n      options: {\n        junit: true\n      }\n    },\n    run: {\n      command: 'run',\n      options: {\n        junit: true,\n        patch: true,\n        preclear: true\n      }\n    }\n  }\n});",
   "id": 264,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var loginForm = \"Your Value Here\";\n// .loginForm\n// .username\n// .usernameLabel\n// .password\n// .passwordLabel\n// .remember\n// .rememberLabel\n// .button\n// .forgotLink",
   "id": 265,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var successCount\nvar librato = \"Your Value Here\"\n// successCount = librato.metric('foo.success.count')\n// const errorCount   = librato.metric('foo.error.count')\n\n// SomePromise().then(doSomething)\n//              .then(doSomethingElse)\n//              .then(successCount)    // Increment on success\n//              .catch(errorCount)     // Increment error on failure\r\n\r\nfunction SomePromise() {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 266,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import LockTableView from 'react-native-locktable';",
   "id": 267,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gh = \"Your Value Here\"\n var is = \"Your Value Here\"\nvar comment = \"Your Value Here\"\n// gh is 1 --comment 'Node GH rocks!'",
   "id": 268,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// const input = document.querySelector('input');\n// const button = document.querySelector('.js-add-signature');\nbutton.addEventListener(event => {\n    var textFieldEdit = \"Your Value Here\";\n//     textFieldEdit.insert(input, 'Made by 🐝 with pollen.');\n});",
   "id": 269,
   "stars": 0,
   "errors": [
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var vue = \"Your Value Here\"\nvar ts = \"Your Value Here\"\nvar prettier = \"Your Value Here\"\nvue + ts + prettier\n\n//   extends: [\n    'plugin:@etherfe/vue-typescript'\n    'plugin:@etherfe/vue-prettier'\n//   ]",
   "id": 270,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import SensorManager from \"rnative-sensor-manager\";\nSensorManager.startPressure(100);\nvar DeviceEventEmitter = \"Your Value Here\";\nDeviceEventEmitter.addListener(\"pressure\", (data) => {\n  /**\n   * data.pressure\n   **/\n});\nSensorManager.stopPressure();",
   "id": 271,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const inspector = require('event-loop-inspector')();\nconst dump = inspector.dump();\n\nconsole.log(dump);",
   "id": 272,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var dao = \"Your Value Here\";\n// the value stored in column `key` of table `test` is encrypted in database\n// const testDao = dao.create(pool).table('test').encrypt(['key']);\n\nawait pool.transaction(async (query): Promise<boolean> => {\n//   await dao.create(pool).delete().from('unittest_dao').exec(query);\n  await testDao.insert({\n    key: 'key1',\n    count: 1,\n    value: 'value1'\n  }).exec(query);\n  await testDao.update().set({\n    key: 'key1',\n    count: 1,\n    value: 'value2'\n  }).exec(query);\n  return true;\n})\r\n\r\nexport { };\r\n",
   "id": 273,
   "stars": 0,
   "errors": [
    1378,
    2304,
    8010,
    2304,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "  var bordinoAuthenticate = \"Your Value Here\";\n  bordinoAuthenticate.validateToken('mytoken')\n                     .then((isValide)=>{\n                       //do your job\n                     })\n                     .catch((e)=>(\n                       //handle error\n                     ))",
   "id": 274,
   "stars": 0,
   "errors": [
    2339,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { Plugin } from 'munar-core'\nexport default class MyPlugin extends Plugin {\n  // etc\n}",
   "id": 275,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import ActionSheet from 'react-native-actionsheet'\n\nvar React = \"Your Value Here\"\n\n// class Demo extends React.Component {\n//   showActionSheet = () => {\n//     this.ActionSheet.show()\n//   }\n//   render() {\n    return (\n      <View>\n        <Text onPress={this.showActionSheet}>Open ActionSheet</Text>\n        <ActionSheet\n          ref={o => this.ActionSheet = o}\n          title={'Which one do you like ?'}\n          options={['Apple', 'Banana', 'cancel']}\n          cancelButtonIndex={2}\n          destructiveButtonIndex={1}\n          onPress={(index) => { /* do something */ }}\n        />\n      </View>\n    )\n//   }\n// }",
   "id": 276,
   "stars": 0,
   "errors": [
    1108
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Field = \"Your Value Here\"\nField.add('ID', Field.INTEGER({\n  primaryKey    : true,\n  autoIncrement : true,\n  allowNull     : false,\n  validate      : { min: 1 }\n}))\nField.add('PK_INTEGER', Field.INTEGER({\n  primaryKey : true,\n  allowNull  : false,\n  validate   : { min: 1 }\n}))\nField.add('PK_UUID', Field.UUID({\n  primaryKey : true,\n  allowNull  : false\n}))",
   "id": 277,
   "stars": 0,
   "errors": [
    2339,
    2339,
    2339,
    2339,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 16,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { diveDeco } from 'diving-decompression'\n// ...\nconst dive = { depth: 100, bottomTime: 135 };\nconst decoObject = diveDeco(dive);\nconsole.log(decoObject)",
   "id": 278,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var model = {\n  web: 'http://www.google.com',\n  images: 'http://images.google.com/'\n};",
   "id": 279,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var source = \"Your Value Here\";\n// console.log(source.expand());",
   "id": 280,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const eip = require('eip');\nconst redis = require('redis');\nconst { PubSub, Queue } = require('eip-redis');\nconst { Timer } = require('eip-timer');\n\nconst redisPub = redis.createClient();\nconst redisSub =  redis.createClient({return_buffers:true});\n\nconst pubSub = new PubSub(1, 1000, redisPub, redisSub, 'namespace') // eventsPerPeriod, periodInMS\nconst queue = new Queue(redisPub, 'namespace');\nconst resource = x => x;\n\nvar timer = \"Your Value Here\";\n\nconst throttler = new eip.Route().throttleResource({ pubSub, queue, resource, timer });",
   "id": 281,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "void 0",
   "id": 282,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var useAxios = \"Your Value Here\";\nconst { loading, error, data, refetch } = useAxios({\n    url: \"api-url\",\n});\nreturn (\n    <div className=\"App\">\n        <h1>{loading && \"Loading\"}</h1>\n        <h1>{error && \"Error!\"}</h1>\n        <button onClick={refetch}>Refetch</button>\n        <div>{data && JSON.stringify(data)}</div>\n    </div>\n);",
   "id": 283,
   "stars": 0,
   "errors": [
    2349,
    1108
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var client = \"Your Value Here\"\n// await client.balances()\n// await client.balance('BTC')\n// await client.depositAddress('BTC')\n// await client.withdraw('BTC', { quantity: 1.2, address: 'abcde' })\n// await client.order('30594e6e-ba54-4914-96f3-5b9d5de2468e')\n// await client.orderHistory('BTC-ETH')\n// await client.withdrawalHistory('BTC')\n// await client.depositHistory('BTC')\r\n\r\nexport { }\r\n",
   "id": 284,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var CoreApiV10 = require('core_api_v10');\n\nvar api = new CoreApiV10.AuthApi()\n\nvar authorization = \"authorization_example\"; // {String} JWT access token\n\nvar opts = { \n  'model': new CoreApiV10.TwoFactorAuthenticatorConfirm() // {TwoFactorAuthenticatorConfirm} \n};\napi.v10Auth2faConfirmPost(authorization, opts).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n\n",
   "id": 285,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var recursive = \"Your Value Here\";\n// using promise API\nrecursive(\"/app\", {\n  ignores: [\"README.md\"],\n//   fs, // in-memory fs\n  debug: true,\n  log: (...msg) => console.log(\"readdir\", ...msg)\n// }).then(successFn, errFn);",
   "id": 286,
   "stars": 0,
   "errors": [
    2349,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var name = \"Your Value Here\";\nvar hydrated = \"Your Value Here\";\n// <template>\n//   <div id=\"app\" v-if=\"hydrated\">\n//     <router-view/>\n//   </div>\n// </template>\n\n// <script>\nexport default {\n  name: 'App',\n  data: () => ({ hydrated: false }),\n  async mounted() {\n    await this.$apollo.provider.defaultClient.hydrated()\n    this.hydrated = true\n  },\n}\n// </script>",
   "id": 287,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var konstructor = \"Your Value Here\"\n// konstructor-cli new my-app",
   "id": 288,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const repl = require('re-pl');\nconst run = require('setlist');\n\nvar let = \"Your Value Here\";\n\nrun(function* () {\n  // Initialize variables and do some work here\n//   ...\n//   let value = yield someWorkHere();\n\n  // Pause execution to inspect ongoing process\n//   const value = yield repl(($)=>eval($))(value);\n\n  // The edited/unedited return value can be used later\n//   return lastWorkHere(value);\n});",
   "id": 289,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var walk = \"Your Value Here\"\n// walk(function(r, n){ return r+n }, 0, ...[1,2,3]) // -> 6",
   "id": 290,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var WrapperBuilder = require('thunkify-object').WrapperBuilder;\n\nvar Wrapper = new WrapperBuilder()\n .addEvent(['on', 'once'])\n .addPassThrough('emit')\n .getWrapper();",
   "id": 291,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var table = \"Your Value Here\";\n// table.page(1);",
   "id": 292,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { info } = require(\"console\")\r\n\r\nvar user = \"Your Value Here\"\nvar rolli = \"Your Value Here\"\n// user> @hubot 5rolli\nvar Hubot = \"Your Value Here\"\n// Hubot>\n//  var project = \"Your Value Here\"\n// ## test-project\n// - 残り: 29.5 days (38.4 days/people, to: 2016/03/06)\n// - 消化: 31.2 days (40.6 days/people, es: 247%)\n\n// user> @hubot 5rolli info test-project\n// hubot>\n// ## test-project\n\n// ### タスク残り時間 (5時間/日, 1.3人換算)\n// - 予想: 29.5 days (38.4 days/people, to: 2016/03/06)\n// - 最速: 21 days (27.4 days/people, to: 2016/02/28)\n// - 最悪: 65.4 days (85.1 days/people, to: 2016/05/01)\n\n// ### 完了タスク消化時間\n// - 31.2 days (40.6 days/people)\n\n// ### タスク消化率\n// - 予想: 31.4%\n// - 最速: 32.7%\n// - 最悪: 25.9%\n\n// ### 完了タスク消化ペース\n// - 予想: 247%\n// - 最速: 303%\n// - 最悪: 136%\n\n// ### 初回終了予想日 (開始日: 2015/11/27)\n// - 予想: 2016/01/31 (diff: 35 days)\n// - 最速: 2016/01/17 (diff: 42 days)\n// - 最悪: 2016/04/03 (diff: 28 days)\r\n\r\nfunction days(arg0, arg1, to, arg3) {\r\n    throw new Error(\"Function not implemented.\")\r\n}\r\n",
   "id": 293,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'suneditor/dist/css/suneditor.min.css'\nimport suneditor from 'suneditor'\n// Import codeMirror\nimport CodeMirror from 'codemirror'\nimport 'codemirror/mode/htmlmixed/htmlmixed'\nimport 'codemirror/lib/codemirror.css'\n\nsuneditor.create('sample', {\n    codeMirror: CodeMirror // window.CodeMirror,\n    // Set options\n    // codeMirror: {\n    //     src: CodeMirror,\n    //     options: {...}\n    // }\n    buttonList: [\n        ['codeView']\n    ],\n    height: 400\n});",
   "id": 294,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "/*\nexample.js\n\nthis node script will serve a lightweight swagger-ui crud-api backed by mongodb\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n          $ npm install swagger-mongodb && npm_config_server_port=1337 node example.js\n    3. open a browser to http://localhost:1337\n    4. interact with the swagger-ui crud-api\n*/\n\n/*jslint\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n\n(function (local) {\n    'use strict';\n//     switch (local.modeJs) {\n\n\n\n    // run node js-env code\n//     case 'node':\n        // export local\n        module.exports = local;\n        // init assets\n        local.utility2.cacheDict.assets['/'] = '<!DOCTYPE html>\\n' +\n/* jslint-ignore-begin */\n'<html>\\n' +\n'<head>\\n' +\n'    <meta charset=\"UTF-8\">\\n' +\n'    <title>\\n' +\n'    {{envDict.npm_package_name}} [{{envDict.npm_package_version}}]\\n' +\n'    </title>\\n' +\n'    <link rel=\"stylesheet\" href=\"/assets/utility2.css\">\\n' +\n'    <style>\\n' +\n'    * {\\n' +\n'        box-sizing: border-box;\\n' +\n'    }\\n' +\n'    body {\\n' +\n'        background-color: #fff;\\n' +\n'        font-family: Helvetical Neue, Helvetica, Arial, sans-serif;\\n' +\n'    }\\n' +\n'    body > div {\\n' +\n'        margin: 20px 0 20px 0;\\n' +\n'    }\\n' +\n'    .testReportDiv {\\n' +\n'        display: none;\\n' +\n'    }\\n' +\n'    </style>\\n' +\n'    {{envDict.npm_config_html_head_extra}}\\n' +\n'</head>\\n' +\n'<body>\\n' +\n'    <div class=\"ajaxProgressDiv\" style=\"display: none;\">\\n' +\n'    <div class=\"ajaxProgressBarDiv ajaxProgressBarDivLoading\">loading</div>\\n' +\n'    </div>\\n' +\n'    <h1>{{envDict.npm_package_name}} [{{envDict.npm_package_version}}]</h1>\\n' +\n'    <h3>{{envDict.npm_package_description}}</h3>\\n' +\n'    <div class=\"testReportDiv\"></div>\\n' +\n'    <div id=\"swagger-ui-container\" style=\"display: none;\"></div>\\n' +\n'    <iframe height=\"512\" src=\"/assets/swagger-ui.html\" width=\"100%\"></iframe>\\n' +\n'    <script src=\"/assets/utility2.js\"></script>\\n' +\n'    <script src=\"/assets/swagger-ui.rollup.js\"></script>\\n' +\n'    <script src=\"/assets/swagger-mongodb.js\"></script>\\n' +\n'    <script src=\"/assets/example.js\"></script>\\n' +\n'    <script src=\"/test/test.js\"></script>\\n' +\n'    <script>\\n' +\n'    window.utility2 = window.utility2 || {};\\n' +\n'    window.utility2.envDict = {\\n' +\n'        npm_package_description: \"{{envDict.npm_package_description}}\",\\n' +\n'        npm_package_name: \"{{envDict.npm_package_name}}\",\\n' +\n'        npm_package_version: \"{{envDict.npm_package_version}}\"\\n' +\n'    };\\n' +\n'    document.querySelector(\"iframe\").onload = function () {\\n' +\n'        var self;\\n' +\n'        self = this;\\n' +\n'        self.height = innerHeight - self.offsetTop - 20;\\n' +\n'        self.contentWindow.location.hash = location.hash;\\n' +\n'        self.contentWindow.onclick = function () {\\n' +\n'            setTimeout(function () {\\n' +\n'                location.hash = self.contentWindow.location.hash;\\n' +\n'            });\\n' +\n'        };\\n' +\n'    };\\n' +\n'    </script>\\n' +\n'    {{envDict.npm_config_html_body_extra}}\\n' +\n'</body>\\n' +\n/* jslint-ignore-end */\n            '</html>\\n';\n        local.utility2.cacheDict.assets['/'] = local.utility2.stringFormat(\n            local.utility2.cacheDict.assets['/'],\n            { envDict: local.utility2.envDict },\n            ''\n        );\n        local.utility2.cacheDict.assets['/assets/example.js'] =\n            local.utility2.istanbul_lite.instrumentSync(\n                local.fs.readFileSync(__dirname + '/example.js', 'utf8'),\n                __dirname + '/example.js'\n            );\n        local.utility2.cacheDict.assets['/test/test.js'] =\n            local.utility2.istanbul_lite.instrumentInPackage(\n                local.fs.readFileSync(local.swmg.__dirname + '/test.js', 'utf8'),\n                local.swmg.__dirname + '/test.js',\n                'swagger-mongodb'\n            );\n        // init mongodb-client\n        local.utility2.onReady.counter += 1;\n        local.utility2.taskRunOrSubscribe({\n            key: 'swagger-mongodb.mongodbConnect',\n            onTask: function (onError) {\n                local.mongodb.MongoClient.connect(\n                    local.utility2.envDict.npm_config_mongodb_url ||\n                        'mongodb://localhost:27017/test',\n                    function (error, db) {\n                            // validate no error occurred\n                            local.utility2.assert(!error, error);\n                            local.swmg.db = db;\n                            onError();\n                            local.utility2.onReady();\n                        }\n                );\n            }\n        });\n        // init middleware\n        local.middleware = local.utility2.middlewareGroupCreate([\n            // init pre-middleware\n            local.utility2.middlewareInit,\n            // init cached-assets middleware\n            local.utility2.middlewareAssetsCached,\n            // init http-body-get middleware\n            local.utility2.middlewareBodyGet,\n            // init http-body-parse-upload middleware\n            function (request, response, nextMiddleware) {\n                var boundary, bodyText;\n                // jslint-hack\n                local.utility2.nop(response);\n                local.utility2.testTryCatch(function () {\n                    if ((request.headers['content-type'] || '')\n                            .indexOf('multipart/form-data') !== 0) {\n                        nextMiddleware();\n                        return;\n                    }\n                    boundary =\n                        '--' + (/boundary=(.*)/).exec(request.headers['content-type'])[1];\n                    request.swmgBodyParsed = {};\n                    bodyText = String(request.bodyRaw);\n                    bodyText.split(boundary).slice(1, -1).forEach(function (part) {\n                        request.swmgBodyParsed[\n                            (/\\bname=\"([^\"]*)/).exec(part)[1]\n                        ] = part.split('\\r\\n\\r\\n').slice(1).join('\\r\\n\\r\\n').slice(0, -2);\n                    });\n                    // set file\n                    bodyText.replace('\\r\\n\\r\\n', function (match0, ii) {\n                        // jslint-hack\n                        local.utility2.nop(match0);\n                        request.swmgBodyParsed.file = request.bodyRaw\n                            .slice(ii + 4, -(boundary.length + 6))\n                            .toString('base64');\n                    });\n                    request.swmgBodyParsed.file = request.bodyRaw\n                        .slice(bodyText.lastIndexOf('\\r\\n\\r\\n') + 4, -(boundary.length + 6))\n                        .toString('base64');\n                    // set filename\n                    request.swmgBodyParsed.filename = (/\\bfilename=\"([^\"]+)/).exec(bodyText);\n                    request.swmgBodyParsed.filename =\n                        request.swmgBodyParsed.filename &&\n                        request.swmgBodyParsed.filename[1];\n                    nextMiddleware();\n                }, nextMiddleware);\n            },\n            // init http-body-parse middleware\n            local.swmg.middlewareBodyParse,\n            // init swagger pre-middleware\n            function (request, response, nextMiddleware) {\n                // jslint-hack\n                local.utility2.nop(request);\n                // enable cors\n                // http://en.wikipedia.org/wiki/Cross-origin_resource_sharing\n                response.setHeader(\n                    'Access-Control-Allow-Methods',\n                    'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'\n                );\n                response.setHeader('Access-Control-Allow-Origin', '*');\n                // init content-type\n                response.setHeader('Content-Type', 'application/json; charset=UTF-8');\n                nextMiddleware();\n            },\n            // init swagger middleware\n            local.swmg.middlewareSwagger\n        ]);\n        // init error-middleware\n        local.middlewareError = local.swmg.middlewareError;\n        // init petstore-api\n        (function () {\n            var methodPath, options, schema;\n            options = local.utility2.jsonCopy(require(local.swmg.local\n                .swagger_ui_lite.__dirname + '/swagger.json'));\n            options = {\n                definitions: options.definitions,\n                paths: options.paths,\n                tags: options.tags\n            };\n            // remove unused properties\n            delete options.definitions.ApiResponse;\n            // init schema\n            Object.keys(options.definitions).forEach(function (schemaName) {\n                schema = options.definitions[schemaName];\n                // init id\n                schema.properties.id = { type: 'string' };\n                schema['x-inheritList'] = [{ $ref: '#/definitions/JsonapiResource' }];\n            });\n            local.utility2.objectSetOverride(options, {\n                definitions: {\n                    // init Pet schema\n                    Pet: {\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            id: 'pet0',\n                            name: 'birdie',\n                            photoUrls: [],\n                            status: 'available',\n                            tags: [{ name: 'bird'}]\n                        }, {\n                            id: 'pet1',\n                            name: 'kittie',\n                            status: 'pending',\n                            photoUrls: [],\n                            tags: [{ name: 'cat'}]\n                        }, {\n                            id: 'pet2',\n                            name: 'doggie',\n                            photoUrls: [],\n                            status: 'sold',\n                            tags: [{ name: 'dog'}]\n                        }],\n                        _collectionName: 'SwmgPet'\n                    },\n                    // init Order schema\n                    Order: {\n                        // create index\n                        _collectionCreateIndexList: [{\n                            key: { status: 1 },\n                            name: 'status_1'\n                        }],\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            id: 'order0',\n                            status: 'available'\n                        }, {\n                            id: 'order1',\n                            status: 'pending'\n                        }, {\n                            id: 'order2',\n                            status: 'sold'\n                        }],\n                        _collectionName: 'SwmgOrder',\n                        properties: {\n                            petId: { type: 'string' }\n                        }\n                    },\n                    // init User schema\n                    User: {\n                        // create index\n                        _collectionCreateIndexList: [{\n                            key: { username: 1 },\n                            name: 'username_1',\n                            unique: true\n                        }],\n                        // drop collection on init\n                        _collectionDrop: true,\n                        // upsert fixtures\n                        _collectionFixtureList: [{\n                            email: 'john@doe.com',\n                            firstName: 'john',\n                            id: 'user0',\n                            lastName: 'doe',\n                            password: 'hello',\n                            phone: '1234-5678',\n                            username: 'john.doe'\n                        }, {\n                            email: 'jane@doe.com',\n                            firstName: 'jane',\n                            id: 'user1',\n                            lastName: 'doe',\n                            password: 'bye',\n                            phone: '8765-4321',\n                            username: 'jane.doe'\n                        }],\n                        _collectionName: 'SwmgUser'\n                    }\n                },\n                // init crud-api\n                paths: {\n                    '/pet/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgPet',\n                        _crudApi: 'pet',\n                        _schemaName: 'Pet',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['pet']\n                    } },\n                    '/store/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgOrder',\n                        _crudApi: 'store',\n                        _schemaName: 'Order',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['store']\n                    } },\n                    '/user/crudGetByQueryMany': { get: {\n                        _collectionName: 'SwmgUser',\n                        _crudApi: 'user',\n                        _schemaName: 'User',\n                        operationId: 'crudGetByQueryMany',\n                        tags: ['user']\n                    } }\n                }\n            }, 4);\n            // transform petstore-api to swagger-mongodb's crud-api\n            Object.keys(options.paths).forEach(function (path) {\n                Object.keys(options.paths[path]).forEach(function (method) {\n                    methodPath = options.paths[path][method];\n                    // init methodPath._schemaName\n                    switch (path.split('/')[1]) {\n                    case 'pet':\n                        methodPath._schemaName = 'Pet';\n                        break;\n                    case 'store':\n                        methodPath._schemaName = 'Order';\n                        break;\n                    case 'user':\n                        methodPath._schemaName = 'User';\n                        break;\n                    }\n                    methodPath._collectionName = 'Swmg' + methodPath._schemaName;\n                    delete methodPath.produces;\n                    delete methodPath.responses;\n                    delete methodPath.security;\n                    // init jsonapi response\n                    local.utility2.objectSetDefault(methodPath, { responses: {\n                        200: {\n                            description: '200 ok - http://jsonapi.org/format' +\n                                '/#document-structure-top-level',\n                            schema: { $ref: '#/definitions/JsonapiResponse{{_schemaName}}' }\n                        }\n                    } }, 2);\n                    // init crudCreateMany / crudCreateOne / crudDeleteByIdOne / crudGetByIdOne\n                    switch (methodPath.operationId) {\n                    case 'addPet':\n                    case 'createUser':\n                    case 'placeOrder':\n                        methodPath.operationId = 'crudCreateOne';\n                        break;\n                    case 'createUsersWithArrayInput':\n                    case 'createUsersWithListInput':\n                        methodPath.operationId = 'crudCreateMany';\n                        break;\n                    case 'deleteOrder':\n                    case 'deletePet':\n                    case 'deleteUser':\n                        methodPath.operationId = 'crudDeleteByIdOne';\n                        break;\n                    case 'getOrderById':\n                    case 'getPetById':\n                    case 'getUserByName':\n                        methodPath.operationId = 'crudGetByIdOne';\n                        break;\n                    }\n                    // init id\n                    (methodPath.parameters || []).forEach(function (paramDef) {\n                        switch (paramDef.name) {\n                        case 'orderId':\n                        case 'petId':\n                            delete paramDef.format;\n                            paramDef.type = 'string';\n                            break;\n                        }\n                    });\n                });\n            });\n            local.swmg.apiUpdate(options);\n        }());\n        // init petstore-middleware\n        local.middleware.middlewareList.push(function (request, response, nextMiddleware) {\n            var modeNext, onNext, options;\n            modeNext = 0;\n            onNext = function (error, data) {\n                local.utility2.testTryCatch(function () {\n                    modeNext = error\n                        ? Infinity\n                        : modeNext + 1;\n                    switch (modeNext) {\n                    case 1:\n                        // init id\n                        ((request.swmgMethodPath && request.swmgMethodPath.parameters) || [\n                        ]).forEach(function (paramDef) {\n                            switch (paramDef.name) {\n                            case 'orderId':\n                            case 'petId':\n                                request.swmgParamDict.id = request.swmgParamDict[paramDef.name];\n                                break;\n                            }\n                        });\n                        // init options\n                        if (request.swmgMethodPath) {\n                            options = {\n                                collectionName: request.swmgMethodPath._collectionName,\n                                data: request.swmgParamDict,\n                                operationId: request.swmgMethodPath.operationId,\n                                paramDefList: request.swmgMethodPath.parameters,\n                                schemaName: request.swmgMethodPath._schemaName\n                            };\n                        }\n                        switch (request.swmgPathname) {\n                        // handle pet request\n                        case 'DELETE /pet/':\n                        case 'GET /pet/':\n                        case 'POST /pet':\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /pet/findByStatus':\n                            options.operationId = 'crudGetByQueryMany';\n                            options.data.fields = '{}';\n                            options.data.hint = '{}';\n                            options.data.limit = 100;\n                            options.data.query = '{\"status\":{\"$in\":' +\n                                JSON.stringify(options.data.status) + '}}';\n                            options.data.skip = 0;\n                            options.data.sort = '{\"_timeModified\":-1}';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /pet/findByTags':\n                            options.operationId = 'crudGetByQueryMany';\n                            options.data.fields = '{}';\n                            options.data.hint = '{}';\n                            options.data.limit = 100;\n                            options.data.query = '{\"status\":{\"$in\":' +\n                                JSON.stringify(options.data.tags) + '}}';\n                            options.data.skip = 0;\n                            options.data.sort = '{\"_timeModified\":-1}';\n                            options.paramDefList[0].default = 'bird,cat,dog';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /pet/':\n                            options.data.upsert = true;\n                            options.data.body = {\n                                id: options.data.id,\n                                name: options.data.name,\n                                status: options.data.status\n                            };\n                            options.operationId = 'crudUpdateOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /pet//':\n                            options.data.body = {\n                                additionalMetadata: options.data.additionalMetadata,\n                                file: options.data.file,\n                                filename:\n                                    request.swmgBodyParsed && request.swmgBodyParsed.filename,\n                                id: options.id\n                            };\n                            options.data.upsert = true;\n                            options.operationId = 'crudUpdateOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'PUT /pet':\n                            options.data.upsert = true;\n                            options.operationId = 'crudReplaceOne';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        // handle store request\n                        case 'DELETE /store/order/':\n                        case 'GET /store/order/':\n                        case 'POST /store/order':\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'GET /store/inventory':\n                            options.data = { body: [{\n                                $group: { _id: '$status', total: { $sum: 1} }\n                            }, {\n                                $project: { _id: 0, status: '$_id', total: '$total' }\n                            }]};\n                            options.operationId = 'crudAggregateMany';\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        // handle user request\n                        case 'DELETE /user/':\n                        case 'GET /user/':\n                        case 'POST /user/createWithArray':\n                        case 'POST /user/createWithList':\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'POST /user':\n                            options.data.username = options.data.body.username;\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        case 'PUT /user/':\n                            options.data.body.username = options.data.username;\n                            options.data.upsert = true;\n                            options.operationId = 'crudReplaceOne';\n                            options.optionsId = { username: request.swmgParamDict.username};\n                            local.swmg._crudApi(options, onNext);\n                            break;\n                        default:\n                            nextMiddleware();\n                        }\n                        break;\n                    default:\n                        // validate no error occurred\n                        local.utility2.assert(!error, error);\n                        // respond with json-object\n                        response.end(JSON.stringify(data));\n                    }\n                }, nextMiddleware);\n            };\n            onNext();\n        });\n        // run server-test\n        local.utility2.testRunServer(local);\n        break;\n    }\n// }((function () {\n//     'use strict';\n    var local;\n\n\n\n    // run shared js-env code\n    (function () {\n        // init local\n        local = {};\n        // init js-env\n        local.modeJs = (function () {\n            try {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            } catch (errorCaughtNode) {\n                var navigator = \"Your Value Here\";\n//                 return typeof navigator.userAgent === 'string' &&\n//                     typeof document.querySelector('body') === 'object' &&\n                    'browser';\n            }\n        }());\n        // init global\n//         local.global = local.modeJs === 'browser'\n//             ? window\n//             : global;\n        // export local\n//         local.global.local = local;\n        // init swagger-mongodb\n//         local.swmg = local.modeJs === 'browser'\n//             ? window.swmg\n//             : require('swagger-mongodb');\n        // import swmg.local\n        Object.keys(local.swmg.local).forEach(function (key) {\n            local[key] = local[key] || local.swmg.local[key];\n        });\n        // init utility2\n//         local.utility2 = local.swmg.local.utility2;\n        // init onReady\n//         local.utility2.onReadyInit();\n    }());\n    return local;\n// }())));",
   "id": 295,
   "stars": 0,
   "errors": [
    2769,
    1005,
    2339,
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 491,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var client = \"Your Value Here\";\n// client.indexes.list({ $select: ['name', 'fields'] });",
   "id": 296,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "module.exports = require('export-files')(__dirname, '**/*.json');",
   "id": 297,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Store = \"Your Value Here\";\nexport default new Store(hydrate({\n  modules: {\n    flights: {\n      state: {\n        selected: null,\n        in_flight: []\n      }\n    }\n  }\n}))\r\n\r\nfunction hydrate(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 298,
   "stars": 0,
   "errors": [
    2351
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Ajv from 'ajv';\nimport betterAjvErrors from 'better-ajv-errors';\n// const Ajv = require('ajv');\n// const betterAjvErrors = require('better-ajv-errors');\n\n// You need to pass `jsonPointers: true`\nconst ajv = new Ajv({ jsonPointers: true });\n\n// Load schema and data\nconst schema = ...;\nconst data = ...;\n\nconst validate = ajv.compile(schema);\nconst valid = validate(data);\n\nif (!valid) {\n  const output = betterAjvErrors(schema, data, validate.errors);\n  console.log(output);\n}",
   "id": 299,
   "stars": 0,
   "errors": [
    1109,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "    import SmartFlatList from 'react-native-smart-refresh-flatlist'",
   "id": 300,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var status;\nPrefer: status=200",
   "id": 301,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import CanvasSlider from '@martsis/canvas-slider';",
   "id": 302,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import isEmpty from 'just-is-empty';\n isEmpty({a: 3, b: 5}) // false\n isEmpty([1, 2]) // false\n isEmpty(new Set([1, 2, 2])) // false\n isEmpty((new Map()).set('a', 2)) // false\n isEmpty({}) // true\n isEmpty([]) // true\n isEmpty(new Set()) // true\n isEmpty(new Map()) // true\n isEmpty('abc') // false\n isEmpty('') // true\n isEmpty(0) // true\n isEmpty(1) // true\n isEmpty(true) // true\n isEmpty(Symbol('abc')); // true\n isEmpty(//); // true\n//  isEmpty(new String('abc')); // false\n//  isEmpty(new String('')); // true\n isEmpty(new Boolean(true)); // true\n isEmpty(null) // true\n isEmpty(undefined) // true",
   "id": 303,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 19,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const fs = require('fs');\nconst readable = require('co-readable');\nconst co = require('co');\n\nconst read = readable(fs.createReadStream('bigfile'));\n\nco(function* () {\n  let buf;\n  let size = 0;\n  while (buf = yield read(1024)) {\n    console.log('read %d bytes', buf.length);\n    size += buf.length;\n  }\n  console.log('total read %d bytes', size);\n}).catch(function (err) {\n  console.error(err.stack);\n});",
   "id": 304,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'onap-ui-common/lib/style.css';",
   "id": 305,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var tou8 = require('utf8-to-uint8array')\nvar str = '💩'\nconsole.log(tou8(str))",
   "id": 306,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\";\ngrunt.initConfig({\n  winston: {\n    myLogger: {\n      options: {\n        hooks: [\n          function (logger) {\n            logger.on('logging', function (transport, level, msg, meta) {\n              // [msg] and [meta] have now been logged at [level] to [transport]\n            });\n          },\n          function (logger) {\n            logger.addColors({\n              foo: 'blue',\n              bar: 'green',\n              baz: 'yellow',\n              foobar: 'red'\n            });\n          }\n        ]\n      }\n    }\n  }\n});",
   "id": 307,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "     var api = \"Your Value Here\";\n//      api.stuff.items.POST",
   "id": 308,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var pull = \"Your Value Here\";\n// pull(\n//   pl.read(db, {live: true}),\n  //log data as it comes,\n  //because tail will keep the connection open\n  //so we'll never see the end otherwise.\n//   pull.through(console.log),\n  //note, pull-streams will not drain unless something is\n  //pulling the data through, so we have to add drain\n  //even though the data we want is coming from pull.through()\n//   pull.drain()\n// )",
   "id": 309,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require(\"gulp\");\nvar reveasy = require(\"gulp-rev-easy\");\n\ngulp.task(\"reveasy\", function (argument) {\n  gulp.src(\"test.html\")\n    .pipe(reveasy({\n        fileTypes:['img1'],\n        elementAttributes:{\n            img1:{\n                name:'img',\n                src:'data-src'\n            }\n        }))\n    .pipe(gulp.dest(\"./dist\"))\n})",
   "id": 310,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Nothing = \"Your Value Here\"\nvar S = \"Your Value Here\"\n> S.reduce (S.concat) ('abc') (Nothing)\nvar Just = \"Your Value Here\"\n'abc'\n\n// > S.reduce (S.concat) ('abc') (Just ('xyz'))\n'abcxyz'",
   "id": 311,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const defaults = {\n    passengers: {\n        adults: 1,\n        children: 0\n    }\n}",
   "id": 312,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Iri = \"Your Value Here\";\ntype ResolveResourceFn = (\n//   resourceIri?: Iri,\n  context?: any,\n//   info?: GraphQLResolveInfo\n) => ?ResolverOutput<any>",
   "id": 313,
   "stars": 0,
   "errors": [
    8008,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Any = \"Your Value Here\";\nconst StringToken = Any(\n  /^('[^'\\\\]*(?:\\\\.[^'\\\\]*)*')/,  // single-quoted\n  /^(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")/,  // double-quoted\n);\n\nconst Identifier = /^([a-zA-Z_$][a-zA-Z0-9_$]*)/;\nconst SumExpression = All(Identifier, '=', Identifier, '+', Identifier);\r\n\r\nfunction All(Identifier, arg1, Identifier1, arg3, Identifier2) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 314,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const assert = require('assert')\n\nfunction counter (value) {\n    switch (typeof value) {\n    case 'object': {\n            if (null) {\n                return 1\n            }\n            let sum = 0\n            if (Array.isArray(value)) {\n                for (const item of value) {\n                    sum += counter(item)\n                }\n            }\n            for (const name in value) {\n                for (const item of value) {\n                    sum += counter(value[name])\n                }\n            }\n        }\n    default:\n        return 1\n    }\n}\n\nassert.equal(counter({ a: 'x', b: [ 'y', 'z' ] }), 3, 'found three scalar values')",
   "id": 315,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 24,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var bookshelf = \"Your Value Here\";\nconst Model = bookshelf.Model.extend({\n    casts: {\n        // Property 'locked' will be converted into a boolean value\n        locked: 'boolean',\n\n        age(dbValue) {\n            return parseInt(dbValue, 10);\n        },\n\n        notFourtyTwo() {\n            return 42;\n        }\n    }\n});\n\nModel.forge().fetch('id', 91)\n        .then( model => {\n            typeof model.get('locked'); // 'boolean'\n            model.get('notFourtyTwo');  // 42\n            typeof model.get('age'); // 'number'\n        });",
   "id": 316,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 18,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var access = \"Your Value Here\";\n// access.list(options, callback);",
   "id": 317,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var grunt = \"Your Value Here\";\n// shave and a haircut, two bits :D\n// grunt.task.run('beep:twobits');",
   "id": 318,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ModulusCombine = require('modulus-combine');\n\n// 4 digits before the decimal and keep 5 decimal digits (9 total)\nvar modulusCombine = new ModulusCombine(4, 10);\n\nmodulusCombine.compress(3.456789, 367.123123123);\n// -> 34567800000036712000\n\nmodulusCombine.deflate(34567800000036712000);\n// -> [ 3.45678, 367.12448 ]\n",
   "id": 319,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// function (d) { return this.accessor(d) !== undefined && this.accessor(d) !== ''; }",
   "id": 320,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// '../mock/index';\nconst item = {\n  id: 2,\n  wechatId: 'aaaaaa',\n  wechatName: '测试公众号',\n  appId: '1414',\n  type: 2,\n};\n\nlet start = 0;\nconst getList = () => {\n  const recordList = [];\n  for (let i = 0; i < 10; i++) {\n    const temp = { ...item };\n    Object.keys(temp).forEach((k) => {\n      temp[k] += start++;\n    });\n    recordList.push(temp);\n  }\n\n  return recordList;\n};\n\nexport const api = () => Promise.resolve({\n  totalRecord: 666,\n  recordList: getList(),\n});\n",
   "id": 321,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 23,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var orderBy = \"Your Value Here\";\n// .orderBy(\"key1\", \"key2\");\n// .orderBy({ \"key1\": \"asc\" }, { \"key2\": \"desc\" });\n// .orderBy([\"key1\", \"key2\"]);\n// .orderBy([{ \"key1\": \"asc\" }, { \"key2\": \"desc\" }]);",
   "id": 322,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { handle } from 'kefir.handle';\n\nvar Kefir = \"Your Value Here\";\n\n// var source = Kefir.sequentially(100, [0, 1, 2, 3]);\nvar result = source::handle({\n  value(emitter) { /* value handler */ }\n})",
   "id": 323,
   "stars": 0,
   "errors": [
    2304,
    1005,
    1134,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var sc = \"Your Value Here\"\n var ip = \"Your Value Here\"\n var 获取本机ip = \"Your Value Here\"\n// sc ip 获取本机ip",
   "id": 324,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import scroll from \"@threespot/freeze-scroll\";\n\n// Disable scrolling\nscroll.freeze();\n\n// Enable scrolling\nscroll.unfreeze();",
   "id": 325,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\nconst run = async() => {\n  // 默认参数\n  const expire = {\n    expireTime: 24, // 过期时间 24h\n    unit: 'hour', // hour | minute | second | millisecond\n    auto: true, // 自动过期， 开启会定时清除24h以前的数据\n  }\n\n  var databee = \"Your Value Here\";\n\n  // 使用默认过期时间 expire\n//   await databee.expire();\n\n  // 自定义数据过期时间\n//   await databee.expire(expire);\n}",
   "id": 326,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 8,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "function getIssueEventsCollection(comicId, characters, creators, limit, modifiedSince, name, nameStartsWith, offset, orderBy, series, stories, callback)",
   "id": 327,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { platform } = require(\"os\")\r\n\r\nvar git = \"Your Value Here\"\n var submodule = \"Your Value Here\"\n var update = \"Your Value Here\"\n// git submodule update --remote web-platform-tests",
   "id": 328,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var stachedown = \"Your Value Here\";\n// stachedown.renderStrict('The {{important_thing}} must be visible.', {});\n// throws Error",
   "id": 329,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const contentSourceKey = '' // your content source key\nconst user = 'enterprise_search' // username\n var client = \"Your Value Here\"\nconst permissions = { permissions: ['permission2'] } // permissions to add to the user\n\nclient\n//   .addUserPermissions(contentSourceKey, user, permissions)\n  .then(response => {\n    // handle response\n  })\n  .catch(error => {\n    // handle error\n  })",
   "id": 330,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//set ray position\nthis.ray.setOrigin(400, 300);\n//set ray direction (in radians)\nthis.ray.setAngle(2);\n//set ray direction (in degrees)\nthis.ray.setAngleDeg(90);\n//cast single ray and get closets intersection, hit mapped object and hit segment\nlet intersection = this.ray.cast();\nlet hitObject = intersection.object;\nlet hitSegment = intersection.segment;\n\n//cast rays in all directions (toward all mapped objects vertices / points)\n// let intersections = this.ray.castCircle();\n\n//set ray's cone angle (in radians)\nthis.ray.setCone(1);\n//set ray's cone angle (in degrees)\nthis.ray.setConeDeg(90);\n\n//cast rays in a cone\nlet intersections = this.ray.castCone();",
   "id": 331,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": " var qLUHmrFGexxpyHwQphLpE1czZNFE5m1xmV = \"Your Value Here\"\n// public address: qLUHmrFGexxpyHwQphLpE1czZNFE5m1xmV\n var key = \"Your Value Here\"\n// private key (WIF): cNQKccYYQyGX9G9Qxq2DJev9jHygbZpb2UG7EvUapbtDx5XhkhYE",
   "id": 332,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var MOUNTED = \"Your Value Here\";\nvar INTERVAL = \"Your Value Here\";\nvar NEW_LOADER = \"Your Value Here\";\nvar NEW_DOMAIN = \"Your Value Here\";\nvar NEW_SUBDOMAIN = \"Your Value Here\";\nvar UPDATE_POINTS_PER_SERIES = \"Your Value Here\";\n// MOUNTED, // First render of the chart\n// INTERVAL, // If you specify an update interval, it will be called every n seconds\n// NEW_LOADER, // The loader function changed\n// NEW_DOMAIN, // The outer domain changed,\n// NEW_SUBDOMAIN, // The user zoomed to a new subdomain.\n// UPDATE_POINTS_PER_SERIES, // The pointsPerSeries prop has changed",
   "id": 333,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 6,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const appCred = 'yourappcred';\nconst connectionURL = 'nodeConnectionURL';",
   "id": 334,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var api = \"Your Value Here\";\napi.convertToCoordinates(\"filled.count.soap\")\n  .then(function(response) {\n    console.log(\"[convertToCoordinates]\", response);\n  })\n  .catch(function(error) { // catch errors here\n    console.log(\"[code]\", error.code);\n    console.log(\"[message]\", error.message);\n  });",
   "id": 335,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Iterable from \"iterable.flow\"",
   "id": 336,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var f = \"Your Value Here\";\n// $ExpectType void\n// f(1);\n\n// $ExpectError\n// f(\"one\");",
   "id": 337,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var db = \"Your Value Here\";\ndb.status(function(obj){\n    console.log('Status', obj);\n});",
   "id": 338,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Book = \"Your Value Here\";\nconst book = new Book();\n\nRx.Observable.combineLatest(\n  book.subject('chapter1'),\n  book.subject('chapter2'),\n)\n.subscribe(() => {\n  console.log('Two first chapters are ready');\n});\n\nbook.publish('chapter1');\nbook.publish('chapter2');",
   "id": 339,
   "stars": 0,
   "errors": [
    2351,
    2304
   ],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var inspect = \"Your Value Here\";\nabout:inspect",
   "id": 340,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.",
   "id": 341,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var etcd = \"Your Value Here\";\nvar token = etcd.get(\"key\", console.log);\ntoken.abort() // also aliased as token.cancel()\n\nconsole.log(\"Request is cancelled: \", token.isAborted());",
   "id": 342,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// var htdocs = \"Your Value Here\"\n// htdocs/example/\n//   |- example.js     <-- your 'example' script file",
   "id": 343,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const fs = require(\"fs\");\nconst { parseSkinFile } = require('json2ableton-live-skin');\nconst skinFileBuffer = fs.readFileSync(__dirname + '/skinFile.ask');\nconst skin = parseSkinFile(skinFileBuffer);\nconsole.log(skin);\n// => {\"format\":\"live9\",\"ControlForeground\":[0,0,0,255],\"TextDisabled\":[90,90,9...\"ViewCheckControlDisabledOff\":[66,66,66,255]}",
   "id": 344,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { MentionsInput, Mention } from 'react-mentions'",
   "id": 345,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var morphology = require(\"ball-morphology\")\n\nrequire(\"get-pixels\")(\"bwimage.png\", function(err, data) {\n  var r = data.pick(-1, -1, 0)\n  \n  // ... do stuff ...\n})",
   "id": 346,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 4,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var web3 = \"Your Value Here\";\n// web3.utils.decodeBech32Address(hrp, bech32Address)",
   "id": 347,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ObjectStorage = require('ibmcloud-objectstorage');\nvar config = {\n    provider: 'openstack',\n    useServiceCatalog: true,\n    useInternal: false,\n    keystoneAuthVersion: 'v3',\n    authUrl: '',\n    tenantId: '', //projectId from credentials\n    domainId: '',\n    username: '',\n    password: '',\n    region: '' //dallas or london region\n};\nvar os = new ObjectStorage(config, \"my-container\");",
   "id": 348,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 14,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import Vue from 'vue'\nimport VuePagination from 'v-pc-pagination'\nVue.use(VuePagination)",
   "id": 349,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var is = \"Your Value Here\";\n// is.number(42);\n// => true\n\n// is.number(NaN);\n// => false\n\n// is.not.number('42');\n// => true\n\n// is.all.number('foo', 1);\n// => false\n\n// is.any.number({}, 2);\n// => true\n\n// 'all' and 'any' interfaces can also take array parameter\n// is.all.number([42, 'foo', 1]);\n// => false",
   "id": 350,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var React = \"Your Value Here\";\n({\n  timelineContext: {\n    timelineWidth,\n    visibleTimeStart,\n    visibleTimeEnd,\n    canvasTimeStart,\n    canvasTimeEnd\n  },\n  headerContext: {\n    unit,\n//     intervals: this.state.intervals\n  },\n//   getRootProps: this.getRootProps,\n//   getIntervalProps: this.getIntervalProps,\n  showPeriod,\n  //contextual data passed through headerData\n  data,\n})=> React.Node",
   "id": 351,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 15,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ParseServer         = require('parse-server').ParseServer;\nvar AzureStorageAdapter = require('parse-server-azure').FilesAdapter;\n\nvar account = 'YOUR_AZURE_STORAGE_ACCOUNT_NAME';\nvar container = 'YOUR_AZURE_STORAGE_CONTAINER_NAME';\nvar options = {\n    accessKey: 'YOUR_ACCESS_KEY',\n    directAccess: false // If set to true, files will be served by Azure Blob Storage directly\n}\n\nvar api = new ParseServer({\n  appId: process.env.APP_ID || 'myAppId',\n  serverURL: process.env.SERVER_URL || 'http://localhost:1337'\n//   (...)\n//   filesAdapter: new AzureStorageAdapter(account, container, options);\n});",
   "id": 352,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 12,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var yieldCache = \"Your Value Here\";\n// const cache = yieldCache();",
   "id": 353,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import TelephoneInput from 'react-tel-input-japan';\n\nvar React = \"Your Value Here\";\n\n// React.renderComponent(\n  <div>\n//     <TelephoneInput\n//       value={this.state.value}\n//       onChange={(value, valid) => this.setState({ value, valid })}\n      placeholder={'input telephone number'}\n    />\n//   </div>,\n//   document.querySelector('#element'));",
   "id": 354,
   "stars": 0,
   "errors": [
    17004,
    2695,
    17004,
    1109
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var when = \"Your Value Here\";\n// Conditionally execute a function to continue configuration\n// condition: Boolean\n// whenTruthy: Function -> ChainedMap\n  // invoked when condition is truthy, given a single argument of the ChainedMap instance\n// whenFalsy: Optional Function -> ChainedMap\n  // invoked when condition is falsy, given a single argument of the ChainedMap instance\n// when(condition, whenTruthy, whenFalsy)",
   "id": 355,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var analytics = \"Your Value Here\";\n// Reset current visitor\n// analytics.reset()",
   "id": 356,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var tr = require(\"tr-064\");\nvar tr064 = new tr.TR064();\ntr064.initTR064Device(\"fritz.box\", 49000, function (err, device) {\n    if (!err) {\n       var wanip = device.services[\"urn:dslforum-org:service:WANIPConnection:1\"];\n       wanip.actions.GetInfo(function(err, result){\n               console.log(result);\n       });\n    }\n});\n",
   "id": 357,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 10,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "//  var editable = \"Your Value Here\"\n// <vue-googlemap-polygon :paths=\"paths\" :events=\"events\" @change=\"change\" editable ></vue-googlemap-polygon>",
   "id": 358,
   "stars": 0,
   "errors": [],
   "hasCode": false,
   "nondeletedLines": 0,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var dynogels = \"Your Value Here\";\nvar Account = dynogels.define('Account', {\n  hashKey : 'email',\n\n  // add the timestamp attributes (updatedAt, createdAt)\n  timestamps : true,\n\n  schema : {\n//     email   : Joi.string().email(),\n//     name    : Joi.string(),\n//     age     : Joi.number(),\n//     roles   : dynogels.types.stringSet(),\n    settings : {\n//       nickname      : Joi.string(),\n//       acceptedTerms : Joi.boolean().default(false)\n    }\n  }\n});",
   "id": 359,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const strava = require('strava-v3');\nstrava.athlete.get({'access_token':'abcde'},function(err,payload,limits) {\n    //do something with your payload, track rate limits\n    console.log(limits);\n    /*\n    output:\n    {\n       shortTermUsage: 3,\n       shortTermLimit: 600,\n       longTermUsage: 12,\n       longTermLimit: 30000\n    }\n    */\n});",
   "id": 360,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 13,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var $scope = \"Your Value Here\";\n$scope.$on('auth:account-destroy-error', function(ev, reason) {\n  alert(\"Account deletion failed: \" + reason.errors[0]);\n});\r\n\r\nfunction alert(arg0) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n",
   "id": 361,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const logging = require(\"console-logging\");\nconst logger = logging.logger;",
   "id": 362,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { MatomoService } from \"bim-gdpr/src/services/matomo/matomo\"\n\nvar bGDPR = \"Your Value Here\"\n\n// Create services :\n// const matomo = bGDPR.createService( new MatomoService('//matomo.php') )\n// matomo.setWeight( -1 ) // Place matomo first.\n\n// Then initialize\nbGDPR\n//     .setTemplate( new DefaultTemplate() ) // Initialize the view\n//     .init() // Initialize the core",
   "id": 363,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var gulp = require('gulp');\nvar concatCss = require('gulp-concat-css');\n\ngulp.task('default', function () {\n  return gulp.src('assets/**/*.css')\n    .pipe(concatCss(\"styles/bundle.css\"))\n    .pipe(gulp.dest('out/'));\n});",
   "id": 364,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var ALMA_APIKEY\nvar l7xxabcdefghijklmnopqrstuvwxyz = \"Your Value Here\"\n var node = \"Your Value Here\"\n// ALMA_APIKEY=l7xxabcdefghijklmnopqrstuvwxyz node test.js ",
   "id": 365,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const M5Stack = require(\"m5stackjs\");\n\nlet m5 = new M5Stack('OBNIZ_ID_HERE');\n\nm5.onconnect = async function () {\n  m5.buttonA.onchange = (state) => {\n      console.log(state);\n  }\n  \n  const servo = m5.wired(\"ServoMotor\", {signal:2});\n  servo.angle(90);\n\n};\n",
   "id": 366,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 9,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "// TodoLib.js\nimport memoize from 'memoize-one';\nimport { createStatedLib } from '@stated-library/base';\nimport createTodo from './createTodo';\nimport fetchTodosFromCloud from './fetchTodosFromCloud';\n\nexport default function createTodoLib() {\n\n  const getCompletedTodos = memoize(\n    todos => todos.filter(todo => todo.completed)\n  );\n\n  const getActiveTodos = memoize(\n    todos => todos.filter(todo => !todo.completed)\n  );\n\n  function deriveState(rawState) {\n    return {\n      ...rawState,\n      get activeTodos() {\n        return getActiveTodos(rawState.todos);\n      },\n      get completedTodos() {\n        return getCompletedTodos(rawState.todos);\n      },\n    }\n  }\n\n  return createStatedLib(\n    { todos: [] },\n    base => ({\n\n      addTodo(text) {\n        var makeTodo = \"Your Value Here\";\n        base.updateState({\n//             todos: base.state.todos.concat(makeTodo(text)),\n          }, 'ADD_TODO');\n      },\n\n      toggleTodo(id) {\n        base.updateState({\n          todos: base.state.todos.map(todo =>\n            todo.id === id ? { ...todo, completed: !todo.completed } : todo)\n        }, 'TOGGLE_TODO');\n      },\n\n      async fetchTodos() {\n        base.updateState({ isFetching: true }, 'FETCH_TODOS_START');\n        const newTodos = await fetchTodosFromCloud();\n        base.updateState({\n          todos: base.state.todos.concat(newTodos),\n          isFetching: false,\n        }, 'FETCH_TODOS_COMPLETE');\n      },\n    }),\n  { deriveState });\n// ",
   "id": 367,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 46,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const fs = require('fs');\nconst { generate } = require('gas-entry-generator');\n\nconst fooSource = fs.readFileSync('foo.js', {encoding: 'utf8'});\nconst options = {\n  comment: true,\n  autoGlobalExports: true // Enable to detect exports.* to generate entry point functions.\n};\nconst output = generate(fooSource, options);\nconsole.log(output.entryPointFunctions);\nconsole.log('-----');\nconsole.log(output.globalAssignments);",
   "id": 368,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Config = require('webpack-chain');\n\nconst config = new Config();",
   "id": 369,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "\n// your-component.js\nimport Dummy from 'innoark-npm2'\n\n// ...\n// <Dummy className=\"dummy\" />\n// ...\n\n// your-component.css\nvar dummy = \"Your Value Here\";\n// .dummy {\n var white = \"Your Value Here\";\n  color: white;\n  var background = \"Your Value Here\";\n//   background-color: purple;\n// }\n",
   "id": 370,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var Trusona = \"Your Value Here\"\n// const trusona = new Trusona(token, secret)\n\n// const document = await trusona.getIdentityDocument(document.id)\n\n// document.verificationStatus // UNVERIFIED, UNVERIFIABLE, VERIFIED, or FAILED\r\n\r\nexport { }\r\n",
   "id": 371,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var async = \"Your Value Here\"\n var MergeIntoMKV = \"Your Value Here\"\n// async MergeIntoMKV(downloadedFile = LocalVideoObjectSchema,\n//                    srt_subtitles = Array(SubtitleMeta),\n//                    selectedFile = VideoObjectSchema)",
   "id": 372,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const { text } = require(\"stream/consumers\")\r\n\r\nvar jamr = \"Your Value Here\"\n// jamr -w ./model.json -i ./text-file.txt -o ./where-ever.txt -n 5 -s 5000",
   "id": 373,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 2,
   "fixed": true,
   "tsFixed": true,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "export default {\n  modules: [\n    'nuxt-feed-yandex-market'\n  ],\n  yandexMarket: {\n    data: {}, // JSON with data or a function that returns the JSON \n    path: '/yandex-market.xml', // The route to your xml file\n    validate: true,\n    cacheTime: 1000 * 3600 * 24 \n  }\n}",
   "id": 374,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 11,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var window = \"Your Value Here\";\n// if ('scrollRestoration' in window.history) {\n//   window.history.scrollRestoration = 'manual';\n// }",
   "id": 375,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 1,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const Counter = () => {\n  var useState = \"Your Value Here\"\n//   const [count, setCount] = useState(0)\n//   return <div>\n//     <button onClick={() => setCount(count + 1)} >Increment</button>\n//     <span>count: {count}</span>\n//   </div>\n}",
   "id": 376,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var removeRow = \"Your Value Here\"\n// removeRow(\n//   change: Change,\n  options: {\n//     at?: number,\n//     normalize?: boolean,\n  }\n// ): Change",
   "id": 377,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 3,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var url = \"Your Value Here\";\n// On GET /statistics\n// Get the top score\nif (url === '/top-score') {\n    var dpd = \"Your Value Here\";\n    dpd.scores.get({$limit: 1, $sort: {score: -1}}, function(result) {\n    result(result[0]);\n    });\n}",
   "id": 378,
   "stars": 0,
   "errors": [
    2339
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "                                                                                          var am = \"Your Value Here\";\n                                                                                      \n    am([34, 56, 78]).forEach(function (value, i) {\n           console.log(value, i);\n    })\n    \n    .log()  // 34 0, 56 1, 78 2, [34, 56, 78]\n    \n    .error(err=>{      \n              // handle errors at end of chain\n      \n    })\n  ",
   "id": 379,
   "stars": 0,
   "errors": [
    2349
   ],
   "hasCode": true,
   "nondeletedLines": 7,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "var AuthModule = \"Your Value Here\";\nAuthModule.forRoot({\n  domain: 'YOUR_AUTH0_DOMAIN',\n  clientId: 'YOUR_AUTH0_CLIENT_ID',\n  organization: 'YOUR_ORGANIZATION_ID'\n// }),",
   "id": 380,
   "stars": 0,
   "errors": [
    2339,
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const InsertHtmlWebpackPlugin = require('insert-html-webpack-plugin')\n\nnew InsertHtmlWebpackPlugin(\n  // 第一个参数，必填，配置文件列表\n  {\n    js: [\n      // 可以配置多个，按顺序依次插入\n      { path: 'a.js' }, // path属性表示使用script内联方式\n      { path: 'b.js' },\n      { url: 'https://c.com/c.js' } // url属性表示使用script外部引入方式\n    ],\n    css: [\n      { path: 'd.css' }, // path属性表示使用style内联方式\n      { url: 'https://e.com/e.css' } // url属性表示使用link外部引入方式\n    ]\n  },\n  // 第二个参数，可选，配置插入位置，默认值如下\n  {\n    jsNode: '<body>', // 指定js要插入的节点位置\n    jsSide: 'after', // js要插入在节点位置处的前面还是后面，可选值'after'、'before'\n    cssNode: '</title>', // 指定css要插入的节点位置\n    cssSide: 'after', // css要插入在节点位置处的前面还是��面，可选值'after'、'before'\n  }\n)",
   "id": 381,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 20,
   "fixed": false,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "const path = require(\"path\")\n\"../../whatwg-fetch/fetch.js\": path.join( // this is the third-party dependency in the lrnwebcomponents\n  __dirname,\n  \"../node_modules/whatwg-fetch/fetch.js\" // this is where it lives in node_modules\n)",
   "id": 382,
   "stars": 0,
   "errors": [
    1005
   ],
   "hasCode": true,
   "nondeletedLines": 5,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  },
  {
   "code": "import { enableProdMode, NgZone } from '@angular/core';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { Router } from '@angular/router';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport singleSpaAngular from 'single-spa-angular';\nimport { singleSpaPropsSubject } from './single-spa/single-spa-props';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst lifecycles = singleSpaAngular({\n  bootstrapFunction: singleSpaProps => {\n    singleSpaPropsSubject.next(singleSpaProps);\n    return platformBrowserDynamic().bootstrapModule(AppModule);\n  },\n  template: '<app-root />',\n  Router,\n  NgZone,\n//   domElementGetter: () => document.getElementById('angular-app')\n});\n\nexport const bootstrap = lifecycles.bootstrap;\nexport const mount = lifecycles.mount;\nexport const unmount = lifecycles.unmount;",
   "id": 383,
   "stars": 0,
   "errors": [],
   "hasCode": true,
   "nondeletedLines": 22,
   "fixed": true,
   "tsFixed": false,
   "compileFail": false,
   "lineFail": false
  }
 ]
}