[{
  "code": "const eh = {}",
  "id": 0,
  "order": 0,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<link href=\"https://fonts.googleapis.com/css?family=Prompt|Sarabun:300,400\" rel=\"stylesheet\">\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/0.css@0.1.0/dist/0.min.css\">",
  "id": 1,
  "order": 0,
  "stars": 0,
  "errors": [
    17004,
    17008,
    17004,
    17008,
    17004,
    17008,
    1005
  ],
  "hasCode": true,
  "nondeletedLines": 3,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "anydoor # 把当前文件夹作为静态资源服务器根目录\n\nanydoor -p 8080 # 设置端口号为 8080\n\nanydoor -h localhost # 设置 host 为 localhost\n\nanydoor -d /usr # 设置根目录为 /usr",
  "id": 2,
  "order": 0,
  "stars": 0,
  "errors": [
    1435,
    2304,
    1127,
    1005,
    2304,
    2304,
    2304,
    1005,
    1127,
    1005,
    2304,
    2304,
    2304,
    1005,
    1434,
    2304,
    1127,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    2304,
    2304,
    1127,
    1005,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 4,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "const zerotwo = require('002');\n\nconsole.log(zerotwo());",
  "id": 3,
  "order": 0,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 2,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "// we want to test github\nvar github = require('github');\nvar doubleOhSeven = require('007');\nvar mockGithub = doubleOhSeven(github);\n\nmockGithub.pullRequests.getCommits.returns = function () {\n  return {\n    foo: 'beep'\n  };\n};\n\nassert(mockGithub.pullRequests.getCommits('lalala').foo === 'beep');\nassert(mockGithub.pullRequests.getCommits.callCount === 1);\n",
  "id": 4,
  "order": 0,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 10,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "mockFn.implementation = function (val, cb) {\n  return cb(val + 1);\n};",
  "id": 5,
  "order": 1,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 3,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "mockFn.returns('foo');\nmockFn(function (arg) {\n  console.log(arg); // outputs 'foo'\n});",
  "id": 6,
  "order": 2,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 4,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "mockFn.callbackArgs(['foo']);\nmockFn(function (arg) {\n  console.log(arg); // outputs 'foo'\n});",
  "id": 7,
  "order": 3,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 4,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "    const calc = require('szhmqd25calc')\n\n     使用加法\n    const result1 = calc.add(1,2)\n    console.log(result1)\n\n     使用加法\n    const result2 = calc.substrict(1,2)\n    console.log(result2)",
  "id": 8,
  "order": 0,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 7,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "    const calc = require('szhmqd25calc')\n\n    // 使用加法\n    const result1 = calc.add(1,2)\n    console.log(result1)\n\n    // 使用加法\n    const result2 = calc.substrict(1,2)\n    console.log(result2)",
  "id": 9,
  "order": 0,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 5,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "    // 导包\n    const szhmqd23calc = require('szhmqd23calc')\n\n    // 使用\n    console.log(szhmqd23calc.add(1,2))\n\n    console.log(szhmqd23calc.name)",
  "id": 10,
  "order": 0,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 3,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "    //1.导入包\n    const addObj = require('01.test-cnpm')\n\n    //2.调用方法\n    const result = addObj.addFunction(1,2)\n\n    //3.验证结果\n    console.log(result)\n",
  "id": 11,
  "order": 0,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 3,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "const randomString = require('0126af95c0e2d9b0a7c78738c4c00a860b04acc8');\n\nrandomString();\n//=> 'ghEhhkYYnuetAyWY9vKE8N0PYb48gD3HoM2zj6kV'\n\nrandomString(2);\n//=> 'rT'",
  "id": 12,
  "order": 0,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 3,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import UI from '01pro'\nimport '01pro/lib/01pro.css'\nVue.use(UI)",
  "id": 13,
  "order": 0,
  "stars": 0,
  "errors": [
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 3,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": " <my-button style=\"width:500px\">我是具名插槽</my-button>\n \n \n  <br>\n   <my-button  size=\"massive\">大按钮</my-button>\n<br>\n<my-button  disabled size=\"massive\" icon=\"wifi\">信息按钮</my-button>\n <br>\n<my-button disabled size=\"massive\" icon=\"warning circle\">warning circle</my-button>\n   <br>\n    <my-button  icon=\"history\" loading>icon为history的loading按钮</my-button>\n    <br>\n    <my-button animated >\n<div slot=\"hidden\">$10000</div>\n<div slot=\"visible\"><i class=\"shop icon\"></i>不要错过哈</div>\n</my-button>\n\n<my-button animated=\"fade\" >\n<div slot=\"hidden\">$10000</div>\n<div slot=\"visible\"><i class=\"shop icon\"></i>不要错过哈</div>\n</my-button>",
  "id": 14,
  "order": 1,
  "stars": 0,
  "errors": [
    17004,
    2657,
    17004,
    17008,
    17004,
    17004,
    17008,
    17004,
    17004,
    17008,
    17004,
    17004,
    17008,
    17004,
    17004,
    17008,
    17004,
    17004,
    17004,
    17004,
    17004,
    17004,
    17004,
    17004,
    1005
  ],
  "hasCode": true,
  "nondeletedLines": 18,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "lxp create your_project_name",
  "id": 15,
  "order": 0,
  "stars": 0,
  "errors": [
    1434,
    2304,
    1434,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "    //导入计算器模块\n    const calc = require('02wapcalc')\n\n    //加法计算\n    console.log(calc.add(1,1)) //==>2\n\n    //减法计算\n    console.log(calc.jian(1,1)) //==>0",
  "id": 16,
  "order": 0,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 3,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "git clone https://github.com/jhudson8/restful-redux.git\ncd restful-redux/examples/05-normalizr-github-paged-project-search-and-viewer\nnpm i\nnpm start",
  "id": 17,
  "order": 0,
  "stars": 0,
  "errors": [
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    1434,
    2304,
    2304,
    1434,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 4,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "// 忽略 example 資料夾下的所有檔案\n/example/",
  "id": 18,
  "order": 0,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import {calculResult} from \"./index\";\n",
  "id": 19,
  "order": 0,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "// Importar el modulo\nconst m = require('.');\n\n// Sumas\nconsole.log(m.suma(1,2)); => 3\nconsole.log(m.suma(1,34)); => 35\n\n// Restas\nconsole.log(m.resta(11,24)); => -13\nconsole.log(m.resta(1,2)); => -1\n\n// Multiplicacion\nconsole.log(m.multiplicacion(1,24)); => 24\nconsole.log(m.multiplicacion(1,2)); => 2\n\n// Division\nconsole.log(m.division(1,4)); => 0.25\nconsole.log(m.division(1,2)); => 0.5",
  "id": 20,
  "order": 0,
  "stars": 0,
  "errors": [
    1128,
    1128,
    1128,
    1128,
    1128,
    1128,
    1128,
    1128
  ],
  "hasCode": true,
  "nondeletedLines": 9,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "<template>\n  <div>\n    <vo-basic :data=\"chartData\"></vo-basic>\n  </div>\n</template>\n\n<script>\nimport { VoBasic } from 'vue-orgchart'\nexport default {\n  components: { VoBasic }\n  created () {\n    this.chartData = {\n      name: 'JavaScript',\n        children: [\n          { name: 'Angular' },\n          {\n            name: 'React',\n            children: [{ name: 'Preact' }]\n          },\n          {\n            name: 'Vue',\n            children: [{ name: 'Moon' }]\n          }\n        ]\n    }\n}\n</script>",
  "id": 21,
  "order": 0,
  "stars": 0,
  "errors": [
    17004,
    17004,
    17004,
    1003,
    1382,
    17002,
    17002,
    1128,
    2304,
    17004,
    2304,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 26,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "const utils = requires('05-mynpm')",
  "id": 22,
  "order": 0,
  "stars": 0,
  "errors": [
    2552
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "my-app/\n  README.md\n  node_modules/\n  package.json\n  public/\n    index.html\n    favicon.ico\n  src/\n    App.css\n    App.js\n    App.test.js\n    index.css\n    index.js\n    logo.svg",
  "id": 23,
  "order": 0,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 14,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import React, { Component } from 'react';\n\nclass Button extends Component {\n  render() {\n    // ...\n  }\n}\n\nexport default Button; // Don’t forget to use export default!",
  "id": 24,
  "order": 1,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 6,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import React, { Component } from 'react';\nimport Button from './Button'; // Import a component from another file\n\nclass DangerButton extends Component {\n  render() {\n    return <Button color=\"red\" />;\n  }\n}\n\nexport default DangerButton;",
  "id": 25,
  "order": 2,
  "stars": 0,
  "errors": [
    17004
  ],
  "hasCode": true,
  "nondeletedLines": 8,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "const moduleA = 'Hello';\n\nexport { moduleA };",
  "id": 26,
  "order": 3,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 2,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import React, { Component } from 'react';\n\nclass App extends Component {\n  handleClick = () => {\n    import('./moduleA')\n      .then(({ moduleA }) => {\n        // Use moduleA\n      })\n      .catch(err => {\n        // Handle failure\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.handleClick}>Load</button>\n      </div>\n    );\n  }\n}\n\nexport default App;",
  "id": 27,
  "order": 4,
  "stars": 0,
  "errors": [
    17004,
    17004
  ],
  "hasCode": true,
  "nondeletedLines": 18,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import React, { Component } from 'react';\nimport './Button.css'; // Tell Webpack that Button.js uses these styles\n\nclass Button extends Component {\n  render() {\n    // You can use them as regular CSS styles\n    return <div className=\"Button\" />;\n  }\n}",
  "id": 28,
  "order": 5,
  "stars": 0,
  "errors": [
    17004
  ],
  "hasCode": true,
  "nondeletedLines": 7,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "\"build-css\": \"node-sass-chokidar --include-path ./src --include-path ./node_modules src/ -o src/\",\n\"watch-css\": \"npm run build-css && node-sass-chokidar --include-path ./src --include-path ./node_modules src/ -o src/ --watch --recursive\",",
  "id": 29,
  "order": 6,
  "stars": 0,
  "errors": [
    1005,
    2695,
    1005,
    2695,
    1109
  ],
  "hasCode": true,
  "nondeletedLines": 2,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import React from 'react';\nimport logo from './logo.png'; // Tell Webpack this JS file uses this image\n\nconsole.log(logo); // /logo.84287d09.png\n\nfunction Header() {\n  // Import result is the URL of your image\n  return <img src={logo} alt=\"Logo\" />;\n}\n\nexport default Header;",
  "id": 30,
  "order": 7,
  "stars": 0,
  "errors": [
    17004
  ],
  "hasCode": true,
  "nondeletedLines": 7,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "render() {\n  // Note: this is an escape hatch and should be used sparingly!\n  // Normally we recommend using `import` for getting asset URLs\n  // as described in “Adding Images and Fonts” above this section.\n  return <img src={process.env.PUBLIC_URL + '/img/logo.png'} />;\n}",
  "id": 31,
  "order": 8,
  "stars": 0,
  "errors": [
    2304,
    1005
  ],
  "hasCode": true,
  "nondeletedLines": 3,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "const $ = window.$;",
  "id": 32,
  "order": 9,
  "stars": 0,
  "errors": [
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.",
  "id": 33,
  "order": 10,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 2,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import { Navbar, Jumbotron, Button } from 'react-bootstrap';",
  "id": 34,
  "order": 11,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "if (process.env.NODE_ENV !== 'production') {\n  analytics.disable();\n}",
  "id": 35,
  "order": 12,
  "stars": 0,
  "errors": [
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 3,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "REACT_APP_SECRET_CODE=abcdef",
  "id": 36,
  "order": 13,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "REACT_APP_VERSION=$npm_package_version\n# also works:\n# REACT_APP_VERSION=${npm_package_version}",
  "id": 37,
  "order": 14,
  "stars": 0,
  "errors": [
    2304,
    2304,
    1127,
    1005,
    2304,
    1127,
    1005,
    2304,
    2592,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 3,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "DOMAIN=www.example.com\nREACT_APP_FOO=$DOMAIN/foo\nREACT_APP_BAR=$DOMAIN/bar",
  "id": 38,
  "order": 15,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 3,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "/             - static server returns index.html with React app\n/todos        - static server returns index.html with React app\n/api/todos    - server handles any /api/* requests using the backend implementation",
  "id": 39,
  "order": 16,
  "stars": 0,
  "errors": [
    2362,
    1161,
    2304,
    2304,
    1005,
    2304,
    1435,
    2304,
    2304,
    1005,
    1005,
    2304,
    1005,
    1005,
    2304,
    2693,
    2304,
    1010
  ],
  "hasCode": true,
  "nondeletedLines": 3,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "  \"proxy\": \"http://localhost:4000\",",
  "id": 40,
  "order": 17,
  "stars": 0,
  "errors": [
    1005,
    2695,
    1109
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "Fetch API cannot load http://localhost:4000/api/todos. No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://localhost:3000' is therefore not allowed access. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.",
  "id": 41,
  "order": 18,
  "stars": 0,
  "errors": [
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1109
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "HOST=mypublicdevhost.com",
  "id": 42,
  "order": 19,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "# NOTE: THIS IS DANGEROUS!\n# It exposes your machine to attacks from the websites you visit.\nDANGEROUSLY_DISABLE_HOST_CHECK=true",
  "id": 43,
  "order": 20,
  "stars": 0,
  "errors": [
    1127,
    1005,
    1435,
    2304,
    1434,
    2304,
    2304,
    8013,
    1127,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 3,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <script>\n      window.SERVER_DATA = __SERVER_DATA__;\n    </script>",
  "id": 44,
  "order": 21,
  "stars": 0,
  "errors": [
    1109,
    2304,
    1005,
    2304,
    17004,
    17008,
    17004,
    17008,
    17004,
    1005
  ],
  "hasCode": true,
  "nondeletedLines": 6,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import sum from './sum';\n\nit('sums numbers', () => {\n  expect(sum(1, 2)).toEqual(3);\n  expect(sum(2, 2)).toEqual(4);\n});",
  "id": 45,
  "order": 22,
  "stars": 0,
  "errors": [
    2593,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 5,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "npx 07Gond",
  "id": 46,
  "order": 0,
  "stars": 0,
  "errors": [
    1434,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "    const testObj = require('0825mytest');\n    console.log(`加法计算的结果是${calObj.add(1,2)}`);\n    console.log(`减法计算的结果是${calcObj.substrict(1,2)}`);",
  "id": 47,
  "order": 0,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 3,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "- 支持[swig](https://twig.sensiolabs.org/doc/2.x/)模板引擎  \n- 下划线的不会被处理\n- 模板代码如下\n_base.html\n\n```twig\n<html>\n<head>\n    <title>{% block title %}{% endblock %}</title>\n</head>\n<body>\n    {% block body %}{% endblock %}\n</body>\n</html>",
  "id": 48,
  "order": 0,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1160
  ],
  "hasCode": true,
  "nondeletedLines": 13,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "var pluralise = require('mypluralize');\nvar boys = pluralise.getPlural('Boy');",
  "id": 49,
  "order": 0,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 2,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "define(function(require,exports,module){\n  var pluralise = require('mypluralize');\n});",
  "id": 50,
  "order": 1,
  "stars": 0,
  "errors": [
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 3,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "funny, bg, trending, talk, girl, boy, mood, music, movie, literature, sport, pet, food, job, studyabroad, marvel, sex, dcard, whysoserious, delete",
  "id": 51,
  "order": 0,
  "stars": 0,
  "errors": [
    2304,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2695,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    1109,
    2703
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import jsClientSdk from 'js-client';",
  "id": 52,
  "order": 0,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "var config = {\n    \"miners\": [\n    \"http://one.devnet-0chain.net:31071/\",\n    \"http://one.devnet-0chain.net:31072/\",\n    \"http://one.devnet-0chain.net:31073/\",\n    \"http://one.devnet-0chain.net:31074/\",\n    \"http://one.devnet-0chain.net:31075/\",\n    \"http://one.devnet-0chain.net:31076/\",\n    \"http://one.devnet-0chain.net:31077/\",\n    \"http://one.devnet-0chain.net:31078/\",\n    \"http://one.devnet-0chain.net:31079/\"\n  ],\n  \"sharders\": [\n    \"http://one.devnet-0chain.net:31171/\",\n    \"http://one.devnet-0chain.net:31172/\",\n    \"http://one.devnet-0chain.net:31173/\",\n    \"http://one.devnet-0chain.net:31174/\",\n    \"http://one.devnet-0chain.net:31175/\",\n    \"http://one.devnet-0chain.net:31176/\",\n    \"http://one.devnet-0chain.net:31177/\",\n    \"http://one.devnet-0chain.net:31178/\",\n    \"http://one.devnet-0chain.net:31179/\"\n  ],\n  \"chain_id\" :   \"0afc093ffb509f059c55478bc1a60351cef7b4e9c008a53a6cc8241ca8617dfe\",\n  \"clusterName\" : \"0chain-local-cluster\",\n  \"proxyServerUrl\" : \"http://localhost:9082\",\n  \"transaction_timeout\" : 20,\n  \"state \" : true\n}\njsClientSdk.init(config, bls)",
  "id": 53,
  "order": 1,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 30,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "jsClientSdk.init(bls)",
  "id": 54,
  "order": 2,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "jsClientSdk.registerClient()",
  "id": 55,
  "order": 3,
  "stars": 0,
  "errors": [
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "jsClientSdk.restoreWallet(mnemonic)",
  "id": 56,
  "order": 4,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "jsClientSdk.sendTransaction(fromAccount, toWalletId, value, note)",
  "id": 57,
  "order": 5,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "jsClientSdk.storeData(fromAccount, data, note)",
  "id": 58,
  "order": 6,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "jsClientSdk.checkTransactionStatus(hash)",
  "id": 59,
  "order": 7,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "jsClientSdk.getBalance(client_id)",
  "id": 60,
  "order": 8,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "jsClientSdk.executeSmartContract(fromAccount, smartContractAddress, payload, transactionValue)",
  "id": 61,
  "order": 9,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "jsClientSdk.getBlockInfoByHash(hash, options, callback, errCallback)",
  "id": 62,
  "order": 10,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "jsClientSdk.getBlockInfoByRound(round, options, callback, errCallback)",
  "id": 63,
  "order": 11,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "jsClientSdk.getChainStats()",
  "id": 64,
  "order": 12,
  "stars": 0,
  "errors": [
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "jsClientSdk.getLatestFinalized()",
  "id": 65,
  "order": 13,
  "stars": 0,
  "errors": [
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "jsClientSdk.getRecentFinalized()",
  "id": 66,
  "order": 14,
  "stars": 0,
  "errors": [
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "const cero = require('0http')\nconst { router, server } = cero()\n\nrouter.get('/hello', (req, res) => {\n  res.end('Hello World!')\n})\n\nrouter.post('/do', (req, res) => {\n  // ...\n  res.statusCode = 201\n  res.end()\n})\n\n//...\n\nserver.listen(3000)",
  "id": 67,
  "order": 0,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 10,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "router.lookup = (req, res) // -> should trigger router search and handlers execution",
  "id": 68,
  "order": 1,
  "stars": 0,
  "errors": [
    2304,
    2695,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "const cero = require('0http')\nconst { router, server } = cero({})\n\n// global middleware example\nrouter.use('/', (req, res, next) => {\n  res.write('Hello ')\n  next()\n})\n\n// route middleware example\nconst routeMiddleware = (req, res, next) => {\n  res.write('World')\n  next()\n}\n\n// GET /sayhi route with middleware and handler\nrouter.get('/sayhi', routeMiddleware, (req, res) => {\n  res.end('!')\n})\n\nserver.listen(3000)",
  "id": 69,
  "order": 2,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 14,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "const sequential = require('0http/lib/router/sequential')\nconst { router, server } = cero({\n  router: sequential({\n    cacheSize: 2000\n  })\n})",
  "id": 70,
  "order": 3,
  "stars": 0,
  "errors": [
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 6,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "router.use('/', async (req, res, next) => {\n  try {\n    await next()\n  } catch (err) {\n    res.statusCode = 500\n    res.end(err.message)\n  }\n})\n\nrouter.get('/sayhi', (req, res) => {\n  throw new Error('Uuuups!')\n})",
  "id": 71,
  "order": 4,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 11,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "const cero = require('../index')\nconst { router, server } = cero({})\n\nconst nested = require('0http/lib/router/sequential')()\nnested.get('/url', (req, res, next) => {\n  res.end(req.url)      \n})\nrouter.use('/v1', nested)\n\nserver.listen(3000)",
  "id": 72,
  "order": 5,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 8,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "const cero = require('../index')\nconst { router, server } = cero({\n  router: require('find-my-way')()\n})\n\nrouter.on('GET', '/hi', (req, res) => {\n  res.end('Hello World!')\n})\n\nserver.listen(3000)",
  "id": 73,
  "order": 6,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 8,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "const cero = require('0http')\n\nconst { router, server } = cero({\n  server: yourCustomServerInstance\n})",
  "id": 74,
  "order": 7,
  "stars": 0,
  "errors": [
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 4,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "var zm = require(\"0model\");\n\n\nzm(\" D \").string().get().trim();            // <-- \"D\"\nzm(\" 13.\").to.int().it.is.required();       // <-- true\n\nzm({x: 1, y: 2}).to.have(\"x\", \"z\");         // <-- false\nzm({}).it.is.empty();                       // <-- true\nzm(\"hi\").str().between(1, 16);              // <-- true\n\nzm(\"[1,2]\").to.json().get();                // <-- [1, 2]\nzm(\"[1,\").to.json().to.string().get();      // <-- ''\nzm(\"[1,\").json().string().get();            // <-- ''\n\nzm(5.9).int().str() + 10;                   // <-- '510'\nzm(5.9).to.integer() + \" num\";              // <-- '5 num'\nzm(zm('d0' / 1)).empty();                   // <-- true\n\n\nzm([1, 2, 3]).set(x => x.reduce((a, b) => a + b)).get(console.log);\nzm({x: 1, y: 2}).set(JSON.stringify).get(console.log);\nzm(3.14159).set(x => x.toFixed(0)).str().get(console.log);\n\n\nzm(\"hello 2 world\").to.string().then.remove(/\\d+/).it.is.required();\nzm(\"hello 2 world\").to.string().then.remove(/\\d+/).get();\nzm(\"hello 2 world\").to.string().then.remove(d => d.substr(2)) + \"!\";",
  "id": 75,
  "order": 0,
  "stars": 0,
  "errors": [
    2362
  ],
  "hasCode": true,
  "nondeletedLines": 18,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "0n",
  "id": 76,
  "order": 0,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "const zt = require(\"0this\");\n\nconst func = zt((thiz, arg1, arg2) => {\n  console.log(thiz, arg1, arg2);\n});\n\nconst thiz = {\n  prop: \"prop\",\n};\n\nfunc.apply(thiz, [1, 2]);",
  "id": 77,
  "order": 0,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 8,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import { match } from \"0ui/lib/core\";\n\nmatch(\"loading\")({\n  loading: () => console.log(\"Loading\"),\n  error: () => console.log(\"Error\")\n});\n// \"Error\"",
  "id": 78,
  "order": 0,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 5,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import State from \"0ui/lib/state\";\n\nconst state = State.create(0);\n\nstate.addWatch(\"key\", (key, state, prevVal, nextVal) => {\n  console.log(prevVal, nextVal);\n});\n\nstate.swap(val => val + 1); // 0 1",
  "id": 79,
  "order": 1,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 6,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import State from \"0ui/lib/state\";\nimport DerivedState from \"0ui/lib/derived-state\";\n\nconst bucket = State.create({\n  items: [\n    {\n      price: 104.5\n    },\n    {\n      price: 78.2\n    }\n  ]\n});\n\nconst bucketPrice = DerivedState.create(bucket, ({ items }) =>\n  items.reduce((sum, { price }) => sum + price, 0)\n);\n\nbucketPrice.state; // 182.7\n\nbucket.swap(removeFirstItem);\n\nbucketPrice.state; // 178.2",
  "id": 80,
  "order": 2,
  "stars": 0,
  "errors": [
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 18,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import MultiMethod from \"0ui/lib/multimethod\";\n\nconst toJSON = MultiMethod.create(v => {\n  if (Array.isArray(v)) {\n    return \"array\";\n  } else {\n    return typeof v;\n  }\n});\n\ntoJSON.addMethod(\"string\", v => JSON.stringify(v));\n\ntoJSON.addMethod(\"number\", v => v.toString());\n\ntoJSON.addMethod(\"array\", arr => {\n  const jsonArr = arr.map(v => toJSON.dispatch(v)).join(\", \");\n  return `[${jsonArr}]`;\n});\n\ntoJSON.addMethod(\"object\", o => {\n  const jsonObj = Object.entries(o)\n    .map(([k, v]) => toJSON.dispatch(k) + \":\" + toJSON.dispatch(v))\n    .join(\", \");\n  return `{${jsonObj}}`;\n});\n\ntoJSON.dispatch({\n  items: [1, \"two\"]\n});\n// {\"items\":[1, \"two\"]}",
  "id": 81,
  "order": 3,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 23,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import { createComponent } from \"0ui/lib/ui\";\nimport State from \"0ui/lib/state\";\n\nconst Counter = createComponent({\n  states: {\n    count: State.create(0) // local state\n  },\n  render(states, props) {\n    const { count } = states;\n\n    return (\n      <div>\n        <button onClick={() => count.swap(v => v - 1)}>-</button>\n        <span>{count.state}</span>\n        <button onClick={() => count.swap(v => v + 1)}>+</button>\n      </div>\n    );\n  }\n});",
  "id": 82,
  "order": 4,
  "stars": 0,
  "errors": [
    17004,
    17004,
    17004,
    17004
  ],
  "hasCode": true,
  "nondeletedLines": 17,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "const zeroEks = require('0x')\nconst path = require('path')\n\nasync function capture () {\n  const opts = {\n    argv: [path.join(__dirname, 'my-app.js'), '--my-flag', '\"value for my flag\"'],\n    workingDir: __dirname\n  }\n  try {\n    const file = await zeroEks(opts)\n    console.log(`flamegraph in ${file}`)\n  } catch (e) {\n    console.error(e)\n  }\n}\n\ncapture()\n",
  "id": 83,
  "order": 0,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 15,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "node --stack-size=8024 $(which 0x) my-app.js",
  "id": 84,
  "order": 1,
  "stars": 0,
  "errors": [
    2304,
    1005,
    2304,
    2304,
    1005,
    1005,
    2592,
    2304,
    1005,
    1125,
    1005,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug abi_decode [ABIENCODEDDATA]\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n  --tx\n\nEXAMPLE\n  $ 0x-debug abi_decode [abi encoded data]",
  "id": 85,
  "order": 0,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1128
  ],
  "hasCode": true,
  "nondeletedLines": 11,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug config [KEY] [VALUE]\n\nOPTIONS\n  -d, --delete  delete config key\n\nEXAMPLE\n  $ 0x-debug config [KEY] [VALUE]",
  "id": 86,
  "order": 1,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2695,
    2304,
    1109,
    2703,
    2304,
    2703,
    1005,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 6,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug explain [TX]\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n\nEXAMPLE\n  $ 0x-debug explain [tx]",
  "id": 87,
  "order": 2,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 10,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug help [COMMAND]\n\nARGUMENTS\n  COMMAND  command to show help for\n\nOPTIONS\n  --all  see all commands in CLI",
  "id": 88,
  "order": 3,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 6,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug mesh:orders\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mesh-url=mesh-url          (required)\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n\nEXAMPLE\n  $ 0x-debug mesh:orders",
  "id": 89,
  "order": 4,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 11,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug mesh:stats\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mesh-url=mesh-url          (required)\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n\nEXAMPLE\n  $ 0x-debug mesh:stats",
  "id": 90,
  "order": 5,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 11,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug mesh:subscribe\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mesh-url=mesh-url          (required)\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n\nEXAMPLE\n  $ 0x-debug mesh:subscribe",
  "id": 91,
  "order": 6,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 11,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug misc:call [ADDRESS] [CALLDATA]\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -p, --profile=profile        The config profile to use\n  --blockNumber=blockNumber    block number\n  --from=from                  from account\n  --gas=gas                    gas amount\n  --json                       Output as JSON\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n  --value=value                [default: 1] Ether value to send\n\nEXAMPLE\n  $ 0x-debug misc:call [address] [callData]",
  "id": 92,
  "order": 7,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    2693,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1005,
    2304,
    1109,
    1128,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 14,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug misc:current_block [ADDRESS] [CALLDATA]\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n\nEXAMPLE\n  $ 0x-debug misc:current_block",
  "id": 93,
  "order": 8,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 10,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug misc:function_registry_check\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --list\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n\nEXAMPLE\n  $ 0x-debug function_registration_check",
  "id": 94,
  "order": 9,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 11,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug order:create\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mnemonic=mnemonic          Mnemonic\n  --private-key=private-key    Private Key\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n\nEXAMPLE\n  $ 0x-debug order:create",
  "id": 95,
  "order": 10,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    1005,
    1434,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 12,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug order:hash\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -o, --order=order            (required) The order in JSON format\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n  --validate                   Validate the signature of the order\n\nEXAMPLE\n  $ 0x-debug order:hash --order [JSON_ORDER]",
  "id": 96,
  "order": 11,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 12,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug order:info\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -o, --order=order            (required) The order in JSON format\n  -p, --profile=profile        The config profile to use\n  --balances                   Fetch the balances and allowances for the maker address\n  --blockNumber=blockNumber    The block number to fetch at\n  --json                       Output as JSON\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n\nEXAMPLE\n  $ 0x-debug order:info --order-hash [ORDER_HASH]",
  "id": 97,
  "order": 12,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2693,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 13,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug profile:create\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n\nEXAMPLE\n  $ 0x-debug profile:create",
  "id": 98,
  "order": 13,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 10,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug staking:epoch:end\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mnemonic=mnemonic          Mnemonic\n  --private-key=private-key    Private Key\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n\nEXAMPLE\n  $ 0x-debug staking:epoch:end",
  "id": 99,
  "order": 14,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    1005,
    1434,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 12,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug staking:epoch:stats\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n\nEXAMPLE\n  $ 0x-debug staking:epoch:stats",
  "id": 100,
  "order": 15,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 10,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug staking:pool:create\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mnemonic=mnemonic          Mnemonic\n  --private-key=private-key    Private Key\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n\nEXAMPLE\n  $ 0x-debug staking:pool:create",
  "id": 101,
  "order": 16,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    1005,
    1434,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 12,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug staking:pool:decrease_share\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mnemonic=mnemonic          Mnemonic\n  --pool-id=pool-id            (required)\n  --private-key=private-key    Private Key\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n\nEXAMPLE\n  $ 0x-debug staking:pool:decrease_share",
  "id": 102,
  "order": 17,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    1005,
    1434,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 13,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug staking:pool:finalize\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mnemonic=mnemonic          Mnemonic\n  --pool-id=pool-id            (required)\n  --private-key=private-key    Private Key\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n\nEXAMPLE\n  $ 0x-debug staking:pool:finalize",
  "id": 103,
  "order": 18,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    1005,
    1434,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 13,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug staking:pool:stake\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mnemonic=mnemonic          Mnemonic\n  --pool-id=pool-id            (required)\n  --private-key=private-key    Private Key\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n\nEXAMPLE\n  $ 0x-debug staking:pool:stake",
  "id": 104,
  "order": 19,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    1005,
    1434,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 13,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug staking:pool:stats\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --pool-id=pool-id            (required)\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n\nEXAMPLE\n  $ 0x-debug staking:pool:stats",
  "id": 105,
  "order": 20,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 11,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug staking:pool:unstake\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mnemonic=mnemonic          Mnemonic\n  --pool-id=pool-id            (required)\n  --private-key=private-key    Private Key\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n\nEXAMPLE\n  $ 0x-debug staking:pool:unstake",
  "id": 106,
  "order": 21,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    1005,
    1434,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 13,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug staking:pool:withdraw_rewards\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mnemonic=mnemonic          Mnemonic\n  --pool-id=pool-id            (required)\n  --private-key=private-key    Private Key\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n\nEXAMPLE\n  $ 0x-debug staking:pool:withdraw_rewards",
  "id": 107,
  "order": 22,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    1005,
    1434,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 13,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug tokens:enable\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Ethereum network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mnemonic=mnemonic          Mnemonic\n  --private-key=private-key    Private Key\n  --rpc-url=rpc-url            Ethereum Node RPC URL\n  --token=token                (required)\n\nEXAMPLE\n  $ 0x-debug tokens:enable",
  "id": 108,
  "order": 23,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    1005,
    1434,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 13,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug abi_decode [ABIENCODEDDATA]\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n  --tx\n\nEXAMPLE\n  $ 0x-debug abi_decode [abi encoded data]",
  "id": 109,
  "order": 0,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1128
  ],
  "hasCode": true,
  "nondeletedLines": 11,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug config [KEY] [VALUE]\n\nOPTIONS\n  -d, --delete  delete config key\n\nEXAMPLE\n  $ 0x-debug config [KEY] [VALUE]",
  "id": 110,
  "order": 1,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2695,
    2304,
    1109,
    2703,
    2304,
    2703,
    1005,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 6,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug explain [TX]\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n\nEXAMPLE\n  $ 0x-debug explain [tx]",
  "id": 111,
  "order": 2,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 10,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug help [COMMAND]\n\nARGUMENTS\n  COMMAND  command to show help for\n\nOPTIONS\n  --all  see all commands in CLI",
  "id": 112,
  "order": 3,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 6,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug mesh:orders\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mesh-url=mesh-url          (required)\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n\nEXAMPLE\n  $ 0x-debug mesh:orders",
  "id": 113,
  "order": 4,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 11,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug mesh:stats\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mesh-url=mesh-url          (required)\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n\nEXAMPLE\n  $ 0x-debug mesh:stats",
  "id": 114,
  "order": 5,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 11,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug mesh:subscribe\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mesh-url=mesh-url          (required)\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n\nEXAMPLE\n  $ 0x-debug mesh:subscribe",
  "id": 115,
  "order": 6,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 11,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug misc:addresses\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n\nEXAMPLE\n  $ 0x-debug misc:addresses",
  "id": 116,
  "order": 7,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 10,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug misc:call [ADDRESS] [CALLDATA]\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --blockNumber=blockNumber    block number\n  --from=from                  from account\n  --gas=gas                    gas amount\n  --json                       Output as JSON\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n  --value=value                [default: 1] Ether value to send\n\nEXAMPLE\n  $ 0x-debug misc:call [address] [callData]",
  "id": 117,
  "order": 8,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    2693,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1005,
    2304,
    1109,
    1128,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 14,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug misc:current_block [ADDRESS] [CALLDATA]\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n\nEXAMPLE\n  $ 0x-debug misc:current_block",
  "id": 118,
  "order": 9,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 10,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug misc:function_registry_check\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --list\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n\nEXAMPLE\n  $ 0x-debug function_registration_check",
  "id": 119,
  "order": 10,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 11,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug order:create\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mnemonic=mnemonic          Mnemonic\n  --private-key=private-key    Private Key\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n\nEXAMPLE\n  $ 0x-debug order:create",
  "id": 120,
  "order": 11,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    1005,
    1434,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 12,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug order:hash\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -o, --order=order            (required) The order in JSON format\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n  --validate                   Validate the signature of the order\n\nEXAMPLE\n  $ 0x-debug order:hash --order [JSON_ORDER]",
  "id": 121,
  "order": 12,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 12,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug order:info\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -o, --order=order            (required) The order in JSON format\n  -p, --profile=profile        The config profile to use\n  --balances                   Fetch the balances and allowances for the maker address\n  --blockNumber=blockNumber    The block number to fetch at\n  --json                       Output as JSON\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n\nEXAMPLE\n  $ 0x-debug order:info --order-hash [ORDER_HASH]",
  "id": 122,
  "order": 13,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2693,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 13,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug profile:create\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n\nEXAMPLE\n  $ 0x-debug profile:create",
  "id": 123,
  "order": 14,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 10,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug staking:epoch:end\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mnemonic=mnemonic          Mnemonic\n  --private-key=private-key    Private Key\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n\nEXAMPLE\n  $ 0x-debug staking:epoch:end",
  "id": 124,
  "order": 15,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    1005,
    1434,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 12,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug staking:epoch:stats\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n\nEXAMPLE\n  $ 0x-debug staking:epoch:stats",
  "id": 125,
  "order": 16,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 10,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug staking:pool:create\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mnemonic=mnemonic          Mnemonic\n  --private-key=private-key    Private Key\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n\nEXAMPLE\n  $ 0x-debug staking:pool:create",
  "id": 126,
  "order": 17,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    1005,
    1434,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 12,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug staking:pool:decrease_share\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mnemonic=mnemonic          Mnemonic\n  --pool-id=pool-id            (required)\n  --private-key=private-key    Private Key\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n\nEXAMPLE\n  $ 0x-debug staking:pool:decrease_share",
  "id": 127,
  "order": 18,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    1005,
    1434,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 13,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug staking:pool:finalize\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mnemonic=mnemonic          Mnemonic\n  --pool-id=pool-id            (required)\n  --private-key=private-key    Private Key\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n\nEXAMPLE\n  $ 0x-debug staking:pool:finalize",
  "id": 128,
  "order": 19,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    1005,
    1434,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 13,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug staking:pool:stake\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mnemonic=mnemonic          Mnemonic\n  --pool-id=pool-id            (required)\n  --private-key=private-key    Private Key\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n\nEXAMPLE\n  $ 0x-debug staking:pool:stake",
  "id": 129,
  "order": 20,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    1005,
    1434,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 13,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug staking:pool:stats\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --pool-id=pool-id            (required)\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n\nEXAMPLE\n  $ 0x-debug staking:pool:stats",
  "id": 130,
  "order": 21,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 11,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug staking:pool:unstake\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mnemonic=mnemonic          Mnemonic\n  --pool-id=pool-id            (required)\n  --private-key=private-key    Private Key\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n\nEXAMPLE\n  $ 0x-debug staking:pool:unstake",
  "id": 131,
  "order": 22,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    1005,
    1434,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 13,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug staking:pool:withdraw_rewards\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mnemonic=mnemonic          Mnemonic\n  --pool-id=pool-id            (required)\n  --private-key=private-key    Private Key\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n\nEXAMPLE\n  $ 0x-debug staking:pool:withdraw_rewards",
  "id": 132,
  "order": 23,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    1005,
    1434,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 13,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-debug tokens:enable\n\nOPTIONS\n  -h, --help                   show CLI help\n  -n, --network-id=network-id  Klaytn network id\n  -p, --profile=profile        The config profile to use\n  --json                       Output as JSON\n  --mnemonic=mnemonic          Mnemonic\n  --private-key=private-key    Private Key\n  --rpc-url=rpc-url            Klaytn Node RPC URL\n  --token=token                (required)\n\nEXAMPLE\n  $ 0x-debug tokens:enable",
  "id": 133,
  "order": 24,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    8016,
    2304,
    1005,
    1434,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 13,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import { HttpEventClient } from \"0x-exchange-events\";\nconst client = new HttpEventClient();",
  "id": 134,
  "order": 0,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 2,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "const FillEvents = await client.getFillEventsAsync(50, {\n  // Filter arguments\n  makerAssetDataV2: \"0xf47261b0000000000000000000000000e45b7cd82ac0f3f6cfc9ecd165b79d6f87ed2875\",\n  takerAssetDataV2: \"0xf47261b0000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n  ...\n});",
  "id": 135,
  "order": 1,
  "stars": 0,
  "errors": [
    2304,
    1109
  ],
  "hasCode": true,
  "nondeletedLines": 5,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "const CancelEvents = await client.getCancelEventsAsync(50, {\n  // Filter arguments\n  makerAssetDataV2: \"0xf47261b000000000000000000000000022365168c8705e95b2d08876c23a8c13e3ad72e2\",\n  takerAssetDataV2: \"0xf47261b0000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n  ...\n});",
  "id": 136,
  "order": 2,
  "stars": 0,
  "errors": [
    2304,
    1109
  ],
  "hasCode": true,
  "nondeletedLines": 5,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import React, { Component } from 'react';\nimport Instant from '0x-instant-component';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Instant />\n      </div>\n    );\n  }\n}\n\nexport default App;",
  "id": 137,
  "order": 0,
  "stars": 0,
  "errors": [
    17004,
    17004
  ],
  "hasCode": true,
  "nondeletedLines": 12,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import React, { Component } from 'react';\nimport Instant from '0x-instant-component';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Instant fee='0.04' feeAddress=\"0x23f9b9985bc838c5ad196b91e202794308a9fb40\" source=\"bamboo\"/>\n      </div>\n    );\n  }\n}\n\nexport default App;",
  "id": 138,
  "order": 1,
  "stars": 0,
  "errors": [
    17004,
    17004
  ],
  "hasCode": true,
  "nondeletedLines": 12,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import {SchemaValidator, ValidatorResult, schemas} from '0x-json-schemas';\n\nconst {orderSchema} = schemas;\nconst validator = new SchemaValidator();\n\nconst order = {\n    ...\n};\nconst validatorResult: ValidatorResult = validator.validate(order, orderSchema); // Contains all errors\nconst isValid: boolean = validator.isValid(order, orderSchema); // Only returns boolean",
  "id": 139,
  "order": 0,
  "stars": 0,
  "errors": [
    1109,
    8010,
    8010
  ],
  "hasCode": true,
  "nondeletedLines": 8,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "import zeroxName from '0x-name';\n// or:\nconst zeroxName = require('0x-name');",
  "id": 140,
  "order": 0,
  "stars": 0,
  "errors": [
    2300,
    2300
  ],
  "hasCode": true,
  "nondeletedLines": 2,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "var zeroxName = require(\"0x-name\")\nlet name = zeroxName('0x96203a314504fb1a14d40c6bf9d08d3ebad3425f')\n// name = TrueBawdyHabit",
  "id": 141,
  "order": 1,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 2,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-relayer-cat cat\n\nOPTIONS\n  -e, --httpEndpoint=httpEndpoint  (required) [default: https://api.radarrelay.com/0x/v2] SRA HTTP endpoint of the\n                                   Relayer\n\n  -h, --help                       show CLI help\n\n  -w, --wsEndpoint=wsEndpoint      (required) [default: wss://ws.radarrelay.com/0x/v2] SRA WebSocket endpoint of the\n                                   Relayer\n\n  --assetDataA=assetDataA          asset data\n\n  --assetDataB=assetDataB          asset data\n\n  --makerAddress=makerAddress      Maker address\n\n  --pullDelay=pullDelay            (required) [default: 1000] Delay in milliseconds between pulling from SRA endpoint\n                                   orderbooks\n\n  --pushDelay=pushDelay            Delay in milliseconds before pushing to mesh (allows for batching)\n\n  --toMesh=toMesh                  Mesh Endpoint to forward to\n\n  --toSRA=toSRA                    SRA Endpoint to forward to\n\nEXAMPLE\n  $ 0x-relayer-cat cat",
  "id": 142,
  "order": 0,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    2552,
    1109,
    1128,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2695,
    2304,
    2304,
    1005,
    2304,
    2304,
    1109,
    1128,
    2304,
    2304,
    1005,
    1434,
    2304,
    1435,
    2304,
    2304,
    2304,
    1005,
    1434,
    2304,
    1435,
    2304,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1109,
    1128,
    1005,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    2304,
    1005,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    1005,
    2304,
    1005,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1435,
    2304,
    2304,
    2304,
    1005,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1435,
    2304,
    2304,
    2304,
    1434,
    2592,
    1125,
    2304,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 18,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "USAGE\n  $ 0x-relayer-cat help [COMMAND]\n\nARGUMENTS\n  COMMAND  command to show help for\n\nOPTIONS\n  --all  see all commands in CLI",
  "id": 143,
  "order": 1,
  "stars": 0,
  "errors": [
    2304,
    1434,
    2592,
    1125,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 6,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "\nimport {\n    LedgerEthConnection,\n    LedgerWallet,\n    LedgerWalletSubprovider,\n    LedgerBrowserCommunicationFactory,\n    wrapWalletSubproviderFactory\n} from '0x-subproviders';\n\nconst networkId = 42;\nconst provider = new ProviderEngine();\n// Browser (U2F) or Node\nconst conn = new LedgerEthConnection(LedgerBrowserCommunicationFactory);\nconst wallet = new LedgerWallet(conn, networkId);\n\nconst ledgerSubProvider = wrapWalletSubproviderFactory(wallet);\n// Hooks in as a HookedWalletSubProvider\n// This takes over all Signing operations in the web3 stack\nprovider.addProvider(ledgerSubProvider);\n// All other operations need to fall through to an underlying provider\n// in this case infura or another JSON RPC endpoint\nprovider.addProvider(new RpcSubprovider(\n    rpcUrl: publicRpcNode,\n));\nprovider.start();",
  "id": 144,
  "order": 0,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304,
    1005,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 17,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "// Offset the derivation path\nconst conn = new LedgerEthConnection(LedgerBrowserCommunicationFactory);\nconst wallet = new LedgerWallet(conn, networkId);\nwallet.setPathIndex(3);",
  "id": 145,
  "order": 1,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 3,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "// Offset the derivation path\nconst conn = new LedgerEthConnection(LedgerBrowserCommunicationFactory);\nconst wallet = new LedgerWallet(conn, networkId);\nwallet.getAccountsAsync((err, accounts) => { console.log(accounts) });\nwallet.signPersonalMessageAsync(\"Hi There!\", (err, result) => { console.log(result) });",
  "id": 146,
  "order": 2,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 4,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "this.zeroEx = new ZeroEx(provider);",
  "id": 147,
  "order": 3,
  "stars": 0,
  "errors": [
    2552,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "provider = new ProviderEngine();\nconst conn = new LedgerEthConnection(LedgerBrowserCommunicationFactory);\nconst wallet = new LedgerWallet(conn, networkId);\nconst timeout = 500;\nwallet.testConnection(timeout, (err, connected) => {\n    if (_.isUndefined(err) && connected) {\n        utils.debug('provider')('ledger');\n        this.ledgerSubProvider = wrapWalletSubproviderFactory(wallet);\n        provider.addProvider(this.ledgerSubProvider);\n    } else {\n        utils.debug('provider')('injected');\n        provider.addProvider(new InjectedWeb3SubProvider(injectedWeb3));\n    }\n    utils.debug('provider')('filter');\n    provider.addProvider(new FilterSubprovider());\n    utils.debug('provider')(publicNodeUrlsIfExistsForNetworkId);\n    provider.addProvider(new RpcSubprovider(\n        rpcUrl: publicRpcNode,\n    ));\n    provider.start();\n});",
  "id": 148,
  "order": 4,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 21,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "Bearer+空格+长期访问令牌",
  "id": 149,
  "order": 0,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "let mnemonic = \"xxx xxx xxx xxx xxx\";\nlet wethContractAddress = \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\nlet relayerApiUrl = \"https://api.radarrelay.com/0x/v0/\";\nlet WETH_ADDRESS = \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\nlet DAI_ADDRESS = \"0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359\";\nlet clientUrl = \"https://mainnet.infura.io/yXDUNwlNOcx0UJCWjzNr\";\n\nasync function test(){\n    try{\n        let dtx = await require(\"0x_exchange\").echangeWETH(mnemonic,clientUrl,wethContractAddress,\"0.001\",1);\n        console.info(dtx);\n    }catch (e){\n        console.error(e);\n    }\n}\n",
  "id": 150,
  "order": 0,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 14,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "let mnemonic = \"xxx xxx xxx xxx xxx\";\nlet wethContractAddress = \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\nlet relayerApiUrl = \"https://api.radarrelay.com/0x/v0/\";\nlet WETH_ADDRESS = \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\nlet DAI_ADDRESS = \"0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359\";\nlet clientUrl = \"https://mainnet.infura.io/yXDUNwlNOcx0UJCWjzNr\";\n\nasync function test(){\n    try{\n        let fillOrderAmount = \"0.005\";\n        let net = 1;\n        let dtx = await require(\"0x_exchange\").fillOrder(mnemonic,clientUrl,relayerApiUrl,WETH_ADDRESS,DAI_ADDRESS,net,fillOrderAmount);\n        console.info(dtx);\n    }catch (e){\n        console.error(e);\n    }\n}\n",
  "id": 151,
  "order": 1,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 16,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "let mnemonic = \"xxx xxx xxx xxx xxx\";\nlet wethContractAddress = \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\nlet relayerApiUrl = \"https://api.radarrelay.com/0x/v0/\";\nlet WETH_ADDRESS = \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\nlet DAI_ADDRESS = \"0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359\";\nlet clientUrl = \"https://mainnet.infura.io/yXDUNwlNOcx0UJCWjzNr\";\n\nasync function test(){\n    try{\n        let fillOrderAmount = \"0.005\";\n        let net = 1;\n        let dtx = await require(\"0x_exchange\").fillOrder(mnemonic,clientUrl,relayerApiUrl,WETH_ADDRESS,DAI_ADDRESS,net,fillOrderAmount);\n        console.info(dtx);\n    }catch (e){\n        console.error(e);\n    }\n}\n",
  "id": 152,
  "order": 2,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 16,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "const 0xauth = require('0xauth')\nconst Auth = 0xauth.Auth\nconst authToken = new 0xauth.AuthToken({...})\n...",
  "id": 153,
  "order": 0,
  "stars": 0,
  "errors": [
    1134,
    1005,
    2448,
    2588,
    2451,
    1005,
    2451,
    1005,
    2451,
    2351,
    1005,
    2451,
    1005,
    1005,
    1109,
    1128
  ],
  "hasCode": true,
  "nondeletedLines": 4,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "var client = new 0xauth.client()\nclient.init('trx', tronWeb)\n// and/or\nclient.init('eth', web3)\n...",
  "id": 154,
  "order": 1,
  "stars": 0,
  "errors": [
    2351,
    1005,
    1005,
    1005,
    1109,
    2304,
    2304,
    1128
  ],
  "hasCode": true,
  "nondeletedLines": 4,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "issuer         The RDNS of the app/service issuing the token\nexpireAt       (optional) The Linux timestamp at expiration\nextraParams    Extra-parametes related with the app",
  "id": 155,
  "order": 2,
  "stars": 0,
  "errors": [
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2304,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005
  ],
  "hasCode": true,
  "nondeletedLines": 3,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "createdAt      The Linux timestamp of creation\nrandomString   A 4 chars base64 string\n",
  "id": 156,
  "order": 3,
  "stars": 0,
  "errors": [
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    1005,
    2304,
    1434,
    2304,
    2693
  ],
  "hasCode": true,
  "nondeletedLines": 2,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "const aWeekFromNow = Math.floor((Date.now() + 7 * 24 * 3600 * 1000) / 1000)\n\nAuth.getAuthorizationToken({\n    issuer: 'com.example.auth',\n    expireAt: aWeekFromNow,\n    extraParams: 'uid/233,active'\n})",
  "id": 157,
  "order": 4,
  "stars": 0,
  "errors": [
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 6,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "0xAuth:1;com.example.auth;1559439788:1560044588;e3Jg;uid/233,active;de",
  "id": 158,
  "order": 5,
  "stars": 0,
  "errors": [
    1005,
    2304,
    1005,
    2304,
    2304,
    2695,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "node index.js",
  "id": 159,
  "order": 0,
  "stars": 0,
  "errors": [
    1434,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "# apt-get install libavahi-compat-libdnssd-dev libc-ares2 libzmq3-dev",
  "id": 160,
  "order": 0,
  "stars": 0,
  "errors": [
    1127,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304,
    2304,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "var One = require('1');\n\nvar one = new One();\n\n// Let's do something when we receive messages.\none.on('message', function (chan, msg) {\n    console.info(chan + '>', msg);\n});\n\n// Join the cluster.\none.join(function (err, cluster) {\n    err && throw new Error('Unable to join cluster: ' + err);\n\n    // Advertise the service.\n    one.advertise(function (err, adInfo) {\n        err && throw new Error('Unable to advertise service: ' + err);\n\n        // Subscribe a channel\n        one.subscribe('some_channel', function (err, chan) {\n            err && throw new Error('Unable to subscribe channel: ' + err);\n\n            // Let's send a message to the channel periodically\n            setTimeout(function () {\n                one.publish('some_channel', 'You will be notified of this message');\n\n                one.publish('some_channel_you_did_not_subscribe', 'You will not get this message');\n            }, 500);\n        });\n    });\n});",
  "id": 161,
  "order": 1,
  "stars": 0,
  "errors": [
    1109,
    1109,
    1109
  ],
  "hasCode": true,
  "nondeletedLines": 18,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "// You can pass a few options when instantiating One.\n// Note that these are all optional, and you can instantiate without any option.\n// The example below shows all the default options.\nvar one = new One({\n    // Id of the service you will be providing.\n    service: 'unnamedService',\n\n    // Cluster which this node belongs to.\n    cluster: 'defaultCluster',\n\n    // Id of this node. If null, a random id is generated.\n    id:      null,\n\n    // Port used for publishing messages. If null, a free random port is used.\n    port:    null,\n\n    // Interface in which the node will bind.\n    address: '0.0.0.0'\n});",
  "id": 162,
  "order": 2,
  "stars": 0,
  "errors": [
    2552
  ],
  "hasCode": true,
  "nondeletedLines": 7,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "var one = new One({\n    service: 'myStorageService'\n});\n\n// ...\n\n// Advertising service\none.advertise(function (err, adInfo) {\n    !err && console.log('Advertising', adInfo);\n});\n\n// ...\n\n// Stopping advertisement\none.stopAdvertise(function (err, adInfo) {\n    !err && console.log('Stopped advertising', adInfo);\n});\n",
  "id": 163,
  "order": 3,
  "stars": 0,
  "errors": [
    2552
  ],
  "hasCode": true,
  "nondeletedLines": 9,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "var one = new One({\n    service: 'myStorageService',\n    cluster: 'cluster1'\n});\n\n// Joining cluster\none.join(function (err, cluster) {\n    !err && console.log('Joined', cluster);\n});\n\n// ...\n\n// Leaving cluster\none.leave(function (err, cluster) {\n    !err && console.log('Left', cluster);\n});",
  "id": 164,
  "order": 4,
  "stars": 0,
  "errors": [
    2552
  ],
  "hasCode": true,
  "nondeletedLines": 10,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "one.on('join', function (cluster) {\n    console.log('joined cluster:', cluster);\n});\n\none.on('leave', function (cluster) {\n    console.log('left cluster:', cluster);\n});\n\none.on('advertise_start', function (adInfo) {\n    console.log('started advertising:', adInfo);\n});\n\none.on('advertise_stop', function (adInfo) {\n    console.log('stopped advertising:', adInfo);\n});\n\none.on('subscribe', function (channel) {\n    console.log('subscribed:', channel);\n});\n\none.on('unsubscribe', function (channel) {\n    console.log('unsubscribed:', channel);\n});\n\none.on('node_up', function (node) {\n    console.log('node up:', node);\n});\n\none.on('node_down', function (node) {\n    console.log('node down:', node);\n});\n\none.on('message', function (chan, payload) {\n    console.log(chan + '>', payload);\n});\n\n// Note that the error event is only emitted if you do not specify a callback to\n// a method that throws an error.\none.on('error', function (err) {\n    console.error('ERROR: ', err);\n});",
  "id": 165,
  "order": 5,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 30,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "git clone https://github.com/monostable/npm-1-click-bom\ncd npm-1click-bom\nnpm install\nnpm run build\nnpm run test",
  "id": 166,
  "order": 0,
  "stars": 0,
  "errors": [
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1351,
    2304,
    2304,
    1434,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1434,
    2304,
    1434,
    2304,
    2593
  ],
  "hasCode": true,
  "nondeletedLines": 5,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "const openingHours = new OpeningHours('Mo-Sa 06:00-22:00');\n\nconsole.log('Is this open now?', openingHours.isOpenNow());\nconsole.log('Is this open on 2016-10-01 18:00?', openingHours.isOpenOn(new Date('2016-10-01 18:00')));\nconsole.table(openingHours.getTable());",
  "id": 167,
  "order": 0,
  "stars": 0,
  "errors": [
    2552
  ],
  "hasCode": true,
  "nondeletedLines": 4,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "// The lightweight, recommended way:\nvar map = require('1-liners/map');\n\n// Sometimes practical:\nvar map = require('1-liners').map;",
  "id": 168,
  "order": 0,
  "stars": 0,
  "errors": [
    2300,
    2300
  ],
  "hasCode": true,
  "nondeletedLines": 2,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "// The lightweight, recommended way:\nimport map from '1-liners/module/map';\n\n// Sometimes practical:\nimport { map, filter } from '1-liners/module';",
  "id": 169,
  "order": 1,
  "stars": 0,
  "errors": [
    2300,
    2300
  ],
  "hasCode": true,
  "nondeletedLines": 2,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "const Computing = require('../').computing;\n\nmodule.exports = new Computing('double', (input, progress, done) => {\n  progress(0, 0, input * 2);\n  done();\n});",
  "id": 170,
  "order": 0,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 5,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "const Runner = require('../').runner;\nconst streamify = require('stream-array');\nconst {Transform} = require('stream');\n\n\n\nstreamify([2, 4, 6]) // stream an array of integer\n  .pipe(new Transform({\n    objectMode: true,\n    transform: function(chunk, encoding, done) {\n      console.log('Pushing a number', chunk);\n      this.push(chunk);\n      done();\n    }\n  }))\n  .pipe(new Runner().asStream('double'))\n  .pipe(new Transform({\n    objectMode: true,\n    transform: function(chunk, encoding, done) {\n      console.log('Result is', chunk)\n      done();\n    }\n  }))\n  .on('end', () => {\n    console.log('End!!!')\n  })",
  "id": 171,
  "order": 1,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 23,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "├─ index.js           Module entry point (include this or use npm)\n├─ lib/               Library source\n│  ├─ ot.js             Oblivious transfer protocols\n│  ├─ util.js           Bitwise helpers\n│  └─ crypto.js         Crypto primitives\n└─ demo/              Example demos\n   ├─ io-example.js     Input-output communication for the demos\n   ├─ io-template.js    IO methods template\n   ├─ strings/          Strings demo\n   │  ├─ example.js       OT choosing from strings\n   │  └─ ascii.js         ASCII helpers to convert inputs to Uint8Array\n   └─ numbers/          Numbers demo\n      └─ example.js       OT choosing from numbers",
  "id": 172,
  "order": 0,
  "stars": 0,
  "errors": [
    1127,
    1127,
    2304,
    1005,
    2552,
    1435,
    2304,
    2304,
    2304,
    1005,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    1127,
    1127,
    2304,
    2304,
    1005,
    2304,
    1127,
    1127,
    1127,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    1127,
    1127,
    1127,
    2304,
    1005,
    2304,
    2304,
    1127,
    1127,
    1127,
    2304,
    1005,
    2304,
    2304,
    1127,
    1127,
    2304,
    2304,
    1005,
    2304,
    1127,
    1127,
    2304,
    2304,
    1005,
    2304,
    2304,
    1005,
    2304,
    1005,
    2304,
    1005,
    2304,
    1127,
    1127,
    2304,
    2304,
    1005,
    2304,
    1434,
    2304,
    2304,
    1127,
    1127,
    2304,
    2304,
    1005,
    2304,
    1127,
    1127,
    1127,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304,
    1127,
    1127,
    1127,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1434,
    2304,
    1127,
    1127,
    2304,
    2304,
    1005,
    2304,
    1127,
    1127,
    2304,
    1005,
    2304,
    1434,
    2304,
    1434,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 13,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "// Each party includes the 1-out-of-n module with IO:\nconst OT = require('1-out-of-n')(IO);\n\n// 1-out-of-3\nconst N = 3;\n\n// The sender calls send and provides its secrets:\nOT.send([77, 66, 88], N);\n\n// The receiver calls receive with its selection out of N:\nOT.receive(2, N).then(console.log.bind(null, 'Secret #2 is:'));\n\n// Result:\n66",
  "id": 173,
  "order": 1,
  "stars": 0,
  "errors": [
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 5,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "var ow = require('1-wire-js');",
  "id": 174,
  "order": 0,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "<script src=\"ow.min.js\"></script>",
  "id": 175,
  "order": 1,
  "stars": 0,
  "errors": [
    17004
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "var ow = window.ow;",
  "id": 176,
  "order": 2,
  "stars": 0,
  "errors": [
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.permission.request().then(success, failure);",
  "id": 177,
  "order": 3,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.permission.check().then(gotPermission);",
  "id": 178,
  "order": 4,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.permission.request().then(gotPermission, failedPermission);",
  "id": 179,
  "order": 5,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.device.open().then(deviceOpened);",
  "id": 180,
  "order": 6,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.device.close().then(deviceClosed);",
  "id": 181,
  "order": 7,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.device.onDeviceAdded.addListener(deviceConnected);",
  "id": 182,
  "order": 8,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.device.onDeviceRemoved.addListener(deviceRemoved);",
  "id": 183,
  "order": 9,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.device.reset().then(deviceReady);",
  "id": 184,
  "order": 10,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.device.getStatus()\n  .then(function (status) {\n    if (status.ResultRegisters.DetectKey){\n      console.log('Key Detected');\n    }\n  });",
  "id": 185,
  "order": 11,
  "stars": 0,
  "errors": [
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 6,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "var transferInfo = {\n  \"direction\": \"in\",\n  \"endpoint\": 1,\n  \"length\": 0x20\n};",
  "id": 186,
  "order": 12,
  "stars": 0,
  "errors": [],
  "hasCode": true,
  "nondeletedLines": 5,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.device.interruptTransfer().then(interruptTransferComplete);",
  "id": 187,
  "order": 13,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.device.controlTransfer(transferInfo).then(controlTransferComplete);",
  "id": 188,
  "order": 14,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.device.bulkTransfer(transferInfo).then(bulkTransferComplete);",
  "id": 189,
  "order": 15,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.wire.detectShort()\n  .then(function (shorted) {\n    if (shorted) {\n      throw new Error(\"Short Detected\");\n    }\n  });",
  "id": 190,
  "order": 16,
  "stars": 0,
  "errors": [
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 6,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.wire.setSpeed(true).then(speedSet);",
  "id": 191,
  "order": 17,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.wire.rest().then(resetComplete);",
  "id": 192,
  "order": 18,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.wire.write(data).then(writeComplete);",
  "id": 193,
  "order": 19,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.wire.writeBit(bit).then(writeBitComplete);",
  "id": 194,
  "order": 20,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.wire.read(0x20)\n  .then(function(data){\n    storeData(data);\n  });",
  "id": 195,
  "order": 21,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 4,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.wire.readBit()\n  .then(function(bitSet){\n    test = bitSet;\n  });",
  "id": 196,
  "order": 22,
  "stars": 0,
  "errors": [
    2304,
    2593
  ],
  "hasCode": true,
  "nondeletedLines": 4,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.wire.clearByte().then(wireCleared);",
  "id": 197,
  "order": 23,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.key.romCommand(true, keyRom, true).then(keyRomMatched);",
  "id": 198,
  "order": 24,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.key.romMatch(keyRom).then(keyRomMatched);",
  "id": 199,
  "order": 25,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.key.romMatch(keyRom).then(keyRomMatched);",
  "id": 200,
  "order": 26,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.key.romSkip().then(keyRomSkipped);",
  "id": 201,
  "order": 27,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.key.romSkipOverdrive().then(keyRomSkipped);",
  "id": 202,
  "order": 28,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.key.searchFirst()\n  .then(function(rom){\n      keyROM = rom;\n  });",
  "id": 203,
  "order": 29,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 4,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.key.searchNext()\n  .then(function(rom){\n      keyRom = rom;\n  });",
  "id": 204,
  "order": 30,
  "stars": 0,
  "errors": [
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 4,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.key.readAll(keyRom, true)\n  .then(function(data){\n      keyData = data;\n  });",
  "id": 205,
  "order": 31,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 4,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.key.write(keyRom, 0x00, data, true).then(writeComplete);",
  "id": 206,
  "order": 32,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.key.writeAll(keyRom, data, true).then(writeComplete);",
  "id": 207,
  "order": 33,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
},
{
  "code": "ow.key.writeAll(keyRom, newData, lastDump, true).then(writeComplete);",
  "id": 208,
  "order": 34,
  "stars": 0,
  "errors": [
    2304,
    2304,
    2304,
    2304,
    2304
  ],
  "hasCode": true,
  "nondeletedLines": 1,
  "fixed": false,
  "tsFixed": false,
  "compileFail": false,
  "lineFail": false
}]